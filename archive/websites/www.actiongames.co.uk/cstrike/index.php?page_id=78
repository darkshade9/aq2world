<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="description" content= "Gaming News and Resource sites.....">
<meta name="keywords" content="newbie,fps,first person shooter,first person shootemup, Counter Strike,actionquake,action,online,gaming,online gaming,teamgame,action help,information,tnn,forum,hosting,gbloke,rincewind,discussion zone">
<meta name="copyright" content="Copyright ï¿½ 2000 Actiongames">
<title>Counter Strike - Scripting Overview</title>
<meta http-equiv="content-type" content="text/html; charset=iso-8859-1">
<meta http-equiv="content-language" content="en-GB">
<link rel="stylesheet" type="text/css" href="https://assets.aq2world.com/archive/websites/www.actiongames.co.uk/default.css">
<!-- Modified:  -->
</head>
<body>
<div align="center">
<table cellpadding="3" cellspacing="0" summary="None" class="mastertable">
<tr>
<td class="leftcolumn" align="center" valign="top"><br>
<br>

<table cellpadding="0" cellspacing="0" summary="None" class="paneltable">
<tr>
<td class="paneltitleleft">&nbsp;</td>
<td class="paneltitle">Counter Strike</td>
<td class="paneltitleright">&nbsp;</td>
</tr>

<tr>
<td class="panelleft">&nbsp;</td>
<td class="panel">
<a href="index.php">News</a><br>
<a href="http://forums.actiongames.co.uk/">Forums</a><br><br>
<a href="index.php?page_id=78">Scripting</a><br>
<a href="index.php?page_id=90">Strategy</a><br>
</td>
<td class="panelright">&nbsp;</td>
</tr>

<tr>
<td class="panelbottomleft" valign="bottom">&nbsp;</td>
<td class="panelbottom">&nbsp;</td>
<td class="panelbottomright" valign="bottom">&nbsp;</td>
</tr>
</table>

<br>

<table cellpadding="0" cellspacing="0" summary="None" class="paneltable">
<tr>
<td class="paneltitleleft">&nbsp;</td>
<td class="paneltitle">Sites</td>
<td class="paneltitleright">&nbsp;</td>
</tr>

<tr>
<td class="panelleft">&nbsp;</td>
<td class="panel">
<a href="/">Actiongames</a><br>
<a href="https://assets.aq2world.com/archive/websites/www.actiongames.co.uk/tnn">Action Quake</a><br>
<a href="https://assets.aq2world.com/archive/websites/www.actiongames.co.uk/cstrike">Counter Strike</a><br>
<a href="https://assets.aq2world.com/archive/websites/www.actiongames.co.uk/rpg">RPGs</a><br>
</td>
<td class="panelright">&nbsp;</td>
</tr>

<tr>
<td class="panelbottomleft" valign="bottom">&nbsp;</td>
<td class="panelbottom">&nbsp;</td>
<td class="panelbottomright" valign="bottom">&nbsp;</td>
</tr>
</table>

</td>
<td class="centercolumn" align="center" valign="top">
<table cellpadding="0" cellspacing="0" class="maintable">
<tr>
<td class="csmainlogo" colspan="3">&nbsp;</td>
</tr>

<tr>
<td colspan="3" height="19" align="center" class="redbar">
The Gamer's Network. Guides, Columns, Articles, Files & Community Forums</td>
</tr>

<tr>
<td colspan="3" height="19" class="maintitle">&nbsp;&nbsp;&nbsp;Scripting Overview</td>
</tr>

<tr>
<td class="mainleft">&nbsp;</td>
<td class="main"><br>






<p>Mention scripting to most people and they wouldn't have a clue what
your on about. But as many seasoned Counter-Strike gamers know they
can be invaluable.</p>
<p>Actions like buying everything you need with the press of one
key, to toggling the colour of your crosshair. Basically scripting makes
life easier for us gamers that know what we want. My aim is to give
you a greater understanding about what binds are combined with
examples of how to create your very own timesaving actions using aliases.</p>

<p class="title">Binds:</p>

<p>In it's simplest form a bind is a console command with has been
bound to a key, so upon pressing that key the action is performed.
This saves pulling down the console and manually typing the
command, that's if you can remember what the command is :? Most, if
not all the commands can be found buried in the Counter-Strike
manual found <a
href="http://www.counter-strike.net/manual.html" target="_BLANK">here.</a>
An example of changing the colour of your crosshair would be no
more than;</p>

<p class="code">bind "c" "adjust_crosshair"</p>

<p>So each time you press the 'c' key your crosshair would change
colour. In fact when you customise the controls within the option
menu of the game lines like this are being written to the config
file.</p>

<p>Binds take the format of;</p>

<p class="code">bind &lt;key&gt; &lt;command&gt;<br>
 bind &lt;key&gt; &lt;command1&gt;; &lt;command2&gt;;
&lt;command3&gt;</p>

<p>You can perform single or multiple commands with a bind. Note,
each command needs to be seperated by a semi-colon (;). More will
be explained later &hellip;</p>

<p class="title">Alias:</p>

<p>You can also group commands into an alias, which saves the need
to type series of commands multiple times.<br>
There are two types of alias;</p>

<p><span class="keyword">Alias</span> - a name given to a grouping of
commands.</p>

<p><span class="keyword">Toggle alias</span> - consists of two
aliases which will perform an on/off action, like a light switch.
So when this is bound to a key, when you push the key the action
will take place and when the key is pushed again the action will
stop. So for example you you could have a toggle alias that would
switch walking on or off when you pushed the 'w' key.</p>

<p>Aliases take the following format;</p>

<p class="code">alias &lt;name&gt; &lt;command&gt;<br>
alias &lt;name&gt; &lt;command1&gt;; &lt;command2&gt;;
&lt;command3&gt;</p>

<p>So we could write the following;</p>

<p class="code">alias crosshaircolour "adjust_crosshair"<br>
 bind "c" crosshaircolour</p>

<p>Now what happens is when you press the 'c' key it calls the
alias 'crosshaircolour' which in-turn calls the command
'adjust_crosshaircolour' to change the colour of your crosshair.
It's all very easy ;)</p>

<p>The toggle alias takes this just a little bit further and
requires a slight change. Nothing to hard though just have to add
the +/- symbols in front of your alias name. You then bind the +
alias (e.g. +PlantC4) to a key and when this key is pressed down it
will start doing the action associated with the alias. Once you
release the key it will stop doing that action and revert back to
the state it was before you pressed the button.</p>

<p>I'll show you what I mean, if I could see your faces now I'm
sure they would have that slightly puzzled glaze about them. In
this example I'm going to create an alias that will take out and
plant the C4 and inform your team members of what you are doing
when the key is pressed down. Once the key is released it will revert you back to the state you were in before, i.e. standing with gun in
hand ready to make a colander of the CT who is creeping up to you
with knife glinting in the sun.</p>

<p class="code">alias +PlantC4 "weapon_c4; +duck; +attack; say_team
Setting Bomb"<br>
alias -PlantC4 "-attack; -duck; wb"</p>

<p>So you would bind '+PlantC4' to a key of your choice, we'll use
'p'. Then when you press, and hold, 'p' you will take out the C4,
duck and plant it. Also informing your team. Once you release
'p', '-PlantC4' is called and you stop planting, stand and take out
your last weapon. See? Not that tricky.</p>

<p>But that's not all you can do, oh no. You can have an alias call
another alias! But why? Why would you want to do this? Well if you
want to change the state of something without keeping the key
pressed down or if you want more than the two options. I'll jump straight in with an
example and explain later;</p>

<p class="code">alias v0 "volume 0.0; alias vc v1; developer 1;
echo Volume OFF; developer 0"<br>
alias v1 "volume 0.25; alias vc v2; developer 1; echo Volume 25%;
developer 0"<br>
alias v2 "volume 0.5; alias vc v3; developer 1; echo Volume 50%;
developer 0"<br>
alias v3 "volume 0.75; alias vc v4; developer 1; echo Volume 75%;
developer 0"<br>
alias v4 "volume 1.0; alias vc v0; developer 1; echo Volume 100%;
developer 0"<br>
alias vc v1</p>

<p>You maybe able to work out that this fine bit of scripting
changes the volume while your in game. When creating one of these
beauties you need an alias per state and an alias to be bound to,
in this instance 'vc' is our controlling alias. First take the 'v0'
alias, here it calls the 'volume' command and sets it to 0.0. The
range between 0 (off) and 1 (on) can be used. So here we are
switching it off. Next we are re-assigning what the 'vc' alias
calls, so now it will call the next alias, 'v1', when the key is
pressed again. Then we open up a stdout channel to display text to
the screen via calling 'developer 1'. Note, only you will see this
message. Then we print a message to screen and close the stdout
channel by calling 'developer 0'. Phew, that's a lot of stuff going
on there. So you've changed to state of volume to off. When you
press the key that 'vc' is bound to again it will call 'v1', which
will set the volume to 25% and then set 'vc' to call 'v2' and so
on.</p>

<p class="title">Files</p>

<p>Now I have mentioned the basics of scripting I think it time to
discuss the files that are needed use your new creations within the
game. Most us with have two files within our 'cstrike' directories,
autoexec.cfg &amp; config.cfg. And this is fine to get you
started.</p>

<p><span class="keyword">autoexec.cfg</span> - Contains all your aliases and will execute when
you join a game.<br>
<span class="keyword">config.cfg</span> - Contains a list of binds, as well as other
configuration for playing counter-strike.</p>

<p>Your not limited to splitting binds and aliases into these two
files, you can quite happily put binds within the autoexec.cfg file
for example. But I find it's easier to manage them if kept seperately. If your very tidy, which I am far from, you can create
other .cfg files, so we could have a weaponsaliases.cfg. In this
file we could place all the aliases associated with buying weapons.
One thing you have to note here though is that Counter-Strike will
not know anything about these new files so you have to add a line
into the autoexec.cfg file to execute them. So you add the
following line, one per .cfg file;</p>

<p class="code">exec weaponsaliases.cfg</p>

<p>So now when autoexec.cfg is loaded all the aliases in that file
are read in and then all aliases in the weaponsaliases.cfg file are
read in. Bobs your uncle, everything works :)</p>

<p>While we are on the subject of housekeeping you may want to add
comments to your aliases to remind you at a glance what they do. So
you simply add a line or two above your block of script that starts
with '//', i.e.</p>

<p class="code">// Controls volume level with the game.<br>
alias v0 "volume 0.0; alias vc v1; developer 1; echo Volume OFF;
developer 0"<br>
alias v1 "volume 0.25; alias vc v2; developer 1; echo Volume 25%;
developer 0"<br>
alias v2 "volume 0.5; alias vc v3; developer 1; echo Volume 50%;
developer 0"<br>
alias v3 "volume 0.75; alias vc v4; developer 1; echo Volume 75%;
developer 0"<br>
alias v4 "volume 1.0; alias vc v0; developer 1; echo Volume 100%;
developer 0"<br>
alias vc v1</p>

<p>That's all there is to it, easy isn't it ;) I've just outlined
an overview of scripting here, if your now itching to find out more
then checkout my more detailed tutorial ... coming soon!</p>

<p>Written by <span class="keyword">Reaper</span></p>

<br>
 </td>
<td class="mainright">&nbsp;</td>
</tr>

<tr>
<td class="maincrleft">&nbsp;</td>
<td class="maincopyright">&copy; Copyright Actiongames.co.uk
2001</td>
<td class="maincrright">&nbsp;</td>
</tr>
</table>
</td>
<td class="rightcolumn" align="center" valign="top"><img src=
"https://assets.aq2world.com/archive/websites/www.actiongames.co.uk/actiongames/images/aglogo.gif" alt=
"actiongames.co.uk" width="88" height="87"> <br>
<br>
<br>
<!-- Ad Starts Here -->
<div align="center">
<SCRIPT LANGUAGE="javascript" src="http://www.qksrv.net/1e-5t3q"> </SCRIPT><br>
<span class="small" style="color:#FFFFFF;">Advert</span>
</div>
<!-- Ad Ends Here -->
<br>

</td>
</tr>
</table>
</div>
</body>
</html>
