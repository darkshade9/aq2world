Koga73 xxxSAVE TRIGGERxxx 
    Events 
        Player - Player 1 (Red) types a chat message containing -save as An exact match 
        Player - Player 2 (Blue) types a chat message containing -save as An exact match 
        Player - Player 3 (Teal) types a chat message containing -save as An exact match 
        Player - Player 4 (Purple) types a chat message containing -save as An exact match 
        Player - Player 5 (Yellow) types a chat message containing -save as An exact match 
        Player - Player 6 (Orange) types a chat message containing -save as An exact match 
        Player - Player 7 (Green) types a chat message containing -save as An exact match 
        Player - Player 8 (Pink) types a chat message containing -save as An exact match 
        Player - Player 9 (Gray) types a chat message containing -save as An exact match 
        Player - Player 10 (Light Blue) types a chat message containing -save as An exact match 
    Conditions 
    Actions 
        If (All Conditions are True) then do (Then Actions) else do (Else Actions) 
            If - Conditions 
                (Length of (Name of (Triggering player))) Less than 3 
            Then - Actions 
                Game - Display to (Player group((Triggering player))) the text: |c00c80000Your A Sp... 
                Skip remaining actions 
            Else - Actions 
        If (All Conditions are True) then do (Then Actions) else do (Else Actions) 
            If - Conditions 
                Koga73sHasSavedOrNot[(Player number of (Triggering player))] Equal to True 
            Then - Actions 
                Game - Display to (Player group((Triggering player))) the text: |c00c80000You Have ... 
                Skip remaining actions 
            Else - Actions 
        If (All Conditions are True) then do (Then Actions) else do (Else Actions) 
            If - Conditions 
                PlayersSelectedHeros[(Player number of (Triggering player))] Equal to No unit 
            Then - Actions 
                Game - Display to (Player group((Triggering player))) the text: |c00c80000You Canno... 
                Skip remaining actions 
            Else - Actions 
        -------- xxxSET CODE SETSxxx -------- 
        -------- xxxAMMOUNT =  25xxx -------- 
        Set Koga73sUnEncryptedCodeSet = abcdefghijklmnopqrstuvwxyz1234567890`~!@#$%^&*()-_=+[{]}\|;:'",<.>/? 
        Set Koga73sEncryptedCodeSets[1] = abcdefghijklmnopqrstuvwxyz1234567890`~!@#$%^&*()-_=+[{]}\|;:'",<.>/? 
        Set Koga73sEncryptedCodeSets[2] = abcdefghijklmnopqrstuvwxyz1234567890`~!@#$%^&*()-_=+[{]}\|;:'",<.>/? 
        Set Koga73sEncryptedCodeSets[3] = abcdefghijklmnopqrstuvwxyz1234567890`~!@#$%^&*()-_=+[{]}\|;:'",<.>/? 
        Set Koga73sEncryptedCodeSets[4] = abcdefghijklmnopqrstuvwxyz1234567890`~!@#$%^&*()-_=+[{]}\|;:'",<.>/? 
        Set Koga73sEncryptedCodeSets[5] = abcdefghijklmnopqrstuvwxyz1234567890`~!@#$%^&*()-_=+[{]}\|;:'",<.>/? 
        Set Koga73sEncryptedCodeSets[6] = abcdefghijklmnopqrstuvwxyz1234567890`~!@#$%^&*()-_=+[{]}\|;:'",<.>/? 
        Set Koga73sEncryptedCodeSets[7] = abcdefghijklmnopqrstuvwxyz1234567890`~!@#$%^&*()-_=+[{]}\|;:'",<.>/? 
        Set Koga73sEncryptedCodeSets[8] = abcdefghijklmnopqrstuvwxyz1234567890`~!@#$%^&*()-_=+[{]}\|;:'",<.>/? 
        Set Koga73sEncryptedCodeSets[9] = abcdefghijklmnopqrstuvwxyz1234567890`~!@#$%^&*()-_=+[{]}\|;:'",<.>/? 
        Set Koga73sEncryptedCodeSets[10] = abcdefghijklmnopqrstuvwxyz1234567890`~!@#$%^&*()-_=+[{]}\|;:'",<.>/? 
        Set Koga73sEncryptedCodeSets[11] = abcdefghijklmnopqrstuvwxyz1234567890`~!@#$%^&*()-_=+[{]}\|;:'",<.>/? 
        Set Koga73sEncryptedCodeSets[12] = abcdefghijklmnopqrstuvwxyz1234567890`~!@#$%^&*()-_=+[{]}\|;:'",<.>/? 
        Set Koga73sEncryptedCodeSets[13] = abcdefghijklmnopqrstuvwxyz1234567890`~!@#$%^&*()-_=+[{]}\|;:'",<.>/? 
        Set Koga73sEncryptedCodeSets[14] = 
abcdefghijklmnopqrstuvwxyz1234567890`~!@#$%^&*()-_=+[{]}\|;:'",<.>/? 
        Set Koga73sEncryptedCodeSets[15] = abcdefghijklmnopqrstuvwxyz1234567890`~!@#$%^&*()-_=+[{]}\|;:'",<.>/? 
        Set Koga73sEncryptedCodeSets[16] = abcdefghijklmnopqrstuvwxyz1234567890`~!@#$%^&*()-_=+[{]}\|;:'",<.>/? 
        Set Koga73sEncryptedCodeSets[17] = abcdefghijklmnopqrstuvwxyz1234567890`~!@#$%^&*()-_=+[{]}\|;:'",<.>/? 
        Set Koga73sEncryptedCodeSets[18] = abcdefghijklmnopqrstuvwxyz1234567890`~!@#$%^&*()-_=+[{]}\|;:'",<.>/? 
        Set Koga73sEncryptedCodeSets[19] = abcdefghijklmnopqrstuvwxyz1234567890`~!@#$%^&*()-_=+[{]}\|;:'",<.>/? 
        Set Koga73sEncryptedCodeSets[20] = abcdefghijklmnopqrstuvwxyz1234567890`~!@#$%^&*()-_=+[{]}\|;:'",<.>/? 
        Set Koga73sEncryptedCodeSets[21] = abcdefghijklmnopqrstuvwxyz1234567890`~!@#$%^&*()-_=+[{]}\|;:'",<.>/? 
        Set Koga73sEncryptedCodeSets[22] = abcdefghijklmnopqrstuvwxyz1234567890`~!@#$%^&*()-_=+[{]}\|;:'",<.>/? 
        Set Koga73sEncryptedCodeSets[23] = abcdefghijklmnopqrstuvwxyz1234567890`~!@#$%^&*()-_=+[{]}\|;:'",<.>/? 
        Set Koga73sEncryptedCodeSets[24] = abcdefghijklmnopqrstuvwxyz1234567890`~!@#$%^&*()-_=+[{]}\|;:'",<.>/? 
        Set Koga73sEncryptedCodeSets[25] = abcdefghijklmnopqrstuvwxyz1234567890`~!@#$%^&*()-_=+[{]}\|;:'",<.>/? 
        -------- xxxRESET VARIABLESxxx -------- 
        Set Koga73s3CodeName = <Empty String> 
        Set Koga73sEXPAmmount = 0 
        Set Koga73sEXPStringAmmount = <Empty String> 
        Set Koga73sFastRandomCharacter = 0 
        Set Koga73sFullCode = <Empty String> 
        Set Koga73sLengthToReadOfEXP = 0 
        Set Koga73sRandomCodeSetsToUse = 0 
        Set Koga73sSTRINGRCSTU = <Empty String> 
        Set Koga73sTypedInCode = <Empty String> 
        For each (Integer A) from 1 to 13, do (Actions) 
            Loop - Actions 
                Set Koga73sInputCode[(Integer A)] = <Empty String> 
                Set Koga73sOutputCode[(Integer A)] = <Empty String> 
        -------- xxxSET VARIABLESxxx -------- 
        Set Koga73s3CodeName = (Substring((Name of (Triggering player)), 1, 3)) 
        Set Koga73sEXPAmmount = (Hero experience of PlayersSelectedHeros[(Player number of (Triggering player))]) 
        Set Koga73sLengthToReadOfEXP = (Length of (String(Koga73sEXPAmmount))) 
        Set Koga73sRandomCodeSetsToUse = (Random integer number between 1 and 25) 
        If (All Conditions are True) then do (Then Actions) else do (Else Actions) 
            If - Conditions 
                Koga73sRandomCodeSetsToUse Less than 10 
            Then - Actions 
                Set Koga73sSTRINGRCSTU = (0 + (String(Koga73sRandomCodeSetsToUse))) 
            Else - Actions 
        If (All Conditions are True) then do (Then Actions) else do (Else Actions) 
            If - Conditions 
                Koga73sRandomCodeSetsToUse Greater than or equal to 10 
            Then - Actions 
                Set Koga73sSTRINGRCSTU = (String(Koga73sRandomCodeSetsToUse)) 
            Else - Actions 
        If (All Conditions are True) then do (Then Actions) else do (Else Actions) 
            If - Conditions 
                Koga73sEXPAmmount Equal to 0 
            Then - Actions 
                Set Koga73sEXPAmmount = 1 
            Else - Actions 
        If (All Conditions are True) then do (Then Actions) else do (Else Actions) 
            If - Conditions 
                Koga73sEXPAmmount Greater than 999999 
            Then - Actions 
                Set Koga73sEXPAmmount = 999999 
            Else - Actions 
        For each (Integer A) from 1 to 6, do (Actions) 
            Loop - Actions 
                If (All Conditions are True) then do (Then Actions) else do (Else Actions) 
                    If - Conditions 
                        (Length of (String(Koga73sEXPAmmount))) Not equal to 6 
                    Then - Actions 
                        Set Koga73sEXPAmmount = (Koga73sEXPAmmount x 10) 
                    Else - Actions 
        -------- xxxGENERATE UNENCRYPTEDxxx -------- 
        Set Koga73sFullCode = (Koga73sFullCode + Koga73sSTRINGRCSTU) 
        Set Koga73sFullCode = (Koga73sFullCode + (Substring((String(Koga73sEXPAmmount)), 1, 3))) 
        Set Koga73sFullCode = (Koga73sFullCode + (Substring(Koga73s3CodeName, 1, 1))) 
        Set Koga73sFullCode = (Koga73sFullCode + -) 
        Set Koga73sFullCode = (Koga73sFullCode + (String(Koga73sLengthToReadOfEXP))) 
        Set Koga73sFullCode = (Koga73sFullCode + (Substring((String(Koga73sEXPAmmount)), 4, 6))) 
        Set Koga73sFullCode = (Koga73sFullCode + (Substring(Koga73s3CodeName, 2, 3))) 
        Set Koga73sFullCode = (String(Koga73sFullCode) as Lower case) 
        If (All Conditions are True) then do (Then Actions) else do (Else Actions) 
            If - Conditions 
                Koga73sDebugStatus[1] Equal to 1 
            Then - Actions 
                Game - Display to (Player group((Triggering player))) the text: (|c00800080Debug Mode:|r CODE BEFORE ENCRYPTION:  + Koga73sFullCode) 
            Else - Actions 
        -------- xxxENCRYPTxxx -------- 
        For each (Integer A) from 1 to 13, do (Actions) 
            Loop - Actions 
                Set Koga73sInputCode[(Integer A)] = (Substring(Koga73sFullCode, (Integer A), (Integer A))) 
        For each (Integer A) from 1 to 13, do (Actions) 
            Loop - Actions 
                For each (Integer B) from 1 to 68, do (Actions) 
                    Loop - Actions 
                        If (All Conditions are True) then do (Then Actions) else do (Else Actions) 
                            If - Conditions 
                                Koga73sInputCode[(Integer A)] Equal to (Substring(Koga73sUnEncryptedCodeSet, (Integer B), (Integer B))) 
                            Then - Actions 
                                Set Koga73sOutputCode[(Integer A)] = (Substring(Koga73sEncryptedCodeSets[Koga73sRandomCodeSetsToUse], (Integer B), (Integer B))) 
                            Else - Actions 
        Set Koga73sFullCode = <Empty String> 
        Set Koga73sFullCode = Koga73sSTRINGRCSTU 
        If (All Conditions are True) then do (Then Actions) else do (Else Actions) 
            If - Conditions 
                Koga73sLengthToReadOfEXP Equal to 1 
            Then - Actions 
                Set Koga73sFastRandomCharacter = (Random integer number between 1 and 36) 
                Set Koga73sOutputCode[4] = (Substring(Koga73sEncryptedCodeSets[(Random integer number between 1 and 25)], Koga73sFastRandomCharacter, Koga73sFastRandomCharacter)) 
                Set Koga73sFastRandomCharacter = (Random integer number between 1 and 36) 
                Set Koga73sOutputCode[5] = (Substring(Koga73sEncryptedCodeSets[(Random integer number between 1 and 25)], Koga73sFastRandomCharacter, Koga73sFastRandomCharacter)) 
                Set Koga73sFastRandomCharacter = (Random integer number between 1 and 36) 
                Set Koga73sOutputCode[9] = (Substring(Koga73sEncryptedCodeSets[(Random integer number between 1 and 25)], Koga73sFastRandomCharacter, Koga73sFastRandomCharacter)) 
                Set Koga73sFastRandomCharacter = (Random integer number between 1 and 36) 
                Set Koga73sOutputCode[10] = (Substring(Koga73sEncryptedCodeSets[(Random integer number between 1 and 25)], Koga73sFastRandomCharacter, Koga73sFastRandomCharacter)) 
                Set Koga73sFastRandomCharacter = (Random integer number between 1 and 36) 
                Set Koga73sOutputCode[11] = (Substring(Koga73sEncryptedCodeSets[(Random integer number between 1 and 25)], Koga73sFastRandomCharacter, Koga73sFastRandomCharacter)) 
            Else - Actions 
        If (All Conditions are True) then do (Then Actions) else do (Else Actions) 
            If - Conditions 
                Koga73sLengthToReadOfEXP Equal to 2 
            Then - Actions 
                Set Koga73sFastRandomCharacter = (Random integer number between 1 and 36) 
                Set Koga73sOutputCode[5] = (Substring(Koga73sEncryptedCodeSets[(Random integer number between 1 and 25)], Koga73sFastRandomCharacter, Koga73sFastRandomCharacter)) 
                Set Koga73sFastRandomCharacter = (Random integer number between 1 and 36) 
                Set Koga73sOutputCode[9] = (Substring(Koga73sEncryptedCodeSets[(Random integer number between 1 and 25)], Koga73sFastRandomCharacter, Koga73sFastRandomCharacter)) 
                Set Koga73sFastRandomCharacter = (Random integer number between 1 and 36) 
                Set Koga73sOutputCode[10] = (Substring(Koga73sEncryptedCodeSets[(Random integer number between 1 and 25)], Koga73sFastRandomCharacter, Koga73sFastRandomCharacter)) 
                Set Koga73sFastRandomCharacter = (Random integer number between 1 and 36) 
                Set Koga73sOutputCode[11] = (Substring(Koga73sEncryptedCodeSets[(Random integer number between 1 and 25)], Koga73sFastRandomCharacter, Koga73sFastRandomCharacter)) 
            Else - Actions 
        If (All Conditions are True) then do (Then Actions) else do (Else Actions) 
            If - Conditions 
                Koga73sLengthToReadOfEXP Equal to 3 
            Then - Actions 
                Set Koga73sFastRandomCharacter = (Random integer number between 1 and 36) 
                Set Koga73sOutputCode[9] = (Substring(Koga73sEncryptedCodeSets[(Random integer number between 1 and 25)], Koga73sFastRandomCharacter, Koga73sFastRandomCharacter)) 
                Set Koga73sFastRandomCharacter = (Random integer number between 1 and 36) 
                Set Koga73sOutputCode[10] = (Substring(Koga73sEncryptedCodeSets[(Random integer number between 1 and 25)], Koga73sFastRandomCharacter, Koga73sFastRandomCharacter)) 
                Set Koga73sFastRandomCharacter = (Random integer number between 1 and 36) 
                Set Koga73sOutputCode[11] = (Substring(Koga73sEncryptedCodeSets[(Random integer number between 1 and 25)], Koga73sFastRandomCharacter, Koga73sFastRandomCharacter)) 
            Else - Actions 
        If (All Conditions are True) then do (Then Actions) else do (Else Actions) 
            If - Conditions 
                Koga73sLengthToReadOfEXP Equal to 4 
            Then - Actions 
                Set Koga73sFastRandomCharacter = (Random integer number between 1 and 36) 
                Set Koga73sOutputCode[10] = (Substring(Koga73sEncryptedCodeSets[(Random integer number between 1 and 25)], Koga73sFastRandomCharacter, Koga73sFastRandomCharacter)) 
                Set Koga73sFastRandomCharacter = (Random integer number between 1 and 36) 
                Set Koga73sOutputCode[11] = (Substring(Koga73sEncryptedCodeSets[(Random integer number between 1 and 25)], Koga73sFastRandomCharacter, Koga73sFastRandomCharacter)) 
            Else - Actions 
        If (All Conditions are True) then do (Then Actions) else do (Else Actions) 
            If - Conditions 
                Koga73sLengthToReadOfEXP Equal to 5 
            Then - Actions 
                Set Koga73sFastRandomCharacter = (Random integer number between 1 and 36) 
                Set Koga73sOutputCode[11] = (Substring(Koga73sEncryptedCodeSets[(Random integer number between 1 and 25)], Koga73sFastRandomCharacter, Koga73sFastRandomCharacter)) 
            Else - Actions 
        For each (Integer A) from 3 to 13, do (Actions) 
            Loop - Actions 
                Set Koga73sFullCode = (Koga73sFullCode + Koga73sOutputCode[(Integer A)]) 
        If (All Conditions are True) then do (Then Actions) else do (Else Actions) 
            If - Conditions 
                Koga73sDebugStatus[2] Equal to 1 
            Then - Actions 
                Game - Display to (Player group((Triggering player))) the text: (|c00800080Debug Mode:|r CODE AFTER ENCRYPTION:  + Koga73sFullCode) 
            Else - Actions 
        Game - Display to (Player group((Triggering player))) for 60.00 seconds the text: (|c00800080Successfully Saved, Code = |r + (|c00ffcc00 + (Koga73sFullCode + |r))) 
        If (All Conditions are True) then do (Then Actions) else do (Else Actions) 
            If - Conditions 
                Koga73sDebugStatus[3] Equal to 0 
            Then - Actions 
                Set Koga73sHasSavedOrNot[(Player number of (Triggering player))] = True 
            Else - Actions