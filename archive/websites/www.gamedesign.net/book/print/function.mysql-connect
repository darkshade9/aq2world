<html><head><title></title><base href="http://www.gamedesign.net/" /><style type="text/css">
@import url(misc/print.css);
</style></head><body><h1 id="726" name="726" class="book-h1">Design Resume's</h1><ul><!--Updated by Andy 30 Mar 05, I have the original if you hate this-->
<blockquote><p><b>The Online Mappers Resume Database</b> - Developed by RUST</p></blockquote>
<p>Design Resume's is a prototype database, for listing and keeping track of the latest gaming work by Mappers, Models, Texture Artists and Coders. The database is designed to show the best of your work, provide links to all your material and help people find you.
</p>
<p>
To add yourself to the Design Resume's copy the template and fill it out, provide links to images of your work you would like to display, and Register to RUST (This merely ensure's your email address is current and you are who you say you are).
</p>
<p>
To post your Design Resume follow the instructions on the Resume Template.
</p>
<p>
Every six months RUST will email to confirm the contact details, and work profile is upto date.
</p>
<hr></p>
<h3>Design Resume's</h3>
<ul>
<li><a href="/node/717">Kol</a></li>
<li><a href="/node/718">masterofpuppets</a></li>
<li><a href="/node/722">Panzer</a></li>
</ul><h1 id="759" name="759" class="book-h2">RUST Resume Template</h1><ul><p>A <a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/content/resumes/template.txt"><b>simple txt file</b></a> is available to help you complete your resume in the correct format for submission. Simply fill in the (info here) blocks from the text file.<br>
To Submit your resume access 'Create Content' from the left hand Navagation menu and choose 'Story'. <br>
Copy the text into the 'Body' box and add your Name as the title.<br>
We will then check the content, post it and you will become instantly famous.. Ok, so the last bit might not be true but you never know.</p>

<h3>Your Name</h3>
<p><b>ALIAS:</b> (tag, or tags if different on different forums)</p>
<p>&nbsp;</p>
<p><b>BIOGRAPHY</b></p>
<p><b><i> - DESCRIPTION:</b></i><br>(about yourself, picture or any other images)</p>
<p><b><i> - MAPPING INTERESTS:</b></i><br> (what you like to work on)</p>
<p><b><i> - SKILLS:</b></i><br> (software you are experienced with)</p>
<p><b><i> - OTHER:</b></i><br> (anything else)</p>
<p>&nbsp;</p>
<p><b>PORTFOLIO</b></p>
<p><b><i> - WORK:</b></i><br> (include pictures if required)</p>
<p><b><i> - MOD's AND LEVEL'S:</b></i><br> (links to MOD's and levels)</p>
<p><b><i> - MODELS:</b></i><br> (links to models you have made)</p>
<p><b><i> - TEXTURES:</b></i><br> (links to textures you have created)</p>
<p><b><i> - TUTORIALS:</b></i><br> (links to tutorials you have written)</p>
<p><b><i> - WEBSITES:</b></i><br> (You own or Run)</p>
<p><b><i> - OTHER:</b></i><br> (Anything about yourself)</p>
<p>&nbsp;</p>
<p><b>CONTACT DETAILS</b></p>
<p><b><i> - EMAIL:</b></i><br> (here)</p>
<p><b><i> - FORUMS:</b></i><br> (Forums that you visit)</p>
<p><b><i> - MSN MESSENGER:</b></i><br> (here)</p>
<p><b><i> - YAHOO MESSENGER:</b></i><br> (here)</p>
<p><b><i> - AIM ADDRESS:</b></i><br> (here)</p>
<p><b><i> - ICQ NUMBER:</b></i><br> (here)</p></ul><h1 id="167" name="167" class="book-h1">Doom 3</h1><ul><h3>Doom 3 Design Articles</h3>
<p>The Doom 3 sections covers the tutorials, Entity descriptions, Frequently Asked Questions (FAQ) stored on the RUST web pages. Further contribution is greatly welcomed.</p>
<p>If you have any immediate questions check out the <a href="http://forums.gamedesign.net/viewforum.php?f=50">RUST Doom III Forums</a> for fast feedback on any Doom III Questions, Chat, Gossip ... etc. What these guys don't know isn't worth knowing</p>
      </ul><h1 id="169" name="169" class="book-h2">Info</h1><ul>Here you can find Doom 3 info.</ul><h1 id="511" name="511" class="book-h3">Faq</h1><ul><h3>DOOM 3 FAQ</h3>

By Method<br><br>

<b>Where’s the editor?</b><br>
Open console and type “editor” to load D3Radiant.<br><br>

<b>How do you open the console?</b><br>
Console can be accessed with the CTRL – ALT – TILDE (~) key. Or enter Com_allowConsole 1 in your config.<br><br>

<b>I can’t see my mouse when I load the editor.</b><br>
Make a shortcut for D3 and enter these parameters in the target line:<br><br>

<i>+set r_fullscreen 0 +editor +vid_restart</i><br><br>

<b>How do you fix the “wglMakeCurrent failed” error?</b><br>
Disable Anti Aliasing or enter this command in your shortcut:<br><br>

<i>+set r_multiSamples 1</i><br><br>

<b>How do you group brushes?</b><br>
Select the brushes you want to group, right click on the Top View and pick func_static.<br><br>

<b>What are the main files for map to run in D3?</b><br>
The main map files are .map,  .proc and .cm.<br><br>

<b>What are .map, .proc and .cm files?</b><br>
.map is the editor file with entity placement, .proc is the precompiled bsp and .cm is the collision map.<br><br>

<b>My weapons don’t respawn in MultiPlayer map.</b><br>
Make sure that you use prefix _mp for MP weapons. Example: weapon_shotgun_mp.<br><br>

<b>I can’t see some of the windows in D3Radiant.</b><br>
Load the editor and click on View->Toggle.<br><br>

<b>How do I change the gamma for the editor?</b><br>
Click on Misc->Gamma… and pick a value between 0 and 1. Example: 0.8.<br><br>

<b>How do you rotate, move and zoom models in D3Radiant Media View?</b><br>
Rotate - left click on the object and while holding it down move the mouse around.
Move Up, Down, Left or Right - right click on the object and while holding it down move the mouse to up, down, left or right. Zoom In/Out - press Alt and right click on the object and while holding it down move the mouse around.
</ul><h1 id="174" name="174" class="book-h3">Links</h1><ul><h3>Links</h3>

<b><a href = "http://www.doom3.com/">Official Doom 3 website</a><br></b>
Official Doom website, includes news, screenshots, trailers, wallpapers, etc.<br><br>

<b><a href = "http://www.idsoftware.com/">Id Software</a><br></b>
The home of Doom 3 and all other great games.<br><br>

<b><a href = "http://www.splashdamage.com/">Splash Damage</a><br></b>Guys who designed DOOM 3 MP maps.<br><br>

<b><a href = "http://www.planetdoom.com/">PlanetDoom</a><br></b>
Includes everything from doom 1 to doom 3.<br><br>

<b><a href = "http://www.doom3world.org/">DOOM 3 World</a><br></b>Forums with a bunch of tutorials on level designing, scripting, modelling, etc.<br><br></ul><h1 id="173" name="173" class="book-h3">Screenshots</h1><ul><!-- (c)2004 [DS]Kingpin_Xatrix -->

<h3>Screenshots</h3>

Here's a bunch of <u>official</u> screenshots.<br><br>

<img src="http://gamedesign.net/content/doom3/1.jpg">
<img src ="http://gamedesign.net/content/doom3/2.jpg"><br>
<img src="http://gamedesign.net/content/doom3/24.jpg">
<img src ="http://gamedesign.net/content/doom3/23.jpg"><br>
<img src="http://gamedesign.net/content/doom3/5.jpg">
<img src ="http://gamedesign.net/content/doom3/6.jpg"><br>
<img src="http://gamedesign.net/content/doom3/7.jpg">
<img src ="http://gamedesign.net/content/doom3/8.jpg"><br>
<img src="http://gamedesign.net/content/doom3/9.jpg">
<img src ="http://gamedesign.net/content/doom3/10.jpg"><br>
<img src="http://gamedesign.net/content/doom3/25.jpg">
<img src ="http://gamedesign.net/content/doom3/13.jpg"><br>
<img src="http://gamedesign.net/content/doom3/14.jpg">
<img src ="http://gamedesign.net/content/doom3/15.jpg"><br>
<img src="http://gamedesign.net/content/doom3/16.jpg">
<img src ="http://gamedesign.net/content/doom3/17.jpg"><br>
<img src="http://gamedesign.net/content/doom3/18.jpg">
<img src ="http://gamedesign.net/content/doom3/19.jpg"><br>
<img src="http://gamedesign.net/content/doom3/20.jpg">
<img src ="http://gamedesign.net/content/doom3/21.jpg"><br>
<img src="http://gamedesign.net/content/doom3/22.jpg">
<img src ="http://gamedesign.net/content/doom3/3.jpg"><br>
<img src ="http://gamedesign.net/content/doom3/11.jpg"></ul><h1 id="168" name="168" class="book-h2">Tutorials</h1><ul>Here you can find Doom 3 tutorials.</ul><h1 id="877" name="877" class="book-h3">Alphabet Decals</h1><ul><h3><div class = "highlight">Alphabet Decals</div></h3>
by Method<br><br>

To create words on the walls seeing throughout Doom 3, you need to use patches and alphabet texture. Make a 16 by 16 unit brush and click on the <b>Patch->Simple Patch Mesh...</b> Then apply the alphabet texture, which is located in the decals texture folder, on the patch.

<p align = "center">
<img src = "http://www.gamedesign.net/content/doom3/alphabet1.jpg"></p>

You probably won't have it aligned right, so naturalize the texture by opening the Surface Inspector and clicking <b>Natural</b> button under the Texturing area.<br><br>

<i>Note: You can press Ctrl+N to naturalize the texture.</i>

<p align = "center">
<img src = "http://www.gamedesign.net/content/doom3/alphabet2.jpg"></p>

Change the grid to <b>0.25</b> by pressing <b>Shift+3</b>. Then move the patch close to the wall so the gap between the wall and the patch will be one unit thick.

<p align = "center">
<img src = "http://www.gamedesign.net/content/doom3/alphabet3.jpg"></p>

Open Surface Inspector and change <b>Shift horizontally</b> and <b>Shift vertically</b> values to <b>0.005</b>. The values are low, but they center the letters perfectly. Move the arrows up or down to find the letter you need. If the letter seems upside down, use <b>Flip X</b> or <b>Flip Y</b> under the Texturing area, to flip it.

<p align = "center">
<img src = "http://www.gamedesign.net/content/doom3/alphabet4.jpg"></p>

After you created the letter you wanted, copy it by pressing Space and move it next to the first letter. Use Surface Inspector to create second letter, third, etc.<br><br>

<i>Note: To scale the letters you can change the size of the patch. It should automatically scale on resize.</i><br><br>

For this tutorial I created a news board.

<p align = "center">
<img src = "http://www.gamedesign.net/content/doom3/alphabet5.jpg"></p></ul><h1 id="688" name="688" class="book-h3">Bending Cylinder Patches</h1><ul><h3><div class = "highlight">Bending Cylinder Patches</div></h3>
by Method<p>

<b><div class = "highlight">BENDING A PIPE</div></b><p>

Open D3Radiant (DOOM Edit) and make a cylinder patch by creating a small brush and clicking on <b>Patch->Cylinder</b>.
<p align = "center">
<img src = "http://www.gamedesign.net/content/doom3/wire1.gif"></p>

Select the patch and go into the vertex mode (press V). You can select vertices by clicking on them. When you select vertices they will turn blue. Now you can move them around. You'll notice how the patch bends.

<p align = "center">
<img src = "http://www.gamedesign.net/content/doom3/wire2.gif"></p>

To make a simple bend, you need to move right vertices down, so they will look like a mirror reflection of the left vertices. Now it looks like a pipe, but it's a badly shaped pipe.
<p>
<i>Note: make sure your patch is snapped to grid (Control + G), otherwise it'll be hard to align it to the other patches.</i>

<p align = "center">
<img src = "http://www.gamedesign.net/content/doom3/wire3.gif"></p>

To fix it, you need to move center vertices, so the top center vertex point will intersect top right and top left vertex points. Do the same thing for center middle and center bottom vertices.

<p align = "center">
<img src = "http://www.gamedesign.net/content/doom3/wire4.gif"></p>

<b><div class = "highlight">BENDING A WIRE</div></b><p>

Start by creating a cylinder patch. Try to see what the wire will look like in your head, that way it'll be easier for you to bend it.
<p align = "center">
<img src = "http://www.gamedesign.net/content/doom3/wire5.gif"></p>

When you're done bending the patch, create another one and place it next to the first one. Continue bending and adding patches.

<p align = "center">
<img src = "http://www.gamedesign.net/content/doom3/wire6.gif"></p>

This is the wire I made for this tutorial. It consists of 4 cylinder patches placed together.

<p align = "center">
<img src = "http://www.gamedesign.net/content/doom3/wire7.gif"></p>

Now group the wire by selecting all the patches and right clicking on the Top view. Find func and pick <b>func->finc_static</b>, it’ll make the patches into the func_static. The red dot indicates the origin of the entity.
<p>
<i>Note: you can center the origin by pressing Shift + O.</i>
<p>

<p align = "center">
<img src = "http://www.gamedesign.net/content/doom3/wire8.gif"></p>

There’re two ways to bend wire. The first method was described above and the second is to create a long cylinder patch and add rows, by clicking on <b>Patch->Insert->Insert (2) Rows</b> and <b>Patch->Insert->Add (2) Rows</b>. If you need to create a short wire, then you can use this method, but for the complex and long wires you should use the first method.
<p></ul><h1 id="510" name="510" class="book-h3">CFG file</h1><ul><h3>DOOM 3 CONFIG</h3>
by Method<br><br>


<h5>What is a CFG file?</h5>

CFG file is a text file with all the controls, commands and settings. When you run DOOM 3 (D3) for the first time, it creates DoomConfig.cfg file, which is text file with default controls/settings. CFG file stores info like your nick, controls, mouse settings, function keys, etc.<br><br><br>


<h5>Why is having your own CFG file handy?</h5>


The reason, I'm writing this tutorial is because it's always handy to have your own config file. Say you changed some commands values in the console and you want to undo what you did. All you have to do is to type in console
<b>exec name.cfg</b>, where name is your config name. The console will overwrite current config with the config you executed. When you play on someone elses pc, all you have to do is to execute your cfg and you ready to play with your controls/settings or if you reinstalled D3 and don't want to manually set all the controls/settings you can also execute your CFG file.<br><br><br>


<h5>How do you create one?</h5>

I suggest using Notepad, which comes with almost every Windows OS or any other word editor, but make sure to save CFG file as .cfg. You bind or set commands in this form:<br><br>

<b>bind [key] [command]</b><br><br>

Example:<br><br>

<b>bind UPARROW "_forward"</b><br><br>

Where key is the keyboard button and command is the function that key should perform. You can also create comments by placing <b>//</b> in your CFG file. D3 engine ignores the whole line after <b>//</b>. Example:<br><br>

<b>bind DEL "_impulse19" //pda</b><br><br>


When you done with your CFG file, just save it as name.cfg in Doom 3/base folder, where name is the name of your CFG file. If you want to unbind all the controls when you execute your CFG file, add <b>unbindall</b> somewhere in your config. You can also change your name color. Here's the list of the colors:<br><br>

^1 - <font color ="red">red</font><br>
^2 - <font color ="green">green</font><br>
^3 - <font color ="yellow">yellow</font><br>
^4 - <font color ="blue">blue</font><br>
^5 - <font color ="lightblue">light blue</font><br>
^6 - <font color ="pink">pink</font><br>
^7 - <font color ="white">white</font><br>
^8 - <font color ="gray">gray</font><br>
^9 - <font color ="black">black</font><br><br>

Example:<br><br>

<b>^8[DS]^7Method</b><br><br>

Which will look like this: <font color ="gray">[DS]</font><font color ="white">Method</font><br><br>

You can set your name right in the config. Example:<br><br>

<b>seta ui_name "^8[DS]^7Method"</b><br><br>

<h5>Is there a way to organize CFG file or make it easier to read?</h5>

You can always use comment lines to organaze your CFG. Here's a snippet from my config:<br><br>

<b>
//---------------------------------------------<br>
// USER INFO<br>
//---------------------------------------------<br><br>

seta ui_name "^8[DS]^7Method"<br>
seta in_alwaysRun "1"<br>
seta ui_autoReload "0"<br>
seta ui_autoSwitch "0"<br>
seta ui_skin "skins/characters/player/marine_mp"<br>
seta ui_showGun "1"<br><br>

//---------------------------------------------<br>
// MOUSE BUTTONS<br>
//---------------------------------------------<br><br>

bind  MOUSE1		"_attack"<br>
bind  MOUSE2		"_moveup"<br>
bind  MOUSE3		"_impulse11" //flashlight<br>
bind  mwheelup		"_impulse15" //nextweap<br>
bind  mwheeldown	"_impulse13" //reload</b><br><br>

You can view pk4 files located in Doom 3/base folder. Just open pak000.pk4 with WinZip, it contains all the CFG files which were used by Id Software.<br><br>

If you have any questions or comments, post them on RUST | gamedesign.net <a href = "http://forums.gamedesign.net/viewforum.php?f=50&sid=5391f4867bb1567e37cf434a45b28c03">DOOM 3 Forum</a>.</ul><h1 id="1063" name="1063" class="book-h3">CTF Level Design Tips</h1><ul><h3>CTF Level Design Tips</h3>
by Method
<p><p>
<b>INTRO</b>
<p>
I played several CTF games, such as Kingpin's Bagman, Q2 CTF, Q3 CTF and D3 CTF.
While playing and looking through D3 CTF maps by Threewave, I noticed that their maps have several things in common.
<p>
<b>COMMON THINGS</b>
<p>
<ul>
<li>The maps are symmetrical</li>
<li>Bases have spaces for Flag Carrier to hide</li>
<li>Security Armor is usually placed near the flag room</li>
<li>The donut-shaped areas are common throughout the maps</li>
<li>Machineguns are usually placed near the flag</li>
<li>The color of the flares and CTF decals indicate the bases</li>
<li>Bases have 2-4 entry points</li>
</ul>
<p>
<i>Note: Donut-shaped area is a room with a pillar or a column in the middle of it.</i>
<p>
<b>PAUL JAQUAYS' TIPS</b>
<p>
1. Keep maps symmetrical. Even if you can design an interesting non-symmetrical map, players will always believe that the maps are
imbalanced and will favor a side. The big terrain map that Xian did for Q2 CTF is a classic example. No question that it was fun,
but I always felt that Blue had a map advantage. 
<p>
2. Mark paths in and out of bases. Nothing is more frustrating than being constantly turned around inside a map and becoming disoriented.
<p>
3. Plan out areas for strategic defenses.
<p>
4. Strike a balance between defensibility and indefensibility for bases. A base that has to be assaulted by teamwork to succeed is much
better than one that leaks like a sieve … too easy to get into or out of.
<p>
5. Work in variety of play experience in maps. My CTF maps in Q3A and Q3:TA were the only ones with
swimmable water in them.
Made them different from everyone elses.
<p>
6. Think in terms of memorable play experiences. 
<p>
7. Don’t be afraid to include hiding places. The Q2 CTF maps had great hiding places in them. The Q3A maps did not … no place to hide.
<p>
8. Keep map size down. Unless BIG is the memorable feature of a map, don’t make the distance between bases overlong.
Fast games are more fun than interminably long races between bases.
<p>
9. Be careful about making a map that is too sniper friendly. If a good sniper can dominate a map, no one on the other side will have fun.
<p>
10. The best sniper roosts should also be the most vulnerable positions to maintain.
<p>
11. Keep players supplied with ammo, but hungry for armor and health.
<p>
12. Assault and return routes should intersect frequently.
<p>
<i>Thanks to Paul Jaquays for taking his time and listing these great tips for CTF maps.</i><div class="book"><div class="nav"> <div class="links"><div class="prev"><a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/510" title="View the previous page.">previous</a></div><div class="next"><a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/556" title="View the next page.">next</a></div><div class="up"><a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/168" title="View this page's parent section.">up</a></div></div> <div class="titles"><div class="prev">CFG file</div><div class="next">Level Design Tips</div></div></div></div></ul><h1 id="556" name="556" class="book-h3">Level Design Tips</h1><ul><h3>DOOM 3 Level Design Tips</h3>
by Method<p><p>

<h4>D3Radiant tips</h4>

1. If you can't see the textures or it's too dark in the Cam view, click on <b>Misc->Gamma...</b> to change the brightness in the map.<br><br>

2. If you want to select multiple brushes, create a big brush and place it around the brushes you want to select, then click on <b>Selection->Select->Select Inside</b> or you can click the select icon on the toolbar.<br><br>

3. If you want to see the size of the brush, press "p" to open Preferences and check <b>Paint sizing info</b> in "New Functionality".<br><br>

4. If you have a brush with specific texture which you want other brushes to have, select brush/brushes which you want to have specific texture and click middle (wheel) mouse button on the brush with the texture of your choice.<br><br>

5. When you select entity from the Entity View window or if you right click on the Top View, you'll see alot of entities from SP and MP. You can save time by pressing the first letter of the entity you want and editor will scroll down to it. Example: If I wanted to get to the weapons and they're on the bottom, I would press "w" and the editor will scroll down to the entities which start with "w". If I wanted to be more specific I would press "w" and then "e" and it'll jump right to the weapons.<br><br>

6. Type in console these commands to list specific commands and their usage. List commands:<br><br>

<b>listToolCmds<br>
listGameCmds<br>
listSystemCmds<br>
listCmds<br></font></b><br>

7. In D3Radiant Media View you can pick the textures, models, particles, etc. for you map. To move models and particles in the preview window use these controls:<br><br>

<b>Rotate</b> - left click on the object and while holding it down move the mouse around.<br><br>

<b>Move Up, Down, Left or Right</b> - right click on the object and while holding it down move the mouse to up, down, left or right.<br><br>

<b>Zoom In/Out</b> - press ALT and right click on the object and while holding it down move the mouse around.<br>

<h4>Level Designing tips</h4>

1. Sketch your map before building it, it really saves time. You don't have to sketch the whole level out, but you need to have some early gameflow layout. It's also good idea to sketch some specific areas.<br><br>

2. Study pro maps and try to include the things you like in your map. Read pro LD's interviews, most of the time they give some handy tips from their experience.<br><br>

3. Beta test your maps, give them to your friends and listen to their valuable feedback. Sometimes you don't see the problem because you're too busy with designing, but after player's feedback you'll realize that some things can be changed.<br><br>

4. Plan your map carefully with vis blocking in mind. Like I said above sketch and plan your map, so you won't have to rebuild it. Most of the LD's mistakes can be avoided by sketching and planning your map carefully.<br><br>

5. Learn to "Think in 3D". Imagine what will look good in 3D and what not. Most people find it hard to see the map in their head, but the more you build the easier it gets. It's important to have this skill so you can visually sketch some parts of the level in your head.<br><br>

6. Place weapons and items carefully and make your map balanced. If you have powerful weapon in your map, then there always be players in that area. Don't place weapon and too much ammo in the same place, make the player travel to other areas to pick it up.<br><br>

7. If you're creating Team DM/CTF map make it symmetrical, so each team has a fair chance of winning. If you're building CTF style map, then use different colors for the bases or you can place some team signs in the base so players will know where they are.<br><br>

8. Make maps with different heights, so the player will expect enemy on top or on the bottom. Good maps give the player feeling that enemy could be everywhere.<br><br>

9. Keep you r_speeds (polys count) low for older PC's and so the map won't lag online. Also light in D3 is very crucial for FPS (Frames Per Second). Keep track of how many light sources hit the surface.<br><br>

I will update this handbook page with more info in the future. If you have any questions or comments, post them on RUST | gamedesign.net <a href = "http://forums.gamedesign.net/viewforum.php?f=50&sid=5391f4867bb1567e37cf434a45b28c03">DOOM 3 Forum</a>.</ul><h1 id="659" name="659" class="book-h3">Map DEF File</h1><ul><h3>Map DEF File</h3>

by Method<br><br>
<i>Special Thanks to Brian Harris of id Software</i><br><br>

<b>INTRO</b><br>
All maps should have a DEF (definition) file, which will tell the engine what kind of map it is, if it's a MultiPlayer, SinglePlayer, etc. So you should create a def folder in C:\Program Files\Doom 3\base if you don't already have one.<br><br>

<b>SINGLEPLAYER DEF</b><br>
Here's example of def file for a SP map by id.<br><br>
<pre style = "background-color: darkgray">
mapDef game/mars_city1 {
	"name"		"Mars City"
	"devname"		"01-Mars City"
	"singleplayer"	"1"
	"size0"		"241381796"
	"size1"		"241381796"
	"size2"		"360373649"
	"size3"		"509824838"
}
</pre><br>
First line tells the engine that the file is the map definition and the path to the map. "Name" is the name of the map, "devname" is the development name, "singleplayer" tells the engine that this map is a SinglePlayer map. "Size0" - "size3" is the map size info in 4 quality modes.<br><br>

<b>MULTIPLAYER DEF</b><br>
Here's example of def file for a MP map by id.<br><br>
<pre style = "background-color: darkgray">
mapDef game/mp/d3dm1 {
	"name"		"Tomiko Reactor"
	"Deathmatch"	"1"
	"Team DM"		"1"
	"Last Man"	"1"
	"Tourney"		"1"
	"size0"		"114318720"
	"size1"		"114318720"
	"size2"		"196881115"
	"size3"		"312221073"
}
</pre><br>
First line tells the engine that the file is the map definition and the path to the map. "Name" is the name of the map. "Deathmatch", "Team DM", "Last Man" and "Tourney" tell the engine that this map can be played in those modes. "Size0" - "size3" is the map size info in 4 quality modes.<br><br>

<b>SIZE INFO</b><br>
The only hard part about writing a DEF for a map is to getting the size info. Cvar "com_udateLoadSize 1" will update the size info automaticly. Thanks to Brian Harris of id Software for explanation and for showing the batch file which they used to get size info's for their maps.
Here's a snippet of the batch file:<br><br>
<pre style = "background-color: darkgray">
doom +com_updateLoadSize 1 +map game\admin.map +quit
doom +com_updateLoadSize 1 +map game\alphalabs1.map +quit
doom +com_updateLoadSize 1 +si_map game\mp\d3dm1.map +si_pure 0
+spawnserver +quit
doom +com_updateLoadSize 1 +si_map game\mp\d3dm2.map +si_pure 0
+spawnserver +quit
</pre><br>
During development of D3 the executable file was called doom.exe, but later was renamed to doom3.exe, so for batch file to work you need to change "doom" to "doom3".<br><br>

<b>WRITING BATCH FILE</b><br>
If I wanted to get size info's for my map, let's call it methd3dm1, I would open a text editor (Notepad) and type this:<br><br>
<pre style = "background-color: darkgray">
doom3 +com_updateLoadSize 1 +si_map game\mp\methd3dm1.map 
+si_pure 0 +spawnserver +quit
</pre><br>
After I would save it as sizeinfo.bat in C:\Program Files\Doom 3. You can name it whatever you want, but you must include .bat, this tells Windows that it's a batch file. If you can't see the extenions, click on My Computer, then on Tools->Folder Options... click on View tab and uncheck "Hide extensions for known file types".<br><br>

<b>WRITING MAP DEF</b><br>
Use examples above to write map def file and save it as name.def (where name is the name of your map) in C:\Program Files\Doom 3\base\def. Now laod D3 and change game's quality to lowest, exit and run the batch file. It should automaticly add size info to your def file. Continue changing the quality of the game and running the batch untill you have 4 size info's in your map def. Brian Harris also said that they tend to always have the same number through size0 and size1.</ul><h1 id="634" name="634" class="book-h3">MultiPlayer Guide</h1><ul><h3>DOOM 3 MP Guide</h3>

by Method<br><br>

<b>RUN</b><br>
It’s important to run in D3, some people say that it’s better to sneak, but most of the time I run around the sneaking people and kill them before they notice me. Make sure that you have “always run” turned on in MP settings.<br><br>

<i>Note: You can always sneak by holding SHIFT key.</i><br><br>

<b>JUMP</b><br>
You can gain speed by running on the slope surfaces and jumping at the end. Good example of this would be steps. If you hold strafe and use your mouse to aim for the direction, while constantly jumping you’ll gain speed also, but it’s very hard to control your movement.<br><br>

<b>STRAFE</b><br>
Strafing is a very important technique in MP. The best way to strafe when you’re in firefight is to move randomly, so the player won’t predict your movement. Try to confuse your enemy, jump, strafe and even duck.<br><br>

<b>CONTROL THE ITEMS</b><br>
All good players control the items. So when you pick up some weapon/item try to run everywhere and pick all the powerful stuff yourself. Even if you already have it, run over it, so your enemy won’t posses it.<br><br>

<i>Note: Professional players count the respawn time and pick up the items before their enemy.</i><br><br>

<b>AIM</b><br>
This is the skill you gain by practicing and playing a lot of FPS games. If your enemy is moving, always aim ahead. If he walks towards you, then you got to try and shoot him in the head. Headshots cause double damage to an enemy.<br><br>

<b>SPAWN SAFELY</b><br>
This is not a technique, but you get spawn killed in D3 very often. The best way to stay alive is to spawn and select grenades (you spawn with a pistol and two grenades) and aim at your enemy, while you running backwards for a better weapon. After you run out of grenades, switch to the pistol and shoot while you continue running backwards.<br><br>

<i>Note: It’s important to know the map when you run backwards otherwise you might get stuck.</i><br><br>

<b>KNOW THE MAP</b><br>
If you know the map, then you know all the shortcuts and item placement. So you can get to place or pick up an item before your enemy. Some maps include a trick jumps and if you know where they are you can get to places faster by jumping.<br><br>

<b>PLAY COMPETITIVE</b><br>
It’s very important to be confident in yourself. When you play against someone who kills you easily, you’ll be more cautious and play defensibly. This will give a huge advantage to your enemy. When you play defensibly you back off, while your enemy jumps and fires, furthermore getting an easier frag. Even if you know you’re weaker than your enemy, try to attack him, instead of backing off.<br><br>

<b>DROP THE WEAPONS</b><br>
If you run out of ammo, sometimes it's a good idea to drop that weapon. Drop your weapon by pressing BACKSPACE. So when your enemy will pick it up, he'll have a weapon with an empty clip.<br><br>

<b>THROW GRENADES</b><br>
Grenades can bounce around and they won't give give away your location. Throw grenades to areas with powerful weapons to kill the campers.<br><br>

<b>CONFIGURE YOUR KEYS</b><br>
Create your own config file and configure the keys to your preference. You can read my config tutorial <a href = "http://www.gamedesign.net/book/view/510">here</a>.<br><br>

<b>KNOW YOUR ENEMY</b><br>
D3 supports 5.1 sound, so you can hear whenever the player picked up a weapon or a powerup. You can find your enemy's location by listening to sounds. Also find what weapon your enemy uses the most and try to control it.</ul><h1 id="663" name="663" class="book-h1">Half-Life 2</h1><ul><center>
<img src="http://www.gamedesign.net/content/half-life2/hl2logo1.png">
<h2>Half-Life 2</h2>
<span class="tinytext">An FPS game by <a href=="http://www.valvesoftware.com">Valve Software</a></span>
</center>
<p class="hl2bg1a">Finally, the highly anticipated game of the year, Half-Life 2, is now available for PC.</p>
<p class="hl2bg1a">Already, RUST has begun compiling tutorials and articles to get you started on mapping and/or editing for Half-Life 2.  Whether you just want to make a map, or a whole modification; all the information you could probably ever need will be found here.</p>
<p class="hl2bg1a">If you have any questions that can't be answered here, check out the <a href="http://forums.gamedesign.net/viewforum.php?f=9">RUST Half-life 2 Forums</a> for fast feedback on any Half-Life 2 questions, chat, gossip, etc.</p></ul><h1 id="897" name="897" class="book-h2">Custom Source Tools</h1><ul><p class="hl2bg1a"><b>What is CST?</b><br /><br />
CST - or Custom Source Tools, is a tool set that aims to provide compile support for all Source Based games.<br /> It replaces the old Valve tools, by providing faster code, and quicker Bug Fixes.<br /><br />
What's new, or changed?<br /><br />
In the Beta 1 we have:</p>
<!--break-->
<p>&nbsp;&nbsp;<b>Added</b><br />
Support for Bloodlines Custom RAD, use -bloodlines switch at the CSTRAD stage Icons, and version information's, to make the tools look friendlier<br /><br />
Enabled the DLL Redirect files, for people to use the old Valve Tools, if need be Install Guide</p>

<p>&nbsp;&nbsp;<b>Fixed</b><br />
-Extra switch causing VRAD to come up with the &quot;Warning&quot; Text, in the original Valve Build</p>

<p>&nbsp;&nbsp;<b>Removed</b><br />
Nothing yet</p>

<p>&nbsp;&nbsp;<b>Changed</b><br />
Filename to stop HLSDK Overwriting the Valve version names of the tools</p>

<p>&nbsp;&nbsp;<b>Where can I download the new tools?</b><br />
You can download the new tools from:<br />
&nbsp;&nbsp;<a href=" http://www.zhlt.tk">http://www.zhlt.tk</a></p>

<p>&nbsp;&nbsp;<b>How do I set up these tools?</b><br />
You can find a guide to setting up the tools in the download, though you must have Internet Explorer 5 or higher, because of the format the file is in.
Though you can also view the online version at:<br /> &nbsp;&nbsp;<a href="http://ammahls.com/cst/setting_up_cst.htm">http://ammahls.com/cst/setting_up_cst.htm</a></p>

</ul><h1 id="1024" name="1024" class="book-h2">Entity Guide</h1><ul><!--Submitted by yesukai Mar 05-->
<table width="480" style="background-color: #ffffff; border-size: 2px; border-style: solid; border-color: #000000;" cellpadding="5" cellspacing="0">
<tr>
 <td>
  <img src="content/half-life2/entity_guide/entguide2pd.gif" width="480" height="113" alt="HL2 Entity Guide" title="HL2 Entity Guide" />
 </td>
</tr>
<tr>
 <td>
<h2>Introduction</h2>
<div style="margin-left: 25px;">Half-Life 2 offers a vast number of entities to work with. The sheer amount of entities can be boggling, and how to properly use them can be confusing. Presented here are the entities, organized in an easy to use fashion. We will only be offering in depth articles on entities. You can safely assume that if an entity has an article, it will be a complete tutorial on how to use that entity, not just a list of its keys.
<br>
</div>
  <h2>The Core Game</h2>
<div style="margin-left: 25px;">
  <h3><a href="/node/1025">The Base FGD</a></h3>
  <p>Contains most of the base entities for the Source engine that are not game specific. Most triggers, environmental effects, logic, and moving entities will be here.</p>
  <h3><a href="/node/1026">The Half-Life 2 FGD</a></h3>
  <p>Contains Half-life 2 specific entities, including: NPC's, weapons, items, vehicles, and other game specific items..</p>
  <h3><a href="/node/1029">The HL2-MP FGD</a></h3>
  <p>Contains Half-life 2: MultiPlayer specific entities.</p>
<br>
</div>
<h2>Popular Mod Entities</h2>
<div style="margin-left: 25px;">
 <h3><a href="/node/1032">HL2:CTF</a></h3>
 <p>Entities specific to <a href="http://www.hl2ctf.com/">Half-Life 2: CTF</a>, including team spawns and flag entities.</p>
<h3><a href="/node/1038">SourceForts</a></h3>
 <p>Entities specific to <a href="http://213.151.36.16/client/knifa/">SourceForts</a>, including base and flag entities.</p>
<br>
</div>
<h2>F.A.Q.</h2>
<div style="margin-left: 5px;">
<ul>
<li><b>What is a FGD?</b> FGD stands for Forge Game Data, its the file that tells WorldCraft/Hammer what entities are available and what properties they have.</li>
<li><b>Why isn't your guide complete?</b> We are going for quality over quantity. When an in-depth tutorial is made for a certain entity (or entities), links will be added for it. If you would like to write a tutorial for an entity, you may do so. Simply <a href="/user/register">Sign Up</a> and then check out the <a href="/node/943">Submission Guidelines</a>.</li>
</ul>
<br>
</div>
 </td>
</tr>
</table>
<!--
Amendments by Andy
- Added gif to file 
- Added title tag to img for mozilla users - 
- removed full path from 'user register' (olly request) just out of interest, "../node "/node and just plain old "node all work.
- added submitted by comment at top :-)
- closed last line in unordered list (personal preference, please don't hate me)
- ran it through a spell checker.. excellent for 3 am.. :-) 
Comment by Yesukai: Heh. I spellchecked it about 3 minutes ago... you probably over-wrote whatever I did. :)
--></ul><h1 id="1015" name="1015" class="book-h2">Source Utilities Roundup</h1><ul><h3>Source Utilities Roundup</h3>
Some talented people have produced some great utilities for Source modding. Have a look and see what makes your life easier.<br>
<br>
<table bgcolor="#c0c0c0" border="0" cellpadding="5" cellspacing="0" width="100%">
<tr>
<td>
I am not here to rate any of these or tell you to use one over another, just to make these utilities known to you in one easy spot. Note that <a href="http://www.bittorrent.com/">Bit Torrent</a> links are provided for your convenience and to preserve the bandwidth of the authors. Note also that tools made for HL1 that <em>may</em> still have a useful function in Source modding have not been included (IE: programs that export to .map, .wad or .rmf files).<br>
<br>
All tools remain the property of their authors, and while they are available for free, you should take the time to thank the author for his tool should you use it.
</td>
</tr>
</table>
<br>
<strong>Download All Tools</strong><br>
Download all the tools presented here in one bit torrent.<br>
<a href="http://torrentstrike.net/download.php?view.18">Download BitTorrent</a><br>
<br>
<br>
<span style="font-weight: bold; font-size: 16px;">Texturing:</span><br>
<br>
<strong>Windows XP/2000 VTF Shell Extensions</strong><br>
By Neil Jedrzejewski<br>
This is a shell extension for Windows XP/2000 that allows you view VTF files when using the thumbnail folder view and it lets you add custom columns in "details" folder view that lets you see everything from a VTF's dimensions to alpha. Very handy.<br>
<a href="http://www.wunderboy.org/index.php">Homepage</a> : <a href="http://www.wunderboy.org/download.php?file=VTFShellExtensions.zip&amp;s=1">Download HTTP</a> : <a href="http://torrentstrike.net/download.php?view.20">Download BitTorrent</a><br>
<br>
<strong>VTFTool 0.5b</strong><br>
By Neil Jedrzejewski<br>
This program provides a GUI alternative to the Valve command line texture utilities. It allows you create VTF files, and change a VTF back to a TGA, export mip maps, and many other texture related features.<br>
<a href="http://www.wunderboy.org/index.php">Homepage</a> : <a href="http://www.wunderboy.org/download.php?file=VTFTool_0.5b.zip&amp;s=1">Download HTTP</a> : <a href="http://torrentstrike.net/download.php?view.23">Download BitTorrent</a><br>
<br>
<br>
<strong>VTF Explorer</strong><br>
By Vyachelslav Djura<br>
This utility lets you explore the steam cache files (.gcf) and view textures and their different components. It also lets you extract files from the .gcf file.<br>
<a href="http://www.hl2source.com/?content=projects&amp;id=vtftool">Homepage</a> : <a href="http://torrentstrike.net/download.php?view.26">Download BitTorrent</a><br>
<br>
<strong>Auto Seamer</strong><br>
By Ryan Gregg<br>
A handy little utility that has your choice of three algorithms that make your textures seamless. Fine which one works best for your particular texture, and you have just shaved a load of time off your texture creation.<br>
<a href="http://nemesis.thewavelength.net/index.php?p=19">Homepage</a> : <a href="http://nemesis.thewavelength.net/files/files/autoseamer101.zip">Download HTTP</a> : <a href="http://torrentstrike.net/download.php?view.16">Download BitTorrent</a><br>
<br>
<strong>TEXgen v1.0</strong><br>
By James Freedman<br>
A GUI front end for vtex that can also automatically create your VMT files for you was well.<br>
<a href="http://sourceplus.seascape.uk.net/?page=texgen">Homepage</a> : <a href="http://www.hlgaming.com/pafiledb.php?action=file&amp;id=608">Download HTTP</a> : <a href="http://torrentstrike.net/download.php?view.25">Download BitTorrent</a><br>
<br>
<br>
<span style="font-weight: bold; font-size: 16px;">Mapping:</span><br>
<br>
<strong>Batch Compiler</strong><br>
By Ryan Gregg<br>
Compile your maps separate from hammer and save some processing cycles. Includes many specifications, which tells the batch compiler which command line options to make available. Note: requires the <a href="http://microsoft.com/downloads/details.aspx?FamilyId=262D25E3-F589-4842-8157-034D1E7CF3A3&amp;displaylang=en">.NET Framework</a>.<br>
<a href="http://nemesis.thewavelength.net/index.php?p=2">Homepage</a> : <a href="http://nemesis.thewavelength.net/files/files/batchcompiler311.exe">Download HTTP</a> : <a href="http://torrentstrike.net/download.php?view.17">Download BitTorrent</a><br>
<br>
<strong>RESMaker</strong><br>
By [FBNOps]OtakuCODE<br>
Creates the RES file needed by a server to ensure the downloading of all resources needed by a map.<br>
<a href="http://halflife2.filefront.com/file/HalfLife_2_CS_Source_ResMaker;34374">Homepage</a> : <a href="http://torrentstrike.net/download.php?view.24">Download BitTorrent</a><br>
<br>
<br>
<span style="font-weight: bold; font-size: 16px;">Modeling</span><br>
<br>
<strong>3DSMax 6/7 VTF Texture Plug-in 0.2b</strong><br>
By Neil Jedrzejewski<br>
Plugin for 3D Sutdio Max that lets you use VTF files as textures.<br>
<a href="http://www.wunderboy.org/index.php">Homepage</a> : <a href="http://www.wunderboy.org/download.php?file=3DSMax_VTF_Import_0.2.zip&amp;s=1">Download HTTP</a> : <a href="http://torrentstrike.net/download.php?view.13">Download BitTorrent</a><br>
<br>
<strong>Source MDL Texture Info 1.0</strong><br>
By Neil Jedrzejewski<br>
Gives information about the textures(skins) a model uses. Extremely useful when you can not figure out why your model is still showing the pink and black checkerboard texture.<br>
<a href="http://www.wunderboy.org/index.php">Homepage</a> : <a href="http://www.wunderboy.org/download.php?file=MDLTextureInfo_1.0.zip&amp;s=1">Download HTTP</a> : <a href="http://torrentstrike.net/download.php?view.15">Download BitTorrent</a><br>
<br>
<strong>GUI StudioMDL Source 0.1b</strong><br>
By Neil Jedrzejewski<br>
Extremely handy GUI for compiling models with studiomdl. Saves a lot of typing in an archaic command prompt.<br>
<a href="http://www.wunderboy.org/index.php">Homepage</a> : <a href="http://www.wunderboy.org/download.php?file=guistudiomdl_1.0.zip&amp;s=1">Download HTTP</a> : <a href="http://torrentstrike.net/download.php?view.21">Download BitTorrent</a><br>
<br>
<strong>SoftImage XSI 3.x Exporter Plug-in for Milkshape 3D</strong><br>
By Neil Jedrzejewski<br>
Export meshes from Milkshape 3D so that you can edit them in XSI. Brings HL2 modeling to Milkshape.<br>
<a href="http://www.wunderboy.org/index.php">Homepage</a> : <a href="http://www.wunderboy.org/download.php?file=msdotXSIExporter_v1.0.zip&amp;s=1">Download HTTP</a> : <a href="http://torrentstrike.net/download.php?view.22">Download BitTorrent</a><br>
<br>
<br>
<span style="font-weight: bold; font-size: 16px;">Misc Tools</span><br>
<br>
<strong>GFCScape</strong><br>
By Ryan Gregg<br>
Following the tradition of the great PAKScape of old, GFCScape is a nice simple tool for navigating and extracting files from a steam cache file. Note: requires the <a href="http://microsoft.com/downloads/details.aspx?FamilyId=262D25E3-F589-4842-8157-034D1E7CF3A3&amp;displaylang=en">.NET Framework</a>.<br>
<a href="http://nemesis.thewavelength.net/index.php?p=2">Homepage</a> : <a href="http://nemesis.thewavelength.net/files/files/gcfscape129.exe">Download HTTP</a> : <a href="http://torrentstrike.net/download.php?view.19">Download BitTorrent</a><br>
<br>
<strong>Rufio's SDK GUI v1.1</strong><br>
By Russ Farr<br>
A GUI for both VTEX and studiomdl. More features are planned in the future, so keep on eye on it.<br>
<a href="http://sow.thelostprophecies.com/downloads.htm">Homepage</a> : <a href="http://sow.thelostprophecies.com/files/rufio/sdkgui.zip">Download HTTP</a> : <a href="http://torrentstrike.net/download.php?view.27">Download BitTorrent</a><br>
<br>
<strong>Microsoft Visual C++ Toolkit 2003</strong><br>
By Microsoft<br>
The compilers/linkers, C++ runtime libraries, and framework for MSVC++ 2003 Pro. Compile your Source SDK code without having to buy MSVC++. See <a href="http://www.sourcewiki.org/viewtopic.php?t=60">this article</a> for information on how. This process is... optimistic at best, though hypothetically, you should be able to get it to work.<br>
<a href="http://msdn.microsoft.com/visualc/vctoolkit2003/">Homepage</a><br>
<br>
<br>
<br>
That about wraps it up. If you know of any other utilities that specifically help out with Source modding, post them in the comments of this page. A special thanks to all of these wonderful authors for producing tools for the benefit of the community, and thanks to Anarki for hosting the torrents at his site, <a href="http://torrentstrike.net/">Torrent Strike</a>.<br></ul><h1 id="775" name="775" class="book-h2">Tutorials</h1><ul>Tutorials dealing with all aspects of Half-Life 2.
<HR NOSHADE COLOR="black"></ul><h1 id="776" name="776" class="book-h3">Mapping - Hammer 4</h1><ul><p>Hammer 4 Editing Tutorials.</p>
<center><img src="http://www.gamedesign.net/content/half-life2/tutorials/hammer4.jpg" width="350" height="80" border="0" alt="Hammer 4 Valve Copyright"></center></ul><h1 id="777" name="777" class="book-h4">Creating a Skybox</h1><ul><p> The following tutorial has been republished with consent:<br>
- By  <a href="http://www.adamowen.com/"> Adam "Phatsniper" Owen</a></p>
<p>I've seen quite a few threads on various forums already by people who are confused as to how you create a 3D skybox. In this tutorial I'll explain both how to create the 3D skybox itself, and how to get it up and running in game.</p>
<p>Firstly, let's create the 3D skybox.</p>
<p>Load up the map you wish to add the skybox to, or if you don't have one just download mine <a href="http://www.adamowen.com/assets/tuts/3dskybox_ex01.zip">here</a>.</p>
<center><a href="/content/half-life2/tutorials/skybox/sbox01.jpg" target="_blank"><img src="/content/half-life2/tutorials/skybox/sbox01_small.jpg" border="0" vspace="10" hspace="10" alt="Skybox 1"></a></center>
<p>The ground outside of the ruins will later be part of the skybox, I've created this so I know how far out I want the skybox to go. I've also thrown in a spawn point for each team and a light_enviroment.</p>
<p>Add the point entity "sky_camera" at the coordinates 0, 0, 0 (dead center in all 3 views). This is a reference point to align the skybox to your map.</p>
<center><a href="/content/half-life2/tutorials/skybox/sbox02.jpg" target="_blank"><img src="/content/half-life2/tutorials/skybox/sbox02_small.jpg" border="0" vspace="10" hspace="10" alt="Skybox 2"></a></center>
<p>The next step seems awkward at first but after doing it a couple of times it's a breeze. You need to select some "reference" brushes (no models!) to use as a guideline for the scale and position of the skybox. For this example, select the brushes coloured red in the image by ctrl + clicking on each one. You must also add the "sky_camera" entity to the selection!</p>
<p>*<b><i> Please Note</i></b>: In more complex maps you may need to select many "landmarks" including all the outer walls of your map for the position of the skybox and some large buildings etc. for the height. What this selection process is basically doing is defining the major boundries of your map so when it comes to creating the structures in the skybox, you'll have these objects as reference to where and how large you should build. *</p>
<p>Your selection should look like this :</p>

<center><a href="/content/half-life2/tutorials/skybox/sbox03.jpg" target="_blank"><img src="/content/half-life2/tutorials/skybox/sbox03_small.jpg" border="0" vspace="10" hspace="10" alt="Skybox 3"></a></center>
<p>Copy then paste this selection and go to Tools > Transform. Select the Scale button and type .0625 in all 3 fields. This is the decimal value of 1/16th which is the default scale of a 3D skybox.</p>
<center><img src="/content/half-life2/tutorials/skybox/sbox04.jpg" border="0" vspace="10" hspace="10" alt="Transformation"></center>
<br>
<center><a href="/content/half-life2/tutorials/skybox/sbox05.jpg" target="_blank"><img src="/content/half-life2/tutorials/skybox/sbox05_small.jpg" border="0" vspace="10" hspace="10" alt="Skybox 5"></a></center>
<p>Your selection should now look like the above picture. The reason we scaled the brushes right down is because when the source engine renders a 3D skybox it scales everything up by 16 (which will now be the correct size for our map).</p>
<p>Drag these brushes outside the map. It doesn't really matter where, I just move it out and down a couple of thousand units from an edge of the map. Now go ahead and delete the original "sky_camera" entity, but make sure you keep the one inside the 3D skybox!</p>
<p>Now for the fun part, building the skybox! I just edited the large ground sections to make them slope up into the distance ala de_dust, but feel free to experiment!</p>
<center><a href="/content/half-life2/tutorials/skybox/sbox06.jpg" target="_blank"><img src="/content/half-life2/tutorials/skybox/sbox06_small.jpg" border="0" vspace="10" hspace="10" alt="Skybox 6"></a></center>
<p>When you're happy with the result you need to enclose the skybox inside 6 brushes (ceiling, floor and 4 walls, just like a room) and texture it with the "tools\toolsskybox" material. You must make sure there are no gaps in the outer skybox otherwise it won't work.</p>

<center><a href="/content/half-life2/tutorials/skybox/sbox07.jpg" target="_blank"><img src="/content/half-life2/tutorials/skybox/sbox07_small.jpg" border="0" vspace="10" hspace="10" alt="Skybox 7"></a></center>
<p>Now just copy and paste your light_enviroment inside the skybox and delete the reference geometry you don't need. In this case I deleted all of the walls from inside the 3D skybox, and I deleted the ground outside the ruins in the main map.</p>
<center><hr noshade color="#808080" width="75%"></center>
<p>That's the 3D skybox finished! There's still a couple of steps left before we can get it running properly ingame.</p>
<p>Firstly, seal your map with the "tools\toolsskybox" material. This is exactly the same as creating the sky for the 3D skybox, just create walls and ceiling brushes to fully enclose the map.</p>

<center><a href="/content/half-life2/tutorials/skybox/sbox08.jpg" target="_blank"><img src="/content/half-life2/tutorials/skybox/sbox08_small.jpg" border="0" vspace="10" hspace="10" alt="Skybox 8"></a></center>
<p>Last but definately not least is changing the sky texture. Go to Map > Map Properties and click on the field "SkyBox Texture Name". You'll see that the default is "sky_wasteland02", and as of right now that can't be used with Counter-Strike : Source. You can find all the skies you can use by filtering "sky" in the texture browser and typing in the sky name. There are 6 textures for each sky, a front, back, left, right, up and down. You only need to type in the name that appears the most, in this case sky_dust.</p>
<p>Here's a full list of skies you can use. Type them exactly as they appear :</p>
<ul>
<li> cx</li>
<li> de_cobble</li>
<li> de_piranesi</li>
<li> hav</li>
<li> italy</li>
<li> jungle</li>
<li> office</li>
<li> sky_dust</li></ul>
<p>Now just compile your map and providing everything is sealed up, you now have a fully functioning 3D skybox!</p>
<center><a href="/content/half-life2/tutorials/skybox/skybox_final.jpg" target="_blank"><img src="/content/half-life2/tutorials/skybox/skybox_final_small.jpg" border="0" vspace="10" hspace="10" alt="Skybox Final"></a></center>
<p>Thanks for reading and good luck! Don't hesitate to <a href="http://www.adamowen.com/">contact me</a> with any questions or comments!</p></ul><h1 id="1006" name="1006" class="book-h4">Doors in HL2: The prop_door_rotating Entity</h1><ul><p style="text-align: justify;"><img src="content/half-life2/tutorials/prop_door_rotating/dev_door.gif" style="float: left; padding: 10px;" width="256" height="249" alt="dev_door" title="dev_door" />Believe it or not, most doors in HL2 are not func_door or even func_door_rotating. They came up with a better way to do the common door, and that is the prop_door_rotating. This is a much more versatile entity then a func_door_rotating, as it provides better physics and generally just acts more like a door.</p>
<p style="text-align: justify;">In order to make our door, we first need to make our doorway. To do this, we are going to use the <b>/dev/dev_measuredoor01</b> texture. This texture, when properly scaled to .25 for X and Y, shows use the size of a door, and even where the knob will be. Go ahead and make a bush where you want your doorway, 128 units tall and 64 units wide. Fit the texture if you have to, and have a look. The gray area is where you should build the walls around the door, the orange area is what you leave open.</p>
<p style="text-align: justify;">Now for the door. Using the Entity Tool (Shift-E), place a prop_door_rotating in the doorway. The model to use for doors is <b>models/props_c17/door01_left.mdl</b>. This model is great for doors, its standard size, and has many, many skins (more on that later). After you have the door model in, hit apply. Now you have to position the door in the door way, by rotating and moving it. A little tip: hold down Shift while you rotate if you want the door to rotate in 15 unit increments, which helps keep the door flush with the walls around it.</p>
<p style="text-align: justify;">After you have your door in place, there are all sorts of keyvalues to play with. Some of the important ones are:<br></p>
<ul>
<li><b>World Model:</b> The model you are using for the door. Most of the time, you will be using <b>models/props_c17/door01_left.mdl</b>.<br>
<li><b>Skin:</b> Changes the appearance of the door. Takes a number from 0-13, giving you 14 different doors to choose from.<Br>
<li><b>Ajar Angles:</b> Lets you have the door start partway open. Uses Pitch Yaw Roll (YZX), for most doors, you only want to change the middle number, Yaw (Z).<br>
<li><b>Spawn Position:</b> Paired with the above, lets you choose closed, open forward, open backward, and ajar. The ajar value uses the angle you entered in "ajar angles".<br>
<li><b>Hinge Axis:</b> tells the door what invisible line to turn on. Takes a value of two YZX numbers. You can either use the Hammer "helper", the purple ball, to define this by dragging it upward, or you can just make the third number of the second YZX triplicate larger then the third number of the first YZX triplicate. Either way, the end result is that the doors rotates around where its hinges would be.<br>
<li><b>Rotation Distance:</b> How for the door should swing either way. Default is 90, which means the door can open 90 degrees to the back, or 90 degrees to the front.<br>
<li><b>Speed:</b> how fast the door swings. Higher number means a more well oiled door, while lower numbers make for rusty hinges. :)<br>
<li><b>Fully Open Sound:</b> The sound you want to play when the door opens all the way. Like a "clang" or something.<br>
<li><b>Fully Closed Sound:</b> Same as above, but for closed. Perhaps a nice "slam" sound.<br>
<li><b>Moving Sound:</b> Here is where you can make the door squeak.<br>
<li><b>Delay Before Close:</b> How long before the door closes itself. If you are scared of ghosts, set this to -1, that will keep the door open till Gordon decides to close it.<br>
<li><b>Damage Inflicted When Blocked:</b> The amount of damage any creature unlucky enough to get his fingers caught in the door takes. Set from the low (jump around swearing) to the high (gets gibed). Just like when you were a kid, right?<br>
<li><b>Health:</b> Leave at 0 for invincible doors. Give it a value to be able to bust the door in S.W.A.T. style.<br>
<li><b>Locked Sound:</b> Sound to play if you try to open a locked door (see the flags). Something like a rattle sound or "access denied".<br>
<li><b>Unlock Sound:</b> Sound to play if the door isn't locked, like a door handle sound.<br>
<li><b>Force Closed:</b> Nothing will stop the door from closing. Similar to setting the "damage when blocked" to 4000, but not as messy.<br>
</ul>
<p style="text-align: justify;">And then there are the oh-so-important flags:<br></p>
<ul>
<li><b>Starts Open:</b> No brainier here.<br>
<li><b>Starts Locked:</b> The door will not open. It will play the Locked Sound if one is defined. To unlock the door, have an IO send to the "Unlock" input of the door.<br>
<li><b>Door Silent:</b> Another no brainier.<br>
<li><b>Use Closes:</b> When you +use the door, it closes. Assuming its open.<br>
<li><b>Door Silent to NPCs:</b> You can here the door, and so can they. Check this to make them oblivious to the sound of an opening door, as most minions are.<br>
<li><b>Ignore Player +USE:</b> When poor little Gordon comes up to use the door, ignore him!<br>
</ul>
<p style="text-align: justify;">That about wraps up the prop_door_rotating. At the bottom of the document I have a image of the different skins you can use and the corresponding number to enter into "skin". As usual, if you have any questions or comments regarding this article, post here or email me at jeffca51 <b>at</b> yahoo <b>dot</b> com.</p>
<p>
Door skins and thier number to use for the <b>skin</b> atribute:<br></p>
<p><img src="content/half-life2/tutorials/prop_door_rotating/doors.gif" width="500" height="288" alt="doors" title="doors" />
</p></ul><h1 id="1039" name="1039" class="book-h4">Hang 'Em High: phys_ballsocket</h1><ul><h2>Hang 'Em High: phys_ballsocket</h2>
<p>The Source engine features the Havok physics engine, which allows for a number of incredible physical simulations. To facilitate this, there are a number of entities that allow mappers to define the physical relationship between two entities. One of these entities is the phys_ballsocket. Think of it as, well, a ball and socket joint. One entity acts as the anchor, and the other entity is free to move around that anchor at a set distance. In our tutorial we are going to use this entity to hang a corpse.</p>
<h3>Found In</h3>
<p>phys_ballsocket is found in the <a href="/node/1025">Base FGD</a>.</p>
<h3>Tutorial</h3>
<p>First make something in Hammer to hand the corpse from, be it a gallows, a tree, or whatever. I'm just going to use a simple gallows. Under the gallows, make a prop_ragdoll using the Entity Tool (shift-E). Give the ragdoll a <b>name</b> of "deadMan" and a <b>world model</b> of "models/Humans/corpse1.mdl". Now create a move_rope underneath him, and set its <b>next keyframe</b> to "hangRope1" and set its <b>parent</b> to "deadMan". This is the part that makes the rope stay with the corpse. Create a keyframe_rope above the ragdoll, right up at the gallows. Name this "hangRope1". Now, you have a rope that stretches from the gallows to the ragdoll, and will continue to do so even if the ragdoll is moved.</p>
<p>But wait, you say, what about the ballsocket? Well, as it is now, if you were to compile, the ragdoll will fall right to the ground. He will still be attached to the rope, but the rope will simply stretch to allow him to fall. This is where the phys_ballsocket comes in. Create one right where you made you keyframe_rope. Open up its properties and simply set <b>Entity 1</b> to "deadMan". The engine will use the phys_ballsocket as the other entity if you dont specify one. Now the corpse is incapable of moving farther away from the phys_ballsocket then it currently is; however, it may move in a spherical pattern around the phys_ballsocket.</p>
<p>Lets have a look at some of the important values from the phys_ballsocket:<br>
<br>
<ul>
<li><b>Name:</b> Use this to set the name of the phys_ballsocket, useful if you had to trigger the ballsocket; an example of which would have the rope trigger the ballsocket off when it breaks.<br>

<li><b>Entity 1:</b> The first entity to join together.<Br>

<li><b>Entity 2:</b> The second entity to join together.<Br>

<li><b>Constraint System Manager:</b> If you have multiple phys_ constraints acting on our dead man, you would want to make them part of the same system or else they would fight each other. An example would be if you wanted to have our hanging man tethered to a wall and hanging from the gallows.<Br>

<li><b>Force Limit to Break:</b> If the player (or something else) gets particularly frisky with the corpse, you can have the ballsocket stop working (break).<Br>

<li><b>Force Limit to Break:</b> Same as above.<Br>

<li><b>Play Sound on Break:</b> Play a sound when the ballsocket breaks, like a nice snapping sound.<Br>
</ul>
<br>
</p>
<!--break-->
<h3>Technical Data</h3>
<h4>phys_ballsocket</h4>
<div style="margin-left: 25px; padding: 10px; background-color: #cccccc; border: 2px solid #000000; font-size: small; font-family: monospace; width: 480px;">
<b style="text-decoration: underline;">KEYS</b><br>
<br>
<b>Name</b> targetname <i>target_source</i><br>
<br>
<b>spawnflags</b> spawnflags <i>flags</i> <br>
<br>
<b>Entity 1</b> attach1 <i>target_destination</i><br>
<br>
<b>Entity 2</b> attach2 <i>target_destination</i><br>
<br>
<b>Constraint System Manager</b> constraintsystem <i>target_destination</i><br>
<br>
<b>Force Limit to Break (lbs)</b> forcelimit <i>float</i><br>
<br>
<b>Torque Limit to Break (lbs * distance)</b> torquelimit <i>float</i><br>
<br>
<b>Play Sound on Break</b> breaksound <i>sound</i><br>
<br>
<br>
<b style="text-decoration: underline;">INPUTS</b><br>
<br>
<b>Kill:</b> Removes this entity from the world.<br>
<br>
<b>KillHierarchy:</b> Removes this entity and all its children from the world.<br>
<br>
<b>AddOutput:</b> <i>string</i> Adds an entity I/O connection to this entity. Format: output name targetname:inputname:parameter:delay:max times to fire (-1 == infinite). Very dangerous, use with care.<br>
<br>
<b>FireUser1:</b> Causes this entity's OnUser1 output to be fired.<br>
<br>
<b>FireUser2:</b> Causes this entity's OnUser2 output to be fired.<br>
<br>
<b>FireUser3:</b> Causes this entity's OnUser3 output to be fired.<br>
<br>
<b>FireUser4:</b> Causes this entity's OnUser4 output to be fired.<br>
<br>
<b>Break:</b> Force the constraint to break.<br>
<br>
<b>TurnOn:</b> Enable the constraint.  Do this when the objects don't exist when the constraint spawns - or when you have deactivated the constraint.  Broken constraints can NOT be turned on.  They have been deleted.<br>
<br>
<b>TurnOff:</b> Disable this constraint.<br>
<br>
<br>
<b style="text-decoration: underline;">OUTPUTS</b><br>
<br>
<b>OnUser1:</b> Fired in response to FireUser1 input.<br>
<br>
<b>OnUser2:</b> Fired in response to FireUser2 input.<br>
<br>
<b>OnUser3:</b> Fired in response to FireUser3 input.<br>
<br>
<b>OnUser4:</b> Fired in response to FireUser4 input.<br>
<br>
<b>OnBreak:</b> Fired when the constraint breaks.<br>
<br>
</div></ul><h1 id="1013" name="1013" class="book-h4">Hidden and Dangerous: npc_sniper</h1><ul><p style="text-align: justify;"><img src="content/half-life2/tutorials/npc_sniper/sniper.gif" style="float: left; padding: 10px;" width="256" height="253" alt="Sniper" title="Sniper" />One of the cooler enemies in Half-Life 2 was the npc_sniper. Your invisible foe, firing well aimed leaded death from the other end of a blue laser. Getting these guys into the game is fairly simply, but getting them to work well takes a few more entities then just a npc_sniper.</p>
<p style="text-align: justify;">The first thing to do is make your sniper's nest. The nest should be fairly high up, but close enough to the ground to make shoving a grenade down his throat easy. Make it (at least) about 80 units tall and 48 units wide/deep. Cutting out the window from a texture works well for making a room large enough, and as a plus, it actually looks like he is inside a window. Now, do not put a light source in the room, snipers are not meant to be seen, and they look pretty bad if they are. Between shots their &quot;idle&quot; animation is the same as their ragdoll, so unless you want a sniper that plays &quot;airplane&quot; between shots, keep it dark.</p>
<p style="text-align: justify;">The next step is to place the sniper in the nest. Using the entity tool (Shift-E), simply place a <span style="font-weight: bold;">npc_sniper</span> in the nest, away from the walls and close to the opening. Rotate the sniper to face out the window. Now, the sniper has a few keyvalues that you may find useful:</p>
<ul>
<li><span style="font-weight: bold;">Squad Name:</span> If this is set to the same as some troops on the ground, and the Wake Squad attribute is set on all of them, the sniper will alert the troops to your presence when he sees you, (or visa-versa).</li>
<br><br>
<li><span style="font-weight: bold;">Initial Misses:</span> How many times the sniper should miss you when he firsts sees you. You should probably make this 1, as its no fun to get pw0ned before you even see the enemy.</li>
<br><br>
<li><span style="font-weight: bold;">Beam Brightness:</span> How bright to make the &quot;blue laser of death&quot;.</li>
<br><br>
<li><span style="font-weight: bold;">Bullet Shield Distance:</span> Turns out bullets don't hurt snipers. This and the Bullet Shield Radius control how large of a shield of protection these guys have. The default value works well.</li>
<br><br>
</ul>
<p>This guy pretty much uses standard flags, you really shouldn't have to mess with any of them.</p>
<p style="text-align: justify;">So, now that we have the sniper, lets make him more dramatic. In the opening you made for him to shoot out of, make a thin brush covered with <span style="font-weight: bold;">tools/NODRAW</span>. Using the Texture Application Tool (shift-A) change the face that faces outward from the sniper into a nice partially transparent window textures, like glass/glasswindow002c. Resize it to look less like glass and more like just a frame, then tie it to a <span style="font-weight: bold;">func_illusionary</span> with a render mode of <span style="font-styler: italic;">solid</span> and a render amount of <span style="font-styler: italic;">255</span>. This will make the glass panels transparent, but will leave the bars. Give the <span style="font-weight: bold;">func_illusionary</span> a name, like <span style="font-styler: italic;">sniperwindow</span>. You will use the name to destroy the window, by having an output on the sniper's OnDeath target the <span style="font-weight: bold;">func_illusionary</span>'s Input of Kill. Sniper dies (which will happen by explosion), the window frame is gone.</p>
<p style="text-align: justify;">Now, one last step that no sniper can be without is the <span style="font-weight: bold;">phys_ragdollmagnet</span>. This is the physics entity that, after the sniper is dead, will pull his corpse out of his nest, sending him tumbling towards the ground in true Hollywood fashion. Simply place one of the these bad boys to the front and down a little from the sniper, out in the open air. Make sure the &quot;effective radius&quot; is high enough to envelope our sniper, and give the &quot;force&quot; key a reasonable value, like 5000.</p>
<p style="text-align: justify;">Well, we are done. When the sniper sees Gordon he will attempt to kill him, at which time Gordon throws a grenade into the window and sends our poor sniper plummeting to his death. Doesn't get any better then lasers and falling corpses. As usual, if you have any questions or comments about this article, post them here or email me at jeffca51 <span style="font-weight: bold;">at</span> yahoo <span style="font-weight: bold;">dot</span> com. Any other mapping questions can be directed to the <a href="http://forums.gamedesign.net/viewforum.php?f=9">Half-Life 2</a> or <a href="http://forums.gamedesign.net/viewforum.php?f=31">Hammer</a> forums.</p>
</ul><h1 id="780" name="780" class="book-h4">Import Custom Textures</h1><ul><p>The following tutorial has been republished with consent:<br>
- By  <a href="http://www.adamowen.com/"> Adam "Phatsniper" Owen</a></p>
<p>It seems the new material system has caused some confusion within the community, so here's a basic guide to get your custom textures working.</p><!--break-->
<p>I'm going to be using Adobe Photoshop 7, but any image editing program with the ability to export to Targa (.tga) will suffice. <br><i>Please note, in order to save .tgas with alpha channels in Photoshop 7 you will need <a href="http://www.adobe.com/support/downloads/detail.jsp?ftpID=1544" target="_blank">this bug fix</a>.</i></p>
<p>Open your image in Photoshop and go to File > Save As and save it to a sub directory inside your SDK's materialsrc directory.</p>
<p> For example :</p>
<code> "Steam\SteamApps\USERNAME\sourcesdk\cstrike_sample_content\materialsrc\test"</code>
<p>You can choose any folder name you like, I just called mine test. In the window that pops up select "24 bits/pixel", turn off "Compress (RLE)" and hit Ok.</p>
<center><img src="http://www.gamedesign.net/content/half-life2/tutorials/textureimport/cmat01.jpg" width="233" height="154" vspace="6" hspace="6" border="0" alt="Targa options"></center>
<p>Open up Windows Explorer and browse to the materialsrc directory, copy the new folder you made containing your texture, and paste it in your: </p>
<code> "sourcesdk\cstrike_sample_content\materials" directory".</code>
<p> Finally, browse back into your<code> "materialsrc\test</code> (or whatever you called it) directory and move it out the way / minimize it for now.
<p> Ok now we've got the folders set up we can go ahead and create the .vtf file. We do this by running the "vtex.exe" program that resides in your "sourcesdk\bin" directory.</p>
<p>Open a <b>new</b> Windows Explorer and browse to:</p><code>"Steam\SteamApps\USERNAME\sourcesdk\bin"</code><p> Now re-open your sub folder and drag your .tga file across to the other window and drop it onto the file "vtex.exe". A Command Prompt window will pop up and create a .vtf file of your texture. Don't worry when the message about a missing file appears, it will create the empty .txt file you need. Just hit spacebar when it's finished to get rid of the window.</p>
<p>We're nearly there now, just a couple more things left to do.</p>
<p>Close the "sourcesdk\bin" window and browse to </p><code> "sourcesdk\cstrike_sample_content\materials\test"</code>.
<p>  Right click and select New > Text Document. This is going to be our .vmt file that you use to set which shaders will be applied to the .vtf texture.</p>
<p>To keep things simple just paste this into the document :</p>
<code>
<font color="#ff0000">"LightmappedGeneric"<br>
{<br>
 "$basetexture" "test/test01"<br>
}</font>
</code><br><br>
<p>This tells the engine to render the texture with lightmapping.</p>
<p>Save the file, close it and then rename it to "test01.vmt". Last thing to do is copy your</p><code> "sourcesdk\cstrike_sample_content\materials\test"</code><p>folder and paste it in:</p> <code>"Steam\SteamApps\USERNAME\counter-strike source\cstrike\materials"</code>
<p>We're done! Load up Hammer and your texture will be in the texture browser.</p>
<p>Of course, this is just scratching the surface on what you can do with materials. You can change surface types, sounds, shaders and even physics properties. I know the new system is a bit fiddly but I do find it helpful to have all your textures imported and sorted automatically as folders.</p>
<p>Thanks for reading and good luck!<br> As usual don't hesitate to <a href="http://www.adamowen.com/contact.htm">contact me</a> with any questions or comments!</p></ul><h1 id="1016" name="1016" class="book-h4">Making Props Show Up</h1><ul><p>After the long wait, you are excited to finally make maps for HL2. You fire up Hammer, make a room, and think it would be cool to have a bunch of props. You add them in, compile, and... they aren't there. What happened?</p>
<p>The most common reason for props not showing up in the game has to do with how props describe themselves to the game engine. Each prop has a number of attributes built right into it, including what type of prop it should be. For example, most of the vehicle props have two versions: one designed for use as a <i>prop_static</i>, and one designed for use as a <i>prop_physics</i>.</p>
<p>The reason the prop didn't show up in the game is that you have mismatched its type. If you attempt to use a prop intended for use as a <i>prop_dynamic</i> as a <i>prop_physics</i>, it will not show up; the same applies to a <i>prop_physics</i> being used as a <i>prop_dynamic</i>. I currently do not know if there is a way to check the prop type ahead of time, beyond if it tells you in the name.</p>
<p>If you really want to use a prop for a type it's not designed for, you're in luck; there's a way to do it. The <i>prop_dynamic_override</i> and the <i>prop_physics_override</i> entities allow you to override the built-in prop information, forcing it to be the type of your choosing. There is a downside to this: by overriding the built-in information, you are losing all of the built-in information, including some potentially useful information such as mass and buoyancy, so use the overrides only when you have to.</p>
<p>In case you're wondering why <i>prop_static</i> has no "prop_static_override", it's because <i>prop_static</i> already overrides all of the built-in information in a prop. All the of the weight and physics info in a prop is useless to a <i>prop_static</i>: it doesn't move.</p>
<p>While wrong prop type certainly seems to be the most frequent reason for props not showing up, there are other common ways. If you have had problems with <i>prop_static</i>, particularly small ones, and <i>prop_detail</i> not showing up, there is another source (pun intended) for this problem: the Source engine is great at scaling back graphics for performance. If you have a DirectX 7 video card, the engine does not display <i>prop_detail</i> models. The engine also fades out props based on their size; smaller props fade out sooner. I have had some small <i>prop_static</i> models that were about twelve feet up a wall, and it took me forever to figure out why they weren't showing up in-game. Turned out the engine was fading them from that distance, so that I couldn't even see them when I jumped. The solution is to adjust the fadescale attribute in the prop's properties.</p>
<p>The start/end fade distance can also be the source of your problems. The default value for the end fade distance in Hammer is 0 and the start fade distance is -1. The -1 means that the prop will not "fade" out the closer you get to the end fade distance, it will simply disappear. The value of 0 for end fade distance means that the prop will not fade out. If this value is set for something really small, this may be the source of your trouble. This is easily done by accidentally dragging the "helper" in Hammer, this sets it to some other number, making the prop only visible within the sphere of the "helper", which may be smaller then the prop's bounding box. Another related problem is the Screen Space Fade on <i>prop_static props</i>. This attribute can set the prop to disappear based on how large the object is on-screen; how many pixels it is. Lets say you want the prop to fade out if you are 1024 pixels away from it, but you accidentally turn on "Screen Space Fade". Now, the prop will fade out if it takes up less then 1024 pixels on screen, not what you intended. So make sure this is set to "no" unless your actually trying to use it.</p>
<p>In conclusion, there are a multitude of ways to not have a prop show up. Luckily, most of the common ways have been caught be the community and we have solutions for them. If you are still confused or if you have any questions, you can post a comment here or email me at jeffca51 <b>at</b> yahoo <b>dot</b> com.</p></ul><h1 id="1010" name="1010" class="book-h4">Practical Displacements</h1><ul><p>Displacements grant users the ability to "paint" surfaces, allowing for more realistic terrain. On problem with this is that it is difficult for newer users to meld  these chaotic surfaces into their very ordered brush based maps. I'll go through a few ways to control your displacements more precisely. For information on displacement basics, check out the <a href="http://www.valve-erc.com/srcsdk/Levels/displacements.html">Official SDK Doc</a> on displacements.</p>
<p>To start with, when you make a brush and turn the top side into a displacement, that edge is considered "0" height. You can go up or down from this height. Now, lets say our displacement has to line up with the brushes next to it, but when we go painting it, we always end with the edges above the surrounding brushes. Moving them down can fix this, but we can end up under the zero-level or slightly above it. In order to control exactly what elevation a vertex in a displacement ends up, we are going to use the "Raise To" tool under displacements. Set the slider to 0, then simply click each of the edge vertices. Each time you click a vertex on the displacement, it is moved to the zero level. As you have guessed, this is also useful for things like ramps, when you have a 32 unit high brush next you displacement, and you want the displacement to act a ramp. You would simply type 32 in the box next to the slider, and up it goes to the proper level. It should probably be called the "raise/Lower To" tool; it is often handy at lowering a displacement.</p>
<p>As you can tell in the previous paragraph, you can set numbers for "raise to" that are not on the slider. This lets you go above 30 units, to match a 32 unit high brush. What you can also do, though, is specify a negative number here. Lets say our displacement is around a bunch of other brushes, and the edges, though at 0, are showing up very obviously in game. A solution for this is to lower the edge vertices of the displacement to -1. Simply type -1 in the box next to the slider, and click the vertices, they are now below the zero point. You also need to extend the brushes around the displacement over the displacment's brush. The displacement will have its bottom underneath the brushes, getting rid of that nasty "square" look.</p>
<p>Another great use of displacements is for their alpha properties. This lets you smoothly transition between two textures on the displacement, good for hills and the like where the side of the hill has a different amount of vegetation then the top. However, this is also useful for normal brushes, like a piece of ground with a path on it. Instead of making a path texture, you can have your displacement texture that uses a grass texture and a dirt texture. By turning this surface into a displacements, you can "paint" the dirt path onto the grass. You can use this for many things besides a path, like mold on walls.</p>
<p>Displacements are a great tool that save mappers loads of time otherwise spent in vertex manipulation with tons of triangles. In the hands of the untrained, though, it can be unruly and prone to looking like crap when mixed with normal brushes. Fortunately, we now know how to instill a little order into them. If you have any questions or comments about the article, please post here or send me an email at jeffca51 at yahoo dot com. Any further questions about mapping in general can be directed to the <a href="http://forums.gamedesign.net/viewforum.php?f=9">Half-Life 2</a> or <a href="http://forums.gamedesign.net/viewforum.php?f=31">Worldcraft/Hammer</a> forums.</p>
</ul><h1 id="1068" name="1068" class="book-h4">Real Constructive: Hammer Geometry for Unreal Mappers</h1><ul><p>If your reading this, you're probably are like me, in that you started with Unreal engine based games and eventually found your way over to the Quake side of the fence. There are some rather radical difference between mapping in UnrealEd and mapping in Hammer, though. So, let's be constructive and get to it. ;) </p>
<p>The primary difference between all Quake and Unreal games is the way the engine handles geometry. Unreal uses what is called Subtractive Geometry. You start out with a huge expanse of solid world. From there, you use assorted shapes to carve pieces out of that world to create your level. Quake based games, on the other hand, use Constructive Solid Geometry (CSG). This is where you start out with a large piece of absolutely nothing, called the VOID. Your job as a mapper is to use solid blocks to construct a volume of VOID that is separate from the rest of the VOID. Confused&#63; Lets take a more visual approach.</p>
<p>This is a picture of the void, as seen in Hammer.</p>
<p style="text-align: center;"><img src="content/half-life2/tutorials/real/void.gif" width="176" height="176" alt="Nothing. Abolute nothing." title="Nothing. Abolute nothing." /></p>
<p>Not much to look at, is it&#63; Think of it as outer space (or Bill Gate's soul). You need to build a &quot;spaceship&quot; that will protect poor little Gordon from the harsh vacuum of space. Do do this, you need to build barriers. These are called &quot;brushes&quot; in quake based games.  By adding brushes, you can construct areas that are completely sealed off from the VOID.</p>
<p>Before we go any further, you need to know a couple rules about brushes.</p>
<p>1. Brushes ABSOLUTELY have to be convex (oposite of concave). This means that if you were to draw a line through the brush at any given point, it will only hit TWO planes (or edges) of the brush. Here's a visual:</p>
<p style="text-align: center;"><img src="content/half-life2/tutorials/real/convex_concave.gif" width="256" height="150" alt="a square is convex. a &quot;L&quot; is not."  title="a square is convex. a &#038;quotL&#038;quot is not." /></p>
<p>See how that works&#63; The blue line is our imaginary line. On the first shape, it is impossible to have the strait line cross more then 2 sides. On the latter two shapes, however, its fairly easy.</p>
<p>2. Brushes are made out of planes. These planes need to be unique to the brush; you cannot have a duplicate plane in a brush. If you do, its called &quot;coplanar&quot;. And, the visual:</p>
<p style="text-align: center;"><img src="content/half-life2/tutorials/real/coplanar.gif" width="256" height="150" alt="Coplanar" title="Coplanar" /></p>
<p>The red dots are vertices (technically, in this example, edges) and the lines in between them are (portions of)  planes. The brush on the left is perfectly valid. The brush on the right has two planes that are on the same plane. There is no reason to have a brush like this, and it will generate an error.</p>
<p>Now that you know how brushes are to be made, let's make a couple. We are going to make one of the more simple kinds of brushes, a cube. With a new map open in Hammer, press Shift-B to use the Block Tool. In a 2D view, drag to create an outline. Notice how it updates on all the views. When you are satisfied with the size of the outline, hit enter. This will change the outline into a brush. It is just a piece of solid matter floating in a VOID. Now make 5 more brushes, each to be one side of a square room (4 walls, ceiling and floor). It should look like this:</p>
<p>See how you have constructed some solid geometry to seal an area off from the VOID&#63; By making many of these brushes, often thousands, you can shape entire worlds out of the VOID. But wait, you say. What happens if I defy the Gods of Mapping and don't completely seal off my area&#63; What are they going to do about it&#63; Good questions.</p>
<p>Should you choose (or accidentally stumble upon) the path of unrightesness and create a map that isn't sealed off from the VOID, the Gods will cause a plague called a &quot;leak&quot; to befall your map. To visualise this, lets think of the inside of our space ship-world as being filled with air, while the VOID has none. If there were a hole, all the air would leak out into the void, would it not? Same idea here, but fortunately Gordon won't suffocate. He will most likely lag though. Without the world completely sealed off, VIS can't do its job. VIS is the program that computes the visibility of different parts of the engine. It is VIS that tells your basement that it can't see your bedroom upstairs. Without VIS, your entire map is visible from any part of your map. Obviously, this is very bad. Luckily, if you do get a LEAK LEAK LEAK error when you compile your map, you can go to Map->Load Pointfile to see a nice red line that will show you the hole that your map is leaking through. Repent and fix your transgression.</p>
<p>Hope this gives you a good start on how to get started with Hammer after coming over from UnrealEd. I know it took a bit to get used to when I did. But don't worry, using this basic knowledge you should be able to build your way up to a very constructive future. As usual, if you have any questions related to this article, go ahead and post in the <a href="http://forums.gamedesign.net/viewforum.php?f=31">Hammer Forums</a> or send me an email at jeffca51 at yahoo.</p></ul><h1 id="1033" name="1033" class="book-h4">The Tangled Web We Weave: Ropes in HL2</h1><ul><h2>The Tangled Web We Weave: Ropes in HL2</h2>
<p>Half-Life 2 provides many outstanding visual features, including cables(ropes). The cables swing in the wind and get disturbed by passing airships. They can also snap at the end or have objects swing on them. Lets get down to learning about them.</p>
<h3>Found In</h3>
<p>Ropes are found in the <a href="/node/1025">Base FGD</a>.</p>
<h3>Tutorial</h3>
<p>There are two base entities used to create ropes, move_rope and keyframe_rope. They are both found in the base.fgd. The move_rope entity is what starts the rope, the keyframe_rope defines each piece of the rope. We are going to learn about ropes today by making power cables. Open up your map in hammer. First, we need to place the power cables. These will be prop_static entities with the <b>world model</b> set to <b>models/props_c17/utilitypole03a.mdl</b>. Make two of these. Now we create the cable. </p>
<p>Using the entity tool, (shift-E), place a move_rope near the end of one of the arms on the first power pole. Now the move_rope has a number of key/values you can adjust:<br>
<br>
<ul>
   <li><b>Parent:</b> Used if you want to make the rope's start point move with another entity. You simple enter the name of another entity here, and the rope's start point moves with it.<br>
   
   <li><b>Next KeyFrame:</b> The keyframe_rope that this rope is going to. You always want you keyframe_rope names to end in a number, so that Hammer can auto-increment them if you decide clone (drag-shift) your keyframes to make more segments of rope. For our example, this will be <b>rope1key1</b>.<br>
   
   <li><b>Slack:</b> How much additional length to add to the rope. For example, if our move_rope is 512 units away from our keyframe_rope and we have value of 64 here, the total length of the rope will be 576 units, which will cause the rope to hang down between the points. The default value works fine for power lines.<br>
   
   <li><b>Type:</b> Make the rope act like a rope or like a piece of solid metal. The <b>rigid</b> setting may be useful for hanging things like lights from. We are going to leave this at <b>Rope</b> for our power lines.<br>
   
   <li><b>Subdivision:</b> How many segments the rope should have between the start and end points. A higher value would make a smoother rope, but at a hit to performance.<br>
   
   <li><b>Width:</b> How thick the rope is. For power lines, 2 or 3 is fine. You may want to increase it larger for things like suspension cables on bridges, but be warned that the end points tend to look funky the thicker the rope is.<br>
   
   <li><b>Collide with World:</b> If the rope should have collisions. Usually not needed for high up power lines, however, if you were to have things down where the player can get to them or if you were going to break the rope, you may want to turn this on. You would also want this on if you plan on making the rope detachable or breaking it at any point, else it will clip through brushes.<br>
   
   <li><b>Start Dangling:</b> when a rope breaks, its "dangles". The rope will still be attached to its start point, but not its end point. We want intact power lines, so leave this as no.<br>
   
   <li><b>Breakable:</b> Set this to yes to be able to shoot the ends of the rope to make that end detach.<br>
   
   <li><b>Rope Material:</b> Default is black cable, should you want fiber rope or even blue CAT-5 cable, you will need to specify a different material here.<br>
   
</ul>
And there is one key to worry about:

<ul>
   <li><b>Auto Resize:</b> Set this to make the rope make itself short or longer depending on the distance of its end point. Other wise, if the endpoint moves, the rope will pull tight or increase in slack.<br>
   
</ul>
</p>
<p>Now, place a keyframe_rope at the end of the same arm of the other power pole. Open up its properties, and set the <b>name</b> to <b>rope1key1</b>. The properties are the same as for the move_rope, and will effect the next segment of rope should you make more then two power poles. You should now see a green to red line between the two points. This is Hammer's approximation of what you rope will look like in game. I find it to have a little more slack then you will actually have in game. But now our cable is done. To fill in the rest of the cables on the power poles, simple repeat the steps replacing "rope1" with "rope2", "rope3", etc for each of the name properties. Should you wish to add more power poles, simply select all of the keygrame_rope entities and the prop_static power pole, and drag them while holding shift. Hammer should automatically change the names for you, and you have a quick and easy continuation of your power lines.</p>
<h3>Tips and Tricks</h3>
<ul>
<li>To make something attached to the end of a rope, simple set that entity as the parent of the keyframe_rope. A phys_ballsocket or phys_lengthconstraint with the entity 1 set to the move_rope and entity 2 set to the entity you want attached to the rope.
</ul>
<br>

<h3>Technical Data</h3>
<h4>move_rope</h4>
<div style="margin-left: 25px; padding: 10px; background-color: #cccccc; border: 2px solid #000000; font-size: small; font-family: monospace; width: 480px;">
<b style="text-decoration: underline;">KEYS</b><br>
<br>
<b>Name</b> targetname <i>target_source</i><br>
<br>
<b>Parent</b> parentname <i>target_destination</i><br>
<br>
<b>Next KeyFrame</b> NextKey <i>target_destination</i><br>
<br>
<b>Speed (units per second)</b> MoveSpeed <i>integer</i><br>
<br>
<b>Minimum DX Level</b> mindxlevel <i>choices</i> <br>
<br>
<b>Maximum DX Level</b> maxdxlevel <i>choices</i><br>
<br>
<b>spawnflags</b> spawnflags <i>flags</i><br>
<br>
<b>Slack</b> Slack <i>integer</i><br>
<br>
<b>Type</b> Type <i>choices</i><br>
<br>
<b>Subdivision</b> Subdiv <i>integer</i><br>
<br>
<b>Barbed</b> Barbed <i>choices</i><br>
<br>
<b>Width (1-64)</b> Width <i>string</i><br>
<br>
<b>Texture Scale</b> TextureScale <i>string</i><br>
<br>
<b>Collide with world</b> Collide <i>choices</i><br>
<br>
<b>Start Dangling</b> Dangling <i>choices</i><br>
<br>
<b>Breakable</b> Breakable <i>choices</i><br>
<br>
<b>Rope Material</b> RopeMaterial <i>material</i><br>
<br>
<b>Position Interpolator</b> PositionInterpolator <i>choices</i><br>
<br>
<br>
<b style="text-decoration: underline;">INPUTS</b><br>
<br>
<b>Kill</b> Removes this entity from the world.<br>
<br>
<b>KillHierarchy</b> Removes this entity and all its children from the world.<br>
<br>
<b>AddOutput</b> <i>string</i> Adds an entity I/O connection to this entity. Format: output name targetname:inputname:parameter:delay:max times to fire (-1 == infinite)>. Very dangerous, use with care.<br>
<br>
<b>FireUser1</b> Causes this entity's OnUser1 output to be fired.<br>
<br>
<b>FireUser2</b> Causes this entity's OnUser2 output to be fired.<br>
<br>
<b>FireUser3</b> Causes this entity's OnUser3 output to be fired.<br>
<br>
<b>FireUser4</b> Causes this entity's OnUser4 output to be fired.<br>
<br>
<b>SetParent</b> <i>string</i> Changes the entity's parent in the movement hierarchy.<br>
<br>
<b>SetParentAttachment</b> <i>string</i> Change this entity to attach to a specific attachment point on its parent. Entities must be parented before being sent this input. The parameter passed in should be the name of the attachment.<br>
<br>
<b>ClearParent</b> Removes this entity from the the movement hierarchy, leaving it free to move independently.<br>
<br>
<b>SetScrollSpeed</b> <i>float</i> Set the speed at which the texture scrolls.<br>
<br>
<b>SetForce</b> <i>string</i> Apply a force instantaneously to the rope. The parameter should be a vector containing the force to be applied (X Y Z).<br>
<br>
<b>Break</b> Break the rope, if it's marked to do so.<br>
<br>
<br>
<b style="text-decoration: underline;">OUTPUTS</b><br>
<br>
<b>OnUser1</b> Fired in response to FireUser1 input.<br>
<br>
<b>OnUser2</b> Fired in response to FireUser2 input.<br>
<br>
<b>OnUser3</b> Fired in response to FireUser3 input.<br>
<br>
<b>OnUser4</b> Fired in response to FireUser4 input.<br>
<br>
<br>
<b style="text-decoration: underline;">Code</b><br>
<b>\src\cl_dll\c_rope.cpp</b><br>
</div>
<br>
<br>
<h4>keyframe_rope</h4>
<div style="margin-left: 25px; padding: 10px; background-color: #cccccc; border: 2px solid #000000; font-size: small; font-family: monospace; width: 480px;">
<b style="text-decoration: underline;">KEYS</b><br>
<br>
<b>Name</b> targetname <i>target_source</i><br>
<br>
<b>Parent</b> parentname <i>target_destination</i><br>
<br>
<b>Next KeyFrame</b> NextKey <i>target_destination</i><br>
<br>
<b>Speed (units per second)</b> MoveSpeed <i>integer</i><br>
<br>
<b>Minimum DX Level</b> mindxlevel <i>choices</i> <br>
<br>
<b>Maximum DX Level</b> maxdxlevel <i>choices</i><br>
<br>
<b>spawnflags</b> spawnflags <i>flags</i><br>
<br>
<b>Slack</b> Slack <i>integer</i><br>
<br>
<b>Type</b> Type <i>choices</i><br>
<br>
<b>Subdivision</b> Subdiv <i>integer</i><br>
<br>
<b>Barbed</b> Barbed <i>choices</i><br>
<br>
<b>Width (1-64)</b> Width <i>string</i><br>
<br>
<b>Texture Scale</b> TextureScale <i>string</i><br>
<br>
<b>Collide with world</b> Collide <i>choices</i><br>
<br>
<b>Start Dangling</b> Dangling <i>choices</i><br>
<br>
<b>Breakable</b> Breakable <i>choices</i><br>
<br>
<b>Rope Material</b> RopeMaterial <i>material</i><br>
<br>
<b>Position Interpolator</b> PositionInterpolator <i>choices</i><br>
<br>
<br>
<b style="text-decoration: underline;">INPUTS</b><br>
<br>
<b>Kill</b> Removes this entity from the world.<br>
<br>
<b>KillHierarchy</b> Removes this entity and all its children from the world.<br>
<br>
<b>AddOutput</b> <i>string</i> Adds an entity I/O connection to this entity. Format: output name targetname:inputname:parameter:delay:max times to fire (-1 == infinite)>. Very dangerous, use with care.<br>
<br>
<b>FireUser1</b> Causes this entity's OnUser1 output to be fired.<br>
<br>
<b>FireUser2</b> Causes this entity's OnUser2 output to be fired.<br>
<br>
<b>FireUser3</b> Causes this entity's OnUser3 output to be fired.<br>
<br>
<b>FireUser4</b> Causes this entity's OnUser4 output to be fired.<br>
<br>
<b>SetParent</b> <i>string</i> Changes the entity's parent in the movement hierarchy.<br>
<br>
<b>SetParentAttachment</b> <i>string</i> Change this entity to attach to a specific attachment point on its parent. Entities must be parented before being sent this input. The parameter passed in should be the name of the attachment.<br>
<br>
<b>ClearParent</b> Removes this entity from the the movement hierarchy, leaving it free to move independently.<br>
<br>
<b>SetScrollSpeed</b> <i>float</i> Set the speed at which the texture scrolls.<br>
<br>
<b>SetForce</b> <i>string</i> Apply a force instantaneously to the rope. The parameter should be a vector containing the force to be applied (X Y Z).<br>
<br>
<b>Break</b> Break the rope, if it's marked to do so.<br>
<br>
<br>
<b style="text-decoration: underline;">OUTPUTS</b><br>
<br>
<b>OnUser1</b> Fired in response to FireUser1 input.<br>
<br>
<b>OnUser2</b> Fired in response to FireUser2 input.<br>
<br>
<b>OnUser3</b> Fired in response to FireUser3 input.<br>
<br>
<b>OnUser4</b> Fired in response to FireUser4 input.<br>
<br>
<br>
<b style="text-decoration: underline;">Code</b><br>
<b>\src\cl_dll\c_rope.cpp</b><br>
</div>
<br>
<br>
</ul><h1 id="779" name="779" class="book-h4">Using the Nodraw Texture</h1><ul><p>The following tutorial has been republished with consent:<br>
- By  <a href="http://www.adamowen.com/"> Adam "Phatsniper" Owen</a></p>
<p>One of the great features of Half-Life 2 is the ability to import highly detailed models from software such as XSI and 3D Studio Max to use in your levels. <br>
Using these models is much more efficient than creating the detail with normal brushes, and because models don't split BSP geometry, you can intersect walls / floors etc. with them.<br> <!--break-->
Unfortunately, the brush faces behind the model are still being drawn by the engine despite the player not seeing them. </p>
<p>This is where the nodraw texture comes into play.</p>
<p>If a face is textured with the "tools/toolsnodraw" texture the Source engine will not render them, thus lowering the face count and speeding up gameplay. You apply this texture just like any normal material, using the texture application tool and applying the nodraw texture to the faces you don't want the engine to draw.</p>
<p>The nodraw texture :</p>
<center><a href="http://www.gamedesign.net/content/half-life2/tutorials/nodraw/nodraw01.jpg" target="_blank"><img src="http://www.gamedesign.net/content/half-life2/tutorials/nodraw/nodraw01_small.jpg" width="300" height="217" border="0" alt="Nodraw 1"></a></center>
<p>So, when will you want to use the nodraw texture?</p>
<p>There are many possible situations for this tool and I'll show you a couple of examples here.</p>
<p>The first use is on faces the player should never see, especially the roofs of buildings.</p>

<center><a href="http://www.gamedesign.net/content/half-life2/tutorials/nodraw/nodraw02.jpg" target="_blank"><img src="http://www.gamedesign.net/content/half-life2/tutorials/nodraw/nodraw02_small.jpg" width="300" height="217" border="0" alt="Nodraw 2"></a></center>
<p>As you can see in the above image, there are a few faces that the player can't see during normal gameplay so we'll apply the nodraw texture to them.</p>

<center><a href="http://www.gamedesign.net/content/half-life2/tutorials/nodraw/nodraw03.jpg" target="_blank"><img src="http://www.gamedesign.net/content/half-life2/tutorials/nodraw/nodraw03_small.jpg" width="300" height="217" vspace="10" hspace="10"  border="0" alt="Nodraw 3"></a></center>
<p>We've saved the engine from drawing 14 faces here, and while that might not seem such a major difference, complex maps will highly benefit from not drawing roofs and other high objects.</p>
<p>One thing I must mention is balancing the nodraw texture. This example would be great for a single player level if there are no high windows to look out of. The main problem comes from multiplayer games, especially team based mods which make heavy use of the freelook spectator camera. Of course, when you are spectating graphics aren't a major issue, but it can look strange if lower faces such as the top of the bottom walls aren't there (you'll see straight through those faces). I leave this to your own discretion, but it's something to keep in mind.</p>
<p>The other example I mentioned earlier is applying the nodraw texture to faces hidden by models. Here is a doorway with the model prop, and without :</p>
<center><a href="http://www.gamedesign.net/content/half-life2/tutorials/nodraw/nodraw04.jpg" target="_blank"><img src="http://www.gamedesign.net/content/half-life2/tutorials/nodraw/nodraw04_small.jpg" width="300" height="217" vspace="10" hspace="10" border="0" alt="Nodraw 4"></a><a href="http://www.gamedesign.net/content/half-life2/tutorials/nodraw/nodraw05.jpg" target="_blank"><img src="http://www.gamedesign.net/content/half-life2/tutorials/nodraw/nodraw05_small.jpg" width="300" height="217" vspace="10" hspace="10"  border="0" alt="Nodraw 5"></a></center>
<p>The brush geometry roughs out the basic shape of the door, while the model contains the detail. After carefully placing the model and checking it from all angles to make sure there are no gaps you can apply the nodraw texture to the obstructed faces.</p>
<center><a href="http://www.gamedesign.net/content/half-life2/tutorials/nodraw/nodraw06.jpg" target="_blank"><img src="http://www.gamedesign.net/content/half-life2/tutorials/nodraw/nodraw06_small.jpg" width="300" height="217" vspace="10" hspace="10"  border="0" alt="Nodraw 6"></a></center>
<p>That's 4 faces saved for one doorway which otherwise would have just been sitting there eating up resources.</p>
<p>It doesn't stop at doorways, any face that is hidden by a model should have the nodraw texture applied to it.</p>

<center><a href="http://www.gamedesign.net/content/half-life2/tutorials/nodraw/nodraw07.jpg" target="_blank"><img src="http://www.gamedesign.net/content/half-life2/tutorials/nodraw/nodraw07_small.jpg" width="300" height="217" vspace="10" hspace="10"  border="0" alt="Nodraw 7"></a><a href="http://www.gamedesign.net/content/half-life2/tutorials/nodraw/nodraw08.jpg" target="_blank"><img src="http://www.gamedesign.net/content/half-life2/tutorials/nodraw/nodraw08_small.jpg" width="300" height="217" vspace="10" hspace="10"  border="0" alt="Nodraw 8"></a></center>
<p>Finally, type <font color="#ff0000">+showbudget</font> into the console while testing your map.<b><br> This is the new r_speeds command</b>.<br> Use the on screen information to narrow down problem areas and find out what is draining resources.</p>
<p>As you can see, the nodraw texture is an invaluable tool to combat the everlasting battle against low frame rates.</p>
<p>Thanks for reading and good luck! Don't hesitate to <a href="http://www.adamowen.com/contact.htm">contact me</a> with any questions or comments!</p></ul><h1 id="934" name="934" class="book-h3">Reducing Vis Times</h1><ul><p>The new vvis is slow, and until the next Zoner gets their hands on the compile tool source it looks like it will stay that way.</p>
<p>That said, here are some tips to reduce your vis times:<br />
1: Avoid large outside areas like the plague. It is not enough to hint-brush off large sections anymore. The new tools aren't smart enough to take advantage of that. You can cut your vis times in half by simply reducing the volume of empty space in your map even if the complexity remains the same.</p>
<p>2: Use func_details. A lot. Any brush that is not doing some serious visblocking should be turned into a func_detail. A single non-func_detail object can add hours to your vis times. Heck, don't be afraid to turn whole buildings into func_details if they don't block vis much:<br />
<img src="http://www3.hmc.edu/~nalger/vis1.PNG"></p>
<p>3: Clip roofs to be flush with buildings, and turn the overlapping peices into func_details. This sounds like a hack, but it really helps a lot.<br />
<img src="http://www3.hmc.edu/~nalger/vis2.PNG"></p>
<p>4: Place hint brushes on borders between different areas - windows, doors, entryways, etc. While people have a good intuition about what constitutes the "inside" of a building vs. the outside, the compile tools do not. You have to help the tools out a bit.<br />
<img src="http://www3.hmc.edu/~nalger/vis4.PNG"></p>
<p>5: Where you have angled or odd world geometry that you can't simplify, surround it with a big hint brush block so that the sector splits it creates don't continue out through the whole map.<br />
<img src="http://www3.hmc.edu/~nalger/vis3.PNG"></p>
</ul><h1 id="1009" name="1009" class="book-h2">Modelling - Softimage XSI</h1><ul><p>More information about modelling for Half-Life2 can be found in the <a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/1001"><span style="font-weight: bold;">Softimage: XSI</span></a> guide under 3D Modelling.</p>
</ul><h1 id="946" name="946" class="book-h1">Rust Content Information</h1><ul><p>Various information about Rust content, including posting guidelines.</p>
</ul><h1 id="943" name="943" class="book-h2">Rust Submission Guidelines</h1><ul><h3>Rust Article Submission Guidelines</h3>
<p>So, you want to submit an article to Rust? Excellent! However, in order to improve the chances of your article being published on Rust, there are a number of guidelines you must follow for submission.</p>
<h3>What Type of Article To Use</h3>
<p>There are two choices provided when you select &quot;Create Content&quot;:</p>
<p><strong>Personal Blog Entry</strong> is used to jot down information that might be of interest to other designers, but doesn't warrant a Front Page news post.</p>
<p><strong>Story</strong> is used to submit articles that are of interest to the members of RUST. These can be as simple as announcing News from the level design community or as complex as a tutorial describing level design aspects of the game you edit.</p>
<p>Both choices will provide you with a similar input window that requires a &quot;Title&quot; and the &quot;Body&quot; of your article. If you are submitting a Story, please indicate within the Body where you want the article to go ie&#59; The Front Page or a section within the Editing Handbooks. Once you enter the information, we strongly suggest you Preview it before submission, to check that it looks right and follows the simple guidelines below. After submission, a Story will be checked by the moderators prior to publishing. If it doesn't follow the guidelines, then chances are it will not be published.</p>
<h3>Spelling and Grammar</h3>
<p>We appreciate it if spelling and grammar are accurate at all times in your submission, and a well-written article will be more likely to be posted to the Rust front page and knowledge base.</p>
<h3>Content formatting</h3>
<p>There are two choices, Filtered HTML and Story HTML. Both have a full list of their input tags listed.<br />
<p>Please use valid HTML for your article, if possible - use H3 tags for article titles, and &lt;p&gt; tags for all paragraphs in your article. The moderators will correct this if necessary, but a neatly formatted article will make life easier.</p>
<h3>Images</h3>
<p>Do <strong>NOT</strong> place any images directly in image tags when submitting content; simply place a link to the image, and the moderators will check the content of the image, and then, if suitable, upload it to the local server.</p>
<p>Any kind of inappropriate image in a submission will result in a warning, and your article will be deleted or modified if necessary. <em>Inappropriate images and other material include:</em></p>
<ul>
<li>Pornography</li>
<li>Images depicting graphic violence or gore</li>
<li><strong>ANY KIND</strong> of illegal image.</li>
<li>Pictures of fish</li>
</ul>
<h3>Copyrighted Material</h3>
<p>Please avoid the use of copyrighted material belonging to other companies or individuals whenever possible, without being able to demonstrate permission from the copyright holder, or providing a source for the material if possible. <em>This includes:</em></p>
<ul>
<li>Images</li>
<li>Sounds</li>
<li>Music</li>
<li>Movies</li>
<li>Game Code</li>
<li>Articles</li>
</ul>
<p>Articles containing such material will be addressed on a case-by-case basis, and you will be informed of any modifications deemed necessary to your article.
</p>
</ul><h1 id="813" name="813" class="book-h1">Warcraft III</h1><ul><CENTER>
<IMG SRC="http://www.gamedesign.net/content/warcraft3/wclogo2.png" BORDER="1">
<H2>Warcraft III
<BR>
<SPAN CLASS="tinytext">An RTS game by <A HREF="http://www.blizzard.com">Blizzard Entertainment</A></SPAN></H2>
</CENTER>
<IMG SRC="http://www.gamedesign.net/content/warcraft3/t.png" align="left">his section covers Warcraft III game information, tutorials, updates and patches, and more. This section is fairly new and will be receiving numerous updates and additions. So, if Warcraft III is your thing, and you want to get into "mapping" for it, then you've come to the right place.
<BR>
<BR>
<IMG SRC="http://www.gamedesign.net/content/warcraft3/wc3u1.png" ALIGN="right" HSPACE="5" VSPACE="0">Also, you can visit the <A HREF="http://forums.gamedesign.net/viewforum.php?f=79">Warcraft 3 Forum</A> for additional help and questions you may have that are not covered here.
</FONT>
<BR>
<HR><div class="book"><div class="tree"><ul><li class="collapsed"><a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/1164">Resources</a></li><li class="collapsed"><a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/819">Tutorials</a></li><li class="leaf"><a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/1158">Warcraft III v1.18 Patch Information</a></li><li class="leaf"><a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/873">Warcraft III v1.17 Patch Information</a></li></ul></div><div class="nav"> <div class="links"><div class="prev">&nbsp;</div><div class="next"><a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/1164" title="View the next page.">next</a></div></div> <div class="titles"><div class="next">Resources</div></div></div></div></ul><h1 id="1164" name="1164" class="book-h2">Resources</h1><ul><H2><B>Introduction</B></H2>
In this section, you will find many different articles with information relevant to Warcraft III and the Warcraft Editor.
<BR>
<BR>
If you have an important article you think should be posted here, then feel free to submit it by either going to <A HREF="http://forums.gamedesign.net/viewforum.php?f=79">RUST's Warcraft III forums</A> or by submitting it <A href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/add">here</A>.</ul><h1 id="1165" name="1165" class="book-h3">Attachment Points And Modifiers</h1><ul><H2><B>Introduction</B></H2>
<TABLE BORDER="0">
<TR>
<TD VALIGN="top">
Here is a list of all attachment points and modifiers for use with unit/building animation triggers.
<BR>
For example, you could use one of these attachment points to create an animation of a question mark above a unit's head.
</TD>
<TD>
<IMG SRC="http://www.gamedesign.net/content/warcraft3/questionmark.png">
</TD>
</TR>
</TABLE>
<BR>
<BR>
<BR>
<H2><B>Attachment Points</B></H2>
overhead <I>(floats over the unit's head, but doesn't sway with the head as it animates)</I>
<BR>
head <I>(sways with the unit's animation)</I>
<BR>
chest
<BR>
origin <I>(usually at the base of a unit's feet)</I>
<BR>
hand
<BR>
foot
<BR>
weapon <I>(for heroes)</I>
<BR>
sprite <I>(for buildings)</I>
<BR>
medium <I>(for buildings)</I>
<BR>
large <I>(for buildings)</I>
<BR>
<BR>
<BR>
<H2><B>Attachment Point Modifiers</B></H2>
left
<BR>
right
<BR>
mount <I>(for mounted units)</I>
<BR>
rear <I>(for quadrupeds)</I>
<BR>
first <I>(for buildings)</I>
<BR>
second <I>(for buildings)</I>
<BR>
third <I>(for buildings)</I>
<BR>
fourth <I>(for buildings)</I>
<BR>
fifth <I>(for buildings)</I>
<BR>
sixth <I>(for buildings)</I>
<BR>
rallypoint <I>(for buildings)</I></ul><h1 id="820" name="820" class="book-h3">Warcraft III Editing Links</h1><ul><IMG SRC="http://www.gamedesign.net/content/warcraft3/wclogo4.png" ALIGN="left" HSPACE="10" VSPACE="0">
<BR>
<BR>
Here is a list of some more popular Warcraft III World Editor help sites.
If you would like to add another site to this list, just submit it <A HREF="http://forums.gamedesign.net/viewtopic.php?t=5788">here</A>.
<BR>
<BR>
<BR>
<BR>
<SPAN STYLE="font-size: 14pt"><U>Links</U></SPAN>
<BR>
<A HREF="http://forums.gamedesign.net/viewforum.php?f=79">RUST - GameDesign.Net Warcraft III Forums</A>
<BR>
<A HREF="http://www.battle.net/forums/war3/board.aspx?ForumName=war3-maps">Battle.net Map Development Forums</A>
<BR>
<A HREF="http://world-editor-tutorials.thehelper.net/">Warcraft III World Editor Tutorials</A>
<BR>
<A HREF="http://www.wc3sear.ch/">War3 File Download Area</A>
<BR>
<A HREF="http://www.planetwarcraft.com/">Planet Warcraft</A>
<BR>
<A HREF="http://maps.worldofwar.net/">The Unofficial Warcraft III Maps and Mods Site</A>
<BR>
<A HREF="http://war3forum.worldofwar.net/forumdisplay.php?forumid=12">The Unofficial Warcraft III  Forums - Map Making Forum</A>
<BR>
<A HREF="http://www.wc3campaigns.com/forumdisplay.php?f=427">Warcraft III Campaigns - Tutorials Forum</A></ul><h1 id="819" name="819" class="book-h2">Tutorials</h1><ul><CENTER>
<IMG SRC="http://www.gamedesign.net/content/warcraft3/wclogo3.png">
<BR>
<FONT SIZE="5"><B>Tutorials</B></FONT>
</CENTER>
<BR>
<BR>
Welcome to the tutorials section.  Here you will find many different articles on how to create special effects you might have seen in other maps, as well as how to do pretty much anything else with the World Editor.
<BR>
<BR>
<IMG SRC="http://www.gamedesign.net/content/warcraft3/wc3n1.png" ALIGN="left" HSPACE="5" VSPACE="0">If you have a tutorial you would like to submit, then head on over to the <A HREF="http://forums.gamedesign.net/viewforum.php?f=79">Warcraft III Forums</A> or just click on the <A href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/view/419">Contribute your content to RUST!</A> link to the right.
<BR>
<BR>
<BR>
<TABLE BORDER="1" BORDERCOLOR="black" CELLPADDING="3" CELLSPACING="0">
<TR>
<TD>
<IMG SRC="http://www.gamedesign.net/content/warcraft3/wc3o2.png" ALIGN="left" HSPACE="5" VSPACE="0"><B>Orc Peon</B><BR>
"I'm here to give you helpful tips throughout all the tutorials."
</TD>
</TR>
</TABLE>
<HR></ul><h1 id="823" name="823" class="book-h3">Advanced Tutorials</h1><ul>This is the Advanced Tutorials area. All of the tutorials featured here are for experienced users and require a fair amount of knowledge with using the World Editor.
<BR>
<BR>
<TABLE BORDER="1" BORDERCOLOR="black" CELLPADDING="3" CELLSPACING="0">
<TR>
<TD>
<IMG SRC="http://www.gamedesign.net/content/warcraft3/wc3o2.png" ALIGN="left" HSPACE="5" VSPACE="0"><B>Orc Peon</B><BR>
"Please note that all of the tutorials here are designed to work with the Frozen Throne expansion pack version of the Warcraft III World Editor."
</TD>
</TR>
</TABLE>
<HR></ul><h1 id="821" name="821" class="book-h4">Save/Load System Tutorial</h1><ul><CENTER>Submitted By <A HREF="http://forums.gamedesign.net/profile.php?mode=viewprofile&u=1241">Koga73</A></CENTER>
<BR>
<BR>
<BR>
<H2><B>Introduction</B></H2>
Okay, so you want make a save/load system?  Well, I'm going to try to explain it in a way even a newbie can understand! 
<BR>
<BR>
First of all, you must understand how one works; this is the most important part!
<BR>
So, how does a save/load system save data?  It doesn't!  Here's what a save/load system actually does; it first bunches data together, then encrypts it.  Next, the load decrypts it and extracts the data from the correct positions. For this tutorial, I will you use the following as an example:  let's say I want to save the player's name and gold.
<BR>
<BR>
<BR>
<H2><B>How To Do It</B></H2>
First, I would have the save/load system bunch the data together into a string; for this example, I'll use: 
<UL>
<FONT FACE="Courier New">01Koga73-3-999xxx</FONT>
</UL>
Now, to break it down.  The "01" tells what codeset will be used to encrypt the data (which I will explain later), the "koga73" is the player's name, and the "3" is how many digits of the ammount of gold to read.  So, if the player doesn't have 6 digits of gold, it'll only read the first 3, and the last 6 digits is the ammount of gold.  The "xxx" represent blank characters that are unused and just hold place so the code is always the same length.
<BR>
Right, so what's a code set you ask? Well, a code set is a dedicated character to character encryption process, so:
<UL>
<FONT FACE="Courier New">a = g 
<BR>
b = t
<BR>
c = y
<BR>
d = 6
<BR>
e = 8</FONT>
</UL>
and so on.  So, first you would need to assemble a string containing all the basic letters in order such as:
<UL>
<FONT FACE="Courier New">abcdefghijklmnopqrstuvwxyz1234567890`~!@#$%^&*()-_=+[{]}\|;:'",<.>/?</FONT>
</UL>
Then, assemble your code sets into arrays:
<UL>
<FONT FACE="Courier New">ArraySlotString[1] = badcfehgjilknmporqtsvuxwzy0987654321`~!@#$%^&*()-_=+[{]}\|;:'",<.>/?
<BR>
ArraySlotString[2] = qwertyuiopasdfghjklzxcvbnm2143658709`~!@#$%^&*()-_=+[{]}\|;:'",<.>/?</FONT>
</UL>
And so on, for up to 99 code sets as long as your only using 2 digit numbers for the code set to use within the code.  Simple!
<BR>
<BR>
Now, how do we encode it? 
<BR>
Well, here's the coding part for my trigger:
<UL>
<FONT FACE="Courier New">-------- xxxENCRYPTxxx --------
<BR>
For each (Integer A) from 1 to 13, do (Actions)
<UL>
Loop - Actions
<UL>
Set Koga73sInputCode[(Integer A)] = (Substring(Koga73sFullCode, (Integer A), (Integer A)))
</UL>
</UL>
For each (Integer A) from 1 to 13, do (Actions)
<UL>
Loop - Actions
<UL>
For each (Integer B) from 1 to 68, do (Actions)
<UL>
Loop - Actions
<UL>
If (All Conditions are True) then do (Then Actions) else do (Else Actions)
<UL>
If - Conditions
<UL>
Koga73sInputCode[(Integer A)] Equal to (Substring(Koga73sUnEncryptedCodeSet, (Integer B), (Integer B)))
</UL>
Then - Actions
<UL>
Set Koga73sOutputCode[(Integer A)] = (Substring(Koga73sEncryptedCodeSets[Koga73sRandomCodeSetsToUse], (Integer B), (Integer B)))
</UL>
Else - Actions
</UL>
</UL>
</UL>
</UL>
</UL>
For each (Integer A) from 3 to 13, do (Actions)
<UL>
Loop - Actions
<UL>
Set Koga73sFullCode = (Koga73sFullCode + Koga73sOutputCode[(Integer A)])</FONT>
</UL>
</UL>
</UL>
If you dont understand this, here's what it's doing:
<BR>
First, it takes each character within our completed bunched string, and puts it into an array. 
<UL>
<FONT FACE="Courier New">Array[1] = "k"
<BR>
Array[2] = "o"
<BR>
Array[3] = "g"
<BR>
Array[4] = "a"</FONT>
</UL>
And so on.  Then, after it selects a code set to use, it takes that number, and uses a loop to do a check where  the character it's currently on is equal to "A", then it would set it equal to the first character in the first code set.  It's all done by letter positions.  So, lets say the first array slot equals "A", then it would use code set 1 (or the selected code set) and use its first character (since this is corresponding to a).  If the character in array slot 1 equals "Z", then its going to use the 26th letter/number in the selected code set. After it selects which corresponding character to use, it sets it into a string slot called "Output".  If array slot 1 equals "A" and the matching character equals "G", then it would set this: 
<UL>
<FONT FACE="Courier New">ArrayOutputString[1] = "g"</FONT>
</UL>
Simple.  Next, after it has done this to every letter in the code (excluding the first 2, we dont want to encrypt the first 2 characters in our bunched code, otherwise when it loads it wont know what number code set to read).  It then just sets a string to itself and arrayslot.  For this example:
<UL>
<FONT FACE="Courier New">output[1] = "h"
<BR>
output[2] = "g"
<BR>
output[3] = "q"</FONT>
</UL>
Then it would just set this:
<UL>
<FONT FACE="Courier New">TOTAL = "hgq"</FONT>
</UL>
Now that it's all encrypted, show the encryted text to the player, so it would look like: 
<UL>
<FONT FACE="Courier New">01wuqp38-9-usjyyy</FONT>
</UL>
<BR>
<BR>
Now for loading!
<BR>
Loading does the same exact thing, except backwards.  It first takes the entered code, and checks the first 2 characters and sets that to a variable so it knows what code set to use.  The next thing it does is it uses a loop to do the same thing:  compare the code sets character with the normal sets characters, replaces them, and sets the completed code back into:
<UL>
<FONT FACE="Courier New">01koga73-3-999xxx </FONT>
</UL>
Now, we need to get the correct information, so we're going to want to use substrings.  A substring is just a part of a string, so: 
<UL>
<FONT FACE="Courier New">the example string = summer
<BR>
substring(summer, 2, 4) = "umm"</FONT>
</UL>
This is how we divide it up!  So, first get the player's name, so we would do a substring and set it to a variable. Then compare that variable to the name of the player who typed the load code; if they are different, they can't load and it stops.  Otherwise, it then goes and looks at the "3" and decides to then read 3 digits of the gold amount, which equals "999".  Finally, it takes the "999" and sets that to the player's gold amount.  Simple!
<BR>
<BR>
It takes a few hours to make a system like this, but it's worth it! And you can then get more complicated by replacing the unused variables "xxx" with randomly selected characters to just confuse people and such.
<BR>
<BR>
If you want to see the actual triggers, here they are (I didn't show the code sets to keep the code on the map uncrackable).
<UL>
<A HREF="http://www.gamedesign.net/content/warcraft3/atut1/save.txt">Save Triggers</A>
<BR>
<A HREF="http://www.gamedesign.net/content/warcraft3/atut1/load.txt">Load Triggers</A>
</UL>
<BR>
<BR>
<TABLE BORDER="1" BORDERCOLOR="black" CELLPADDING="3" CELLSPACING="0">
<TR>
<TD>
<IMG SRC="http://www.gamedesign.net/content/warcraft3/wc3o2.png" ALIGN="left" HSPACE="5" VSPACE="0"><B>Orc Peon</B><BR>
"As good practice, always use lowercase letters on all of your strings.  <I>Koga73</I> and <I>koga73</I> are two different variables."
</TD>
</TR>
</TABLE></ul><h1 id="822" name="822" class="book-h3">Beginner Tutorials</h1><ul>This is the Beginner Tutorials area.  All of the tutorials featured here are for beginners and are pretty easy to understand.  Little or no prior knowledge is required to use these tutorials.
<BR>
<BR>
<TABLE BORDER="1" BORDERCOLOR="black" CELLPADDING="3" CELLSPACING="0">
<TR>
<TD>
<IMG SRC="http://www.gamedesign.net/content/warcraft3/wc3o2.png" ALIGN="left" HSPACE="5" VSPACE="0"><B>Orc Peon</B><BR>
"Please note that all of the tutorials here are designed to work with the Frozen Throne expansion pack version of the Warcraft III World Editor."
</TD>
</TR>
</TABLE>
<HR></ul><h1 id="1166" name="1166" class="book-h4">Making Cheat Codes</h1><ul><H2><B>Introduction</B></H2>
Is your map too hard for newbies to beat?  Will, give them an edge with your own custom cheat codes.  Using triggers, you can set up your own custom cheats to do certain things such as give the player who entered the cheat 1,000,000 gold.  How about an army of 500 knights?  Done.  In this tutorial, I will explain how to set up your own cheat codes for your map using basic triggers.  For this tutorial, I will show you how to make a custom cheat code that gives the player 1,000,000 gold and hide the fact the the player even typed anything in at all.  However, you imagination is the limit as to what you cheat code(s) can do.
<BR>
<BR>
<BR>
<H2><B>How To Do It</B></H2>
Alright, let's get started.  Boot up the Trigger Editor section of the Warcraft Editor.  Create your new trigger and name it whatever you like.  For this tutorial, I'm just going to name my trigger this:
<UL>
<FONT FACE="Courier New">Cheat Codes</FONT>
</UL>
Now that we have our trigger, we need to give it some parameters to operate properly.  First, we need to create a new "Event" that will initialize the trigger.  We do this by clicking on this button ( <IMG SRC="http://www.gamedesign.net/content/warcraft3/btut1/pic2.png"> ) or by pressing Ctrl+E to create a new "Event".  A dialog box will appear with 2 drop-down boxes.  
<BR>
<BR>
<IMG SRC="http://www.gamedesign.net/content/warcraft3/btut1/pic1.png">
<BR>
<BR>
Now, click on the smaller drop-down menu and select "Player".  Next, click on the bigger drop-down menu and select "Chat Message".  You should now see this:
<UL>
<FONT FACE="Courier New">Player 1 (Red) types a chat message containing Text as An exact match</FONT>
</UL>
Okay, all you have to do is click on the word "Text".  Then, in the string field, type in what you want the cheat code to be.  For this example, I'll use "idkfa" (Doom rules!).  Now that part is done.  However, if your map is multiplayer, you'll want to copy and paste that "Event" and then change each new pasted "Event" to correspond to the player colors in your map.  So, if your map has a red, blue, and green player, you'll want your "Events" to look like this:
<UL>
<FONT FACE="Courier New">Player 1 (Red) types a chat message containing idkfa as An exact match</FONT>
<BR>
<FONT FACE="Courier New">Player 2 (Blue) types a chat message containing idkfa as An exact match</FONT>
<BR>
<FONT FACE="Courier New">Player 7 (Green) types a chat message containing idkfa as An exact match</FONT>
</UL>
Great!  We're halfway done.  Next thing we need to do is create the "Actions" that will give the player 1,000,000 gold and hide the cheat code so it looks like the play never typed anything at all.
<BR>
First, you need to create a new "Action" by either clicking on this button ( <IMG SRC="http://www.gamedesign.net/content/warcraft3/btut1/pic4.png"> ) or pressing Ctrl+R.  Alright, we'll set up our trigger to change the message displayed to hide the cheat code.  A dialog box will appear just like before.  Click on the small drop-down box and select "Cinematic".  From the big down-down menu, select "Clear Text Messages".  You should see this in the dialog box:
<UL>
<FONT FACE="Courier New">Clear the screen of text messages for (All players)</FONT>
</UL>
That "Action" is fine how it is, so just hit the "OK" button.  Awesome!  Now all we have left to do is create an "Action" to give the player 1,000,000 gold.  Sounds easy enough.
<BR>
To start off, create a new "Action".  Select "Player" from the small drop-down menu and "Add Property" from the big drop-down menu.  Here's what you get:
<UL>
<FONT FACE="Courier New">Player - Add 1000 to Player 1 (Red) Current gold</FONT>
</UL>
Alright, click on the number "1000".  You should see this dialog box:
<BR>
<BR>
<IMG SRC="http://www.gamedesign.net/content/warcraft3/btut1/pic5.png">
<BR>
<BR>
Make sure the "Value" radio button is selected and type "1000000" in the text box.  Click "OK".  Now, click on "Player 1 (Red).  Here's what you get:
<BR>
<BR>
<IMG SRC="http://www.gamedesign.net/content/warcraft3/btut1/pic8.png">
<BR>
<BR>
Make sure the radio button next to "Function" is selected and in the drop-down menu right next to it, select "Event Response - Triggering Player".  Hit "OK".  Here's what you should get:
<UL>
<FONT FACE="Courier New">Player - Add 1000000 to (Triggering player) Current gold</FONT>
</UL>
Here's what the final product should roughly look like (may differ a little if you have more than 1 player):
<UL>
<A HREF="http://www.gamedesign.net/content/warcraft3/btut1/cheat.txt">Cheat Code Trigger</A>
</UL>
And that's it.  You've successfully created a cheat code for your map.
<BR>
<BR>
<BR>
<H2><B>Wrap Up</B></H2>
This tutorial was fairly basic, however there are many other things you can do to make your cheat codes better.  For example, you could make a cheat code for your tower defense map to give the players more lives.  Or, you could make a cheat code that turns another player's units into sheep.  Or, you could make a goofy cheat code that changes the name of a player to something else such as "Llama" or "Moron".  Once you start to understand better how to use triggers, the possiblities are literally endless.</ul><h1 id="826" name="826" class="book-h4">Morphing A Hero (Or Learning To Use Triggers)</h1><ul><H2><B>Introduction</B></H2>
The Metamorphosis skill is one way you can morph a hero into something else.  However, you're stuck with having to use the same stats and primary attribute, as well as the same skills (else the spell won't work and Warcraft III will error out).
<BR>
In this tutorial, I will show you how to create a skill similiar to Metamorphosis that will use triggers to do exactly what we want the ability to do; using a different model, stats, and skills.  Plus, not only will the ability transform the hero into a different unit, but it will do so in a cinematic fashion by playing animations.  Also, as you read through this tutorial and follow along, you will gain a better understanding as to how triggers work as well as how to set up triggers.
<BR>
<BR>
<BR>
<H2><B>How To Do It</B></H2>
The first thing you must do is set up a hero.  I'll leave that part up to you.  For this tutorial, I will use 
<UL>
<FONT FACE="Courier New">Hero1</FONT>
</UL>
as the name.
<BR>
Next, create a new spell (doesn't matter what it is based off of).  Set the spell up so that it does nothing when clicked; only has text that tells you that this skill will morph the hero (and set it to however many levels you want; for this tutorial, I'm going to make the skill 3 levels).  I'll name the new skill:
<UL>
<FONT FACE="Courier New">Morph</FONT>
</UL>
Now, I'll give my hero the new ability.
<BR>
Finally, create a new unit that you want the hero to morph into (a sheep, a human, a princess, whatever).  Since I am making my skill 3 levels, I will copy and paste this new unit 2 times so that I have a total of 3 units (you can make them heroes or not; if they are not heroes, then they will not get the items from the original hero, but they will get them if they are heroes).  Then, I'll make each one a bit stronger than the last.  I'll use 
<UL>
<FONT FACE="Courier New">Morph1
<BR>
Morph2
<BR>
Morph3</FONT>
</UL>
for the names.
<BR>
<BR>
Now, to put together all the triggers that will make this spell work properly.
<BR>
In the Trigger Editor, create a new trigger.  Mine will be called
<UL>
<FONT FACE="Courier New">Morph</FONT>
</UL>
just like the skill.  Now, select your new trigger, and click on this button ( <IMG SRC="http://www.gamedesign.net/content/warcraft3/btut1/pic2.png"> ) or press Ctrl+E to create a new "Event".  A dialog box will appear with 2 drop-down boxes.  
<BR>
<BR>
<IMG SRC="http://www.gamedesign.net/content/warcraft3/btut1/pic1.png">
<BR>
<BR>
Click on the smaller box and select "Unit".  Next, click on the bigger box and select "Player-Owned Unit Event".  It should say this in the dialog box:
<UL>
<FONT FACE=Courier New">A unit owned by Player 1 (Red) Dies</FONT>
</UL>
Now, you should be able to click on "Player 1 (Red)" and "Dies".  Click on "Dies" and select "Begins casting an ability".  You should now see this:
<UL>
<FONT FACE="Courier New">A unit owned by Player 1 (Red) Begins casting an ability</FONT>
</UL>
Now click the "OK" button.
<BR>
Now we have set up the trigger to function whenever a unit owned by Player 1 casts an ability; however, this could be any ability, but we want only the "Morph" ability to turn on this trigger.
<BR>
<BR>
So, now we need to set up some conditions.  First, click on this button ( <IMG SRC="http://www.gamedesign.net/content/warcraft3/btut1/pic3.png"> ) or just press Ctrl+D.  A diablog box will appear that looks just like the last one we saw.  Select the bigger drop-down box and click on "And, Multiple Conditions", then click "OK".  Once that is done, click on the text that says "Conditions" underneath the "And - All (Conditions) are true" text.  Right-click and select "New event" or click on this button ( <IMG SRC="http://www.gamedesign.net/content/warcraft3/btut1/pic3.png"> ) or press Ctrl+D.  The same dialog box appears.  Select "Integer Comparison" from the big drop-down box.  You should now see this in the dialog box:
<UL>
<FONT FACE="Courier New">(Number of units in (Units in (Playable map area))) Equal to 0</FONT>
</UL>
First, click on the number 0.  Set the new value to 1 and press "OK".  Now click on "(Number of units in (Units in (Playable map Area)))".  This dialog box will pop up:
<BR>
<BR>
<IMG SRC="http://www.gamedesign.net/content/warcraft3/btut1/pic5.png">
<BR>
<BR>
From the currently selected drop-down box, click on "Unit - Level Of Ability For Unit".  You should see this:
<UL>
<FONT FACE="Courier New">Level of Ability for (Triggering Unit)</FONT>
</UL>
Click on "Ability".  Now, in the middle section of the new dialog box, click on the radio button next to the word "Function" and press "OK".  Then, hit "OK" again.  Here's what you should have:
<UL>
<FONT FACE="Courier New">(Level of (Ability being cast) for (Triggering unit)) Equal to 1</FONT>
</UL>
Click "OK" one last time.
<BR>
Now, create a second condition under our multiple conditions box by doing what I described earlier.  Once you have done that, select "Ability Comparison".  You should see this:
<UL>
<FONT FACE="Courier New">(Ability being cast) Equal to Animate Dead</FONT>
</UL>
Click on "Animate Dead".  In the bottom section of the new dialog box, you'll see a list of skills.  First, select "Custom" from the second drop-down menu.  Then click on your custom ability (in this case, "Morph").  Click "OK".  Here's what you get:
<UL>
<FONT FACE="Courier New">(Ability being cast) Equal to Morph</FONT>
</UL>
Now that our trigger is set up so that it will only operate when our custom spell is cast, it's time to set up the trigger to do what we want it to; that is, morph the hero into a different unit.
<BR>
At this point all the dialog boxes will still look like the ones we have seen earlier.
<BR>
Alright... To start off, first we need to set up some variables.  Click on this button ( <IMG SRC="http://www.gamedesign.net/content/warcraft3/btut1/pic6.png"> ) or just press Ctrl+b.
In the following window, click on the circled button to create a new variable.
<BR>
<BR>
<IMG SRC="http://www.gamedesign.net/content/warcraft3/btut1/pic7.png">
<BR>
<BR>
Now, name the new variable
<UL>
<FONT FACE="Courier New">HeroMorph</FONT>
</UL>
and in the drop-down box, select "Unit".  Do the same thing to create 2 more variables named 
<UL>
<FONT FACE="Courier New">HeroCache1
<BR>
HeroCache2</FONT>
</UL>
and make both of them "Unit" variable types as well.  Hit "OK" and you should be back at the main trigger editing window.
<BR>
<BR>
The next thing to do is start creating your "Action" commands.  To do this, simply right-click and select "New Action" or click on this button ( <IMG SRC="http://www.gamedesign.net/content/warcraft3/btut1/pic4.png"> ) or press Ctrl+R.  The same window you should already be familiar with will pop up.  From the small drop-down menu select "-General", and then from the large drop-down menu select "Set Variable".  First click on the red text labeled "Variable".  Select this variable:
<UL>
<FONT FACE="Courier New">HeroCache1</FONT>
</UL>
and hit "OK".  Now click on value and set it to "Event Response - Triggering Unit" from the drop-down menu that is currently selected.  Hit "OK" and then hit "OK" again.
<BR>
What we have just done is set a variable equal to the original hero unit; that way we can save the unit (with all of its abilities, items, and stats) and reload it again later.
<BR>
Now, create another "Action".  This time, in the small drop-down menu, select "Game Cache".  After that, just click on the blue text labeled "MapName.w3v" and set the name to whatever you like.  For this tutorial, I used the name "map01.w3v" (which is also the name of the map itself).  Now click "OK" twice.
<BR>
Create another "Action".  From the small drop-down box, click on "Game Cache" again.  In the big drop-down menu, click on "Store Unit".  Now, click on the red text labeled "Unit".  In the new window, click on the middle radio button next to the "Variable" text.  The variable we want to use is already selected for us, so hit "OK".  Now click on "Label".  Give it a value of whatever; for this tutorial, I just used "Hero", but you can use the hero's name or classification or whatever you like.  Now hit "OK" twice and we're done setting that up.
<BR>
<BR>
Now, to make the spell look cool, we'll use a special effect while the unit is morphing.  I just used the "Feral Spirit" special effect (it's the cloud that you see when feral spirits are summoned using the "Feral Spirit" skill).  You can use whichever effect you like though.
<BR>
Alright, first thing is, of course, create a new "Action".  From the small menu, select "Special Effect", and from the larger menu select "Create Special Effect on Unit".
<BR>
First, let's decide where we want the special effect to appear at on the unit.  Click on the blue text labeled "overhead".
<BR>
<BR>
<TABLE BORDER="1" BORDERCOLOR="black" CELLPADDING="3" CELLSPACING="0">
<TR>
<TD>
<IMG SRC="http://www.gamedesign.net/content/warcraft3/wc3o2.png" ALIGN="left" HSPACE="5" VSPACE="0"><B>Orc Peon</B><BR>
"Here is a list of all the attachment points and modifiers:  <A href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/1165">Attachment Points And Modifiers</A>."
</TD>
</TR>
</TABLE>
<BR>
Once you've entered in the value you want, hit "OK" (for this tutorial, I used the "chest" value).
<BR>
Next click on the blue text labeled "Abilities\Spells\Other\TalkToMe\TalkToMe.mdl".  In the new window, click on the "Choose Model" button.  Once you've chosen the effect (Feral Spirit for this tutorial), click "OK" 3 times.
<BR>
To make sure that the special effect plays at the same time that the unit morphs, create a new "Action" and in the large drop-down menu, select "Wait".  Click on the "2.00" and enter the number "0.50"; that is the number I found that causes the trigger to wait long enough so that the unit morphs and the special effect plays at the same.
<BR>
<BR>
Now that that is done, let's make the unit actually morph.
<BR>
At this point, you should be pretty familiar with how the trigger system works.  So, to make things simpler, I will just tell you what you need to change or set certain things to.
<BR>
Create a new "Action".
<BR>
Small drop-down menu:  "Unit"
<BR>
Large drop-down menu:  "Replace"
<BR>
Click on the blue text labeled "Footman".  In the new window, find your custom unit (for this tutorial, that would be "Morph1").  Click "OK" twice.  Now our hero with "morph" into the unit "Morph1".
<BR>
Now we need to set a variable to the morphed unit so that we can have the unit selected.
<BR>
Create a new "Action".
<BR>
Small drop-down menu:  "-General"
<BR>
Large drop-down menu:  "Set Variable"
<BR>
Now, set the variable "HeroMorph" equal to "Last Replaced Unit".
<BR>
<BR>
Create a new "Action".
<BR>
Small drop-down menu:  "Selection"
<BR>
Large drop-down menu:  "Select Unit For Player:
<BR>
Click on the blue text labeled "(Triggering Unit)".  In the new window, select the "Variable" radio button and click on "HeroMorph" from the drop-down menu next to it.  Click "OK" twice.
<BR>
<BR>
Alright.  So far, we have a trigger set up so that is will morph the unit and play a special effect at the same time and it will also select the morphed unit for the player.  Now it's time to set the time limit that the unit is morphed for and the "Actions" that will morph the unit back to its original state.
<BR>
<BR>
Create a new "Action".
<BR>
Small drop-down menu:  "-General"
<BR>
Large drop-down menu:  "Wait"
<BR>
Click on the number "2.00" and change it to a number value that you would like the duration of the morph to be (for this tutorial, I set the value to 45, which means that after 45 seconds, the nhero will return to normal).
<BR>
<BR>
Now, click on the first special effects "Action" and press Ctrl+C (to copy it).  Now, paste it.  Make sure the "Action" you just pasted is at the bottom (you can move it by clicking and holding and then dragging it down with the mouse).  Do the same thing and copy and paste the "Wait - 0.50 seconds" "Action" (again making sure it is at the bottom).
<BR>
<BR>
Now, it's time to make the "Action" that will restore the hero back to their original form.  Create a new "Action".
<BR>
Small drop-down menu:  "Game Cache"
<BR>
Large drop-down menu:  "Restore Unit Facing Angle"
<BR>
First, click on "Label".  Now type in the label you gave your hero earlier (in this tutorial, I used "Hero" as the label).  Click "OK".
<BR>
Next, click on the blue text called "(Center of (Playable map area))".  From the selected drop-down box, click on "Unit - Position Of Unit".  Now, click on "(Triggering Unit)".  Click on the variable radio button and select the variable "HeroMorph".  Click "OK" 3 times.
<BR>
<BR>
Create a new "Action".  Set the variable "HeroCache2" equal to "Last Restored Unit".
<BR>
<BR>
Now we take out the morphed form of the hero.  Create a new "Action".
<BR>
Small drop-down menu:  "Unit"
<BR>
Large drop-dwon menu:  "Remove"
<BR>
Click on "(Triggering Unit)" and select the variable radio button.  From the drop-down menu, select the "HeroMorph" variable.  Click "OK" twice.
<BR>
<BR>
And finally, create 1 last "Action".
<BR>
Small drop-down menu:  "Selection"
<BR>
Large drop-down menu:  "Select Unit For Player"
<BR>
Click on "(Triggering Unit)" and select the variable radio button.  From the drop-down menu, select the "HeroCache2" variable.  Click "OK" twice.
<BR>
<BR>
Now we are done!  If you decided to make the ability more than 1 level, you can copy the trigger you just made.  Then, all you have to do is change one of the conditions to say:
<UL>
<FONT FACE="Courier New">(Level of (Ability being cast) for (Triggering unit)) Equal to 1</FONT>
</UL>
Just note that the only thing you change is the number (to match the level).  The other thing you'll need to change is the "Action" that changes the hero:
<UL>
<FONT FACE="Courier New">Unit - Replace (Triggering unit) with a Morph 1 using The old unit's relative life and mana</FONT>
</UL>
For that "Action" all you would do is change "Morph 1" to the respective morphed form unit.
<BR>
Here is what the complete product will look like (for skill level 1):
<UL>
<A HREF="http://www.gamedesign.net/content/warcraft3/btut1/morph.txt">Morph Trigger</A>
</UL>
<TABLE BORDER="1" BORDERCOLOR="black" CELLPADDING="3" CELLSPACING="0">
<TR>
<TD>
<IMG SRC="http://www.gamedesign.net/content/warcraft3/wc3o2.png" ALIGN="left" HSPACE="5" VSPACE="0"><B>Orc Peon</B><BR>
"Some steps in this tutorial can be (and have been) simplified by copying and pasting.  You can use copying and pasting to create multiple "Actions" (or "Events" or "Conditions") that do the same thing or do similiar things but with a couple different settings.  Experiment more to get a better understanding of copying/pasting."
</TD>
</TR>
</TABLE>
<BR>
<BR>
<H2><B>Wrap Up</B></H2>
At the time of this tutorial being compiled, I was unable to figure out a way to make the skill still recharging when the unit morphed back to normal.  So, as soon as the unit returns to normal, the skill can be used again (there's no delay from cooldown).
<BR>
I'm pretty sure that certain items that are used (like tomes) won't apply to the hero in the hero's original form.
<BR>
Items picked up by the hero in their morphed form do not stay when the hero returns to normal (working on a fix).
<BR>
<BR>
<BR>
<H2><B>Resources Used</B></H2>
<A href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/1165">Attachment Points And Modifiers</A></ul><h1 id="815" name="815" class="book-h4">Object Editor Basics</h1><ul><H2><B>Introduction</B></H2>
Most aspects of the Warcraft III World Editor are fairly easy to understand and use.  
<BR>
<BR>
However, there are some more advanced features in the World Editor that require a little explaining; mainly, the Object Editor and the Trigger Editor.  As you have probably already realized from the name of this tutorial, the Object Editor is the topic of discussion here.
<BR>
Some of the things in the Object Editor are pretty self-explanatory.
<BR>
<BR>
<TABLE BORDER="0">
<TR>
<TD VALIGN="top">
I will break this tutorial down into eleven catergories (like you see on the right):  Abilities, Art, Combat, Data, Editor, Movement, Pathing, Sounds, Stats, Techtree, and Stats.  These are the sections you can select to view under the "View" menu.  Checking one or more will show the related data entries that can be edited.
<BR>
<BR>
Now, I do not know everything about the Object Editor.  So, certain data fields may not be explained in this tutorial (which means that they aren't very important, that I haven't updated this tutorial to include them, or that I don't know what they are for).  However, most all of the important information is covered.  To make things easy, I will try and list each data field and then explain what it means or I will explain certain things that pertain to most all of the data fields that are classified under a particular catergory.
</TD>
<TD>
<IMG SRC="http://www.gamedesign.net/content/warcraft3/editor/view.gif">
</TD>
</TR>
</TABLE>

<BR>
<BR>
<BR>
<H2><B>Abilities</B></H2>
<I><U>Abilities-Hero</U></I> - This data entry is available for modification on hero units only.  This data field allows you to determine what hero abilities a hero unit can use (such as Holy Light, Blizzard, Wind Walk, etc.).  The maximum allowable hero abilities (set by the editor) is 5.
<BR>
<I><U>Abilities-Normal</U></I> - This data field enables you to give units certain normal abilities (such as an inventory, harvest wood, invulnerable, etc.).  For this data entry, you can select as many normal abilities as you like.
<BR>
<BR>
<BR>
<H2><B>Art</B></H2>
Pretty much all of the data fields under the Art catergory are self-explanatory.  I will only discuss four data fields in this section.
<BR>
<BR>
<I><U>Art-Button Position (X)</U></I> - This refers to the button that you see in the lower left-hand corner of your screen (for example, when you click on a Barracks, you'll see the buttons to train a Footman, Rifleman, or Knight).  The numbers for the X coordinate go from 0 to 3, and refer to the boxes going from left to right.
<BR>
<I><U>Art-Button Position (Y)</U></I> - This refers to the button that you see in the lower left-hand corner of your screen (for example, when you click on a Barracks, you'll see the buttons to train a Footman, Rifleman, or Knight).  The numbers for the Y coordinate go from 0 to 2, and refer to the boxes going from top to bottom.
<BR>
To help you understand this better, I'll give you an example.  When you click on a Barracks, you see the button for a Footman at the top left corner (of the little panel).  The coordinates for that button would be X=0 and Y=0.  For the Knight, the coordinates for that button would be X=2 and Y=0.  For the Research Defend, the coordinates for that button would be X=0 and Y=2.
<BR>
<I><U>Art-Scaling Value</U></I> - This numeric value determines the size of the unit's model.  A value of 1 is the default model size.
<BR>
<I><U>Art-Selection Scale</U></I> - This numeric value determines the size of the selection circle around the unit.  It's a good idea to increase this number if you make the scaling of the unit model bigger.
<BR>
<BR>
<BR>
<H2><B>Combat</B></H2>
This section has many data fields, but most of them are the same; the only difference being the attack they refer to.  Basically, any unit can have two attacks.  They can be the same damage, or they can be different.  One can be a melee attack and the other can be a ranged attack.  This is good if you want to, say, make the damage a unit can do to air units higher than the damage that same unit can do to ground units.
<BR>
There are three main data fields (actually four, if you are editing a hero unit, but that will be discussed in a moment) that determine the damage of a unit.
<BR>
<BR>
<I><U>Combat-Attack (1 or 2)-Damage Base</U></I> - Used to determine a units attack damage.
<BR>
<I><U>Combat-Attack (1 or 2)-Damage Number Of Dice</U></I> - Used to determine a units attack damage.
<BR>
<I><U>Combat-Attack (1 or 2)-Damage Sides Per Die</U></I> - Used to determine a units attack damage.
<BR>
To calculate a unit's attack damage, Warcraft III takes the values of the data fields just mentioned and uses these formulas:
<BR>
Minimum Damage = Damage Base + Damage Number Of Dice
<BR>
Maximum Damage = Damage Base + (Damage Number Of Dice * Damage Sides Per Die).
<BR>
Now, earlier, I talked about a fourth variable to determine attack damage for Heros.  This would be the primary attribute of the hero (strength, agility, or intelligence).  So, the new formulas would be:
<BR>
Minimum Damage = Primary Attribute + Damage Base + Damage Number Of Dice
<BR>
Maximum Damage = Primary Attribute + Damage Base + Damage Number Of Dice * Damage Sides Per Die).
<BR>
So, if your hero's primary attribute was strength and that hero's strength was 26, that would be the number you would add in to the damage formulas.
<BR>
<BR>
This article is still under construction...</ul><h1 id="1158" name="1158" class="book-h2">Warcraft III v1.18 Patch Information</h1><ul><CENTER>
<IMG SRC="http://www.gamedesign.net/content/warcraft3/wclogo1.png">
</CENTER>
<BR>
This section discusses all aspects of the 1.18 patch including new features, updates, and fixes for Warcraft III:  Reign Of Chaos and The Frozen Throne.
<BR>
<BR>
<IMG SRC="http://www.gamedesign.net/content/warcraft3/wc3h1.png" ALIGN="left" HSPACE="5" VSPACE="0">This patch was originally released back in March, 2005.  This time, many known issues submitted by gamers/editors to the Battle.net Warcraft III forums were addressed and corrected.
<BR>
<CENTER>
<I><SPAN CLASS="tinytext">Information sourced from <A HREF="http://www.battle.net/">Battle.net</A>.</SPAN></I>
</CENTER>
<BR>
<BR>
<TABLE ALIGN="center" BORDER="0">
<TR>
<TD>
<UL>
<LI><A href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/1158#features">FEATURES</A>
<LI><A href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/1158#fixes">FIXES</A>
<LI><A href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/1158#maps">MAPS</A>
<UL>
<LI><A href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/1158#reign">Reign Of Chaos</A>
<LI><A href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/1158#frozen">Frozen Throne</A>
</UL>
<LI><A href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/1158#balance">BALANCE CHANGES</A>
<UL>
<LI><A href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/1158#general">General</A>
<LI><A href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/1158#human">Human</A>
<LI><A href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/1158#undead">Undead</A>
<LI><A href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/1158#orc">Orc</A>
<LI><A href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/1158#elf">Night Elf</A>
<LI><A href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/1158#neutrals">Neturals</A>
<LI><A href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/1158#items">Items</A>
</UL>
<LI><A href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/1158#editor">WORLD EDITOR</A>
<UL>
<LI><A href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/1158#efeatures">Features</A>
<LI><A href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/1158#efixes">Fixes</A>
</UL>
</UL>
</TD>
</TR>
</TABLE>
<BR>
<BR>
<H2><U><A NAME="features">FEATURES</A></U></H2>
- 6 maps from our Bonus Map program including (4)Excavation Site, (2)Echo 
Isle, (6)Hinterland Raid, (6)Ruins of Stratholme, (8)Azeroth Grand Prix, 
(8)Extreme Candy Wars 2004.
<BR>
<BR>
<BR>
<H2><U><A NAME="fixes">FIXES</A></U></H2>
- Fixed a problem that prevented selection sounds from playing when units were drag-selected.
<BR>
- Fixed a problem that caused Gargoyles to become stuck in Stone Form.
<BR>
- Fixed a problem with Dark Ritual or Death Pact leaving an unusable 
corpse.
<BR>
- Fixed a problem that caused a player's units to continue to harvest esources after they were dropped and no one has control of them.
<BR>
- Fixed a problem that allowed Ethereal units to take Physical damage from missiles that were in flight as they became Ethereal.
<BR>
- Fixed a problem that allowed Magic Immune units to take Magical damage from missiles that were in flight as they became Magic Immune.
<BR>
- Fixed a problem that allowed Unstable Concoction to kill the casting Batrider even after its target became Ethereal.
<BR>
- Fixed the visibility of the Flamestrike de-buff icon.
<BR>
- Fixed a problem with Defend not absorbing Piercing splash damage.
<BR>
- Fixed a problem with melee units with Incinerate not damaging any units that they would Incinerate.
<BR>
- Fixed a problem that caused Heroes holding items that increase their primary attribute to display an increase in their base damage on the info panel. Their actual damage was not affected.
<BR>
- Fixed a problem that allowed morphing units in their alternate form to retain their alternate form bonuses when killed by a Mana Flare when activating their alternate form.
<BR>
- Fixed a problem that allowed Destroyers to use Devour Magic on Watcher Wards.
<BR>
- Fixed a problem that prevented Watcher Wards from being revealed by the Dust of Appearance.
<BR>
- Fixed a problem that removed the Summoned state from Carrion Beetles when they burrow.
<BR>
- Fixed a problem with Metamorphosis and Chemical Rage that allowed the timer to remain active after the Hero had died.
<BR>
- Fixed a problem with Goblin Zeppelins being considered Undead instead of Mechanical in custom Reign of Chaos maps.
<BR>
<BR>
<BR>
<H2><U><A NAME="maps">MAPS</A></U></H2>
<I><B><A NAME="reign">Reign Of Chaos</A></B></I>
<BR>
<BR>
<I><B><A NAME="frozen">Frozen Throne</A></B></I>
<BR>
- (6)River of Souls - Changes to allow AMM play. 
<BR>
- (8)Crossroads - Fixed a grammatical error.
<BR>
<BR>
<BR>
<H2><U><A NAME="balance">BALANCE CHANGES</A></U></H2>
<I><B><A NAME="general">General</A></B></I>
<BR>
- Banshee build time has been reduced to 28 seconds from 35 seconds.
<BR>
<I><B><A NAME="human">Human</A></B></I>
<BR>
<BR>
<I><B><A NAME="undead">Undead</A></B></I>
<BR>
<BR>
<I><B><A NAME="orc">Orc</A></B></I>
<BR>
<BR>
<I><B><A NAME="elf">Night Elf</A></B></I>
<BR>
<BR>
<I><B><A NAME="neutrals">Neutrals</A></B></I>
<BR>
- Drunken Haze movement reduction has been changed to increase by level. 
The new ranks are: 15%/30%/50% from the previous 50%/50%/50%.
<BR>
- Breath of Fire initial damage reduced to 65/125/170 from 65/130/175.
<BR>
- Tornado mana cost has been reduced to 200 mana from 250 mana.
<BR>
- Incinerate can now be turned on or off. When turned on, it consumes 6 mana per attack. It is otherwise unchanged.
<BR>
- Lava Spawns now require 15 attacks to replicate, up from 14.
<BR>
- Summon Quilbeast cooldown increased to 25 seconds from 20 seconds.
<BR>
- Summon Hawk mana cost increased to 50 mana from 35 mana.
<BR>
- Pocket factory hit points increased to 300/450/600 by level from 300/400/500.
<BR>
- Healing Spray effect per wave increased to 40/55/70 from 35/50/65.
<BR>
<I><B><A NAME="items">Items</A></B></I>
<BR>
- Staff of Teleportation gold cost has been increased to 150 gold from 100 gold.
<BR>
<BR>
<BR>
<H2><U><A NAME="editor">WORLD EDITOR</A></U></H2>
<I><B><A NAME="efeatures">Features</A></B></I>
<BR>
- Added new trigger function:  Environment, Terrain Pathability.
<BR>
- Added new trigger function:  Environment, Terrain Tile Type.
<BR>
- Added new trigger function:  Environment, Terrain Tile Variance.
<BR>
- Added new trigger function:  Floating Text, Permanent/Expires.
<BR>
- Added new trigger function:  Floating Text, Suspend/Resume.
<BR>
- Added new trigger function:  Floating Text, Change Position to Point.
<BR>
- Added new trigger function:  Floating Text, Change Position to Unit.
<BR>
- Added new trigger function:  Floating Text, Change Age.
<BR>
- Added new trigger function:  Floating Text, Change Lifespan.
<BR>
- Added new trigger function:  Floating Text, Change Fadepoint.
<BR>
- Added new trigger function:  Floating Text, Change Text.
<BR>
- Added new trigger function:  Game, Enable/Disable Selection (Functionality and/or UI).
<BR>
- Added new trigger function:  Game, Enable/Disable Pre-Selection (Functionality and/or UI).
<BR>
- Added new trigger function:  Game, Enable/Disable Drag-Selection (Functionality and/or UI).
<BR>
- Added new trigger function:  Trigger, Get Trigger Name.
<BR>
- Added new unit state:  Plagued.
<BR>
- Added new unit state:  Snared.
<BR>
- Added new unit state:  Stunned.
<BR>
- Added new unit state:  Poisoned.
<BR>
- Added new unit state:  Polymorphed.
<BR>
- Added new unit state:  Sleeping.
<BR>
- Added new unit state:  Resistant.
<BR>
- Added new unit state:  Ethereal.
<BR>
- Added new unit state:  Magic Immune.
<BR>
- Lightning triggers now have their own category.
<BR>
- Lightning triggers now use the Z coordinate of the specified Location.
<BR>
- Custom Lightning triggers can now use an explicit Z coordinate.
<BR>
<I><B><A NAME="efixes">Fixes</A></B></I>
<BR>
- Fixed custom buff support for Black Arrow, Cloud of Fog, Inferno, Aerial Shackles, and Tornado.
<BR>
- Fixed multiple-level support for Shadowmeld.
<BR>
- Fixed Rain of Chaos' order id.</ul><h1 id="873" name="873" class="book-h2">Warcraft III v1.17 Patch Information</h1><ul><CENTER>
<IMG SRC="http://www.gamedesign.net/content/warcraft3/wclogo1.png">
</CENTER>
<BR>
This section discusses all aspects of the 1.17 patch including new features, updates, and fixes for Warcraft III:  Reign Of Chaos and The Frozen Throne.
<BR>
<BR>
<IMG SRC="http://www.gamedesign.net/content/warcraft3/wc3h1.png" ALIGN="left" HSPACE="5" VSPACE="0">This patch was originally released back in the end of August, 2004.  Beta testing for the patch began at the beginning of August, where new features were implemented and bugs were fixed.
<BR>
<CENTER>
<I><SPAN CLASS="tinytext">Information sourced from <A HREF="http://www.battle.net/">Battle.net</A>.</SPAN></I>
</CENTER>
<BR>
<BR>
<TABLE ALIGN="center" BORDER="0">
<TR>
<TD>
<UL>
<LI><A href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/873#features">FEATURES</A>
<LI><A href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/873#fixes">FIXES</A>
<LI><A href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/873#maps">MAPS</A>
<UL>
<LI><A href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/873#reign">Reign Of Chaos</A>
<LI><A href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/873#frozen">Frozen Throne</A>
</UL>
<LI><A href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/873#balance">BALANCE CHANGES</A>
<UL>
<LI><A href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/873#general">General</A>
<LI><A href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/873#human">Human</A>
<LI><A href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/873#undead">Undead</A>
<LI><A href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/873#orc">Orc</A>
<LI><A href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/873#elf">Night Elf</A>
<LI><A href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/873#neutrals">Neturals</A>
<LI><A href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/873#items">Items</A>
</UL>
</UL>
</TD>
</TR>
</TABLE>
<BR>
<BR>
<H2><U><A NAME="features">FEATURES</A></U></H2>
- Two new Neutral Heroes, the Firelord and the Goblin Alchemist, have been added to the game.
<BR>
- A "Profile" button has been added to the Battle.net toolbar. You can now look at your profile from the Battle.net news page without ever entering chat.
<BR> 
- Replays now display their version number in the Replay selection screen.
<BR>
- Designating a new clan chieftain now includes a confirmation dialogue.
<BR>
- 9 maps from our Bonus Map program including (8)Funny Bunny's Egg Hunt, (8)Shamrock Reef, (8)Dragon Falls, (8)Deadlock, (8)Gold Rush, (8)Slalom, (6)Copper Canyon, (6)Rolling Hills, and (4)Predators.
<BR>
<BR>
<BR>
<H2><U><A NAME="fixes">FIXES</A></U></H2>
- Fixed a problem with Burning Oil that caused the effect to not be created when buildings were attacked directly.
<BR>
- Fixed a problem that caused some instant spells cast after a targeted spell to execute before the targeted spell.
<BR>
- Fixed problems with the Melee AI when it attempted to use certain instant spells.
<BR>
- Fixed a problem with Morphing units re-executing commands that were interrupted by the morph timer expiring.
<BR>
- Fixed an exploit that would allow players to track enemy units under the fog of war with queued move commands.
<BR>
- Fixed a problem with units following enemy units and never proceeding to the next order when they moved underneath the fog.
<BR>
- Fixed a problem with spells that can target a point or unit (like Shockwave) failing when the selected target dies. If the selected target runs under the fog or teleports, the spell is intended to fail
<BR>
- Fixed a problem with Envenomed Spears wearing off too early if the affected unit was also affected by Slow Poison or the Orb of Venom.
<BR>
- Fixed the invisibility transition time for levels 2 and 3 of Wind Walk.
<BR>
- Fixed the orb air attack speeds for the Blood Mage, Pit Lord, and Fire Lord.
<BR>
- Fixed the armor upgrade values for Human, Orc, and Undead shops.
<BR>
- Fixed a problem preventing Phased Faerie Dragons from teleporting.
<BR>
- Fixed an issue with Faerie Dragons that could cause them to become unresponsive to most commands if you Phase Shifted just as the unit was attacking something.
<BR>
- Fixed Doom so that the spell now has a maximum creep level.
<BR>
- Fixed an issue that caused Crypt Fiends to deactivate Web when they unburrowed.
<BR>
- Fixed a problem with Cleaving Attack that would prevent it from working when Orbs were equipped.
<BR>
- Fixed an issue with Cleaving Attack that would cause Thorns Aura to reflect damage on targets that took splash damage.
<BR>
- Fixed an issue that could cause the Orb of Annihilation's splash damage to ignore armor.
<BR>
- Fixed a problem that could cause Metamorphosis to cancel the effects of a Staff of Teleportation.
<BR>
- Fixed Devour such that devoured units now give experience to the owner of the Kodo Beast if it gets polymorphed/hexed and instantly digests the unit.
<BR>
- Fixed rally points such that friendly units will no longer cancel rally orders to Heroes that teleport, Blink, or Mirror Image.
<BR>
- Fixed illusions so they now get correct damage, armor, life, and mana bonuses consistent with the original units.
<BR>
- Fixed an issue with morphed units that could cause them to cost food when revived by Animated Dead if they had died in their morphed form.
<BR>
- Fixed the Storm Pandaren (from the Pandaren Brewmaster's ultimate) so it now correctly displays Wind Walk's backstab damage.
<BR>
- Fixed a problem with Flame Strike that wouldn't allow Blood Mages to become invisible after they finished channeling the spell.  Prior to this fix, the Blood Mage would become visible for as long as damage was taking place, despite the fact that he was no longer casting the spell.
<BR>
- Fixed upgrading buildings such that they now receive the correct hit point bonus from the Masonry upgrade.
<BR>
- Fixed a problem that could cause manually cast arrow abilities to occasionally fail.
<BR>
- Fixed racial shops so they no longer block line of sight.
<BR>
- Fixed multiple units' casting the same spell so they now distribute the load more efficiently.
<BR>
- Fixed creeps so that missile spells no longer wake them when launched. 
Instead, the creeps now wake when a spell hits.
<BR>
- Fixed channeling units so they will auto-queue orders issued to the entire selection except for Stop and Hide.  Orders issued to the selected subgroup will break channeling (so you can teleport out of the area while channeling).
<BR>
- Fixed units in the middle of a non-channeling spell such that they will now auto-queue all orders until the spell is complete.
<BR>
- Fixed Hero icons so their order is now consistent throughout the game.
<BR>
- Fixed replay speeds so they can once again be changed while the replay is paused.
<BR>
<BR>
<BR>
<H2><U><A NAME="maps">MAPS</A></U></H2>
<I><B><A NAME="reign">Reign Of Chaos</A></B></I>
<BR>
- (6)Dark Forest - Cleaned up some trees to provide wider areas for larger groups to path through.  The creep camp guarding the top middle expansion gold mine no longer attacks units that path nearby.
<BR>
<I><B><A NAME="frozen">Frozen Throne</A></B></I>
<BR>
- (4)Turtle Rock - Top right and bottom left creep camps now drop equivalent items.
<BR>
- (4)Twisted Meadows - Added some trees near the south Mercenary Camp to prevent mercenary purchase without engaging the creeps.  Also added some trees to prevent item purchase from Goblin Merchant without engaging creep camp.
<BR>
- (6)Demon's Crossing - Removed the two Dragon Roosts and their accompanying creep camps from both sides of the map, then altered the creep camp guarding the remaining Dragon Roost.  Rebalanced most of the creep camps to be more player friendly.  
<BR>
- (6)Monsoon - Added some trees near the water line to prevent units from moving behind them.
<BR>
- (6)Typhoon - Added some trees near the expansion gold mines to prevent the creeps from harassing players when they pass by.  Added some trees to start locations and moved bottom middle start location closer to trees to help with initial harvesting.
<BR>
- (6)Upper Kingdom - The two center creep camps that are guarding gold mines have been pushed back from common pathing areas.
<BR>
- (8)Mur'gul Oasis - Center creeps pushed further back away from common pathing areas through the middle.
<BR>
- (8)Gold Rush - Fixed missing Tavern from the bottom left corner.
<BR>
<BR>
<BR>
<H2><U><A NAME="balance">BALANCE CHANGES</A></U></H2>
<I><B><A NAME="general">General</A></B></I>
<BR>
- Haunted and Entangled Gold Mines are now indicated on the minimap.
<BR>
- The experience bonus for having a single Hero and owning a tier-2 or tier-3 town hall has been increased to +15%/+30% from +10%/+20%.
<BR>
- Line damage spells such as Shockwave, Carrion Swarm, Breath of Fire, and Breath of Frost no longer damage a targeted friendly unit.
<BR>
- Default autocast spells (like Abolish Magic or Bloodlust) that require research will now have autocast enabled when the research completes.
<BR>
- Arrow abilities set to autocast now override Orb effects.
<BR>
- Repairing an upgrading building now uses the repair time and cost of the original building.
<BR>
- Harvesting, building, and repairing workers are the only units left behind by a teleport.
<BR>
- Hexed and polymorphed units now have the same statistics as the normal units except for movement speed and the model.  Previously, these abilities were changing the armor type and hit point regeneration type.
<BR>
- Constructing Peasants are now included in group selections.  A constructing Peasant will automatically queue all orders unless it is the only unit selected, or until it receives a Stop order.
<BR>
- Channeling ultimates now cancel invulnerability. If an invulnerability spell is used while channeling, channeling will end.
<BR>
- Damage-capped AOE spells now have a seperate cap for friendly, enemy, and neutral units.
<BR>
- Enemy units now take damage from Lightning Shielded illusions.
<BR>
- If a unit is rallied to a unit/Hero that dies, the rallied unit will now continue to move towards the last spot the rally target occupied.
<BR>
<I><B><A NAME="human">Human</A></B></I>
<BR>
- Defend has been reworked.  Piercing damage is still reduced by 50%, and there is now an additional 30% chance that a defending Footman will reflect unit attacks back on the source for full damage.  Piercing damage building attacks have a 30% chance to do no damage.
<BR>
- Banish now costs mana 75/60/50 by level, and has a 0-second cooldown at all levels, down from 5/3/1 seconds.
<BR>
- Siphon Mana drain per second has been reduced to 15/30/45 from 18/35/55.
<BR>
- Siphon Mana has been reworked.  It now transfers mana from an enemy to the Blood Mage, or from the Blood Mage to an ally.  Additionally, Siphon Mana can push the Blood Mage's mana up to as much as twice its normal maximum value, though mana gained in this way drains off rapidly if not used.
<BR>
- Blood Mage attack speed increased by 30%.
<BR>
- Flame Strike damage cap set to the equivalent of 6 targets, up from 5.
<BR>
- Knight hit points increased to 835 from 800.
<BR>
- Arcane Towers now deal 20 bonus damage per attack to summoned units.
<BR>
- Divine Shield can no longer be deactivated.
<BR>
- Phoenixes no longer regenerate life from a Fountain of Health.
<BR>
<I><B><A NAME="undead">Undead</A></B></I>
<BR>
- Death Knight base armor reduced to 3 from 4.
<BR>
- Banshee attack range increased to 600 from 500.
<BR>
- Units raised by Animate Dead are now invulnerable to dispels as well as damage.
<BR>
- Destroyers no longer regenerate mana from a Fountain of Mana.
<BR>
- Unsummoning an upgraded building now provides resources for the original building in addition to the cost of the upgrade (before it was just the cost of the upgrade).
- The Nerubian Towers' frost attacks now properly affect magic-immune units.
<BR>
- Devour Magic now dispels the owl summoned by Sentinel, but does not give mana to the Destroyer.
<BR>
- Since we have corrected the splash damage bug with Destroyers, we have reverted Destroyers to their old 1.14 statistics.  Destroyers now have mana regeneration of -3/sec (down from -6/sec), Orb of Annihilation now costs 25 mana down from 50 mana, and Devour Magic restores 75 mana per unit dispelled, down from 150.  Note that Devour Magic no longer gives health or mana when a player devours friendly buffs.
<BR>
<I><B><A NAME="orc">Orc</A></B></I>
<BR>
- Wind Walk now allows the Blademaster to walk through units.
<BR>
- Wind Walk's backstab damage reduced to 40/70/100 from 50/85/120.
<BR>
- Unstable Concoction primary target damage increased to 600 from 550.
<BR>
- Chain Lightning will now jump to sleeping targets if the primary target is also asleep.
<BR>
- Tauren Chieftain base Intelligence increased to 15 from 14.
<BR>
- Troll Batrider build time increased from 25 to 28.
<BR>
- Experience granted for killing the Spirit Wolves summoned by the spell Feral Spirit increased by approximately 40%.
<BR>
- Spirit Link can now be used to affect illusions.
<BR>
- Spirit Walkers now appear before Raiders and Kodo Beasts in the group selection.
<BR>
- Troll Batriders can no longer use Unstable Concoction while Banished.
<BR>
<I><B><A NAME="elf">Night Elf</A></B></I>
<BR>
- Abolish Magic no longer auto-dispels hero spells.
<BR>
- Abolish Magic no longer removes positive buffs on friendlies or negative buffs on enemies when manually cast (it already did this for autocast).
<BR>
- Rejuvination can now target magic immune units.
<BR>
- Faerie Fire armor debuff reduced to 4 from 5.
<BR>
- Archer hit points increased to 245 from 240.
<BR>
- Faerie Dragon damage increased to 14-16 from 13-14.
<BR>
- Level 1 Entangling Roots base duration reduced to 9 seconds from 12, but level 3 Entangling Roots damage increased to 25 per second from 15 per second.
<BR>
- Ancient Protector's attack now uses a homing missile.
<BR>
- The Huntress' bouncing attacks will no longer bounce back to the initial target.
<BR>
- Shadow Strike is no longer removed by Banish.
<BR>
- Taunt now affects only the 10 closest units.  It is also now disabled by Banish.
<BR>
<I><B><A NAME="neutrals">Neutrals</A></B></I>
<BR>
- Naga Sea Witch speed reduced to 270 from 300.
<BR>
- Cluster Rockets mana cost reduced to 70 from 75.
<BR>
- Voidwalker mercenaries now cost 2 food, up from 1.
<BR>
- Hydras spawned from a splitting parent are no longer considered summoned units.
<BR>
<I><B><A NAME="items">Items</A></B></I>
<BR>
- Targeting an unwalkable location with a Scroll of Town Portal will now try to place units as close to that location as possible.  If no valid location can be found, the units will be teleported to an area around the town hall.
<BR>
- All Orbs now affect magic-immune units.
<BR>
- Orb of Corruption debuff can no longer be dispelled.
<BR>
- Orb of Fire now deals Spell damage instead of Magic damage.
<BR>
- Mechanical Critters are no longer displayed on the minimap.
<BR>
- Mechanical Critters no longer teleport with you.
<BR>
- Amulet of Spell Shield no longer blocks physical skills.</ul><h1 id="11" name="11" class="book-h1">Quake II</h1><ul><!-- by Gard (stephen@geol.uwa.edu.au) 2004 -->
<center><img src="http://assets.aq2world.com/archive/websites/www.gamedesign.net/content/quake2/banner/banner.jpg"></center>
<h3>Quake II Level Editing Info</h3>
<p class="q2bg1">The Quake II section covers Frequently Asked Questions (FAQ), detailed entity descriptions and tutorials for beginners and advanced users.  Further contribution is greatly welcomed.<br><br>If you have any immediate questions check out the <a href="http://forums.gamedesign.net/viewforum.php?f=14">RUST Quake II Level Editing Forums</a> for fast feedback on any Quake II Questions, Chat, Gossip ... etc. Also check out the <a href="http://forums.gamedesign.net/viewforum.php?f=28">Radiant Forum</a> or the <a href="http://forums.gamedesign.net/viewforum.php?f=32">QuArK Forum</a> if you are having problems with your editor. What these guys don't know isn't worth knowing.</p>
<HR><!--break-->      </ul><h1 id="17" name="17" class="book-h2">FAQ</h1><ul>Quake II Frequently Asked Questions</ul><h1 id="19" name="19" class="book-h3">Common Editing Errors FAQ</h1><ul><h2>Common Editing Errors - FAQ</h2>
<blockquote>
		By Richard Neff, David Hyde & Mad Dog
</blockquote>

<!-- Link to Mapspy -->

<br>
<br>


 <p>This is an attempt to answer some of the more common errors that occur in Quake 2. 
	This is not meant to be a comprehensive list! There may be plenty of errors that 
	are not covered - this is merely an attempt to document the causes/solutions of 
	the more frequent ones.  Additionally, you may want to visit the 
	<a href="">Q2 Errors Tutorial</a> 
	here at Rust.</p>

 <p>Press Ctrl+F to search for a specific word or phrase (Assuming your browser 
	supports the find command.)<p>
	<a href="http://mapspy.gamedesign.net/"><img  src="http://www.gamedesign.net/content/quake2/faq/mapspy.jpg"></a> 
	- Denotes that <a href="http://mapspy.gamedesign.net/">MapSpy</a> can be used to 
	help troubleshoot or fix this error message.</p>

	<!-- consider: index here with anchor refs -->

<hr color=black noshade width=75%>
<ul type="square">
	<li><b>Bounds out of range</b> <!-- inc start img --> <a href="http://mapspy.gamedesign.net/"><img border=0 src="/"></a> 
	 <p>This error may be caused by one of two conditions. The obvious one is a brush 
		that has one or more vertices outside the +/- 4096 limits. The not-so-obvious 
		one is a brush that is missing a plane (which might happen if you manually 
		edit your .map file, and also is a possible result of brush subtraction operations).
		An oft-misunderstood fact is how brushes are constructed for the Q2 engine... 
		the x,y,z triplets in your .map file are NOT necessarily brush vertices - they 
		are simply points that define the plane. Brushes are constructed by starting 
		with an infinite solid and then removing everything on one side of the planes 
		that define the brush. This, coincidentally, is why you cannot have a concave 
		brush (think about it). In the case of a cube with the top face missing, the 
		brush will be infinitely tall (infinity in Q2 being 8192, of course)... which 
		leads to the bounds out of range error.</p>

	<li><b>Duplicate Plane</b> <a href="http://mapspy.gamedesign.net/"><img border=0 src="/"></a> 
	 <p>This error was likely caused by an edge manipulation where you pulled one edge 
		toward the center of a brush such that two faces now lie on the same plane - for 
		example turning a cube into a wedge.  It could also be the result of a brush 
		subtraction operation. </p>

	<li><b>FloatPlane: bad normal</b><a href="http://mapspy.gamedesign.net/"><img border=0 src="/"></a> 
	 <p>Collinear points are usually to blame for this error. In many cases, 2 points are 
		identical. This error is sometimes caused by faulty edge manipulation: pulling one 
		edge of a face until it lines up with another edge of the same face, for example.</p>

	<li><b>Microbrush</b><a href="http://mapspy.gamedesign.net/"><img border=0 src="/"></a> 
	 <p>Microbrushes have a volume less than a 1x1x1 unit cube. Microbrushes are 
		frequently generated by complex brush subtraction operations, but might also be 
		generated by editors with floating-point conversion problems. In the first case, you 
		will generally be better off building complex objects manually rather than using 
		brush subtraction. In the second case, you can prevent this error by insuring that 
		brush vertices lie on grid units. Microbrushes are frequently drawn incorrectly in 
		the game, so you will likely want to find and delete this brush.</p>

	<li><b>Mirrored Plane</b><a href="http://mapspy.gamedesign.net/"><img border=0 src="/"></a> 
	 <p>This error indicates that a brush has no thickness in one or more directions, i.e. 
		opposing faces of the brush lie on the same plane. This error may be generated by 
		building a brush less than 1 unit thick - one face's coordinate gets rounded up, 
		and the opposite face's coordinate gets rounded down. This situation can be 
		avoided by insuring that a brush's vertices lie on grid units.</p>

	<li><b>Mixed Face Contents</b><a href="http://mapspy.gamedesign.net/"><img border=0 src="/"></a> 
	 <p>Content properties must be identical for all faces of a brush. You <b>can</b>, 
		however, have different surface properties.</p>

	<li><b>No visible sides on brush</b><a href="http://mapspy.gamedesign.net/"><img border=0 src="/"></a> 
	 <p>This error indicates that the bounding box coordinates for the brush are 
		completely outside the +/-4096 limits in one or more directions. Note that 
		this error may be generated by a faulty bounding box being calculated by 
		qbsp3. In this case, one or more faces of the brush are fouled up to the 
		extent that you will probably be better off deleting the brush and 
		re-creating it.</p>

	<li><b>Origin brushes not allowed in world</b> <!-- inc end img --><a href="http://mapspy.gamedesign.net/"><img border=0 src="/"></a> 
	 <p>This error is frequently caused by attempting (but failing) to add an 
		origin brush to a func_door_rotating or func_rotating. Methods for grouping 
		origin brushes with entities differ with the various editors. Consult your 
		editor's documentation.</p>

	<li><b>Plane with no normal</b> 
	 <P>This error generally indicates that the points defining a plane are 
		collinear or that 2 points are identical. Find and delete this 
		brush.</P>

	 <P>Still can't find the QBSP error you're looking for? Visit the <A 
		href="/content/quake2/tutorials/errors/qbsp3">Q2 
		QBSP Errors</A> tutorial here at Rust.</P>
</ul>

<hr color=black noshade width=75%>
<h3>QVIS Errors</h3>

<ul type="square">
	<li><b>Leafportals saw into leaf</b>
	 <P>It's not so simple as finding the single offending "leafportal" brush. As 
		your map increases in size or simply changes brushes that generate no errors 
		can become causes of leafportal errors. Worse is that subsequent compiles of 
		the unchanged map may produce more or fewer leafportal errors, and this lack 
		of consistency makes finding the error even more maddening.<br>
		<br>
		Often the worst offenders are brushes with many faces sharing the same vertex (like a 
		spike or a skewed brush with a mitered corner).<br>
		<br>
		Advice often given is to "simplify". While this is useful advice up to a point I suppose, tracking 
		down specific troublesome brushes as they relate to their environment (your 
		map) is the real key (good luck). If you do find them, I've recently 
		discovered that making them and the brushes they adjoin detail brushes may 
		correct the problem, as will making them brush entities like func_walls. 
		(Since this is a vis error, this makes sense when you think about 
		it).</p>

	 <p>Still can't find the QVIS error you're looking for? Visit the <a 
		href="/content/quake2/tutorials/errors/qvis3">Q2 
		QVIS Errors</a> tutorial here at Rust.</p>
</ul>

<hr color=black noshade width=75%>
<h3>QRAD Errors</h3>

<ul type="square">
	<li><b>face with too many light styles (x y z)</b>
	 <p>There are too many different dynamic light styles, such as flashing 
		lights, that hit a single face of a brush. The limit is 4 light styles 
		that can hit a face. The best solution is to reduce the number of 
		lights in the area or spread them out further. The coordinates tell you 
		which brush face has caused the problem, which tells you indirectly where 
		the problem lights are. Note that this error <b>may</b> be 
		associated with a target_lightramp.</p>

	 <p>Still can't find the QRAD error you're looking for? Visit the <a 
		href="/content/quake2/tutorials/errors/qrad3">Q2 
		QRAD Errors</a> tutorial here at Rust.</p>
</ul>

<hr color=black noshade width=75%>
<h3>Startup and Runtime Errors</h3>

<ul type="square">
	<li><b>Missing texture</b> <!-- inc start end img --><a href="http://mapspy.gamedesign.net/"><img border=0 src="/"></a> 
	 <p>A custom texture was used and it isn't in the gamedir/textures dir. 
		Remember in q2 textures are not included in .bsp files, if you use custom 
		textures, include the .wals in your zip with install instructions, or better 
		yet, distribute as a .pak with a maps/mymap.bsp and a 
		textures/mytexture.wal. </p>
		
	<li><b>CDAudio: Invalid track 1 specified</b>
	 <p>The CD track ("sounds" key in worldspawn entity) must be 2 through 11 to 
		match the audio tracks on the Q2 CD-ROM. (Track 1 is the Quake 2 
		installation files.) </p>

	<li><b>No music plays in the map</b>
	 <P>Add the "sounds" key in the worldspawn entity and specify a CD track 
		number, 2 through 11.</P>

	<li><b>No spawn function for xxxx</b>
	 <p>Typically caused by not specifying the proper +set game setting. 
		The entity can't appear properly since the proper entity information isn't 
		available with the default Quake 2 game. Run the game with the proper 
		+set game XXXX parameter.</p>

    <li><b>areaportals&gt;=numareaportals (when opening a door; bombs to console)</b>
	 <p>Since areaportals affect vis, you must do a full bsp and some sort of vis 
		after changing them, NOT just a bsp -onlyents. Additionally, can be caused 
		by a bad areaportal - if you get an areaportal message during compilation, 
		you may see this error in the game.</p>

    <li><b>Bad surface extents</b>
     <p>This error might occur on maps compiled with the -chop option for qbsp3, 
		with chop values greater than the default 240. This error is more likely to 
		occur while using software rendering than GL. This error is seen at the 
		console when attempting to load the map. The map crashes when it occurs. If 
		you have <b>not</b> used the -chop option with a chop value 
		greater than 240, try using -chop with values smaller than 240. When you 
		find a value that works, increase the value until the error occurs again, 
		then back off of that value slightly.</p>
		
	<li><b>Com_sprintf: overflow of X in 32 </b></b> <!-- inc start img --><a href="http://mapspy.gamedesign.net/"><img border=0 src="/"></a> 
     <p>The message field in the worldspawn entity (used as the title of your 
		map) contains too many characters. The maximum length of this field to 
		prevent this error is 22 characters. This error is generally harmless, but 
		note that worldspawn messages longer than 28 characters will not fit across 
		the width of the F1 Help computer.</p>

    <li><b>connected teleport path_corners</b><a href="http://mapspy.gamedesign.net/"><img border=0 src="/"></a> 
     <p>You have two or more sequential path_corners which both have the teleport 
		spawnflag set.</p>

    <li><b>couldn't find destination &lt;target&gt;</b><a href="http://mapspy.gamedesign.net/"><img border=0 src="/"></a> 
     <p>This error results from a missing, inhibited, or wrongly-named 
		misc_teleporter_dest.</p>

    <li><b>couldn't find spawn point</b><a href="http://mapspy.gamedesign.net/"><img border=0 src="/"></a> 
	 <p>The map does not have an info_player_start (for Single Player mode), 
		info_player_deathmatch entity (for Deathmatch mode), or info_player_team1 
		and info_player_team2 (for CTF mode.)</p>

	<li><b>droptofloor: [item] startsolid at (x y z)</b><a href="http://mapspy.gamedesign.net/"><img border=0 src="/"></a> 
	 <p>All Quake 2 models have an associated bounding box that cannot be 
		embedded in a world brush. For example, all weapon, ammo, item, and key 
		entities have a 32x32x32 bounding box centered at the origin of that entity, 
		so these items must be placed with their origin at least 16 units away from 
		the surface of any world brush.</p>
		
	<li><b>ED_Alloc: no free edicts</b> <!-- exemt img -->
     <p>There are too many entities or active objects (flying bullets, 
		explosions, debris, lasers, etc.) in your map.</p>
		
	<li><b>elevator used with no pathtarget by func_button at ( x y z )</b><a href="http://mapspy.gamedesign.net/"><img border=0 src="/"></a> 
     <p>Entities which target trigger_elevators (normally func_buttons) must also 
		use the pathtarget field to specify which path_corner the elevator is to 
		travel to when the elevator is triggered.</p>

    <li><b>&lt;entity&gt; without a target</b><a href="http://mapspy.gamedesign.net/"><img border=0 src="/"></a> 
	 <P>Many entities (e.g. func_train) require a target to function 
		properly.</p>

    <li><b>Entity used itself</b><a href="http://mapspy.gamedesign.net/"><img border=0 src="/"></a> 
     <P>You have an entity which has the same value for its target and 
		targetname. If it is caused to trigger its target, it tries to trigger 
		itself. This error is seen on the screen during gameplay.</P>

    <li><b>ERROR: Index Overflow</b><a href="http://mapspy.gamedesign.net/"><img border=0 src="/"></a> 
     <P>There are too many unique models or too many unique sounds in your 
		map. You cannot have more than 256 unique models or 256 unique sounds 
		in a map. Every brush model (e.g. func_door, trigger_once) counts as a 
		unique model. For more information see <A 
		href="http://mapspy.gamedesign.net/eio.html">Error: Index Overflow (and 
		Other Horrible Nasty Problems) SOLVED</A>.</P>

    <li><b>[classname] at (x y z) has invalid spawnflags set</b><a href="http://mapspy.gamedesign.net/"><img border=0 src="/"></a> 
     <P>Self-explanatory. This error will not cause any runtime problems, 
		but may indicate that you meant to set a particular spawnflag but typed in a 
		wrong value instead.</P>

    <li><b>func_timer at ( x y z ) has random &gt;= wait</b><a href="http://mapspy.gamedesign.net/"><img border=0 src="/"></a> 
	 <P>Self-explanatory. In this case the game will override the random value 
		and use "wait" - FRAMETIME (0.01 seconds).</P>

    <li><b>func_train without a target</b><a href="http://mapspy.gamedesign.net/"><img border=0 src="/"></a> 
     <P>Func_trains must target a path_corner</P>

    <li><b>func_wall START_ON without TOGGLE</b><a href="http://mapspy.gamedesign.net/"><img border=0 src="/"></a> 
     <P>This is a nag error - the game will force the TOGGLE spawnflag in this 
		case, and the func_wall will function properly.</P>

    <li><b>&lt;entity&gt; at ( x y z ) has invalid spawnflags set</b><a href="http://mapspy.gamedesign.net/"><img border=0 src="/"></a> 
     <P>Self-explanatory. If you consistently get this error, it is possible that 
		your editor's entity definition file(s) are fouled up.</P>

    <li><b>item &lt;item&gt; not found for trigger_key at ( x y z )</b><a href="http://mapspy.gamedesign.net/"><img border=0 src="/"></a> 
     <P>The trigger_key has an invalid item field. Though the item is normally a 
		key entity, you can also use ammo, weapons, and any item entity other than 
		health. You might, for example, take weapons away from a player by setting 
		the item field to a weapon entity.</P>

    <li><b>&lt;key&gt; is not a field </b><a href="http://mapspy.gamedesign.net/"><img border=0 src="/"></a> 
     <P>Your map contains an invalid key-value pair. Either your editor has 
		incorrectly inserted an invalid key (that may be valid in another game) or 
		you have manually typed in an invalid key.</P>

    <li><b>PF_SetModel: NULL </b><a href="http://mapspy.gamedesign.net/"><img border=0 src="/"></a> 
     <P>An entity that requires one or more brushes to function correctly does 
		not have an associated brush. The usual suspects in this case are trigger 
		brushes (trigger_once, trigger_multiple, etc.). Download <A 
		href="http://www.magnolia.net/~rascal/mapspy.zip">MapSpy</A> to help track 
		down the offending entity.</P>

    <li><b>G_PickTarget: target [name] not found</b><a href="http://mapspy.gamedesign.net/"><img border=0 src="/"></a> 
     <P>A point_combat entity may only be used once. You cannot have multiple 
		monsters combattarget the same point_combat.</P>

    <li><b>Map does not have an empty leaf</b> <!-- exemt img -->
     <P>This error is caused by a bug in Quake2, and usually occurs when all 
		leafs of a map contain clip brushes. This error is generally only produced 
		in small test maps with few leafs. You can avoid this error by moving clip 
		brushes around, or download a different version of <A 
		href="http://www.magnolia.net/~rascal/qbsp3.zip">qbsp3</A>, which 
		automatically generates an empty leaf if one is not found. This error is 
		seen on the console when loading the map, and the map crashes when it 
		occurs.</P>

    <li><b>&lt;monster&gt; at ( x y z ) has bad item &lt;item&gt;</b><a href="http://mapspy.gamedesign.net/"><img border=0 src="/"></a> 
     <P>Monsters (including turret_drivers) can drop ammo, weapons, keys, and any 
		item entity other than health.</P>

    <li><b>&lt;monster&gt; ( x y z ) has a bad combattarget &lt;combattarget&gt;: 
	&lt;classname&gt; at ( x y z ) </b><a href="http://mapspy.gamedesign.net/"><img border=0 src="/"></a> 
     <P>Combattargets must be point_combat.</P>

    <li><b>&lt;monster&gt; at ( x y z ) has target with mixed types.</b><a href="http://mapspy.gamedesign.net/"><img border=0 src="/"></a> 
     <P>This error occurs if either 1) monster has a target that is NOT a 
		point_combat and also has a combattarget, or 2) monster has a target that IS 
		a point_combat AND a target that is NOT a point_combat.</P>

    <li><b>&lt;monster&gt; can't find target &lt;target&gt; at ( x y z )</b> <!-- inc end img --><a href="http://mapspy.gamedesign.net/"><img border=0 src="/"></a> 
     <P>The monster targets an entity that does not exist.</P>

    <li><b>Ran out of faces for bmodel</b>
     <P>A large func_water entity is filling an area with a very complex solid 
		surface. A solution is to break the func_water up into smaller entities, 
		start the func_water with the more complex brushes already breaking the 
		surface, or remove some of the more complex brushes in its 
		path.</P>

    <li><b>SZ_GetSpace: Overflow</b>
     <P>The game engine can see too many entities. If you have not already run 
		vis, try a -fast vis. This will usually fix the problem. If it does not, you 
		<B>may</B> be able to solve the problem with a full vis, but this may only 
		obscure a problem that might occur during play (rather than when the level 
		first loads). For example, a full vis may allow you to start the map, but 
		then you might get this error when firing rockets or grenades at a squad of 
		gunners. If a full vis does not solve the problem, you have several 
		choices:<BR>
		<BR>
		- Eliminate entities<BR>
		- Use func_areaportals in your doors<BR>
		- Add vis-blocking architecture, i.e. 90 degree bends in hallways, 
		  doughnut hallways, etc.<BR>
		<BR>
		<b>Special case:</b> You may 
		sometimes get this error message when tracking down leaks using LeakHunter, 
		even though your level contains very few entities. In this case, the 
		pointfile that contains leak information is too large - LeakHunter generates 
		a laser for each segment of the pointfile, and since all segments will be 
		visible to the engine, too many lasers cause this crash. You can eliminate 
		this problem by editing your pointfile with a text editor and deleting 
		points. The pointfile starts in the void and works its way into your map, 
		ending at an entity. You should be able to delete all points after, for 
		example, the 20th point and still have sufficient information in the 
		pointfile to find the leak. Note that LeakHunter will always spawn the 
		player at the last point in the pointfile, so you will not have a problem 
		finding the starting laser segment. Note that having very few entities in 
		your map (so the path from an entity to a leak is longer) usually generates 
		large pointfiles. As an alternative to deleting points in the pointfile, you 
		can temporarily add several light entities to your map and re-compile. This 
		should result in a much smaller pointfile that will not cause the 
		SZ_GetSpace Overflow error with LeakHunter.</P>

    <li><b>target_help with no message at ( x y z )</b> <!-- inc start img --><a href="http://mapspy.gamedesign.net/"><img border=0 src="/"></a> 
     <P>Self-explanatory. Target_help must have a message field (otherwise what's 
		the point?)</P>

    <li><b>target_lightramp has bad ramp (&lt;ramp&gt;)</b><a href="http://mapspy.gamedesign.net/"><img border=0 src="/"></a> 
     <P>The message field of target_lightramp must be 2 and only 2 characters, 
		and both characters must be lowercase letters. The first letter specifies 
		the starting lightlevel; 2nd letter specifies the ending lightlevel. a is 
		darkest; z is brightest. For example "az" would ramp from dark to bright and 
		"za" from bright to dark.</P>

    <li><b>target_lightramp target &lt;target&gt; (&lt;classname&gt; at ( x 
    y z )) is not a light. </b><a href="http://mapspy.gamedesign.net/"><img border=0 src="/"></a> 
     <P>Target_lightramps may only target light entities. This prohibition 
		includes light_mine1 and light_mine2.</P>

    <li><b>teleporter without a target at ( x y z ) </b><a href="http://mapspy.gamedesign.net/"><img border=0 src="/"></a> 
     <P>Misc_teleporter should target a misc_teleporter_dest. With no target, the 
		misc_teleporter will not appear in the game.</P>

    <li><b>train_find: target &lt;target&gt; not found </b><a href="http://mapspy.gamedesign.net/"><img border=0 src="/"></a> 
     <P>There is no entity (should be a path_corner) whose targetname matches the 
		target field of the func_train.</P>

    <li><b>trigger_elevator at ( x y z ) target &lt;target&gt; is not a train. </b><a href="http://mapspy.gamedesign.net/"><img border=0 src="/"></a> 
     <P>As implied, trigger_elevators must target a func_train.</P>

    <li><b>trigger_elevator at ( x y z ) unable to find target &lt;target&gt; </b> <!-- inc end img --><a href="http://mapspy.gamedesign.net/"><img border=0 src="/"></a> 
     <P>The target of the trigger_elevator (which should be a func_train) does 
		not exist.</P>

    <li><b>Quake 2 simply crashes without an error</b>
     <P>Major causes for this include:<br>
		- Worldcraft putting animated textures in UPPERCASE. Fix using 
		<A href="http://mapspy.gamedesign.net/">MapSpy</A>.
		<a href="http://mapspy.gamedesign.net/"><img border=0 src="/"></a><BR>
		- Lack of a Worldspawn entity.<BR>
		- A VERY low amount of space for a swapfile while loading a large map.<BR>
		- Spawning many entities simultaneously.</P>
</ul>
<!-- jic -->

<!-- eof @ 400 --></ul><h1 id="20" name="20" class="book-h3">Quake 2 editing</h1><ul><!-- q2faq.htm - converted 21/08/01 from old rust documents -->
<h2>Quake 2 Editing FAQ</h2>
<blockquote>
		By Richard Neff</blockquote>
<br><br>	

<a name="Top">
 <p>This is an attempt to answer the most frequently asked questions on the q2 map 
	editing list and the discussion board, as well as any email we get. If you have 
	a question to add to it then 
	<a href="mailto:miniwood@miniwood.com?subject=q2 faq">email us</a>
	the question and the answer. Thanks.</P>

 <p>Note: A new 
	<a href="/content/quake2/faq/error">Errors FAQ</a> 
	has been created in order to explain some of the more common compiler error 
	messages.</p>

 <p>Ed. note: I made this index, so there may be links that are broken/wrong -- in 
	this event, please email 
	<a href="mailto:miniwood@miniwood.com">Miniwood</a> or 
	<a href="mailto:jherax@gamedesign.net">Jherax</a> for fixing.</p>

<h3>Index:</h3><br>
Clicking on an item in the index will quickly scroll down the page.<br>
	<ul type="square">

		 <b>Entities and effects</b>

	<li><a href="/node/20/#1">Why don't my explosions, switchable lights, etc. show up in DM or CTF mode? </a>
	<li><a href="/node/20/#2">I'm having trouble with my entity, I've tried setting the right Angle property, but I don't know what value to put in here. How do I set Q2 angles? </a>
        	<li><a href="/node/20/#3">I want to loop a sound that is heard throughout the level, but it isn't working properly when I set the looped sound to Attenuation -1. What's wrong?</a>
        	<li><a href="/node/20/#4">How do I use a sound I made in Quake 2 with the target_speaker entity?</a>
        	<li><a href="/node/20/#5">How can I create user-controlled turrets?</a>
        	<li><a href="/node/20/#6">How do I get double doors or other multi-part doors to open at the same time?</a>
        	<li><a href="/node/20/#7">What is the maximum distance from the&nbsp;0,0,0 origin that a map can be?</a>
        	<li><a href="/node/20/#8">How do I get multiple items to spawn in Deathmatch Mode, like in some of the Id levels where the BFG and Rocket Launcher interchangeably spawn?</a> 
        	<li><a href="/node/20/#9">How to I make &quot;wind tunnels&quot; like the stuff that pushes players along?</a>
        	<li><a href="/node/20/#10">Ok, I made a &quot;wind tunnel&quot; with the trigger_push entity. Now, how do I turn it on or off? </a>
        	<li><a href="/node/20/#11">How do I make doors that &quot;swing out&quot; on hinges like my doors at home?</a>
        	<li><a href="/node/20/#12">How do I get rid of the teleporter's base and  &quot;sparkles&quot; in Quake 2?</a>
        	<li><a href="/node/20/#13">How do I get that cool looking &quot;space&quot; sky in my maps? Or, how to I get a sky to appear at all?</a> 
        	<li><a href="/node/20/#14">I want to make a complex brush with a 90 degree turn in it, how do I do this? </a>
        	<li><a href="/node/20/#15">Can I mix entities for the same object? For example, can I make a func_train also a func_explosive?</a> 
        	<li><a href="/node/20/#16">Can I have moving lights in my Quake 2 level?</a>
        	<li><a href="/node/20/#17">How do I make the func_train entity rotate?</a> 
        	<li><a href="/node/20/#18">How do I make glass that can be shot?</a> 
        	<li><a href="/node/20/#19">How do I create those fancy &quot;sparks,&quot; like the ones found in base1.bsp?</a>
        	<li><a href="/node/20/#20">I created a transparent window on my train/door/moving entity, but it won't move with the rest of the entity...why?</a>
        	<li><a href="/node/20/#21">I've heard someone mention &quot;point entity&quot; and &quot;solid entity.&quot; What's the difference between the two?</a>
        	<li><a href="/node/20/#22">How do I create the F1 computer messages and increment the Goals count?</a>
        	<li><a href="/node/20/#23">How do I create multi-line text in the F1 computer message, trigger message, level start message, etc.?</a>
        	<li><a href="/node/20/#24">How do I create the cool force field doors that were in the prison levels of Q2?</a>
        	<li><a href="/node/20/#25">I applied the func_water to create a pool of water and it's not transparent. Why?</a>
	<li><a href="/node/20/#26">I tried to make a rotating door. I even put the Origin brush in by giving a brush the Origin texture on all sides, but now I'm getting an error like &quot;Origin not allowed in 

world&quot; Why doesn't this work?</a>

<br><br>
		 
		<b>Textures and Surface Properties</b>

        	<li><a href="/node/20/#27">How do I create ladders? Are they some sort of entity type or something?</a>
        	<li><a href="/node/20/#28">What about currents...how are they created?</a>
        	<li><a href="/node/20/#29">I've got a texture with text on it, but the text is backwards. How do I 'flip' the texture so the text is readable?</a>
        	<li><a href="/node/20/#30">How do I create &quot;one-way&quot; see-through walls, similar to Quake 1?</a>
        	<li><a href="/node/20/#31">How do you make it so an animated texture moves when triggered like in the research lab where you hit a button and the display monitor texture starts moving?</a>
        	<li><a href="/node/20/#32">I've noticed the Animated and Animated Fast spawnflag for certain solid entities. What exactly do these flags do?</a>
        	<li><a href="/node/20/#33">How can I make mirrors in Quake 2? I've seen other games do this (like GLQuake1) if I've got a 3DFx card.</a>
        	<li><a href="/node/20/#34">Does Quake 2 store textures in the .bsp files like Quake 1?</a>
        	<li><a href="/node/20/#35">So, how do I include a new texture with my map?</a>
        	<li><a href="/node/20/#36">How do you make animated textures in Q2?</a>
			
<br><br>

		 <b>Compiling, Leaks, and Errors</b>
        <li><a href="/node/20/#37">Every time I try to compile my map with the latest versions of qbsp3.exe or any
            of the other compilers, it crashes and I get some message saying that the program
            performed an illegal option or something to that effect. How do I fix this?
        <li><a href="/node/20/#38">After compiling my level, I notice that I can see &quot;through&quot; the sky
            into another room in my level. How can I keep this from happening?
        <li><a href="/node/20/#39">My level takes ### hours/days/weeks to compile. Am I doing something wrong? 
        <li><a href="/node/20/#40">My map has gotten bigger, and all of a sudden, some of the items or doors in my
            level disappear at certain angles...what causes this and how can I fix it? 
        <li><a href="/node/20/#41">Why is my map always/never lighted, even though I place entities? (I have a
            leak, btw) 
        <li><a href="/node/20/#42">Ok, I checked and my map doesn't leak, yet it's still not lighted, even though I
            place entities? 
        <li><a href="/node/20/#43">How do I convert a .bsp file to a .map file? 
        <li><a href="/node/20/#44">After doing a full compile with all 3 compilers, I notice light
            &quot;leaks&quot; under doors and the like. What's going on here?
        <li><a href="/node/20/#45">I've heard of a &quot;level 4&quot; compile for VIS, but there seems to be some
            debate as to whether this actually does anything. Does using the -level 4 parameter
            actually do anything for Quake 2 maps?<br></a>
			<br>
		 <b>CTF &amp; Xatrix Entities</b>
        <li><a href="/node/20/#46">What entities are needed for CTF to work?
        <li><a href="/node/20/#47">What new entities are in the Xatrix Mission Pack 1: The Reckoning?<br></a>
			<br>
		 <b>Console Commands</b>
        <li><a href="/node/20/#48">How do I bring up the Quake 2 console?
        <li><a href="/node/20/#49">What are some of the useful editing console commands?<br></a>
			<br>
		 <b>Advanced Questions &amp; Tips</b>
        <li><a href="/node/20/#50">How do I configure difficulty settings for my levels?
        <li><a href="/node/20/#51">What are Detail brushes and when should I use them?
        <li><a href="/node/20/#52">What are Clip brushes and when should I use them?
        <li><a href="/node/20/#53">So, what are Hint brushes then?<br></a>
			<br>
		 <b>Editor-Specific FAQs</b>
        <li><a href="/node/20/#54">Ok, I couldn't find the answer to my question here. Maybe it's something
            specific to the editor I'm using. Where can I find FAQs for specific editors?
        <li><a href="/node/20/#55">What's the best editor?
        <li><a href="/node/20/#56">Since I've started Quake2 editing, I've lost every second of the day to editing.
            My wife left me, the dog has run away, and I no longer have any friends (although, I think
            the QBSP compiler is starting to like me). What should I do?</a>
	</ul>

 <p>

<hr color=black noshade width=75%>
<h3>Entities and effects</h3><br>

	<ul type="square">
		<a name="1">
		<li><b>Why don't my explosions, switchable lights, etc. show up in DM or CTF mode?</b><br>

			Certain entities or effects don't work in Deathmatch or CTF play that exist in single
			play mode. They are:<br>
			-func_explosive <br>
			-func_object <br>
			-turrets <br>
			 -named/switched lights (these lights will be constantly on) <br>
			<br>
			<a href="http://mappack.gamedesign.net">Mappack</a> (a Q2 mod) allows for these items to
			appear in DM play.<br>
			(ed. note: no longer seems to exist)

			<br><br><i><a href="/node/20/#Top">Top</a></i><br>&nbsp;

		<a name="2">
        <li><b>I'm having trouble with my entity, I've tried setting the right Angle property,
            but I don't know what value to put in here.&nbsp; How do I set Q2 angles?</b><br>

			The angles in Q2 don't match what you're used to in real life. 0 - is to the
			right(East) looking from the top view. Then, it's 90 to the North, 180 to the West, and
			270 to the South. -1 is up, and -2 is down. Also, there is a bug with the trigger_push
			entity, you should use 1 instead of 0 if you want the player to be pushed Eastward.

			<br><br><i><a href="/node/20/#Top">Top</a></i><br>&nbsp;

		<a name="3">
        <li><b>I want to loop a sound that is heard throughout the level, but it isn't working
            properly when I set the looped sound to Attenuation -1.&nbsp; What's wrong?</b><br>

			Attenuation = -1 works fine for non-looped sounds. Looped sounds are always attenuation
			= 3, regardless of what you enter for this value. If you want a looped sound to be heard
			across the entire map:<br>
			1) Find the duration of the sound using Sound Recorder or other audio program. If the .wav
			file is in one of the Q2 paks, you may have to extract it to your hard disk first. If you
			don't have a pak editor to do this, a good one is qped, available from
			www.planetquake.com/qped.<br>
			2) Add a func_timer to your level, with the &quot;start on&quot; spawnflag. The wait value
			of the func_timer should be set to the duration of the .wav file. Target your
			target_speaker with the func_timer. (David Hyde)

			<br><br><i><a href="/node/20/#Top">Top</a></i><br>&nbsp;

		<a name="4">
        <li><b>How do I use a sound I made in Quake 2 with the target_speaker entity?</b><br>

			First make sure your .wav file is mono rather than stereo. Create a custom directory
			for your custom sounds so that you don't get confused about what sounds came from who or
			where. All sounds must go somewhere below baseq2\sound, so create a subdirectory
			baseq2\sound\mysound, for example. In the .map, reference the sound including the relative
			path below baseq2\sound. For example, the noise field of your target speaker would be
			&quot;mysound/mywav.wav&quot;. Note the forward slash rather than a backslash. (David
			Hyde)

			<br><br><i><a href="/node/20/#Top">Top</a></i><br>&nbsp;
		
		<a name="5">
        <li><b>How can I create user-controlled turrets?</b><br>

			You can't with the default turret entities in Quake 2. You have to use the
            Jailbreak TC or Mappack to have a player controlled turret or code your own entity.

			<br><br><i><a href="/node/20/#Top">Top</a></i><br>&nbsp;
		
		<a name="6">
        <li><b>How do I get double doors or other multi-part doors to open at the same time?</b><br>

            You can use the Team attribute to accomplish this. In the Team attribute, put the same
            name for all the components of the door. When a section of the door opens, all the other
            sections with the same Team attribute also open. 

			<br><br><i><a href="/node/20/#Top">Top</a></i><br>&nbsp;
		
		<a name="7">
        <li><b>What is the maximum distance from the&nbsp;0,0,0 origin that a map can be?</b><br>

            The maximum size of a map is +4048 or&nbsp; -4048 on any axis from the 0,0,0 origin.

			<br><br><i><a href="/node/20/#Top">Top</a></i><br>&nbsp;
		
		<a name="8">
        <li><b>How do I get multiple items to spawn in Deathmatch Mode, like in some of the Id
            levels where the BFG and Rocket Launcher interchangeably spawn? </b><br>

            Once again, use the Team attribute for the two entities. Place the two items (for
            example, the RL and BFG) and give each the same team name (for example,
            &quot;weaponspawn&quot;). Then, one of them will be spawned, after that item it taken, the
            next item with the same Team attribute will spawn the next time. 
			
			<br><br><i><a href="/node/20/#Top">Top</a></i><br>&nbsp;
		
		<a name="9">
        <li><b>How to I make &quot;wind tunnels&quot; like the stuff that pushes players along?</b><br>

            See the Tutorials page here at Rust and look for the trigger_push entity. 

			<br><br><i><a href="/node/20/#Top">Top</a></i><br>&nbsp;
		
		<a name="10">
        <li><b>Ok, I made a &quot;wind tunnel&quot; with the trigger_push entity.&nbsp; Now,
            how do I turn it on or off? </b><br>

            Unfortunately, you can't turn the trigger_push on or off using the standard Q2 entity.
            It's an all-or-nothing deal. The best you can do is turn it off <b>for good</b> in
            a level, by using the killtarget attribute of another trigger or button. You'll notice Id
            used this technique in one of their levels.<br>
            <br>
            <a href="http://mappack.gamedesign.net">Mappack</a> (a Q2 mod) allows for switchable
            trigger_push entities.

			<br><br><i><a href="/node/20/#Top">Top</a></i><br>&nbsp;
		
		<a name="11">   
        <li><b>How do I make doors that &quot;swing out&quot; on hinges like my doors at home?</b><br>

			Now we're getting into the rather obvious. Read the tutorial on the func_rotating_door 
			entity on the Tutorials page here at Rust. 

			<br><br><i><a href="/node/20/#Top">Top</a></i><br>&nbsp;
		
		<a name="12">
        <li><b>How do I get rid of the teleporter's base and &quot;sparkles&quot; in Quake 2?</b><br>

			Unlike Quake 1, which had no visible signs of teleporters, Quake 2 teleporters have a
			base and &quot;sparkles&quot; in the later releases of the Quake2 engine. There is a quick
			&quot;trick&quot; to get around this if you have a deep enough floor. You can simply
			move the entity down a few Quake units into the floor and both the base and the
			&quot;sparkles&quot; will disappear. Unfortunately, there is no way to get rid of this if
			you can't embed the entity into the floor except via coding a new entity or using a mod
			that has such an entity. <br>
			<br>
			<a href="http://mappack.gamedesign.net">Mappack</a> (a Q2 mod) allows for teleporters
			without the &quot;sparkles&quot; entities.

			<br><br><i><a href="/node/20/#Top">Top</a></i><br>&nbsp;
		
		<a name="13">
        <li><b>How do I get that cool looking &quot;space&quot; sky in my maps? Or, how to I
            get a sky to appear at all? </b><br>

			Skies in Quake 2 are slightly different. They need to be defined using the Sky
			attribute in the Worldspawn entity. (And to keep all you Qoole users from asking, you
			modify the Worldspawn entity in Qoole by not having anything else selected and choosing
			the entity properties). The valid skies are unit1_ through unit9_ and space1. Then, any
			texture with a surface property of sky will use the sky defined. (See the tutorial page
			for information about Surface and Content Properties) 

			<br><br><i><a href="/node/20/#Top">Top</a></i><br>&nbsp;
		
		<a name="14">
        <li><b>I want to make a complex brush with a 90 degree turn in it, how do I do this? </b><br>

            Unfortunately, you cannot make just one big brush with a 90 degree bend in it. It must
            be made of smaller separate brushes (you can later group them in you editor). This is
            because the Quake engine cannot handle concave brushes. You can check if a brush is
            concave in your head like this: Think of one of the vertices in the brush, and see if you
            can make an imaginary line to another one, where the line goes outside the brush.

			<br><br><i><a href="/node/20/#Top">Top</a></i><br>&nbsp;
		
		<a name="15">
        <li><b>Can I mix entities for the same object? For example, can I make a func_train
            also a func_explosive? </b><br>

            No. Quake 2 entities can only be assigned to a single entity. You can NOT make the same
            object two different entities. 

			<br><br><i><a href="/node/20/#Top">Top</a></i><br>&nbsp;
		
		<a name="16">
        <li><b>Can I have moving lights in my Quake 2 level?</b><br>

            Not without coding or using a mod that supports it. The original Quake 2 engine doesn't
            allow the default light entities to move. The Quake 2 Mission Pack: The Reckoning,
            however, has a rotating_light entity.

			<br><br><i><a href="/node/20/#Top">Top</a></i><br>&nbsp;
		
		<a name="17">
        <li><b>How do I make the func_train entity rotate? </b><br>

            You can't. The func_train entity in Quake 2 can't rotate around an axis. Like the
            rotating light question however, it all depends on how an entity is coded. Hexen II, for
            example, has such an entity. So, you'll either have to do coding of your own entity to do
            this or find a mod that has one. 

			<br><br><i><a href="/node/20/#Top">Top</a></i><br>&nbsp;
		
		<a name="18">
        <li><b>How do I make glass that can be shot? </b><br>

            Apply a texture that has the trans_33 or trans_66 property applied (see the Surface and
            Content Properties tutorial) and make the object a func_explosive. You may want to also
            target a target_speaker entity to create the breaking glass sound. 

			<br><br><i><a href="/node/20/#Top">Top</a></i><br>&nbsp;
		
		<a name="19">
        <li><b>How do I create those fancy &quot;sparks,&quot; like the ones found in
            base1.bsp? </b><br>

            The &quot;sparks&quot; themselves are actually the target_splash entity. However, as
            the entity name implies, this entity needs to be targeted in order to work. Typically, the
            target_splash entity is targeted by a func_timer entity, with the random property set. See
            the target_splash and func_timer tutorials on the tutorials page for more information. 

			<br><br><i><a href="/node/20/#Top">Top</a></i><br>&nbsp;
		
		<a name="20">
        <li><b>I created a transparent window on my train/door/moving entity, but it won't move
            with the rest of the entity...why?</b><br>

			The Quake 2 engine doesn't allow transparent items to move. This means that you can't
			have windows or other transparent surfaces on trains, doors, etc.

			<br><br><i><a href="/node/20/#Top">Top</a></i><br>&nbsp;
		
		<a name="21">
        <li><b>I've heard someone mention &quot;point entity&quot; and &quot;solid
            entity.&quot; What's the difference between the two? </b><br>

            A point entity is an entity that doesn't require a user-defined model to work. For
            example, a monster is an example of a point entity since it has a pre-defined model
            associated with it. A solid entity, however, requires the editor to manually define a
            brush to be associated with the entity. For example, a door entity is an example of a
            solid entity. The editor has to define what brush (or brushes) make up the physical door.
            If a solid entity is not associated with a brush, a PF:SetModel = None error or something
            similar when the level is started. 

			<br><br><i><a href="/node/20/#Top">Top</a></i><br>&nbsp;
		
		<a name="22">
        <li><b>How do I create the F1 computer messages and increment the Goals count? </b><br>

            Use a target_help to create the message. If you need a multi-lined message put
            &quot;/n&quot; without the quotes or spaces between the words where you want the break to
            occur. The target_goal is used to increment the Goals count. Typically, you'll want to
            have both entities named with the same targetname and triggered by an event. See the
            tutorials page for more information. 

			<br><br><i><a href="/node/20/#Top">Top</a></i><br>&nbsp;
		
		<a name="23">
        <li><b>How do I create multi-line text in the F1 computer message, trigger message,
            level start message, etc.?</b><br>

            Simply use \n (forward slash + n) to create a Q2 line break. Additionally, you
            should <b>not</b> have any spaces before or after the \n. For example, if
            you wanted to have:<br>
            My Level<br>
            By Me<br>
            as the level title, you'd put &quot;My Level\nBy Me&quot; (without quotes) in the
            Worldspawn entity.

			<br><br><i><a href="/node/20/#Top">Top</a></i><br>&nbsp;
		
		<a name="24">
        <li><b>How do I create the cool force field doors that were in the prison levels of Q2?</b><br>

            Use a func_wall, with one of the force field textures (redfield or yelfield) and make
            it transparent using the surface properties. Then, give the func_wall a targetname and
            have it activated by a trigger or button. 

			<br><br><i><a href="/node/20/#Top">Top</a></i><br>&nbsp;
		
		<a name="25">
        <li><b>I applied the func_water to create a pool of water and it's not transparent.
            Why? </b><br>

            The func_water entity isn't required for static pools of water or water with currents.
            It's a specialized entity used for rising/falling water that's activated by a trigger or
            button. However, the water texture used for func_water can not be transparent! See the
            func_water tutorial for details.<br>
            To create other types of water, make sure the same water texture is applied to all sides
            of the brush. 

			<br><br><i><a href="/node/20/#Top">Top</a></i><br>&nbsp;
		
		<a name="26">
        <li><b>I tried to make a rotating door. I even put the Origin brush in by giving a
            brush the Origin texture on all sides, but now I'm getting an error like &quot;Origin not
            allowed in world&quot; Why doesn't this work?</b><br>

            This occurs when the Origin brush hasn't been properly grouped with the rest of the
            brushes before making it a rotating door or object. Different editors may require their
            own method of grouping or use the func_group entity, so check the documentation or
            editor-specific boards for grouping information. 

			<br><br><i><a href="/node/20/#Top">Top</a></i><br>&nbsp;
	</ul>

<hr color=black noshade width=75%>
<h3>Textures and Surface Properties</h3><br>

	<ul type="square">
		<a name="27">
        <li><b>How do I create ladders? Are they some sort of entity type or something? </b><br>

            Ladders aren't a separate entity, rather they are created by applying the ladder
            surface property to ALL sides of a brush to create the ladder. See the Surface Properties
            tutorial on the tutorials page for more information. 

			<br><br><i><a href="/node/20/#Top">Top</a></i><br>&nbsp;
		
		<a name="28">
        <li><b>What about currents...how are they created? </b><br>

            Like ladders, currents are created by applying the appropriate current surface property
            to liquid textures. See the Surface Properties tutorial on the tutorials page for more
            information. 

			<br><br><i><a href="/node/20/#Top">Top</a></i><br>&nbsp;
		
		<a name="29">
        <li><b>I've got a texture with text on it, but the text is backwards. How do I 'flip'
            the texture so the text is readable?</b><br>

            Textures can be 'flipped' by putting a -1 value in the X-axis Scale attribute for that
            texture surface. This is most useful for textures that have some sort of readable text. 

			<br><br><i><a href="/node/20/#Top">Top</a></i><br>&nbsp;
		
		<a name="30">
        <li><b>How do I create &quot;one-way&quot; see-through walls, similar to Quake 1?</b><br>

            Create a func_wall entity on a brush.&nbsp; Then, on the side you want to see <strong>through</strong>,
            select the Skip surface property.

			<br><br><i><a href="/node/20/#Top">Top</a></i><br>&nbsp;
		
		<a name="31">
        <li><b>How do you make it so an animated texture moves when triggered like in the
            research lab where you hit a button and the display monitor texture starts moving?</b><br>

            That particular &quot;trick&quot; is done as follows: It's actually two separate
            func_walls at each monitor location. The func_wall that's initially seen has trigger
            spawn, toggle, start on, and animated spawnflags set. The other has trigger spawn and
            toggle spawnflags. Both func_walls have the same targetname. The button targets both
            func_walls, and their visibility flip-flops. 

			<br><br><i><a href="/node/20/#Top">Top</a></i><br>&nbsp;
		
		<a name="32">
        <li><b>I've noticed the Animated and Animated Fast spawnflag for certain solid
            entities.&nbsp; What exactly do these flags do?</b><br>

            It basically makes certain animated texture animated. Animated Fast makes it animate
            faster than normal. However, it should be noted that this does only work with certain
            textures, for example, e1u2/keydran1_1(&amp; 1_2). Other textures may not show any effect
            with those spawnflags.

			<br><br><i><a href="/node/20/#Top">Top</a></i><br>&nbsp;
		
		<a name="33">
        <li><b>How can I make mirrors in Quake 2? I've seen other games do this (like GLQuake
            1) if I've got a 3DFx card. </b><br>

            Unfortunately, Quake 2 doesn't support mirrors or 'reflecting' textures. 

			<br><br><i><a href="/node/20/#Top">Top</a></i><br>&nbsp;
		
		<a name="34">
        <li><b>Does Quake 2 store textures in the .bsp files like Quake 1?</b><br>

            No, one difference between Quake 2 and the original Quake is that textures are no
            longer stored with .bsp files.

			<br><br><i><a href="/node/20/#Top">Top</a></i><br>&nbsp;
		
		<a name="35">
        <li><b>So, how do I include a new texture with my map?</b><br>

            There are 2 ways to do this:<br>
            -When you .zip up the file for distribution, create a \textures directory and include the
            new texture(s) in the .zip file.<br>
            -Create a .pak file which includes the .bsp and the textures.&nbsp; Keep in mind you may
            need to have the player create a new subdirectory under the Quake2 directory and have them
            run the map with the +set game parameter.

			<br><br><i><a href="/node/20/#Top">Top</a></i><br>&nbsp;
		
		<a name="36">
        <li><b>How do you make animated textures in Q2?</b><br>

            1) Download <a href="http://www.telefragged.com/wally/">Wally</a><br>
            2) Make the frames of your animated sequence as <b>separate</b> wal files.<br>
            3) Go into the texture properties box in Wally, and, in the box labeled 'Next animation
            texture' fill in the filename of the next frame.

			<br><br><i><a href="/node/20/#Top">Top</a></i><br>&nbsp;
	</ul>

<hr color=black noshade width=75%>
<h3>Compiling, Leaks and Errors</h3><br>

	<ul type="square">
		<a name="37">
        <li><b>Every time I try to compile my map with the latest versions of qbsp3.exe or any
            of the other compilers, it crashes and I get some message saying that the program
            performed an illegal option or something to that effect. How do I fix this?</b><br>

            You don't have enough virtual memory for the compilers to finish (they're hogs, so you
            have to give them plenty of room!) Go to Control Panel, System, Performance, Virtual
            Memory. Turn off letting Win95 (or Win98) handle the swapfile and switch it to be located
            on the drive with the most free space. It's not unusual for the compilers to need 100Mb to
            500Mb of free space, depending on the size of the maps. <br>
            <br>
            Unfortunately, if you don't have that sort of room you've got 2 choices:<br>
            -delete some stuff (and run a disk defrag afterwards)<br>
            -get another hard drive.

			<br><br><i><a href="/node/20/#Top">Top</a></i><br>&nbsp;
  		
		<a name="38">
        <li><b>After compiling my level, I notice that I can see &quot;through&quot; the sky
            into another room in my level. How can I keep this from happening?</b><br>

            First, make sure that you've done a full VIS which sometimes helps clear up this
            problem. Also, you can use a Hint brush between the player and the sky.
            However, sometimes these methods won't clear up the problem, so you have to always
            consider this when designing your maps. Plan ahead and if need be, use blocker walls
            and the like to help obstruct the view into these areas.

			<br><br><i><a href="/node/20/#Top">Top</a></i><br>&nbsp;
		
		<a name="39">
        <li><b>My level takes ### hours/days/weeks to compile. Am I doing something wrong? </b><br>

            This is a next-to-impossible question to answer. The fact is that how complex your
            level is determines how long it will compile. And this means how complex your level is to
            the Quake engine, not your perception of complex. If your level is taking longer than you
            think it should, you need to understand WHY it's taking so long. Things like texture
            lighting, large open spaces, etc. can all dramatically increase the time it takes to
            compile a level. See the Tutorials and Style pages here at Rust for a better idea of how
            to create good levels. 

			<br><br><i><a href="/node/20/#Top">Top</a></i><br>&nbsp;
		
		<a name="40">
        <li><b>My map has gotten bigger, and all of a sudden, some of the items or doors in my
            level disappear at certain angles...what causes this and how can I fix it? </b><br>

            In most instances, a full VIS compile on the level will correct this. Typically, this
            solves the problems. However, if it occurs after a full compile, you've probably got an
            area that's far too complex or big for the Quake2 engine to handle. In which case, you'll
            have to simplify your level. 

			<br><br><i><a href="/node/20/#Top">Top</a></i><br>&nbsp;
		
		<a name="41">
        <li><b>Why is my map always/never lighted, even though I place entities? (I have a
            leak, btw) </b><br>

            Check your maps for leaks during the BSP compile. If you see the message
            &quot;***Leaked***&quot; any time during that compile, then the VIS and Radiosity
            compilers will not take effect. Hence, the level will either be completely dark or
            fullbright.

			<br><br><i><a href="/node/20/#Top">Top</a></i><br>&nbsp;
		
		<a name="42">
        <li><b>Ok, I checked and my map doesn't leak, yet it's still not lighted, even though I
            place entities? </b><br>

            Be sure you're running the compilers in order. The proper order is QBSP, then the VIS
            compiler, finally the Radiosity compiler (which handles lighting). Additionally, make sure
            ambient light is set to zero or a decimal value.

			<br><br><i><a href="/node/20/#Top">Top</a></i><br>&nbsp;
		
		<a name="43">
        <li><b>How do I convert a .bsp file to a .map file? </b><br>

            See the Links and File Server pages here at Rust for .bsp to .map converters and for
            Quark.

			<br><br><i><a href="/node/20/#Top">Top</a></i><br>&nbsp;
		
		<a name="44">
        <li><b>After doing a full compile with all 3 compilers, I notice light
            &quot;leaks&quot; under doors and the like. What's going on here?</b><br>

            Entities are not calculated during the radiosity compile, so they can't block light.
            So, you get a &quot;leaking&quot; effect since the Q2 engine and light compiler
            pretty much act as if the door isn't there. Unfortunately, there is no way to
            actually prevent this from happening, so you have 2 options: either move the light far
            enough away (or decrease its intensity) from the door or put an offsetting light on the
            other side of the door for a more gradual lighting effect.

			<br><br><i><a href="/node/20/#Top">Top</a></i><br>&nbsp;
		
		<a name="45">
        <li><b>I've heard of a &quot;level 4&quot; compile for VIS, but there seems to be some
            debate as to whether this actually does anything.&nbsp; Does using the -level 4 parameter
            actually do anything for Quake 2 maps?</b><br>

            No, a -level # parameter used with the VIS compiler will be ignored by the compiler for
            Quake 2. The -level 4 parameter for the VIS compiler DID improve the quality of
            Quake 1 maps, but with Quake 2 the parameter is ignored. So, while it can be
            specified, it won't actually make any improvements to the maps (nor will it have any
            adverse affects.) It's merely a carryover from the Q1 days.

			<br><br><i><a href="/node/20/#Top">Top</a></i><br>&nbsp;

	<p>For the most common compiler errors, visit the <a href="quake2/q2errors.shtml">Errors
       FAQ</a>.</p>

	</ul>

<hr color=black noshade width=75%>
<h3>CTF &amp; Xatrix Entities</h3><br>

	<ul type="square">
		<a name="46">
        <li><b>What entities are needed for CTF to work? </b><br>

            CTF requires both player starts (info_player_team1 and info_player_team2) and flags
            (item_flag_team1 and item_flag_team2). However, other player starts are added using the
            deathmatch player starts. Additionally, you don't need to place the 4 CTF powerups, since
            they are automatically placed into CTF maps. See the tutorials page for more information. 

			<br><br><i><a href="/node/20/#Top">Top</a></i><br>&nbsp;
		
		<a name="47">
        <li><b>What new entities are in the Xatrix Mission Pack 1: The Reckoning?</b><br>
			<ul><br>
				 <b>Monsters</b>
				<li><i>Monster_chick_heat</i> - Chick Heat - Same as the Quake2 Chick but her missiles
					follow you.
				<li><i>Monster_gladb</i> - Phalanx Gladiator - Same as the QuakeII Gladiator but he fires
					a Phallanx Cannon instead of a Rail Gun. Also has a power shield.
				<li><i>Monster_boss5</i> - Super Tank - Same as the Boss Tank in Quake2 but with a power
					shield.<br>
				<li><i>Monster_gekk</i> - Gekk - Man sized lizard. Humanoid in shape. Jumps real high,
					swims, runs, moves fast, and spits acid.
				<li><i>Monster_fixbot</i> - Fixer Bot - Roams around and repairs things and reanimates
					monsters.
				<li><i>Func_object_repair</i> - Object to be repaired - Creates small sparks that the
					Fixer Bot will move towards and start to weld (it doesn't actually fix anything it's a
					visual effect)
				<li><i>Brain</i> - Not a Xatrix entity but when used with the Reckoning Mission Pack has
					beefed up abilities. Now has a laser and a parasite like tongue that grabs you from a
					distance and drags you within slashing range.
				<li><i>Monster_soldier_hypergun</i> - HyperBlaster Soldier - Same as the Light Guard in
					Quake2 except he carries a hyperblaster.
				<li><i>Monster_soldier_lasergun</i> - Lasergun Soldier - Same as the Light Guard in Quake2
					except he carries a laser rifle.
				<li><i>Monster_soldier_ripper</i> - Ripper Soldier - Same as the Light Guard in Quake2
					except he carries an ion ripper rifle.<br>
					<br>
				 <b>Weapons and Ammo</b>
				<li><i>Weapon_boomer</i> - Ion Ripper - Shoots an energy boomerang that ricochets around
					corners.
				<li><i>Weapon_phalanx</i> - Phalanx - High powered energy weapon.
				<li><i>Ammo_magslug</i> - Ammunition for the Phalanx Cannon
				<li><i>Ammo_trap</i> - Creates a vortex that sucks enemies in and turns them into power
					cubes that you can use.<br>
					<br>
			     <b>Items</b>
				<li><i>Item_quadfire</i> - Increases the firing rate of all your weapons.
				<li><i>Rotating_light</i> - Like a red police dome.
				<li><i>Target_mal_laser</i> - Same as the Quake2 laser entity but it flashes on and off.<br>
					<br>
                 <b>Misc. Items</b>
				<li><i>Misc_amb4</i> - Ambient sound effect
				<li><i>Misc_nuke</i> - Kills everything on a level (including yourself). Good when you
					know you're going to die and want to take everyone with you or as used in the Mission Pack
					a self destruct device where you have to get out quick.
				<li><i>Misc_transport</i> - This is the HUGE transport ship at the end of the Mission
					Pack. It has to be triggered and targeted to a path corner to be visible.
				<li><i>Misc_crash_viper</i> - Works the same as the Big Viper in Quake2
				<li><i>Misc_viper_missle</i> - Supposed work like the viper bomb but instead it acts like
					a missile.
			</ul>

			<br><i><a href="/node/20/#Top">Top</a></i><br>&nbsp;
	</ul>

<hr color=black noshade width=75%>
<h3>Console Commands</h3><br>

	<ul type="square">
		<a name="48">
        <li><b>How do I bring up the Quake 2 console? </b><br>

            Hit the tilde key &quot;~&quot; to bring up the Quake 2 console. Type a command
            and hit &quot;Enter&quot; or &quot;Return&quot; to execute a command. Then, hit the
            tilde key again to close the console and return to play.

			<br><br><i><a href="/node/20/#Top">Top</a></i><br>&nbsp;
		
		<a name="49">
        <li><b>What are some of the useful editing console commands?</b><br>

			Some of the more useful commands are:
			<ul>
				<li><i>noclip</i>: Allows the player to go through walls and objects.
				<li><i>r_speeds 1/0</i>: Turns r_speeds on/off. This allows you to view the
					poly count and other useful information for a level. The output depends on the video
					mode.
				<li><i>gl_showtris 1/0</i>: (You can only use this if you have a full
					open/GL card. 3Dfx owners, see the Techniques page) This command allows you to see how the
					brushes were broken up into polys by the QBSP compiler. Useful for seeing WHY the
					poly count is high in an area.
				<li><i>imagelist</i>: Displays a list of all images used in the level.
				<li><i>info</i>: Displays selected information about your map.
				<li><i>notarget</i>: Allows the player to move through the map without
					being &quot;seen&quot; by monsters.
			</ul>

			<br><i><a href="/node/20/#Top">Top</a></i><br>&nbsp;
	</ul>
<hr color=black noshade width=75%>
<h3>Advanced Questions</h3><br>
	<ul>
		<a name="50">
        <li><b>How do I configure difficulty settings for my levels?</b><br>

            A lot will depend on the editor you use. However, difficulty settings are
            configured for entities by the use of spawnflags. If you have to manually enter the
            spawnflag values in your editor, the values are as follows:<br>
			<ul>
				<li>Not in Easy=256
				<li>Not in Normal=512
				<li>Not in Hard=1024
				<li>Not in Deathmatch=2048 (not needed for monsters or other items don't appear in DM
					mode)
			</ul><br>
            These values can be combined. For example, if you have a monster that you want to appear
            ONLY in Hard, the spawnflags would be set to 256+512=768.

			<br><br><i><a href="/node/20/#Top">Top</a></i><br>&nbsp;
		
		<a name="51">
        <li><b>What are Detail brushes and when should I use them?</b><br>

            Detail brushes are used to help speed up the compile time by &quot;hiding&quot; those
            brushes from the compilers. Since the QBSP compiler breaks up a brush if another
            brush intersects it, this means that a lot of brushes may be created. Detail brushes
            can be used for any brushes that do <b>not</b> block the player's line of site.<br>
            <br>
            This is taken from a text file included with the gamex86.dll source code. The author is
            John Carmack.<br>
			<br>
			<blockquote>
            <i>The basic idea is that you should make all of the brushes that aren't major occluders
			into detail brushes. This lets the vis program ignore all of the little protrusions that
			never really block sight. Because of the factorial order of the vis algorithm, it is
			pretty easy to get a 10x speedup in vis time by making the non-essential brushes detail.
			This also gives a method to fight some of the errors that still occur in bsps. If polygons
			are dissapearing in the game, but they come back with &quot;r_novis 1&quot; set, then
			there is a vis error. This can usually be fixed by making more of the brushes between the
			problem viewpoint and the problem polygon into detail brushes.</i> 
			</blockquote>

			<i><a href="/node/20/#Top">Top</a></i><br>&nbsp;
		
		<a name="52">
        <li><b>What are Clip brushes and when should I use them?</b><br>

            Clip brushes are often used to keep a player from getting stuck along a wall, floor or
            ceiling by any brushes that protrude from those surfaces. For example a light
            fixture or a column. There are two methods for using Clip brushes:<br>
            -Create a triangle and put it flush with the sides of the protruding object and another
            side on the wall. This allows the player to be &quot;moved out&quot; slightly when
            moving along the wall.<br>
            -Create a rectangle Clip brush that covers the whole length of the wall and is out far
            enough to cover the edges of the items sticking out of the wall.<br>
            Both methods were used in the original Id levels. Using Clip brushes is <strong>strongly</strong>
            recommended for multiplayer maps.

			<br><br><i><a href="/node/20/#Top">Top</a></i><br>&nbsp;
		
		<a name="53">
        <li><b>So, what are Hint brushes then?</b><br>

            Hint brushes help controll the poly count in a view by breaking up portals.&nbsp; A
            good tutorial of Hint brush use can be found at : <a
            href="http://users.net66.com/~gdewan/hintdesc.html">http://users.net66.com/~gdewan/hintdesc.html</a>

			<br><br><i><a href="/node/20/#Top">Top</a></i><br>&nbsp;
	</ul>

<hr color=black noshade width=75%>
<h3>Editor-Specific FAQs</h3><br>

	<ul type="square">
		<a name="54">
        <li><b>Ok, I couldn't find the answer to my question here. Maybe it's something
            specific to the editor I'm using. Where can I find FAQs for specific editors? </b><br>

			<br>
			<ul>
				<li><a href="http://planetquake.com/quark/quarkfaq.shtm">Quark</a>
				<li><a href="http://members.aol.com/dmm2editor/faq.htm">DeathMatch Maker 2 (DMM 2)</a>
				<li><a href="http://www.planetquake.com/ravage/faq.htm">QERadiant</a>
				<li><a href="http://frag.com/quest/faq.html">Quest</a>
				<li><a href="http://www.planetquake.com/worldcraft/faq/faq.shtm">Worldcraft</a>
			</ul>

			<br><i><a href="/node/20/#Top">Top</a></i><br>&nbsp;
		
		<a name="55">
        <li><b>What's the best editor?</b><br>

            Simply put...there is <b>no</b> best editor! While all of the editors have
            their own advantages/disadvantages, they all pretty much do the same thing. Check out the
            links page here to get a listing of the editors available and simply start playing with
            them. You're going to probably spend many hours in front of an editor, so it pays to
            compare them on your own and see which one fits your editing needs and abilities.

			<br><br><i><a href="/node/20/#Top">Top</a></i><br>&nbsp;
		
		<a name="56">
        <li><b>Since I've started Quake2 editing, I've lost every second of the day to editing.
            My wife left me, the dog has run away, and I no longer have any friends (although, I think
            the QBSP compiler is starting to like me). What should I do? </b><br>
  
            Be aware that to really make good maps, you're probably going to have to put in some
            serious time! Of course, it's only a game and you <b>CAN</b> have a life if you
            work at it...otherwise, buy a cat or goldfish since they tend to be less dependent on you
            for survival. 

			<br><br><i><a href="/node/20/#Top">Top</a></i><br>&nbsp;

	</ul>
 </p>

<!-- eof @ 866 --></ul><h1 id="603" name="603" class="book-h2">Updates</h1><ul>Latest updates for Quake II</ul><h1 id="604" name="604" class="book-h3">Version 3.20 Patch</h1><ul><h3>Quake II Version 3.20 Patch</h3>

<blockquote>
	<p>The latest Quake II updates are always found at <a href="http://www.idsoftware.com/">ID Software</a>. The following is a list of the latest fixes.
</blockquote><br><br>

<hr noshade color="black">

<h3>CHANGES 3.20</h3>
    
- Fixed a network problem where and oversize packet could cause a client crash.<br><br>

- Fixed the long standing Quake2 bug of where you would occasionally spawn or teleport and find yourself either looking straight at the ceiling or down at the floor.<br><br>

- Changed it so that the function keys (F1 through F12) now get executed when depressed during demo playback or attract modes.  This allows you to take screen shots (F12) during demos and other features.  An example of other features is a fast forward for demos:<br><br>

<blockquote>
      alias +ff "timedemo 1"<br>
      alias -ff "timedemo 0"<br>
      bind f7 +ff<br>
</blockquote>
  
This binding will cause the current demo playing to zip into timedemo mode while F7 is depressed, effectively acting like a fast forward key.<br><br>

- Wrong packaging of 3.19 patch.  The Rogue CD has a 45k pak2 and vwep .md2 files in baseq2/players, but the 3.19 x86 patch we released has a 2.7MB pak2.  3.20 has a 45k pak2 and the vwep models go in baseq2/players.<br><br>

- VWep code has been added to Xatrix dll, new VWep models for the Xatrix specific weapons (Ion Ripper and Phalanx) have been included.<br><br>

- Rogue Linux game library was wrong version and had some unlinked symbols,this has been corrected.<br><br>

- Occasional error of: "D_SCAlloc: bad cache width 16384" in software renderer.This had to do with surfaces to SURF_FLOWING and were transparent.  This has been fixed in the refs now so flowing transparent textures now works.<br><br>

- <u>Unix</u> Net_ErrorToString calls were wrong, was using %i and not %s resulting in random numbers being printed for error messages.<br><br>

- Color shell mixing restored to the same blends as previous versions.  This was changed in 3.19 for the new color shells the Rogue mission pack introduced.<br><br>

- Fixed a possible server crash in the new "playerlist" command.<br><br>

- Fixed a case where a person joining a server could be invisible (left over setting of SVF_NOCLIENT from previous spectator).<br><br>

- Invalid pak files no longer cause a crash and are just ignored<br><br>

- Fixed a 3.19 bug where linked models (modelindex2) who's modelindex was greater than 0x7f causes the wrong model to be drawn (in some cases, the world would be drawn twice).  This was the cause of many of the "extreme" frame lag people were seeing in 3.19 on servers using old-style VWep code.<br><br>

- <u>Linux:</u> Complete rewrite of the OpenGL library handling.  This was needed to cleanly integrate OpenGL extension checking.  Linux now supports extensions such as multitexture and better dynamic loading of libraries. It's cleaner now in that you don't have to preload hack stuff to use the 3DFX Miniport rather than libMesa3D.  The Linux version now uses the gl_driver to specify the 3D library to dynamically load.  For example, to use the lib3dfxgl.so miniport, one would now use:<br><br>

<blockquote>
      ./quake2 +set vid_ref gl +set gl_driver lib3dfxgl.so<br>
</blockquote>

This change fixes several bugs that were apparant in the older method, such as a segfault occasionally when connecting to a server with a different game directory. The vid menu in the Linux version has been changed to reflect the new options, the current list of supported video drivers are now:<br><br>

<blockquote>
  software, software X11, Mesa 3-D 3DFX, 3DFXGL Miniport, OpenGL glX, and Mesa 3-D glX<br>
</blockquote>

- Railgun shots now go through gibs as well as other players.<br><br>

- New server variable, "needpass" that can been seen with server browser tools such as GameSpy.  This variable indicates whether a password or spectator password is needed to get onto a server.  Bit 0 is password and bit 1 is spectator password.<br><br>
 
- Quake2 will no longer look for gamex86.dll in the main Quake2 directory. It will always load out of the game directory first.<br><br>

- Players joining a server during an intermission are now moved to the intermission position.<br><br>

- The "logfile" cvar has been extended with the following values:<br><br>

<blockquote>
	0 - don't log (default)<br>
	1 - overwrite qconsole.log and use buffered writes<br>
	2 - overwrite qconsole.log and flush write every line<br>
	3 - append to existing qconsole.log and flush write every line<br>
</blockquote>

- Several minor bug fixes to the Rogue mission pack gamex86.dll<br><br>

- <u>Linux:</u> Rebuild of Rogue mission pack shared library to correct some dynamic symbol errors (is NAN errors).<br><br>
</ul><h1 id="263" name="263" class="book-h2">Miscellaneous</h1><h1 id="279" name="279" class="book-h3">Compiling Errors</h1><ul><H2>Compiling Errors</H2>

<P>When I first started RUST I didnt want to cover errors because it would be so much work but I've recieved so many emails I decided to do it anyways. This is far from complete and I haven't even tried to explain any of the errors that I know how to fix or what causes them. I just don't have time.</P>

<P>But...I will cut and paste the emails I get from people who know what these error messages mean and how to fix them.</P>

<P>This page is very nasty and I am sure I am missing some errors or made mistakes on a lot of them. All I did was extract them from the source. So if you have any answers to these errors or have errors to add then please tell us.</P>

<B>Shane 'Fishman' Sherman</B>
<BR><BR>
<I>(Note: The error list has been added to considerably since Fishman wrote the above)</I>
<UL>
<LI>
    QBSP3 Errors
<LI>
    QVIS3 Errors
<LI>
    Qrad3 Errors 
</UL>

</ul><h1 id="280" name="280" class="book-h4">QBSP3 Errors</h1><ul><H2>QBSP3 Errors</H2>

If you have any answers to these errors or have errors to add then please tell us. Use CTRL+F to search this page for a specific error.
<BR><BR><HR><BR><BR>

<H3># SubdivideFace didnt split the polygons</H3>
<UL><I>[No Information At Present]</I></UL>


<H3># Mixed Face Contents</H3>

<UL>Content properties all have to be the same for a brush...you cant have 2 different ones on one brush...this is different for surface properties.</UL>



<H3># numvertexes == MAX_MAP_VERTS</H3>

<UL>The map is too big, it exceeds some of Quake 2/qbsp3/qrad3/qvis3's internal maximums. Simplify, make it smaller, or split it up.</UL>



  <H3># Leak***</H3>

          <UL>you have a hole in your map. Your map must be completely closed. Most editors come with leaking finding tools.</UL>



  <H3># bad planenum</H3>

          <UL>The map is too big, it exceeds some of Quake 2/qbsp3/qrad3/qvis3's internal maximums. Simplify, make it smaller, or split it up. Quake 2 has a limit of 65536 planes it can support and a brush has a face that excedes that limit.</UL>



  <H3># Tried parent</H3>

          <UL>A brush has a surface that is in the same plane as a parent entity. This is checked when splitting brushes up and building the partitions for later processing. The most likely source of the problem is that a brush is malformed and needs to be fixed up or removed.</UL> 



  <H3># PSIDE_FACING with splits</H3>

          <UL>This error should never occur due to the way that the conditions required to cause it. The source is checking a surface property and the number of splits for a brush that are necessary. However the routine that would generate the conditions for this error has an #if 0 / #endif around the part that would set the second condition for this error code (s&PSIDE_FACING) so noone should ever see this error. If they do, Id love to see the .MAP and find out how!</UL> 



  <H3># Can't write mapname</H3>

          <UL>There is a problem with your HD, it might be full. Is your map file opened in another program?</UL>



  <H3># HashVec: point outside valid range</H3>

          <UL>There's a vertex outside the valid range. The maximum extents of a Quake 2 level is (in all dimensions) -4096 to +4096.</UL>



  <H3># GetVertexnum: outside +/- 4096</H3>

          <UL>These are "map is too damn big" errors. Somewhere the map is out of the +/- 4096 bounds. Make your map smaller or make sure its in the middle and not way off to the side of the bounds.</UL> 



  <H3># MAX_SUPERVERTS</H3>

          <UL>The map is too big, it exceeds some of Quake 2/qbsp3/qrad3/qvis3's internal maximums. Simplify, make it smaller, or split it up.</UL> 



  <H3># numedges == MAX_MAP_EDGES</H3>

          <UL>The map is too big, it exceeds some of Quake 2/qbsp3/qrad3/qvis3's internal maximums. Simplify, make it smaller, or split it up.</UL> 



  <H3># SubdivideFace: didn't split the polygon</H3>
<UL><I>[No Information At Present]</I></UL>


  <H3># Winsock initialization failed</H3>

          <UL>When the -draw flag is specified, then QBSP3 will attempt to open a WinSOCK connection to the GLServer port of 25001. However since noone ever inits the drawflag in the C code, it is up to the compiler to decide if it is set to NULL or if it not init'd. The latter case means that some compilers may cause drawflag to be accidentally set due to memory garbage. In any case, this problem should only really appear when the user specifies '-draw' on the QBSP3 command line and they do not have WinSOCK (TCP/IP) installed on their system. Two simple workarounds for this are:<BR><BR>
<UL>


         <LI>Do not set the -draw flag on the QBSP3 command line. This should be something that most users dont do anyways!<BR><BR>
         <LI>Install the Netscape "fake" WinSOCK.dll file (called Mosock.dll or something funky like that). It is essentially a WinSOCK.dll that contains NULL WinSOCK routines so that a client does not really have to install and configure TCP/IP on their clients but they can use it when viewing local web pages.<BR><BR>
         <LI>A third workaround is something that more advanced users can do: simply rename qbsp3\gldraw.c to qbsp3\ogldraw.c and rename qbsp3\nodraw.c to qbsp3\gldraw.c. This effectively stubs out all of the Draw_* routines that come from processing the tree nodes.</UL></UL>



  <H3># draw_socket failed</H3>

          <UL>Related to the Winsock error above. The reason for the failure is that WinSOCK coudl not create a socket for steaming the data to later on. The same answers for dealing with this apply from the error above.</UL> 



  <H3># Couldn't open</H3>

          <UL>This error occurs 2 times. One time is when QBSP3 attempts to create and open the .GL file (if the user put -glview on the command line). If QBSP3 gets ANY error doing this, it stops w/o indicating what the error may be. The second time is when QBSP3 attempts to create and open the .LIN file to save the leak information. The most common reasons for either failing is probably lack of disk space or if you are attempting to save to a network file server, no rights to create new files (although why QBSP3 doesnt give the same error when generating the .PRT or .BSP files is something Id have to look at later).</UL> 



  <H3># Can't write expanded.map</H3>

          <UL>You did not list this error but it is in the code. This is the error that QBSP3 generates when it cannot create the file named expanded.map. This file is generated if QBSP3 is unable to create the file that would contain all the new brush info. This file is generated in TestExpandBrushes() just before QBSP3 gives the can't proceed after expanding brushes error message. However upon diggin into the code more I noticed that the routine TestExpandBrushes() is never called (its call in LoadMapFile() is commented out). As a result, no one should EVER see this error message.</UL> 



  <H3># FloatPlane: bad normal</H3>

          <UL>Happens with vertex editing when the geometry is invalid, for example when you alter the number of faces (ie: take a block [6 sides], take two vertices from the top and bring them over the lower 2 vertices to transform the block brush in a wedge [5 sides]. The face isn't a plane anymore (now an edge) so the normal can't be calculated).</UL> 



  <H3># MAX_MAP_PLANES</H3>

         <UL>The map is too big, it exceeds some of Quake 2/qbsp3/qrad3/qvis3's internal maximums. Simplify, make it smaller, or split it up.</UL> 



  <H3># MAX_MAP_BRUSHSIDES</H3>

          <UL>The map is too big, it exceeds some of Quake 2/qbsp3/qrad3/qvis3's internal maximums. Simplify, make it smaller, or split it up.</UL> 



  <H3># nummapbrushes == MAX_MAP_BRUSHES</H3>

          <UL>The map is too big, it exceeds some of Quake 2/qbsp3/qrad3/qvis3's internal maximums. Simplify, make it smaller, or split it up.</UL> 



  <H3># parsing brush</H3>

          <UL>Your map file contains an error, so qbsp3 couldn't parse it. You'll probably need to fix it with a text editor.</UL> 



  <H3># Entity %i, Brush %i: origin brushes not allowed in world</H3>

          <UL>Caused by having the origin (center) of the Origin brush outside the bursh it is meant to rotate (func_rotating error). It occurs when you apply the "origin" surface property to a brush that is not a func_rotate(door) entity. In other words it happens when you give an origin surface property to a world brush.</UL> 



  <H3># ParseEntity: { not found</H3>

          <UL>Your map file contains an error, so qbsp3 couldn't parse it. You'll probably need to fix it with a text editor.</UL> 



  <H3># num_entities == MAX_MAP_ENTITIES</H3>

          <UL>too many entities...delete some or divide your map into 2 maps</UL>



  <H3># ParseEntity: EOF without closing brace</H3>

          <UL>Your map file contains an error, so qbsp3 couldn't parse it. You'll probably need to fix it with a text editor.</UL> 



  <H3># Entity %i: func_areaportal can only be a single brush</H3>

          <UL>A func_areaportal can only have one brush attached.</UL> 



  <H3># can't proceed after expanding brushes</H3>

          <UL>No one should ever see this error message</UL>



  <H3># Portal_EntityFlood: not a leaf</H3>
<UL><I>[No Information At Present]</I></UL>

  <H3># AddPortalToNode: allready included</H3>
<UL><I>[No Information At Present]</I></UL>

  <H3># RemovePortalFromNode: portal not in leaf</H3>
<UL><I>[No Information At Present]</I></UL>

  <H3># RemovePortalFromNode: portal not bounding leaf</H3>
<UL><I>[No Information At Present]</I></UL>

  <H3># CutNodePortals_r: mislinked portal</H3>
<UL><I>[No Information At Present]</I></UL>

  <H3># MAX_MAP_AREAS</H3>

          <UL>The map is too big, it exceeds some of Quake 2/qbsp3/qrad3/qvis3's internal maximums. Simplify, make it smaller, or split it up.</UL> 

  <H3># Unknown option</H3>

          <UL>you ran qbsp3 with an unknown option. Look here for a list of all the options</UL>

  <H3># Tried to invoke command line that wasnt valid</H3>

          <UL>you ran qbsp3 with an unknown option. Look here for a list of all the options</UL>

  <H3># usage: qbsp3 [options] mapfile</H3>

          <UL>you need to specify the map file to compile. Check here for all your options</UL>

  <H3># MAX_MAP_TEXTURES</H3>

          <UL>The map is too big, it exceeds some of Quake 2/qbsp3/qrad3/qvis3's internal maximums. Simplify, make it smaller, or split it up.</UL> 

  <H3># node->faces seperating CONTENTS_SOLID</H3>
<UL><I>[No Information At Present]</I></UL>

  <H3># !node->faces with children</H3>
<UL><I>[No Information At Present]</I></UL>

  <H3># PruneNodes: node->brushlist</H3>
<UL><I>[No Information At Present]</I></UL>

  <H3># Bad leafface</H3>

          <UL>When writing out the information about the faces to the BSP file, one had a face number larger than the largest one QBSP3 knows about. This should typically be due to some memory overwrite problems or some internal flow problems rather than anything the user did. I dont have any suggestions on how to fix the problem w/o actually debugging on a .MAP that could generate this error...</UL> 



  <H3># MAX_MAP_LEAFFACES</H3>

          <UL>The map is too big, it exceeds some of Quake 2/qbsp3/qrad3/qvis3's internal maximums. Simplify, make it smaller, or split it up.</UL> 



  <H3># MAX_MAP_LEAFS</H3>

          <UL>The map is too big, it exceeds some of Quake 2/qbsp3/qrad3/qvis3's internal maximums. Simplify, make it smaller, or split it up.</UL> 



  <H3># MAX_MAP_LEAFBRUSHES</H3>

          <UL>The map is too big, it exceeds some of Quake 2/qbsp3/qrad3/qvis3's internal maximums. Simplify, make it smaller, or split it up.</UL> 



  <H3># MAX_MAP_FACES</H3>

          <UL>The map is too big, it exceeds some of Quake 2/qbsp3/qrad3/qvis3's internal maximums. Simplify, make it smaller, or split it up.</UL> 



  <H3># MAX_MAP_SURFEDGES</H3>

          <UL>The map is too big, it exceeds some of Quake 2/qbsp3/qrad3/qvis3's internal maximums. Simplify, make it smaller, or split it up. </UL>



  <H3># MAX_MAP_NODES</H3>

          <UL>The map is too big, it exceeds some of Quake 2/qbsp3/qrad3/qvis3's internal maximums. Simplify, make it smaller, or split it up. 
</UL>


  <H3># WriteDrawNodes_r: odd planenum</H3>
<UL><I>[No Information At Present]</I></UL>

  <H3># stylenum == MAX_SWITCHED_LIGHTS</H3>

          <UL>The map is too big, it exceeds some of Quake 2/QBSP3 internal maximums. You can only have a maxium of 32 switched (ie: targetname light1) lights in Quake2. It is not clear if a light w/a targetname but is not really targeted counts towards this tally or not. To be safe, lights that are not switched should not have a targetname (until someone can verify that this does not matter). Remove some switched lights until you have less than 32.</UL>



  <H3># MAX_MAP_BRUSHSIDES</H3>

          <UL>The map is too big, it exceeds some of Quake 2/qbsp3/qrad3/qvis3's internal maximums. Simplify, make it smaller, or split it up.</UL> 



  <H3># MAX_MAP_MODELS</H3>

          <UL>The map is too big, it exceeds some of Quake 2/qbsp3/qrad3/qvis3's internal maximums. Simplify, make it smaller, or split it up.</UL> 



    </ul><h1 id="281" name="281" class="book-h3">Maximum Values Allowed In Quake 2</h1><ul><H2>Maximum Values Allowed In Quake 2</H2>
<table border="1" width="100%">
  
<tr valign="top">
    <td align="left">MAX_MAP_AREAS</td>
    <td align="left">256</td>
</tr>

<tr valign="top">
    <td align="left">MAX_MAP_BRUSHES</td>
    <td align="left">8192</td>
</tr>

<tr valign="top">
    <td align="left">MAX_MAP_BRUSHSIDES</td>
    <td align="left">65536</td>
</tr>

<tr valign="top">
    <td align="left">MAX_MAP_EDGES</td>
    <td align="left">128000</td>
</tr>

<tr valign="top">
    <td align="left">MAX_MAP_ENTITIES</td>
    <td align="left">2048</td>
</tr>

<tr valign="top">
    <td align="left">MAX_MAP_FACES</td>
    <td align="left">65536</td>
</tr>

<tr valign="top">
    <td align="left">MAX_MAP_LEAFS</td>
    <td align="left">65536</td>
</tr>

<tr valign="top">
    <td align="left">MAX_MAP_LEAFBRUSHES</td>
    <td align="left">65536</td>
</tr>

<tr valign="top">
    <td align="left">MAX_MAP_LEAFFACES</td>
    <td align="left">65536</td>
</tr>

<tr valign="top">
    <td align="left">MAX_MAP_MODELS</td>
    <td align="left">1024</td>
</tr>

<tr valign="top">
    <td align="left">MAX_MAP_NODES</td>
    <td align="left">65536</td>
</tr>

<tr valign="top">
    <td align="left">MAX_MAP_PLANES</td>
    <td align="left">65536</td>
</tr>

<tr valign="top">
    <td align="left">MAX_MAP_SURFEDGES</td>
    <td align="left">256000</td>
</tr>

<tr valign="top">
    <td align="left">MAX_SUPERVERTS</td>
    <td align="left">512</td>
</tr>

<tr valign="top">
    <td align="left">MAX_SWITCHED_LIGHTS</td>
    <td align="left">32</td>
</tr>

<tr valign="top">
    <td align="left">MAX_MAP_TEXTURES</td>
    <td align="left">1024</td>
</tr>

<tr valign="top">
    <td align="left">MAX_MAP_VERTS</td>
    <td align="left">65536</td>
</tr>
</table>

<BR><BR></ul><h1 id="264" name="264" class="book-h3">Quake 2 Sounds - Complete List</h1><ul><h2>Quake2 Sounds</H2>

The world/ sounds are the most commonly used with the target_speaker entity but you can use any sound on this page. When using them with a target_speaker don't forget to include the directory path.

For a better description of the world/ sounds please check out <A HREF="http://www.gamedesign.net/book/view/265"><b>this list.</B></A>

<H3>Monster_berserk Sounds</H3>
beserk/attack.wav<BR>
beserk/Berdeth2.wav<BR>
beserk/Beridle1.wav<BR>
beserk/Berpain2.wav<BR>
beserk/Bersrch1.wav<BR>
beserk/death.wav<BR>
beserk/idle.wav<BR>
beserk/sight.wav<BR>
beserk/xfire.wav<BR>

<H3>Monster_boss3 Sounds</H3>
boss3/Bs3atck1.wav<BR>
boss3/Bs3atck2.wav<BR>
boss3/Bs3deth1.wav<BR>
boss3/Bs3idle1.wav<BR>
boss3/Bs3pain1.wav<BR>
boss3/Bs3pain2.wav<BR>
boss3/Bs3pain3.wav<BR>
boss3/Bsp3srch1.wav<BR>
boss3/Bsp3srch2.wav<BR>
boss3/Bsp3srch3.wav<BR>
boss3/d_hit.wav<BR>
boss3/step1.wav<BR>
boss3/step2.wav<BR>
boss3/w_loop.wav<BR>
boss3/xfire.wav<BR>

<H3>Monster_boss2 Sounds</H3>
bosshovr/Bhvdeth1.wav<BR>
bosshovr/Bhvengn1.wav<BR>
bosshovr/Bhvpain1.wav<BR>
bosshovr/Bhvpain2.wav<BR>
bosshovr/Bhvpain3.wav<BR>
bosshovr/Bhvunqv1.wav<BR>

<H3>Monster_boss1 Sounds</H3>
bosstank/Btkdeth1.wav<BR>
bosstank/Btkengn1.wav<BR>
bosstank/Btkpain1.wav<BR>
bosstank/Btkpain2.wav<BR>
bosstank/Btkpain3.wav<BR>
bosstank/Btkunqv1.wav<BR>
bosstank/Btkunqv2.wav<BR>

<H3>Monster_brain Sounds</H3>
brain/Brnatck1.wav<BR>
brain/Brnatck2.wav<BR>
brain/Brnatck3.wav<BR>
brain/Brndeth1.wav<BR>
brain/Brnidle1.wav<BR>
brain/Brnidle2.wav<BR>
brain/Brnlens1.wav<BR>
brain/Brnpain1.wav<BR>
brain/Brnpain2.wav<BR>
brain/Brnsght1.wav<BR>
brain/Brnsrch1.wav<BR>
brain/melee1.wav<BR>
brain/melee2.wav<BR>
brain/melee3.wav<BR>

<H3>Monster_chick Sounds</H3>
chick/Chkatck1.wav<BR>
chick/Chkatck2.wav<BR>
chick/Chkatck3.wav<BR>
chick/Chkatck4.wav<BR>
chick/Chkatck5.wav<BR>
chick/Chkdeth1.wav<BR>
chick/Chkdeth2.wav<BR>
chick/Chkfall1.wav<BR>
chick/Chkidle1.wav<BR>
chick/Chkidle2.wav<BR>
chick/Chkpain1.wav<BR>
chick/Chkpain2.wav<BR>
chick/Chkpain3.wav<BR>
chick/Chksght1.wav<BR>
chick/Chksrch1.wav<BR>

<H3>Door Sounds</H3>
doors/dr1_end.wav<BR>
doors/dr1_mid.wav<BR>
doors/dr1.strt.wav<BR>

<H3>Monster_flipper Sounds</H3>
flipper/Flpatck1.wav<BR>
flipper/Flpatck2.wav<BR>
flipper/Flpdeth1.wav<BR>
flipper/Flpidle1.wav<BR>
flipper/Flppain1.wav<BR>
flipper/Flppain2.wav<BR>
flipper/Flpsght1.wav<BR>
flipper/Flpsrch1.wav<BR>

<H3>Monster_floater Sounds</H3>
floater/Fltatck1.wav<BR>
floater/Fltatck2.wav<BR>
floater/Fltatck3.wav<BR>
floater/Fltdeth1.wav<BR>
floater/Fltidle1.wav<BR>
floater/Fltpain1.wav<BR>
floater/Fltpain2.wav<BR>
floater/Fltsght1.wav<BR>
floater/Fltsrch1.wav<BR>

<H3>Monster_flyer Sounds</H3>
flyer/Flyatck1.wav<BR>
flyer/Flyatck2.wav<BR>
flyer/Flyatck3.wav<BR>
flyer/Flydeth1.wav<BR>
flyer/Flyidle1.wav<BR>
flyer/Flypain1.wav<BR>
flyer/Flypain2.wav<BR>
flyer/Flysght1.wav<BR>
flyer/Flysrch1.wav<BR>

<H3>Monster_gladiator Sounds</H3>
gladiator/death.wav<BR>
gladiator/Glddeth2.wav<BR>
gladiator/Gldidle1.wav<BR>
gladiator/Gldpain2.wav<BR>
gladiator/Gldsrch1.wav<BR>
gladiator/melee1.wav<BR>
gladiator/melee2.wav<BR>
gladiator/melee3.wav<BR>
gladiator/pain.wav<BR>
gladiator/railgun.wav<BR>
gladiator/sight.wav<BR>

<H3>Monster_gunner Sounds</H3>
gunner/death1.wav<BR>
gunner/Gunatck1.wav<BR>
gunner/Gunatck2.wav<BR>
gunner/Gunatck3.wav<BR>
gunner/Gunidle1.wav<BR>
gunner/gunpain1.wav<BR>
gunner/Gunpain2.wav<BR>
gunner/Gunsrch1.wav<BR>
gunner/sight1.wav<BR>

<H3>Monster_hover Sounds</H3>
hover/Hovatck1.wav<BR>
hover/Hovdeth1.wav<BR>
hover/Hovdeth2.wav<BR>
hover/Hovidle1.wav<BR>
hover/Hovpain1.wav<BR>
hover/Hovpain2.wav<BR>
hover/Hovsght1.wav<BR>
hover/Hovsrch1.wav<BR>
hover/Hovsrch2.wav<BR>

<H3>Monster_infantry Sounds</H3>
infantry/Infatck1.wav<BR>
infantry/Infatck2.wav<BR>
infantry/Infatck3.wav<BR>
infantry/INFDETH1.wav<BR>
infantry/INFDETH2.wav<BR>
infantry/INFIDLE1.wav<BR>
infantry/Inflies1.wav<BR>
infantry/INFPAIN1.wav<BR>
infantry/Infpain2.wav<BR>
infantry/INFSGHT1.wav<BR>
infantry/INFSRCH1.wav<BR>
infantry/melee2.wav<BR>

<H3>Misc_insane Sounds</H3>
insane/insane1.wav<BR>
insane/insane2.wav<BR>
insane/insane3.wav<BR>
insane/insane4.wav<BR>
insane/insane5.wav<BR>
insane/insane6.wav<BR>
insane/insane7.wav<BR>
insane/insane8.wav<BR>
insane/insane9.wav<BR>
insane/insane10.wav<BR>
insane/insane11.wav<BR>

<H3>Item Sounds</H3>
items/airout.wav<BR>
items/damage.wav<BR>
items/damage2.wav<BR>
items/damage3.wav<BR>
items/l_health.wav<BR>
items/m_health.wav<BR>
items/n_health.wav<BR>
items/pkup.wav<BR>
items/protect.wav<BR>
items/protect2.wav<BR>
items/protect3.wav<BR>
items/protect4.wav<BR>
items/respawn1.wav<BR>
items/s_health.wav<BR>

<H3>Monster_makron Sounds</H3>
makron/bfg_fire.wav<BR>
makron/bfg_hum.wav<BR>
makron/bhit.wav<BR>
makron/blaster.wav<BR>
makron/brain1.wav<BR>
makron/death.wav<BR>
makron/head1.wav<BR>
makron/head2.wav<BR>
makron/laf1.wav<BR>
makron/laf2.wav<BR>
makron/laf3.wav<BR>
makron/laf4.wav<BR>
makron/pain1.wav<BR>
makron/pain2.wav<BR>
makron/pain3.wav<BR>
makron/popup.wav<BR>
makron/rail_up.wav<BR>
makron/roar1.wav<BR>
makron/roar2.wav<BR>
makron/spine.wav<BR>
makron/step1.wav<BR>
makron/step2.wav<BR>
makron/voice.wav<BR>
makron/voice1.wav<BR>
makron/voice2.wav<BR>
makron/voice3.wav<BR>
makron/voice4.wav<BR>

<H3>Monster Medic Sounds</H3>
medic/idle.wav<BR>
medic/Medatck1.wav<BR>
medic/Medatck2.wav<BR>
medic/Medatck3.wav<BR>
medic/Medatck4.wav<BR>
medic/Medatck5.wav<BR>
medic/Meddeth1.wav<BR>
medic/Medpain1.wav<BR>
medic/Medpain2.wav<BR>
medic/Medsght1.wav<BR>
medic/Medsrch1.wav<BR>

<H3>Miscellaneous Sounds</H3>
misc/am_pkup.wav<BR>
misc/ar1_pkup.wav<BR>
misc/ar2_pkup.wav<BR>
misc/ar3_pkup.wav<BR>
misc/bigtele.wav<BR>
misc/comp_up.wav<BR>
misc/fhit3.wav<BR>
misc/h2ohit1.wav<BR>
misc/keytry.wav<BR>
misc/keyuse.wav<BR>
misc/lasfly.wav<BR>
misc/menu1.wav<BR>
misc/menu2.wav<BR>
misc/menu3.wav<BR>
misc/pc_up.wav<BR>
misc/power1.wav<BR>
misc/power2.wav<BR>
misc/secret.wav<BR>
misc/spawn1.wav<BR>
misc/talk.wav<BR>
misc/talk1.wav<BR>
misc/tele_up.wav<BR>
misc/tele1.wav<BR>
misc/udeath.wav<BR>
misc/w_pkup.wav<BR>
misc/windfly.wav<BR>

<H3>Monster_mutant Sounds</H3>
mutant/Mutatck1.wav<BR>
mutant/Mutatck2.wav<BR>
mutant/mutatck3.wav<BR>
mutant/Mutdeth1.wav<BR>
mutant/Mutidle1.wav<BR>
mutant/Mutpain1.wav<BR>
mutant/Mutpain2.wav<BR>
mutant/Mutsght1.wav<BR>
mutant/Mutsrch1.wav<BR>
mutant/step1.wav<BR>
mutant/step2.wav<BR>
mutant/step3.wav<BR>
mutant/thud1.wav<BR>

<H3>Monster_parasite Sounds</H3>
parasite/Paratck1.wav<BR>
parasite/Paratck2.wav<BR>
parasite/Paratck3.wav<BR>
parasite/Paratck4.wav<BR>
parasite/Pardeth1.wav<BR>
parasite/Paridle1.wav<BR>
parasite/Paridle2.wav<BR>
parasite/Parpain1.wav<BR>
parasite/Parpain2.wav<BR>
parasite/Parsght1.wav<BR>
parasite/Parsrch1.wav<BR>

<H3>Platform Sounds</H3>
plats/pt1_end.wav<BR>
plats/pt1_mid.wav<BR>
plats/pt1_strt.wav<BR>

<H3>Female Player Sounds</H3>
player/female/death1.wav<BR>
player/female/death2.wav<BR>
player/female/death3.wav<BR>
player/female/death4.wav<BR>
player/female/drown.wav<BR>
player/female/fall1.wav<BR>
player/female/fall2.wav<BR>
player/female/gurp1.wav<BR>
player/female/gurp2.wav<BR>
player/female/jump1.wav<BR>
player/female/pain100_1.wav<BR>
player/female/pain100_2.wav<BR>
player/female/pain25_1.wav<BR>
player/female/pain25_2.wav<BR>
player/female/pain50_1.wav<BR>
player/female/pain50_2.wav<BR>
player/female/pain75_1.wav<BR>
player/female/pain75_2.wav<BR>

<H3>Male Player Sounds</H3>
player/male/bump1.wav<BR>
player/male/death1.wav<BR>
player/male/death2.wav<BR>
player/male/death3.wav<BR>
player/male/death4.wav<BR>
player/male/drown1.wav<BR>
player/male/fall1.wav<BR>
player/male/fall2.wav<BR>
player/male/gurp1.wav<BR>
player/male/gurp2.wav<BR>
player/male/jump1.wav<BR>
player/male/pain100_1.wav<BR>
player/male/pain100_2.wav<BR>
player/male/pain25_1.wav<BR>
player/male/pain25_2.wav<BR>
player/male/pain50_1.wav<BR>
player/male/pain50_2.wav<BR>
player/male/pain75_1.wav<BR>
player/male/pain75_2.wav<BR>

<H3>Player Sounds</H3>
player/burn1.wav<BR>
player/burn2.wav<BR>
player/death4.wav<BR>
player/drown1.wav<BR>
player/fall1.wav<BR>
player/fall2.wav<BR>
player/fry.wav<BR>
player/gasp1.wav<BR>
player/gasp2.wav<BR>
player/jump1.wav<BR>
player/land1.wav<BR>
player/lava_in.wav<BR>
player/lava1.wav<BR>
player/lava2.wav<BR>
player/step1.wav<BR>
player/step2.wav<BR>
player/step3.wav<BR>
player/step4.wav<BR>
player/u_breath1.wav<BR>
player/u_breath2.wav<BR>
player/wade1.wav<BR>
player/wade2.wav<BR>
player/wade3.wav<BR>
player/watr_in.wav<BR>
player/watr_out.wav<BR>
player/watr_un.wav<BR>

<H3>Rotation Sounds</H3>
rotate/h_rot1.wav<BR>
rotate/h_rot2.wav<BR>

<H3>Monster_soldier Sounds</H3>
soldier/Solatck1.wav<BR>
soldier/Solatck2.wav<BR>
soldier/Solatck3.wav<BR>
soldier/SOLDETH1.wav<BR>
soldier/SOLDETH2.wav<BR>
soldier/SOLDETH3.wav<BR>
soldier/SOLIDLE1.wav<BR>
soldier/SOLPAIN1.wav<BR>
soldier/SOLPAIN2.wav<BR>
soldier/SOLPAIN3.wav<BR>
soldier/SOLSGHT1.wav<BR>
soldier/SOLSRCH1.wav<BR>

<H3>Button Sounds</H3>
switches/butn2.wav<BR>

<H3>Moster_tank Sounds</H3>
tank/death.wav<BR>
tank/pain.wav<BR>
tank/rocket.wav<BR>
tank/sight1.wav<BR>
tank/step.wav<BR>
tank/thud.wav<BR>
tank/Tnkatck1.wav<BR>
tank/Tnkatck3.wav<BR>
tank/Tnkatck4.wav<BR>
tank/Tnkatck5.wav<BR>
tank/Tnkatk2a.wav<BR>
tank/Tnkatk2b.wav<BR>
tank/Tnkatk2c.wav<BR>
tank/Tnkatk2d.wav<BR>
tank/Tnkatk2e.wav<BR>
tank/Tnkdeth2.wav<BR>
tank/Tnkidle1.wav<BR>
tank/Tnkpain2.wav<BR>

<H3>Weapon Sounds</H3>
weapons/Bfg__f1y.wav<BR>
weapons/Bfg__1a.wav<BR>
weapons/Bfg__x1b.wav<BR>
weapons/bfg_hum.wav<BR>
weapons/Blastf1a.wav<BR>
weapons/Chngnd1a.wav<BR>
weapons/Chngnl1a.wav<BR>
weapons/Chngnu1a.wav<BR>
weapons/Grenlb1b.wav<BR>
weapons/Grenlf1a.wav<BR>
weapons/Grenlr1b.wav<BR>
weapons/Grenlx1a.wav<BR>
weapons/Hgrena1b.wav<BR>
weapons/Hgrenb1a.wav<BR>
weapons/Hgrenb2a.wav<BR>
weapons/Hgrenc1b.wav<BR>
weapons/Hgrent1a.wav<BR>
weapons/Hyprbd1a.wav<BR>
weapons/Hyprbf1a.wav<BR>
weapons/Hyprbl1a.wav<BR>
weapons/Hyprbu1a.wav<BR>
weapons/laser2.wav<BR>
weapons/lashit.wav<BR>
weapons/Machgf1b.wav<BR>
weapons/Machgf2b.wav<BR>
weapons/Machgf3b.wav<BR>
weapons/Machgf4b.wav<BR>
weapons/Machgf5b.wav<BR>
weapons/noammo.wav<BR>
weapons/Railgf1a.wav<BR>
weapons/Railgr1a.wav<BR>
weapons/rg_hum.wav<BR>
weapons/rockfly.wav<BR>
weapons/Rocklf1a.wav<BR>
weapons/Rocklr1b.wav<BR>
weapons/Rocklx1a.wav<BR>
weapons/Shotgf1b.wav<BR>
weapons/Shotgr1b.wav<BR>
weapons/Sshotf1b.wav<BR>
weapons/Sshotr1b.wav<BR>
weapons/xpld_wat.wav<BR>

<H3>World Sounds</H3>
world/10_0.wav<BR>
world/airhiss1.wav<BR>
world/airhiss2.wav<BR>
world/amb1.wav<BR>
world/amb2.wav<BR>
world/amb3.wav<BR>
world/amb4.wav<BR>
world/amb5.wav<BR>
world/amb6.wav<BR>
world/amb7.wav<BR>
world/amb8.wav<BR>
world/amb9.wav<BR>
world/amb10.wav<BR>
world/amb11.wav<BR>
world/amb12.wav<BR>
world/amb13.wav<BR>
world/amb14.wav<BR>
world/amb15.wav<BR>
world/amb16.wav<BR>
world/amb17.wav<BR>
world/amb18.wav<BR>
world/amb19.wav<BR>
world/amb20.wav<BR>
world/amb21.wav<BR>
world/amb22.wav<BR>
world/amb23.wav<BR>
world/amb24.wav<BR>
world/battle1.wav<BR>
world/battle2.wav<BR>
world/battle3.wav<BR>
world/battle4.wav<BR>
world/battle5.wav<BR>
world/bigpump.wav<BR>
world/bigpump2.wav<BR>
world/blackhole.wav<BR>
world/brkglas.wav<BR>
world/bubbl4.wav<BR>
world/bubl1.wav<BR>
world/bubl2.wav<BR>
world/bubl3.wav<BR>
world/comlas1.wav<BR>
world/comp_hum1.wav<BR>
world/comp_hum2.wav<BR>
world/comp_hum3.wav<BR>
world/curnt1.wav<BR>
world/curnt2.wav<BR>
world/curnt3.wav<BR>
world/dataspin.wav<BR>
world/deactivated.wav<BR>
world/dish1.wav<BR>
world/dr_long.wav<BR>
world/dr_short.wav<BR>
world/drill1.wav<BR>
world/drill2a.wav<BR>
world/driller1.wav<BR>
world/drip_amb.wav<BR>
world/drip1.wav<BR>
world/drip2.wav<BR>
world/drip3.wav<BR>
world/electro.wav<BR>
world/explod1.wav<BR>
world/explod2.wav<BR>
world/fan1.wab<BR>
world/flesh1.wav<BR>
world/flesh2.wav<BR>
world/flyby.wav<BR>
world/flyby1.wav<BR>
world/flyby2.wav<BR>
world/flyby3.wav<BR>
world/force1.wav<BR>
world/force2.wav<BR>
world/force3.wav<BR>
world/fusein.wav<BR>
world/fuseout.wav<BR>
world/incoming.wav<BR>
world/klaxon1.wav<BR>
world/klaxon2.wav<BR>
world/l_hum1.wav<BR>
world/l_hum2.wav<BR>
world/land.wav<BR>
world/laser.wav<BR>
world/lashum1.wav<BR>
world/lasoff1.wav<BR>
world/lava1.wav<BR>
world/lite_on1.wav<BR>
world/lite_on2.wav<BR>
world/lite_on3.wav<BR>
world/lite_out.wav<BR>
world/mach1.wav<BR>
world/mach2.wav<BR>
world/mach3.wav<BR>
world/mov_watr.wav<BR>
world/pilot1.wav<BR>
world/pilot2.wav<BR>
world/pilot3.wav<BR>
world/pump1.wav<BR>
world/pump2.wav<BR>
world/pump3.wav<BR>
world/pumping.wav<BR>
world/pyramid.wav<BR>
world/quake.wav<BR>
world/radio2.wav<BR>
world/radio3.wav<BR>
world/reactor.wav<BR>
world/redforce.wav<BR>
world/ric1.wav<BR>
world/ric2.wav<BR>
world/ric3.wav<BR>
world/rocks1.wav<BR>
world/scan1.wav<BR>
world/short1.wav<BR>
world/spark2.wav<BR>
world/spark3.wav<BR>
world/spark4.wav<BR>
world/spark5.wav<BR>
world/spark6.wav<BR>
world/spark7.wav<BR>
world/steam1.wav<BR>
world/steam2.wav<BR>
world/steam3.wav<BR>
world/stp_watr.wav<BR>
world/tele1.wav<BR>
world/train1.wav<BR>
world/train2.wav<BR>
world/turbine1.wav<BR>
world/uplink2.wav<BR>
world/v_bas1.wav<BR>
world/v_bas2.wav<BR>
world/v_bas3.wav<BR>
world/v_bas4.wav<BR>
world/v_bas5.wav<BR>
world/v_bas6.wav<BR>
world/v_cit1.wav<BR>
world/v_cit2.wav<BR>
world/v_cmd1.wav<BR>
world/v_cmd2.wav<BR>
world/v_fac2.wav<BR>
world/v_fac3.wav<BR>
world/v_gun1.wav<BR>
world/v_gun2.wav<BR>
world/v_war1.wav<BR>
world/ventsys.wav<BR>
world/voice1.wav<BR>
world/voice3.wav<BR>
world/voice4.wav<BR>
world/voice5.wav<BR>
world/voice6.wav<BR>
world/voice7.wav<BR>
world/voice10.wav<BR>
world/voice11.wav<BR>
world/vater1.wav<BR>
world/wind2.wav<BR>
world/x_alarm.wav<BR>
world/x_light.wav<BR>
world/xian1.wav<BR>
world/xianbeats.wav<BR>
world/yelforce.wav<BR></ul><h1 id="265" name="265" class="book-h3">Quake 2 World Sounds In Detail</h1><ul><h2 align="left">Quake2 Ambient Sounds</h2>

<p align="left">By Zedek<br>
</p>

<table border="1">
  <tr valign="top">
    <td align="left">10_0.WAV</td>
    <td align="left">Computer: &quot;10..9..8..7..6..5..4..3..2..1..&quot;</td>
  </tr>

  <tr valign="top">
    <td align="left">AIRHISS1.WAV</td>
    <td align="left">Air hiss (short, soft)</td>
  </tr>
  <tr valign="top">
    <td align="left">AIRHISS2.WAV</td>
    <td align="left">Air hiss (short, louder)</td>

  </tr>
  <tr valign="top">
    <td align="left">AMB1.WAV</td>
    <td align="left">Soft energy whistle</td>
  </tr>
  <tr valign="top">
    <td align="left">AMB10.WAV</td>

    <td align="left">Alien computer sound</td>
  </tr>
  <tr valign="top">
    <td align="left">AMB11.WAV</td>
    <td align="left">Rattling sound</td>
  </tr>
  <tr valign="top">

    <td align="left">AMB12.WAV</td>
    <td align="left">Air pumping sound</td>
  </tr>
  <tr valign="top">
    <td align="left">AMB13.WAV</td>
    <td align="left">Machinery</td>
  </tr>

  <tr valign="top">
    <td align="left">AMB14.WAV</td>
    <td align="left">Air whistle</td>
  </tr>
  <tr valign="top">
    <td align="left">AMB15.WAV</td>
    <td align="left">Deep computer hum</td>

  </tr>
  <tr valign="top">
    <td align="left">AMB16.WAV</td>
    <td align="left">Air/computer sound</td>
  </tr>
  <tr valign="top">
    <td align="left">AMB17.WAV</td>

    <td align="left">Machines rattling/cranking</td>
  </tr>
  <tr valign="top">
    <td align="left">AMB18.WAV</td>
    <td align="left">Very soft drone sound</td>
  </tr>
  <tr valign="top">

    <td align="left">AMB19.WAV</td>
    <td align="left">Air/computer sound</td>
  </tr>
  <tr valign="top">
    <td align="left">AMB2.WAV</td>
    <td align="left">Fluorescent light hum</td>
  </tr>

  <tr valign="top">
    <td align="left">AMB20.WAV</td>
    <td align="left">Fireball sound</td>
  </tr>
  <tr valign="top">
    <td align="left">AMB21.WAV</td>
    <td align="left">Air at intervals</td>

  </tr>
  <tr valign="top">
    <td align="left">AMB22.WAV</td>
    <td align="left">Very soft computer sound</td>
  </tr>
  <tr valign="top">
    <td align="left">AMB23.WAV</td>

    <td align="left">Computer hum, shorter</td>
  </tr>
  <tr valign="top">
    <td align="left">AMB24.WAV</td>
    <td align="left">Funny alien humming</td>
  </tr>
  <tr valign="top">

    <td align="left">AMB3.WAV</td>
    <td align="left">Soft rattle, machines</td>
  </tr>
  <tr valign="top">
    <td align="left">AMB4.WAV</td>
    <td align="left">Alien machines</td>
  </tr>

  <tr valign="top">
    <td align="left">AMB5.WAV</td>
    <td align="left">Sounds like a helicopter</td>
  </tr>
  <tr valign="top">
    <td align="left">AMB6.WAV</td>
    <td align="left">Helicopter, higher pitched</td>

  </tr>
  <tr valign="top">
    <td align="left">AMB7.WAV</td>
    <td align="left">Fluorescent lights</td>
  </tr>
  <tr valign="top">
    <td align="left">AMB8.WAV</td>

    <td align="left">Water or steam rushing</td>
  </tr>
  <tr valign="top">
    <td align="left">AMB9.WAV</td>
    <td align="left">Rattling machines</td>
  </tr>
  <tr valign="top">

    <td align="left">BATTLE1.WAV</td>
    <td align="left">Distant explosion</td>
  </tr>
  <tr valign="top">
    <td align="left">BATTLE2.WAV</td>
    <td align="left">Distant explosion</td>
  </tr>

  <tr valign="top">
    <td align="left">BATTLE3.WAV</td>
    <td align="left">Three explosions</td>
  </tr>
  <tr valign="top">
    <td align="left">BATTLE4.WAV</td>
    <td align="left">Loud explosion + soft explosion</td>

  </tr>
  <tr valign="top">
    <td align="left">BATTLE5.WAV</td>
    <td align="left">Loud explosion</td>
  </tr>
  <tr valign="top">
    <td align="left">BIGPUMP.WAV</td>

    <td align="left">A water pump</td>
  </tr>
  <tr valign="top">
    <td align="left">BIGPUMP2.WAV</td>
    <td align="left">A pump machine</td>
  </tr>
  <tr valign="top">

    <td align="left">BLACKHOLE.WAV</td>
    <td align="left">A blackhole generator sound</td>
  </tr>
  <tr valign="top">
    <td align="left">BRKGLAS.WAV</td>
    <td align="left">Loud glass shattering sound</td>
  </tr>

  <tr valign="top">
    <td align="left">BUBBL4.WAV</td>
    <td align="left">Water glurp</td>
  </tr>
  <tr valign="top">
    <td align="left">BUBL1.WAV</td>
    <td align="left">Underwater bubbles</td>

  </tr>
  <tr valign="top">
    <td align="left">BUBL2.WAV</td>
    <td align="left">Underwater bubbles</td>
  </tr>
  <tr valign="top">
    <td align="left">BUBL3.WAV</td>

    <td align="left">Underwater bubbles</td>
  </tr>
  <tr valign="top">
    <td align="left">COMLAS1.WAV</td>
    <td align="left">Computer: &quot;Communication laser neutralized.&quot;</td>
  </tr>
  <tr valign="top">

    <td align="left">COMP_HUM1.WAV </td>
    <td align="left">Soft computer hum</td>
  </tr>
  <tr valign="top">
    <td align="left">COMP_HUM2.WAV</td>
    <td align="left">Sounds like computer talk</td>
  </tr>

  <tr valign="top">
    <td align="left">COMP_HUM3.WAV</td>
    <td align="left">Computer beeps</td>
  </tr>
  <tr valign="top">
    <td align="left">CURNT1.WAV</td>
    <td align="left">Moving water (fast stream, small waterfall)</td>

  </tr>
  <tr valign="top">
    <td align="left">CURNT2.WAV</td>
    <td align="left">Small stream (trickle)</td>
  </tr>
  <tr valign="top">
    <td align="left">CURNT3.WAV</td>

    <td align="left">Stream with a little echo</td>
  </tr>
  <tr valign="top">
    <td align="left">DATASPIN.WAV</td>
    <td align="left">Computer: &quot;Data spinner reprogrammed.&quot;</td>
  </tr>
  <tr valign="top">

    <td align="left">DEACTIVATED.WAV</td>
    <td align="left">Computer: &quot;Deactivated.&quot;</td>
  </tr>
  <tr valign="top">
    <td align="left">DISH1.WAV</td>
    <td align="left">Satellite Dish moving</td>

  </tr>
  <tr valign="top">
    <td align="left">DRILL1.WAV</td>
    <td align="left">Drill hum</td>
  </tr>
  <tr valign="top">
    <td align="left">DRILL2A.WAV</td>

    <td align="left">Vehicle moving</td>
  </tr>
  <tr valign="top">
    <td align="left">DRILLER1.WAV</td>
    <td align="left">Drill engine</td>
  </tr>
  <tr valign="top">

    <td align="left">DRIP1.WAV</td>
    <td align="left">Water drip</td>
  </tr>
  <tr valign="top">
    <td align="left">DRIP2.WAV</td>
    <td align="left">Water drip</td>
  </tr>

  <tr valign="top">
    <td align="left">DRIP3.WAV </td>
    <td align="left">Water drip</td>
  </tr>
  <tr valign="top">
    <td align="left">DRIP_AMB.WAV</td>
    <td align="left">A few drips</td>

  </tr>
  <tr valign="top">
    <td align="left">DR_LONG.WAV</td>
    <td align="left">A crane moving (long)</td>
  </tr>
  <tr valign="top">
    <td align="left">DR_SHORT.WAV</td>

    <td align="left">Crane (short)</td>
  </tr>
  <tr valign="top">
    <td align="left">ELECTRO.WAV</td>
    <td align="left">Sizzling</td>
  </tr>
  <tr valign="top">

    <td align="left">EXPLOD1.WAV</td>
    <td align="left">Explosion</td>
  </tr>
  <tr valign="top">
    <td align="left">EXPLOD2.WAV</td>
    <td align="left">Short explosion</td>
  </tr>

  <tr valign="top">
    <td align="left">FAN1.WAV</td>
    <td align="left">Soft fan hum</td>
  </tr>
  <tr valign="top">
    <td align="left">FLESH1.WAV</td>
    <td align="left">Guts sound</td>

  </tr>
  <tr valign="top">
    <td align="left">FLESH2.WAV</td>
    <td align="left">Guts sound</td>
  </tr>
  <tr valign="top">
    <td align="left">FLYBY.WAV</td>

    <td align="left">Flyby sound</td>
  </tr>
  <tr valign="top">
    <td align="left">FLYBY1.WAV</td>
    <td align="left">Flyby sound</td>
  </tr>
  <tr valign="top">

    <td align="left">FLYBY2.WAV</td>
    <td align="left">Flyby sound</td>
  </tr>
  <tr valign="top">
    <td align="left">FLYBY3.WAV</td>
    <td align="left">Flyby sound</td>
  </tr>

  <tr valign="top">
    <td align="left">FORCE1.WAV</td>
    <td align="left">Deep forcefield hum</td>
  </tr>
  <tr valign="top">
    <td align="left">FORCE2.WAV</td>
    <td align="left">Force field shutting off</td>

  </tr>
  <tr valign="top">
    <td align="left">FORCE3.WAV</td>
    <td align="left">Spark sound</td>
  </tr>
  <tr valign="top">
    <td align="left">FUSEIN.WAV</td>

    <td align="left">Plugin sound</td>
  </tr>
  <tr valign="top">
    <td align="left">FUSEOUT.WAV</td>
    <td align="left">Unplug sound</td>
  </tr>
  <tr valign="top">

    <td align="left">INCOMING.WAV</td>
    <td align="left">Computer: &quot;Incoming air strike.&quot;</td>
  </tr>
  <tr valign="top">
    <td align="left">KLAXON1.WAV</td>
    <td align="left">Warning klaxon</td>

  </tr>
  <tr valign="top">
    <td align="left">KLAXON2.WAV</td>
    <td align="left">High pitched klaxon</td>
  </tr>
  <tr valign="top">
    <td align="left">LAND.WAV</td>

    <td align="left">Hit the ground</td>
  </tr>
  <tr valign="top">
    <td align="left">LASER.WAV</td>
    <td align="left">Laser hum</td>
  </tr>
  <tr valign="top">

    <td align="left">LASHUM1.WAV</td>
    <td align="left">Few second delay, then &quot;</td>
  </tr>
  <tr valign="top">
    <td align="left">LASOFF1.WAV</td>
    <td align="left">Laser hum, fades away</td>
  </tr>

  <tr valign="top">
    <td align="left">LAVA1.WAV</td>
    <td align="left">Lava fizzling</td>
  </tr>
  <tr valign="top">
    <td align="left">LITE_ON1.WAV</td>
    <td align="left">Lights on</td>

  </tr>
  <tr valign="top">
    <td align="left">LITE_ON2.WAV</td>
    <td align="left">Lights on</td>
  </tr>
  <tr valign="top">
    <td align="left">LITE_ON3.WAV</td>

    <td align="left">Lights fade on</td>
  </tr>
  <tr valign="top">
    <td align="left">LITE_OUT.WAV</td>
    <td align="left">Lights out</td>
  </tr>
  <tr valign="top">

    <td align="left">L_HUM1.WAV</td>
    <td align="left">Light fizzling sound</td>
  </tr>
  <tr valign="top">
    <td align="left">L_HUM2.WAV</td>
    <td align="left">Deep light hum</td>
  </tr>

  <tr valign="top">
    <td align="left">MACH1.WAV</td>
    <td align="left">Rackety machines</td>
  </tr>
  <tr valign="top">
    <td align="left">MACH2.WAV</td>
    <td align="left">Longer rackety machines</td>

  </tr>
  <tr valign="top">
    <td align="left">MACH3.WAV</td>
    <td align="left">Slower rackety machines</td>
  </tr>
  <tr valign="top">
    <td align="left">MOV_WATR.WAV</td>

    <td align="left">Moving water</td>
  </tr>
  <tr valign="top">
    <td align="left">PILOT1.WAV</td>
    <td align="left">Pilot: &quot;We had a fix on target but no lock.
    Re-establish contact with ground unit and paint us a clean target.&quot;</td>
  </tr>
  <tr valign="top">

    <td align="left">PILOT2.WAV</td>
    <td align="left">Pilot: &quot;Mother goose, target is painted and green
    for fox 3. ECM is active and I'm going &lt;something&gt; for payload delivery.&quot;</td>
  </tr>
  <tr valign="top">
    <td align="left">PILOT3.WAV</td>

    <td align="left">Pilot: &quot;Red leader, this is papa sierra 3-3. We
    need some paint on the ground for payload.&quot;</td>
  </tr>
  <tr valign="top">
    <td align="left">PUMP1.WAV</td>
    <td align="left">Pump machines</td>
  </tr>
  <tr valign="top">

    <td align="left">PUMP2.WAV</td>
    <td align="left">Pump machines</td>
  </tr>
  <tr valign="top">
    <td align="left">PUMP3.WAV</td>
    <td align="left">Pumping hum</td>
  </tr>

  <tr valign="top">
    <td align="left">PUMPING.WAV</td>
    <td align="left">Computer: &quot;Pumping system activated.&quot;</td>
  </tr>
  <tr valign="top">
    <td align="left">PYRAMID.WAV</td>
    <td align="left">Alien pyramid moving</td>

  </tr>
  <tr valign="top">
    <td align="left">QUAKE.WAV</td>
    <td align="left">Earthquake sound</td>
  </tr>
  <tr valign="top">
    <td align="left">RADIO2.WAV</td>

    <td align="left">Radio fizzling sound</td>
  </tr>
  <tr valign="top">
    <td align="left">RADIO3.WAV</td>
    <td align="left">Radio fizzling sound</td>
  </tr>
  <tr valign="top">

    <td align="left">REACTOR.WAV</td>
    <td align="left">Computer: &quot;Reactor core exposed.&quot;</td>
  </tr>
  <tr valign="top">
    <td align="left">REDFORCE.WAV</td>
    <td align="left">Computer: &quot;Red force fields deactivated.&quot;</td>

  </tr>
  <tr valign="top">
    <td align="left">RIC1.WAV</td>
    <td align="left">Bullet ricocheting</td>
  </tr>
  <tr valign="top">
    <td align="left">RIC2.WAV</td>

    <td align="left">Bullet ricocheting</td>
  </tr>
  <tr valign="top">
    <td align="left">RIC3.WAV</td>
    <td align="left">Bullet ricocheting</td>
  </tr>
  <tr valign="top">

    <td align="left">ROCKS1.WAV</td>
    <td align="left">Rocks tumbling</td>
  </tr>
  <tr valign="top">
    <td align="left">SCAN1.WAV</td>
    <td align="left">Alien scanner sound</td>
  </tr>

  <tr valign="top">
    <td align="left">SHORT1.WAV</td>
    <td align="left">Electrical short</td>
  </tr>
  <tr valign="top">
    <td align="left">SPARK1.WAV</td>
    <td align="left">Sparks</td>

  </tr>
  <tr valign="top">
    <td align="left">SPARK2.WAV</td>
    <td align="left">Sparks</td>
  </tr>
  <tr valign="top">
    <td align="left">SPARK3.WAV</td>

    <td align="left">Sparks</td>
  </tr>
  <tr valign="top">
    <td align="left">SPARK5.WAV</td>
    <td align="left">Sparks</td>
  </tr>
  <tr valign="top">

    <td align="left">SPARK6.WAV</td>
    <td align="left">Sparks</td>
  </tr>
  <tr valign="top">
    <td align="left">SPARK7.WAV</td>
    <td align="left">Sparks</td>
  </tr>

  <tr valign="top">
    <td align="left">STEAM1.WAV</td>
    <td align="left">Steam puff</td>
  </tr>
  <tr valign="top">
    <td align="left">STEAM2.WAV</td>
    <td align="left">Steam puff, longer</td>

  </tr>
  <tr valign="top">
    <td align="left">STEAM3.WAV</td>
    <td align="left">Four steam puffs</td>
  </tr>
  <tr valign="top">
    <td align="left">STP_WATR.WAV</td>

    <td align="left">Water swish</td>
  </tr>
  <tr valign="top">
    <td align="left">TELE1.WAV</td>
    <td align="left">Teleporter hum</td>
  </tr>
  <tr valign="top">

    <td align="left">TRAIN1.WAV</td>
    <td align="left">Train racketing</td>
  </tr>
  <tr valign="top">
    <td align="left">TRAIN2.WAV</td>
    <td align="left">Train stopping</td>
  </tr>

  <tr valign="top">
    <td align="left">TURBINE1.WAV</td>
    <td align="left">Turbine hum</td>
  </tr>
  <tr valign="top">
    <td align="left">UPLINK2.WAV</td>
    <td align="left">Computer: &quot;Communication uplink
    established.&quot;</td>

  </tr>
  <tr valign="top">
    <td align="left">VENTSYS.WAV</td>
    <td align="left">Computer: &quot;Ventilation systems activated.&quot;</td>
  </tr>
  <tr valign="top">
    <td align="left">VOICE1.WAV</td>

    <td align="left">Radio: &quot;All pods launched.&quot;</td>
  </tr>
  <tr valign="top">
    <td align="left">VOICE10.WAV</td>
    <td align="left">Radio: &quot;All personnel copying this transmission
    rendezvous at designated points alpha, bravo, charlie.&quot;</td>
  </tr>

  <tr valign="top">
    <td align="left">VOICE11.WAV</td>
    <td align="left">Radio: &quot;Establish communications, priority
    alpha.&quot;</td>
  </tr>
  <tr valign="top">
    <td align="left">VOICE3.WAV</td>
    <td align="left">Radio: &quot;Remaining fire teams engage in primary
    and secondary objectives</td>

  </tr>
  <tr valign="top">
    <td align="left">VOICE4.WAV</td>
    <td align="left">Radio: &quot;Reporting 80%, failing vital sign
    track.&quot;</td>
  </tr>
  <tr valign="top">
    <td align="left">VOICE5.WAV</td>

    <td align="left">Radio: &quot;All squad leaders coordinate with sister
    tapes.&quot;</td>
  </tr>
  <tr valign="top">
    <td align="left">VOICE6.WAV</td>
    <td align="left">Radio: &quot;Any squad leaders this freq. fall back to
    primary L-Z.&quot;</td>
  </tr>

  <tr valign="top">
    <td align="left">VOICE7.WAV</td>
    <td align="left">Radio: &quot;Reporting 95%, failing vital sign
    track.&quot;</td>
  </tr>
  <tr valign="top">
    <td align="left">V_BAS1.WAV</td>
    <td align="left">Radio: &quot;EOD confirms bridge is down.&quot;</td>

  </tr>
  <tr valign="top">
    <td align="left">V_BAS2.WAV</td>
    <td align="left">Radio: &quot;Last recon beta indicates access through
    sewers.&quot;</td>
  </tr>
  <tr valign="top">
    <td align="left">V_BAS3.WAV</td>

    <td align="left">Radio: &quot;&lt;something&gt; indicate possible
    camouflaged access in wet sector 432.&quot;</td>
  </tr>
  <tr valign="top">
    <td align="left">V_BAS4.WAV</td>
    <td align="left">Radio: &quot;Recon established and confirm heavy
    fortification near enemy comm facility.&quot;</td>

  </tr>
  <tr valign="top">
    <td align="left">V_BAS5.WAV</td>
    <td align="left">Radio: &quot;Copy that recon 1 charlie. Scan for
    keycode pass now.&quot;</td>
  </tr>
  <tr valign="top">
    <td align="left">V_BAS6.WAV</td>

    <td align="left">Radio: &quot;Marines we're at %5 ground force
    operational status.&quot;</td>
  </tr>
  <tr valign="top">
    <td align="left">V_CIT1.WAV</td>
    <td align="left">Radio: &quot;All units locate and acquire working
    enemy data device.&quot;</td>
  </tr>

  <tr valign="top">
    <td align="left">V_CIT2.WAV</td>
    <td align="left">Radio: &quot;We have a disable and destroy order on
    communication link.&quot;</td>
  </tr>
  <tr valign="top">
    <td align="left">V_CMD1.WAV</td>
    <td align="left">Radio: &quot;All units, we have a disable and destroy
    order on enemy central computer.&quot;</td>

  </tr>
  <tr valign="top">
    <td align="left">V_CMD2.WAV</td>
    <td align="left">Radio: &quot;All units, we have target confirmation
    for EOD on enemy launch computers and black hole generator.&quot;</td>
  </tr>
  <tr valign="top">
    <td align="left">V_FAC2.WAV</td>

    <td align="left">Radio: &quot;We have confirmed visual on troops
    being....being disassembled.&quot;</td>
  </tr>
  <tr valign="top">
    <td align="left">V_FAC3.WAV</td>
    <td align="left">Radio: &quot;Somebody shut that place down.&quot;</td>
  </tr>

  <tr valign="top">
    <td align="left">V_GUN1.WAV</td>
    <td align="left">Radio: &quot;Disable and destroy orders are green for
    big gun and primary area.&quot;</td>
  </tr>
  <tr valign="top">
    <td align="left">V_GUN2.WAV</td>
    <td align="left">Radio: &quot;IR just spiked in big gun area. Explosion
    imminent.&quot;</td>

  </tr>
  <tr valign="top">
    <td align="left">V_WAR1.WAV</td>
    <td align="left">Radio: &quot;Tactical has given a disable and destroy
    order on enemy supply train.&quot;</td>
  </tr>
  <tr valign="top">
    <td align="left">WATER1.WAV</td>

    <td align="left">Water leaking</td>
  </tr>
  <tr valign="top">
    <td align="left">WIND2.WAV</td>
    <td align="left">Wind rushing</td>
  </tr>
  <tr valign="top">

    <td align="left">XIAN1.WAV</td>
    <td align="left">Groovy beat</td>
  </tr>
  <tr valign="top">
    <td align="left">XIANBEATS.WAV</td>
    <td align="left">Another shorter groovy beat</td>
  </tr>

  <tr valign="top">
    <td align="left">X_ALARM.WAV</td>
    <td align="left">A klaxon, almost identical to KLAXON2.WAV</td>
  </tr>
  <tr valign="top">
    <td align="left">X_LIGHT.WAV</td>
    <td align="left">Alien light</td>

  </tr>
  <tr valign="top">
    <td align="left">YELFORCE.WAV</td>
    <td align="left">Computer: &quot;Yellow force fields deactivated.&quot;</td>
  </tr>
</table>
</ul><h1 id="42" name="42" class="book-h2">Tutorials</h1><ul><h2>RUST's Quake II Tutorials</h2></ul><h1 id="43" name="43" class="book-h3">Advanced Brushes</h1><ul><h3>Quake 2</h3>
	<blockquote>
		Advanced Brushes - Herbert "BONEWOLF" Flower
	</blockquote>

<br><br>

<p>I started studying the subject of Quake brushes when I was first starting my TC (<a href="http://www.planetquake.com/gunman/">http://www.planetquake.com/gunman/</a>). My aim has always been to push the Quake engine to its fullest potential. I read a quick little description of how the brushes work, and wrote a few programs to allow me to make brushes with my 3D program and convert them to .map format. I spent several weeks discovering, by trial and error, the techniques needed to make practically anything out of brushes. What I know is just the result of alot of hard thinking, and staring at a computer screen. I havent talked to Carmack or anyone that is really educated on the subject of 3d engines, and I'm sure that if I did, I'd have more to say on this subject.

<br><br><b>BRUSH DESCRIPTION</b>

<p>Brushes are of course the building blocks that the level is made from. They are always convex because of the way they are created. Imagine a world made of styro-foam that goes forever in all directions. To make a brush, you make infinitely large slices in the foam, and what is left over from that whole universe of styro-foam is your brush. You can imagine how easy it would be to forget a slice or two and end up with a brush that goes off into infinity. Its also obvious that you cant create a single brush that has a dent or "concave" surface on it, because each slice you make goes forever... you'd always chop-off parts of the brush that would have caused it to have the concave shape in the first place. In the old days of Quake1, brushes had to have 16 or less "slices" to compile, but now you can find QBSPs that have the ability to create brushes with 256 slices, and QBSP3 seems to allow alot of slices too.

<p><div align="center"><img border="0" width="450"  src="/content/quake2/tutorials/abrush/abrush_img1.gif"></div>

<br><br><b>THE "KNIFE"</b>

<p>How do you make the slices? Its easy. You define the slicing plane with three points... essentially a triangle. Each point's coordinates are whole numbers with no decimals (this is due to the .map format). In the world of 3D graphics, each triangle that makes up an object either faces IN or OUT depending on whether the triangle was made clockwise or counterclockwise. That "direction" is called the "normal" and it's used to tell which side of the plane to discard. You want your normals to face INWARD, or you will chop-off the interior of the brush, rather than the stuff on the outside. But now it gets complicated. Think of a cube. It would in fact be made up of 6 triangles, rather than 6 squares. To add to the confusion, you could have the points that define each plane appear anywhere on that plane... so-long as the "normal" still points inward. There are a zillion possible ways to make a cube then, but in some respects, each way will result in a cube that will behave differently when you manipulate it (shearing, rotation etc.)

<p><div align="center"><img src="/content/quake2/tutorials/abrush/abrush_img2.gif"></div>

<br><br><b>THE .MAP FORMAT</b>

<p>Here is an example of a cutting plane in the .map format:

<blockquote>
1.000000 ( -225 -265 -145 ) ( -175 -235 -170 ) ( -225 -215 -170 ) CAVE_3 0 0 0 1.000000
</blockquote>

<p>The numbers within the parentheses are the X-Y-Z coordinates for the three points of a cutting plane. Notice that all vertices (points that define each "slice" or "plane") end up being integers (no decimals) in the .map format. This is what causes alot of the errors and gaps and mis-alignments in your Quake maps. The problem is that when you rotate a brush to anything but 90 degree angles, it is almost guaranteed that most or all of your cutting planes will contain decimal values, which will be truncated when you save as .map to compile. This causes shapes to change slightly... For example... imagine a small cube that is rotated only a few degrees. You never know how the vertices will be rounded off--some may move, some may round back to where they started. So you could end up with something that was no-longer even a true cube. Now imagine a cube that has its plane-vertices spread far apart... beyond the visible corners of the cube-brush. You could rotate this cube with a greater degree of accuracy. "Big deal!" you say. But it IS a big deal when it comes to brushes that must match up to other brushes perfectly. For instance, a rectangle and a square may match up perfectly until you rotate them as a group. If the rotation is some oddball angle, like 21 degrees, you may end up with the brushes overlapping, or you may have a VERY THIN gap between them. That is BAD. If the overlap is very small, you will get some sort of funny error, and Qbsp will choke on it. If there is a gap, you end up with extra faces to draw, and I'm sure plenty of extra crap for vis to deal with too. You can also get those annoying black spots and shading errors. Of course, the solution to this would be for the smaller cube-shaped brush to have the vertices on the side that meets up with the rectangle be in the same exact place as the rectangle's vertices. This will allow the square brush to fit perfectly against the rectangular brush no matter how you rotated it. Another thing that causes errors would be "duplicate planes". If you have two triangles that define the same plane, you either get a simple warning, or Qbsp will choke. Sometimes if you shrink a brush that has two planes that are very nearly at the same angle, the truncating effect of the .map format will cause them to actually BECOME identical. So small size can cause trouble for fancy brushwork... unless the points that define the planes are placed beyond the edges of the actual brush, resulting in greater accuracy. The same kind of errors can show up when you start "shearing" or otherwise fiddling with a brush in programs like WorldCraft etc. So I guess the moral to the story is this: you have alot more control of brushes than you might imagine. You just have to be able to build them at the most basic level.

<p><div align="center"><img src="/content/quake2/tutorials/abrush/abrush_img3.gif"></div>

<br><br><b>BRUSH SCULPTING</b>

<p>As far as I know, there is no Quake-specific program out there that lets you really get to the guts of a brush. Clipping tools and vertex editing help, but are rather clumsy for any real precision work. I prefer using a 3D modeling program to make special-purpose brush prefabs. You will need a program that allows you to create 3D objects with the ability to manually add and delete faces, and change the normals on the faces individually. It's a simple job to convert .raw or .txt saved files to the .map format so that you can include it into the normal map editors like WorldCraft etc. There is a program that supposedly converts .3ds to .map out there. I have tried it, and it doesnt work well at all on any but the simplest of shapes. 

<br><br><b>SHAPES TO AVOID</b>

<p>Its not so much the shape of a brush you should avoid, but rather the shape of certain FACES on brushes that match-up to other brushes that you should beware of. A sure-fire way to get those nasty little gaps and overlaps is to try to match-up faces that have more than 3 corners AND are not square AND are rotated on more than one axis. This is just the type of thing that causes those strange qbsp compiling problems when you try to use "Subtraction" features in the level-editing programs. You end up with corners on your brush that are not on any of the vertices that form the cutting planes, and these corners very rarely are going to end up with X-Y-Z on even numbers. When I create prefabs of smooth, biological structures, I always try to avoid faces that have more than 3 corners, unless the plane is on a 90 degree angle. This ensures that all the corners of the brushes will match-up flawlessly. However, it can really cause qbsp to chop-up the level. Especially when you use a bunch of these triangular-based brushes to create a concave surface.

<p><div align="center"><a href="/content/quake2/tutorials/abrush/abrush_img4.gif"><img border="0" src="/content/quake2/tutorials/abrush/abrush_img4_s.gif"></a></div>

<br><br><b>SOLUTIONS TO PROBLEMS</b>

<p>If you load a brush that you created into WorldCraft, and it complains "1 brushes were not loaded, due to errors" it probably means you ended up with a duplicate plane. There are a few ways to deal with that. Go into you modeling program and look for 2 very similar planes. Together, they make a square. Delete the two triangles that make-up that square, and replace them with triangles crossing the square in the opposite direction. Sometimes this is all it takes. If that fails, you can try slightly adjusting the size of the whole prefab. This will cause the vertices to be truncated differently for the .map format. Sometimes a slight rescaling makes all the difference and gets rid of your duplicate planes for you. Remember, larger brushes=more accuracy for the cutting planes. The last solution is to find the trouble-making plane, and extend the vertices defining that plane out to a distance where they can gain more accuracy. This is actually pretty difficult for some angles, so I avoid getting in to this situation whenever possible! One thing that I notice is that Worldcraft seems to load brushes and convert them to something that REPRESENTS the brush, but doesnt actually function like a brush. When you have corners on a brush that are the result of the cutting planes and dont actually have any vertices on them, it is legal for them to be on coordinates that have decimal places (figure A). The later versions of WC try to snap vertices to the nearest integer when you rotate or otherwise manipulate a brush... which is fine for most brushes, but will not accurately represent the final product. I find that it works best if you rotate complex brush sculptures in the 3D editing program and export them to WC 

<p><div align="center"><img src="/content/quake2/tutorials/abrush/abrush_img5.gif"></div>

<p><div align="center"><a href="/content/quake2/tutorials/abrush/abrush_img12.jpg"><img border=0 src="/content/quake2/tutorials/abrush/abrush_img6.gif"></a></div>

<br><br><b>R_SPEEDS</b>

<p>I'm sure you're thinking, "Well, I'm sure you can create some really cool things with brushes, but I bet it slows the game WAY down!". Sure, that can happen. But if you use fancy brushwork in combination with more simple forms, your r_speeds will be just fine. Think about it... a few staircases can give you hundreds of triangles for Quake to draw. Stairs have ALOT of different planes, and they cut up the walls next to them. Now, would you rather have an awesome brush model in the room and a simple ramp, or nothing cool in the room and yet-another staircase? 

<br><br><div align="center"><b>EXAMPLES OF WHAT YOU CAN DO IN QUAKE</b></div><br><br>

<table align="center" width="400" cellspacing="0" cellpadding="0" border="0">
<tr><td>
	<a href="/content/quake2/tutorials/abrush/abrush_img7.jpg"><img border="0" src="/content/quake2/tutorials/abrush/abrush_img7_s.jpg"></a>
</td><td width="300">
	This took about 1 1/2 days to create. Half the work went into bug-fixing. I used about every trick in the book on this one.
</td></tr>
<tr><td>
	<a href="/content/quake2/tutorials/abrush/abrush_img8.jpg"><img border="0" src="/content/quake2/tutorials/abrush/abrush_img8_s.jpg"></a>
</td><td width="300">
	This is a stone hand. You can walk around on the palm and shoot out between the fingers. Really a fun item.
</td></tr>
<tr><td>
	<a href="/content/quake2/tutorials/abrush/abrush_img9.jpg"><img border="0" src="/content/quake2/tutorials/abrush/abrush_img9_s.jpg"></a>
</td><td width="300">
	It *IS* possible to make smooth looking rolling hills in the Quake engine.
</td></tr>
<tr><td>
	<a href="/content/quake2/tutorials/abrush/abrush_img10.jpg"><img border="0" src="/content/quake2/tutorials/abrush/abrush_img10_s.jpg"></a>
</td><td width="300">
	Its difficult to get the sloped disk shape of a flying saucer without cracks and still have empty space inside like this one has.
</td></tr>
<tr><td>
	<a href="/content/quake2/tutorials/abrush/abrush_img11.jpg"><img border="0" src="/content/quake2/tutorials/abrush/abrush_img11_s.jpg"></a>
</td><td width="300">
	This is a rather simple sculpture that has a dramatic effect.
</td></tr>
</table>

<p>
</ul><h1 id="45" name="45" class="book-h3">Area Light</h1><ul><h3>Quake 2</h3>
	<blockquote>
		Area Light - <a href="mailto:granny@gamedesign.net">GrrandMaMa</a>
	</blockquote>
<br><br>

<p>One of the things I've always dreaded doing when building is area lighting. I can have all of my sourced lighting up and going, all my spot lighting and texture lighting set and done, but there are always dark spots (usually in the center of a fairly large room with a high ceiling.) So, the next step (for me) was to put a whole bunch of low-brightness lights close to the floor (usually 150 brighness, about 64 units off the floor) and space them out to put a dim cover. Just enough to put light where I need it, but not enough to overpower the sourced lights. And then there is the matter of coloring them. 

<p>All in all, it works well, but it takes a long time to get it just right, and it's just a general pain in the ass. There is however, another way that gives nearly perfect coverage, and is (most importantly) fast and easy to adjust to get it looking just right.

<p>Let's look at a particular area.

<p><div align="center"><img border="0" width="450"  src="/content/quake2/tutorials/alight/alight_img1.jpg"></div>

<p>Notice how the center of the room is dark. Now, if we were to put a light, bright enough to cover the dark area, in the center of the dark spot, it would flood out the sourced lighting from the lights in the wals near the floor. So, now we have a problem just like the one I described above, but instead of using cover lighting using point lighting like I described above, we'll do something different -- texture lighting. I know, that would look pretty bad to light up the floor. Don't worry, we're not going to use the floor. 

<p><b>First thing we need to do</b> is find a texture that will give us the color we need when we light it. In this case, we'll use the texture for the wall-mounted lights.

<p><b>Next, create a brush </b>that covers the general area, a bit off the floor (no, I'm not going to tell you exactly how far, because it's something you have to play with.) 

<p>You should have something like this:

<p><div align="center"><img src="/content/quake2/tutorials/alight/alight_img2.jpg"></div>

<p>Now we set the properties for the brush. Set the following flags <b>on all faces</b> of the brush:

<br><br>

<blockquote>
	<li><b>light:</b> Well, why else would we be doing this?<br>
    <li><b>sky:</b> This way it will still emit light, even though it won't be drawn<br>
	<li><b>nodraw:</b> A big light brush probably wouldn't look too good in the middle of a room<br>
	<li><b>detail:</b> Since it is a sky brush, it will be a     factor in your PVS unless this is checked, which means you'll be having sky pop up in all kinds of wierd places. Trust me... check this<br>
	<li><b>mist:</b> If you don't check mist, people will be wondering who stuck a big clip brush in the middle of the room<br>
</blockquote>

<p>Keep the light value <b>very</b> low.

<p><b>NOTE</b>: This will <b>dramatically</b> increase your QRAD3 times. Just thought I'd let you know.

<p>Now compile it, and you should come up with something like this:

<p><div align="center"><img border="0" width="450"  src="/content/quake2/tutorials/alight/alight_img3.jpg"></div>

<p>It's a subtle difference, but every little bit counts (and it looks pretty good too)

<p><hr width=75% color=black noshade><p>

<p> You can download the example <a href="/content/quake2/tutorials/alight/alight_ex.zip">here</a>.

<p>
</ul><h1 id="50" name="50" class="book-h3">Clip Brush Q&A</h1><ul><h3>Quake 2</h3>
	<blockquote>
		Clip Brush Q&A - Various
	</blockquote> 
	
<br><br><b>Do I REALLY need to use Clip brushes?  It seems like a lot of tedious work!</b>

<p>The harsh reality is that creating Clip brushes in levels, especially large ones, is a pretty tedious job.  Especially since you'll typically want to add them after doing all of the structural and texture work of your level.  So, it's one thing that is often overlooked by most mappers.

<p>However, if you want your map to be played, or at the very least be enjoyed by many people (which is the reason most people publish maps), then you really should spend the time creating Clip brushes.  Nothing is more frustrating in a deathmatch game than to be running backwards while firing, only to be stuck by a small light fixture!

<br><br><b>Is preventing the player from getting stuck the only practical use for Clip brushes?</b>

<p>No. Clip brushes can be used in a variety of situations.  For example, let's say you created a hole in a wall from an explosion.   In this hole, you had the quad damage.  While everything might be setup by brushes for the player to crawl into that gap, the player might not be able to get out.   In this case, you could create a ramp with the clip brush to make it easier for the player to get back out.

<br><br><b>Can I use Clip brushes TOO much?</b>

<p>Like any tool or technique in Quake 2 editing, it's sometimes easy to go overboard.  Keep in mind you can't ever completely prevent the player from getting stuck.  Likewise, it's also very easy to abuse Clip brushes by putting them in a place where they block the player's movement with no indication as to why.  While this may be a interesting effect for a while, it very quickly becomes frustrating.

<p>As with everything else in Quake 2, be sure to test your level after adding Clip brushes - it's very easy to forget you're working in a 3D world - and that Clip brush which keeps the player from getting snagged on the first floor may end up accidentally blocking a doorway on the second floor!

<br><br><b>I just have some small light fixtures along my wall and using Clip brushes seems a bit too tedious.   Is there another way to handle this?</b>

<p>If you've got a lot of small items sticking out of a wall, you can change their content property to Mist (or AUX) which allows the player to pass through them without the need for Clip brushes.  However, this is really only useful for small items since the player passes completely through the object.  So, if you had some big columns, this technique probably wouldn't be practical.  But, for small light fixtures, this is sometimes quicker and easier than using Clip brushes!

<p></ul><h1 id="48" name="48" class="book-h3">Colored Light</h1><ul><h3>Quake 2</h3>
	<blockquote>
		Colored Light - <a href="mailto:fishman@gamedesign.net">Shane 'Fishman' Sherman</a>
	</blockquote>

<p>The one thing that I think makes quake2 one of the best looking games ever is colored lighting. The difference in visual quality between the software version with no colored lights and the hardware version with colored light support is like night and day. It adds so much atmosphere to the game. id made it very easy to use colored lighting when level designing and hopefully I can give some tips on the best ways to use them to their full potential. If you know all about colored lights and using them then you might want to skip to the bottom and check out my tips. Some of them can be very useful. 
	
<br><br><b>How do I use colored light?</b> 

<p>There are 2 ways you can produce colored lights:

<p>First way is the typical light entity with the key value pair <b>_color</b> and a value of the RGB code of the color you want.

<p>The second way is to have a texture radiate light. What's cool about this is whatever color the texture is that is the color the light will be. This is my preferred choice with using colored lights. Why? It gives off a much more realistic color of light. <em>It's much easier to let the light texture radiate the color then trying to match that color with a light entity</em>. 

<br><br><b>Why do some user made levels look like shit?</b> 

<p>It is very easy to overuse colored light. A lot of the first user made levels I have seen have severely overused colored light. Here are a few examples of overused colored lights:

<p><div align="center"><img src="/content/quake2/tutorials/clight/clight_img1.jpg">

<p>Blue and Red? Very unnatural light.

</div>

<p><div align="center"><img src="/content/quake2/tutorials/clight/clight_img2.jpg">

<p>Lime green...yuck.

</div>

<p><div align="center"><img src="/content/quake2/tutorials/clight/clight_img3.jpg">

<p>Not bad but still too much -- 5 different colors in one shot.

</div>

<p>Now if these people just let the surfaces radiate most of the light for them then they would get a much more natural look and feel. I'm not saying never use light entities i'm just saying to let the surfaces do some of the work for you.

<br><br><b>How do I made a surface emit light?</b> 

<p>To make a surface emit light, you must you the edit the surface properties of that brush or surface. There is a surface Property flag called light. For a better explanation on how to edit the surface properties and the light property I suggest you read my surface/content properties tutorial. It will explain everything you need to know on how to edit the surface properties. 

<br><p><b>Hints and Tips</b><br><br>


<p>Here are a couple of tricks I have figured out about colored light that might be able to help you:

<ul>
   <li>Values don't have to be between 0 and 1. The can be between 0 and 255 like normal RGB colors.<br><br>
        
   <li>Try using your favorite paint program and pick the color you want and write down the RGB code.<br><br>
        
   <li>Most editors have a color button that allows you to select the color from a pallete. Very handy!<br><br>
        
   <li>Sometimes when having a surface emit light, you will have to set the value EXTREMELY high depending on the size of the face or brush. Light values as high as 10000 are not uncommon. This is only with surface emitting light though.<br><br>

</ul>

<p>
</ul><h1 id="595" name="595" class="book-h3">Creating an outdoor area using Gensurf</h1><ul><h1 align="left"><u>Creating an outdoor area with Gensurf</u></h1>

<p><i>Original tutorial provided by Ricebug, written with QERadiant in mind.</i>

<p><font face="Arial">This tutorial will involve making an outside area and sky box. For making
realistic-looking landscape, we will also be using the stand-alone version of
David Hyde’s fantastic terrain generator program, <i><b><a href="http://www.planetquake.com/gensurf/">GenSurf</a></b></i>.
A plugin version is available for QERadiant also.</font></p>
<hr width=80% align="center">
<h3><u>Making
the Ground with <i>GenSurf</i></u></h3>
<p><font face="Arial">Since David Hyde keeps improving <i>GenSurf</i>, the instructions below may
not follow the current update.</font></p>

<font face="Arial">
1. For learning purposes, our outdoor area is going to be a small
&quot;backyard.&quot; Once you have <i>GenSurf</i> up and running, click on the General
tab. Under Set Waveform, select From
Bitmap. Also, uncheck Add Skybox<i>.</i>
The <i>skybox</i> option tells <i>GenSurf</i> to create a playable map with
ground, sky and player entity. We won’t need these for our purpose.</font>

<p align="center"><a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/content/quake2/tutorials/gensurf_outside/outs_01.gif"><img border="0" src="content/quake2/tutorials/gensurf_outside/outs_01.gif" width="450"></a></p>
<p align="center"><font color="#aa0000" size="2" face="Arial"><b>Figure 1: <i>GenSurf</i>'s
interface (click for larger image)</b></font></p>
<p><font face="Arial">3. We’re going to use a grayscale bitmap to form our ground elevations. If
you want, you can left-click on the one in Figure 2 and save it as a .BMP to a
directory of your choosing. Click on <i>GenSurf’s </i>Bitmap
tab and browse to this location.</font></p>
<p><font face="Arial">4. Compare the bitmap below with the wireframe preview in Figure 1 above. The
black areas dictate the lower elevation, while the whiter areas cause the ground
to swell upward. Lightwave and 3DSMax users know this as &quot;displacement
mapping.&quot; For example, by drawing thick, black lines on a white background,
you can easily define drainage ditches or culverts. In reverse, drawing thick,
white lines on a black background will give you walls. Shades of gray in between
black &amp; white will cause variations in the height of your walls. Some
interesting landscapes can be created with a little imagination.</font></p>
<p align="center"><img border="0" src="content/quake2/tutorials/gensurf_outside/outs_02.gif"></font></p>

<div align="center">
  <center>
  <table border="0" width="50%">
    <tr>
      <td>
        <p align="center"><font face="Arial"><b><font color="#aa0000" size="2">Figure 2: Grayscale
        image used to define elevation of terrain in <i>GenSurf.</i></font></b> <font color="#aa0000" size="2"><b><i>Image
        scaled to half original size for tutorial purposes.</i></b></font></font></p>
      </td>

    </tr>
  </table>
  </center>
</div>
<p><font face="Arial">5. Now click on the Extents tab. Under Lower-Left
Corner<i>,</i> type </font> <font color="#000000" face="Arial Black">–128</font>
<font face="Arial">
in both boxes. Under Upper-Right Corner<i>,</i>

type <font color="#000000" face="Arial Black">128</font> in both boxes. This
will give an area size of 512 pixels, the exact dimensions of our bitmap. Also
set Number of Divisions to 16
in both boxes. This will make for a smooth ground.</font></p>
<div align="center">
  <center>
  <table border="0">
    <tbody>
      <tr>
        <td>
          <p><font color="#aa0000" face="Arial"><b>WARNING</b></font></p>

        </td>
      </tr>
    </tbody>
  </table>
  </center>
</div>
<div align="justify">
<table border="0">
  <tbody>
    <tr>

      <td>
        <p><b><small><font face="Arial"><font color="#aa0000">Depending on the size of your map and
        hardware limitations, <i>GenSurf</i>-created walls, ceiling and floors
        can very quickly bog down the editor and dramatically increase compile
        times if you set the </font><font color="#000000">Number of Divisions</font><font color="#aa0000">
        to a number less than 64. Start with larger numbers and work your way
        down. As a rule, I complete my maps first and add the terrain when I'm
        done.&nbsp;</font></font></small></b></p>
      </td>
    </tr>
  </tbody>

</table>
</div>
<p><font face="Arial">6. Notice that your map preview shows a steep terrain. We want our ground to
flow downward in a smooth angle. To achieve this, change Map
color 0 to 50,
and <i>Map color 255</i>  to 100. Press <font color="#ffff00"><span style="BACKGROUND-COLOR: #000000">Tab</span></font>
on the keyboard and your map should smooth out.</font></p>
<p><font face="Arial">7. Click on the General tab and set Roughness
to <font color="#000000" face="Arial Black">0</font> and Random
Seed to <font color="#000000" face="Arial Black">1</font>.</font></p>

<font face="Arial">
8. Finally, under Output Map File<i>,</i> browse
to your <i>maps</i> folder and save the ground as <font color="#0000ff">outside.map</font>.</font>
<p>&nbsp;</p>
<hr width=80% align="center">
<h3><u>Adding
the Ground to the Map</u></h3>
<font face="Arial">1. Fire up Radiant and select FILE/NEW MAP.
I want you to clear anything out of the editing window to show you how to load
multiple maps into Radiant.</font>

<p><font face="Arial">2. With nothing in the editor, click on FILE and choose OPEN (Not LOAD).
Select the map of the rooms and hallway we’ve been working on. (Hopefully,
you’ve been saving things.)</font>
<p><font face="Arial">3. Now click on FILE. This time, choose LOAD and select the <i>GenSurf</i>
terrain you made. You should have both the terrain (in red) and the other map
file, as shown in the screen shot below. <u>Leave the terrain selected.</u>
</font>
<p><font face="Arial">4. With the terrain in red, click somewhere in its center and drag it towards
the bottom of your screen (you should be looking at the XY Top view). Drag it so
it rests on the outside wall of the square room as shown in Figure 3.</font></p>
<p align="center"><font face="Arial"><img border="0" src="content/quake2/tutorials/gensurf_outside/outs_03.gif"></font></p>
<p align="center"><font color="#aa0000" size="2" face="Arial"><b>Figure 3: Ground object in
place</b></font></p>
&nbsp;
<p><font face="Arial">5. Since I want the ground to slope down, away from the building, we’ll
need to rotate it.&nbsp; Look at the row of 6 buttons circled in yellow in Fig.
4<i>.</i> These show the different rotation commands for <b>X</b>, <b>Y</b>,

&amp; <b>Z</b>. With the ground still selected, you want to click on the last (<font color="#ffff00"><span style="BACKGROUND-COLOR: #000000">ZN</span></font>)
button TWICE, or you can click the <font color="#ffff00"><span style="BACKGROUND-COLOR: #000000">Y|Y</span></font>
button ONCE. The difference between these two buttons is that <font color="#ffff00"><span style="BACKGROUND-COLOR: #000000">ZN</span></font>
rotates a selection clockwise at 90-degree increments, while <font color="#ffff00"><span style="BACKGROUND-COLOR: #000000">YY</span></font>
vertically flips the selection. The end result is the same.</font></p>
<hr width=80% align="center">
<blockquote>

  <blockquote>
    <blockquote>
      <p align="center"><b><font face="Arial"><font color="#ffff00" size="3"><span style="BACKGROUND-COLOR: #000000">Y|Y</span></font><font color="#008080" size="3">
      </font><font color="#008000" size="3">flips brushes vertically on the
      screen;</font><font color="#008080" size="3"> </font><font color="#ffff00" size="3"><span style="BACKGROUND-COLOR: #000000">X|X</span></font><font color="#008080" size="3">
      </font><font color="#008000" size="3">flips them horizontally.</font></font></b>
    </blockquote>

  </blockquote>
</blockquote>
<hr width=80% align="center">
<font face="Arial">
6. The next thing to do is go to a side view of our <u>still-selected</u>
ground. CTRL-TAB until you get to the <font color="#0000ff" face="Arial Black"><b>YZ
Side</b></font> view. Click on the ground and drag it down until the high side
is even with the floor of the square room, as shown in the figure below.</font>
<p align="center"><font face="Arial"><img border="0" src="content/quake2/tutorials/gensurf_outside/outs_04.gif"></font></p>
<p align="center"><font color="#aa0000" size="2" face="Arial"><b>Figure 4: Ground lowered to
same elevation as floor</b></font></p>
<font face="Arial">

&nbsp;7. Once the slope is positioned where you want it, hit <font color="#ffff00"><span style="BACKGROUND-COLOR: #000000">ESC</span></font>ape
to deselect it. Save your work.</font>
<p><font face="Arial">8. The next thing we want to put in are some walls to enclose the ground. It
would look unrealistic to bring the sky texture down to the ground. I added a
&quot;stepped&quot; down stone fence along the sides.</font>
<p><font face="Arial">9. Next, select the sky texture and build a box to enclose the fence and
ground. The &quot;walls&quot; of the sky box should rest flush against the
outside of the fence. The &quot;ceiling&quot; of the sky should come just above
the &quot;roof&quot; of the exterior building. See figure 5.</font>

<p align="center"><a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/content/quake2/tutorials/gensurf_outside/outs_05.jpg"><img border="0" src="content/quake2/tutorials/gensurf_outside/outs_05.jpg" width="450"></a></p>
<p align="center"><font color="#aa0000" size="2" face="Arial"><b>Figure 5: Constructing the
Sky Box (click for larger image)</b></font></p>
<hr width=80% align="center">
<b><font face="Arial"><font color="#008000">Thankfully, Radiant uses some conventional Windows
commands to make things easier. </font><font color="#ffff00"><span style="BACKGROUND-COLOR: #000000">Ctrl-C</span></font><font color="#008000">
copies a brush and </font><font color="#ffff00"><span style="BACKGROUND-COLOR: #000000">Ctrl-V</span></font><font color="#008000">
pastes it. By copying, pasting and rotating brushes with the </font><font color="#ffff00"><span style="BACKGROUND-COLOR: #000000">X|X</span></font><font color="#008000">,
</font><font color="#ffff00"><span style="BACKGROUND-COLOR: #000000">Y|Y</span></font><font color="#008000">
and other rotate buttons, you can quickly fabricate structures.</font></font></b>

<hr width=80% align="center">
<p><font face="Arial">After you finish the skybox, let’s make a small pool of water in the lower
depression to give our yard some character.</font></p>
<font face="Arial">
10. Find one of the water textures and click on it. Now drag a square brush
through the ground. Make sure you don’t go outside of the brick fence we just
built. See figure 6. I made the depth of my water brush 32 units, just enough to
give it an illusion of depth.</font>
<p align="center"><a href ="content/quake2/tutorials/gensurf_outside/outs_06.jpg"><img border="0" src="content/quake2/tutorials/gensurf_outside/outs_06.jpg" width="450"></a></p>
<p align="center"><font color="#aa0000" size="2" face="Arial"><b>Figure 6: Adding water (click for larger image)</b></font></p>
<p align="center"><font face="Arial"><img border="0" content/quake2/tutorials/gensurf_outside/outs_07.jpg"></font></p>
<p align="center"><font color="#aa0000" size="2" face="Arial"><b>The completed outside area.</b></font></p>
<p align="center">&nbsp;</p>
<hr width=80% align="center">
<p align="center"><b><small><font face="Arial">Copyright 1999, by Terry DeLaney. Permission is granted to
distribute this file as long as the author receives credit.</font></small></b></p></ul><h1 id="530" name="530" class="book-h3">Custom door/plat/button sounds</h1><ul><!-- by Knightmare (andy_howard@bigpond.com) 2004 -->
	 
<h3>Quake II</h3>
<blockquote>
	<b>Custom door/plat/button sounds</b> by <a href="mailto:knightmare66@yahoo.com">Knightmare</a> .
</blockquote>

  <p>I've found a quick way to add support for custom door, plat and button sounds to Q2. This will be in the next release of KMQuake2, but it can easily be added to any MOD.</p>

<hr noshade color="black">
<!--break-->
<h3>Methodology</h3>

<h3>Step 1:</h3>

  <p>In g_func.c, look for this code in the function SP_func_plat:</p>

<blockquote><code>
  ent->moveinfo.sound_start = gi.soundindex ("plats/pt1_strt.wav");</br> 
ent->moveinfo.sound_middle = gi.soundindex ("plats/pt1_mid.wav");</br> 
ent->moveinfo.sound_end = gi.soundindex ("plats/pt1_end.wav");</br>
</code></blockquote>

  <p>and replace it with this:</p>

<blockquote><code>
if (ent->style > 0 && ent->style < 100) // custom sounds</br> 
{</br> 
   ent->moveinfo.sound_start = gi.soundindex  (va("plats/pt%02i_strt.wav", ent->style));</br> 
   ent->moveinfo.sound_middle = gi.soundindex  (va("plats/pt%02i_mid.wav", ent->style));</br> 
   ent->moveinfo.sound_end = gi.soundindex  (va("plats/pt%02i_end.wav", ent->style));</br> 
}</br> 
else</br> 
{</br> 
   ent->moveinfo.sound_start = gi.soundindex ("plats/pt1_strt.wav");</br> 
   ent->moveinfo.sound_middle = gi.soundindex ("plats/pt1_mid.wav");</br> 
   ent->moveinfo.sound_end = gi.soundindex ("plats/pt1_end.wav");</br> 
}</br> 
</code></blockquote>

  <p>This change could also be added to the func_trackchange entity in Lazarus.</p>

<h3>Step 2:</h3>

  <p>In the SP_func_button, replace the following:</p>

<blockquote><code>
if (ent->sounds != 1)</br> 
   ent->moveinfo.sound_start = gi.soundindex("switches/butn2.wav");</br> 
</code></blockquote>

  <p>with this:</p>

<blockquote><code>
if (ent->style > 0 && ent->style < 100) // custom sounds</br> 
   ent->moveinfo.sound_start = gi.soundindex (va("switches/butn%02i.wav", ent->style));</br> 
else if (ent->sounds != 1)</br> 
   ent->moveinfo.sound_start = gi.soundindex ("switches/butn2.wav");</br> 
else</br> 
   ent->moveinfo.sound_start = 0;</br> 
</code></blockquote>

<h3>Step 3:</h3>

  <p>In both the  SP_func_door and SP_func_door_rotating, replace this:</p>

<blockquote><code>
if (ent->sounds != 1)</br> 
{</br> 
   ent->moveinfo.sound_start = gi.soundindex  ("doors/dr1_strt.wav");</br> 
   ent->moveinfo.sound_middle = gi.soundindex  ("doors/dr1_mid.wav");</br> 
   ent->moveinfo.sound_end = gi.soundindex  ("doors/dr1_end.wav");</br> 
}</br> 
</code></blockquote>

  <p>and replace it with this:</p>

<blockquote><code>
if (ent->style > 0 && ent->style < 100) // custom sounds</br> 
{</br> 
   ent->moveinfo.sound_start = gi.soundindex  (va("doors/dr%02i_strt.wav", ent->style));</br> 
   ent->moveinfo.sound_middle = gi.soundindex  (va("doors/dr%02i_mid.wav", ent->style));</br> 
   ent->moveinfo.sound_end = gi.soundindex  (va("doors/dr%02i_end.wav", ent->style));</br> 
}</br> 
else if (ent->sounds != 1)</br> 
{</br> 
   ent->moveinfo.sound_start = gi.soundindex  ("doors/dr1_strt.wav");</br> 
   ent->moveinfo.sound_middle = gi.soundindex  ("doors/dr1_mid.wav");</br> 
   ent->moveinfo.sound_end = gi.soundindex  ("doors/dr1_end.wav");</br> 
}</br> 
else</br> 
{</br> 
   ent->moveinfo.sound_start = 0;</br> 
   ent->moveinfo.sound_middle = 0;</br> 
   ent->moveinfo.sound_end = 0;</br> 
}</br> 
</code></blockquote>

<hr noshade color="black">
<!--break-->
<h3>FILES</h3>

  <p>The custom filenames for doors are:</p>

  <p><UL type="square"> 
     <LI>doors/drxx_strt.wav, 
     <LI>doors/drxx_mid.wav, 
     <LI>doors/drxx_end.wav
  </UL></p>
 
  <p>The custom filenames for plats are:</p> 

  <p><UL type="square"> 
     <LI>plats/ptxx_strt.wav, 
     <LI>plats/ptxx_mid.wav, 
     <LI>plats/ptxx_end.wav
  </UL></p>
 
  <p>The custom filenames for buttons are:</p> 

  <p><UL type="square"> 
     <LI>switches/butnxx.wav
  </UL></p>
 
  <p>Where xx is a 2-digit number from 01 to 99 that corresponds to the style value.</br> 
</p>

<hr noshade color="black">
<!--break-->
<h3>Comments</h3>

  <p>I decided to use the style key for custom sounds because many maps may have different sounds values set for doors. The default QERadiant .def file has door sound sets listed that are from Q1, and many mappers may have given their doors sounds values other than 0 and 1 (default and no sound). I didn't want to change the behavior of existing maps.</p>
</ul><h1 id="51" name="51" class="book-h3">Environmental Maps</h1><ul><h3>Quake2</h3>
	<blockquote>
		Environmental Maps - <a href="mailto:fishman@gamedesign.net">Shane "Fishman" Sherman</a>
	</blockquote>
	
<p>One of the coolest new things in Quake2 are the environment maps. The only problem is that there is not a great variety of them in Quake2. They are <b>unit1_</b> through <b>unit9_</b> and <b>space1</b>. The unit maps are all of the alien world backgrounds and space is the one used on the last few levels. To view these in a map just type <b>sky</b> <i>name of sky</i> at the console.<br><br>

What if you dont like any of the Quake2 environment maps? Well make your own. This is what I will attempt to show you how to do. It's not very easy though.<br><br>

First thing you have to do is draw the art which is by far the hardest part. The environment map acts like a cube around your level so there must be 6 seperate pictures; up, down, left, right, front, back. They aren't orientated the way you think they are though... Below are some screenshots of some of the Quake2 env. maps so you can see what sides must match the other sides.<br><br>

<p><div align="center"><img src="content/quake2/tutorials/env_maps/env_maps_img1.jpg"></div>

<p>The unit5_ environment map.

<p><div align="center"><img src="content/quake2/tutorials/env_maps/env_maps_img2.jpg"></div>

<p>The space1_ environment map.

<p><hr width=75% color=black noshade><p>

<p>Each image <b>must be 256x256 pixels and there must be 2 seperate sets of images</b>. This is because there must be a set of 6 24 bit color tga files for people with 3d acceleration cards and a set of 6 8 bit color pcx files for people without. Remember though that the 8 bit color pictures must be converted to the quake2 pallete. You can get the quake2.act photoshop file on the <A HREF="../../quake2files.shtml">files</A> page.<br><br>

The last thing you need to do is <b>end all your image file names with: bk, dn, ft, lf, rt, and up</b>. These stand for back, down, front, left, right, and up.<br><br>

So if we made a new environment map called earth1 these are the image files we would have to have: earth1bk.tga, earth1dn.tga, earth1ft.tga, earth1lf.tga, earth1rt.tga, earth1up.tga, earth1bk.pcx, earth1dn.pcx, earth1ft.pcx, earth1lf.pcx, earth1rt.pcx, and earth1up.pcx. All of these images would be 256x256 pixels in size.<br><br>

Once you have all your art done and you want to see what it looks like in a level then all you need to do is create a directory off of your /quake2/baseq2 dir called env. and put all the files in that directory. Then load up quake and start playing and type sky <i>name of sky you made</i>. So with earth1 we would type sky earth1.<br><br>

To actually get the sky to appear from the beginning you will need to add sky <i>name of sky</i> to your worldspawn entity. You can also make the sky rotate by adding a <b>skyaxis</b> and a <b>skyrotate</b> key and value into the worldspawn. Thats about all there is to creating your own environmental maps. The hardest part is the art but there are some programs that will make it easier. The one is called Bryce2 which is a 3d landscape creator. There is also a photoshop plugin at <a href="http://www.wasabisoft.com/" target="_top">http://www.wasabisoft.com/</a> that lets you create cubic graphics that you might want to check out. You might also like to have a good graphic editing program. I prefer Photoshop4. also remember that you will have to include your homemade environment map with any level you distribute if you want other people to be able to see it.<br><br>

<p><div align="center"><img src="content/quake2/tutorials/env_maps/env_maps_img3.jpg"></div>

<p>Here is my own bright sky env. map I made

<p>
</ul><h1 id="241" name="241" class="book-h3">Func_areaportal - 1 - Addendum</h1><ul><h3>Func_areaportal - Addendum</h3>

<p>
First off, be warned: this is not a new tutorial on how to make and use a func_areaportal. If you need to know how to make one, check out fishman's tutorial on that very thing.
</p>
<p>
Now, the purpose of this mini-tutorial is to familiarize you with one of the problems you will almost undoubtedly come across when you are using func_areaportals: the dreaded <strong>"func_areaportal [entity number] doesn't touch two areas"</strong> error. Don't worry, it's a pretty simple thing.
</p>
<p><strong>A func_areaportal must entirely separate two areas.</strong> That's it; it's that simple. This means that there can be no "leaks" (for lack of a better word) between the areas on either side of the areaportal. 
<p>
<strong>Anything that does not completely block vis, such as windows, holes, func_walls, detail brushes, transparent brushes, brushes with the mist flag set, liquid, etcetera, etcetera, will generate the error</strong> if that brush or entity connects the two areas. If, on the other hand, another func_areaportal is used, the error is gone. Makes sense, because the very purpose of the areaportal is to block vis.
</p>
<p>
What it all boils down to is this: If you get this error, <strong>make sure that the only way for you or the engine to get (or see) from one side of an areaportal to the other, is through an areaortal</strong> (doesn't have to be the same one.)
<HR>
</p>
<p>Another little thing, and a bonus for sitting through my feeble attempt at coherency:
</p>
<h4>Func_areaportals and multi-part doors.</H4>
<p>
(WooHoo! Excited?) There are a few ways to do muti-part doors, and this is just one. One of the doors in the <a href="http://www.gamedesign.net/miniwood/tutorials/maps/func_ap.zip">example map</A> is a two-part door, for reference.
</p>
<p>Quick and simple. First, create your door, and place one areaportal inside the doorway, just like the door was one piece. Now, give all of the pieces of the door a matching "team" key. For example,                 "door1". Now all of your door pieces have "team"="door1". Next step: set one of the door pieces to target the areaportal. Thats it. 
</p>
<p>There are a few good things about this. First, you won't have to worry about one side of a door triggering the areaportal off, and the other trigering it back on. Second, in the case of an especially wide door, no matter how you approach the door, it will always open all at once.
</p>
<p>
<b>GrrandMaMa</b>
</P>
<BR><BR>

You can download the <a href="http://www.gamedesign.net/miniwood/tutorials/maps/func_ap.zip">example map</a> here. Also if you have any problems or need some help please post to the <a
                href="http://forums.gamedesign.net">forums</a>.</ul><h1 id="242" name="242" class="book-h3">Func_areaportal - 2 - Problems</h1><ul><H3>Func_areaportal - Problems</H3>
<P>
This tutorial was sent to rust by Joel Caesar. We'd like to thank him for helping us out.
</P>
<p>
Some people have problems with the Areaportal entity in Quake 2. Usually, they can get an areaportal setup, and compiling correctly (no errors of the "doesn't touch two areas", or "touches more than two areas" variety). Still, the
infamous hall of mirrors effect will appear. Sometimes it even appears on a previously working Areaportal, after you've added another.
</p>
<p>
Here is a tip to put into your arsenal, to make more or less perfect areaportals. Actually, it's also a door design technique. You need to isolate the door. Completely. Take a look at the accomanying graphic. Here you see a door between two rooms. This could be a door between a room and a hallyway, or between two <b>DIFFERENT</b> hallways. Many people when creating an Areaportal,
actually wind up putting the Areaportal touching two areas, say 1 and 2, but frequently put the areaportal within one of these areas. Therein lies the problem.
</p>
<p>
An Areaportal, I find, has to be <b>BETWEEN</b> two areas, not part of either. Sometimes the HOM effect won't appear with just two portals, but when you have 6 or 7 (like on my map) it eventually happens. Create a box to contain your door. Cut out the hole for the door, being sure to leave some brush on all sides (except the walkway of course). When you create the door, be sure it won't touch the adjacent rooms, and is inset a little. Put the areaportal within the door. You can let it extend into the surrounding brush, but don't let it touch the void.
</p>
<p>
That's it. I have yet to create a door using this technique, with an areaportal, and get the hall of mirrors effect. This works for anykind of door, even rotating ones, and multisegmented doors too. There may be those who say you don't need to do this exactly like this, and sometimes I think that's true, but I find this one so far, has worked 100% of the time for me.
</p>
<center><img src="http://www.gamedesign.net/miniwood/tutorials/images/ap.gif" width=214 height=522 border=0 alt=""></center>
<P>
Well anyways if you still don't understand please post your questions to the <a href="http://forums.gamedesign.net">Forums</a>.</P></ul><h1 id="243" name="243" class="book-h3">Func_areaportal - 3 - Common Problems</h1><ul><h3>Areaportals - Common Problems</h3>

<p>By Joel Caesar</p>

<p>
Areaportals (or APs) tend to be one of the more problematic elements of Quake2. I've found that time after time, people are reading the previous tutorials and are STILL not able to get them working correctly. I almost couldn't believe it, thinking these other people were doing something wrong. Until I was working on a tower in an outdoor area map, I didn't realize that many of the terms related to APs are understood differently. This addendum is a brief recap of some of the previous tutorials, but is not meant as a replacement for all of them.
</p>

<p>I will cover the following items:</p>

<p>
1. A proper AP door (building)
<br>
2. What is an area? ( and placing the AP)
<br>
3. The Hall of Mirrors (HOM) error
<br>
4. The Grey Door Problem. (Updated 4/19/98)
</p>

<h4>1. A proper AP door.</h4>
<p>
A proper AP door is a func_door surrounded on all sides by a frame (required because otherwise the entity touches the void causing a leak--this will be more clear in placement). The func_door then has a target of a func_areaportal. In fig. 1, you can see the frame brushes outlined in white (filled gray). The outline of the func_door is in yellow. The func_areaportal can be seen in fuscia. In my
working with APs, I've found it actually is OK to allow the areaportal to touch the void.
</p>
<p><center><img src="http://www.gamedesign.net/miniwood/tutorials/images/ap0.gif" width="297" height="209" alt="ap0.gif (2896 bytes)"></center></p>

<h4>2. What is an area?</h4>

<p>
An areaportal door needs to be sandwiched between two different areas. Like a slice of cheese between bread. In fig. 2 below, you can see where I've drawn two rooms, and a room and a hallway--I've also drawn the entire AP entity in yellow (func_door and func_areaportal). The door must be BETWEEN, and NOT IN, any of the rooms involved, or hallways (henceforth, areas)--and each area, must be sealed with no leaks or openings, or the area must be terminated by another AP.
</p>
<p>
Sometimes, the two rooms can touch the door entity.  Sometimes it cannot. Why? I can't tell you, suffice it to say, try pushing the two areas together until
they touch the AP door and its frame. If this causes problems, you might need to extend the frame to meet the two areas. Usually the first way does work, so read on to see if you have other problems before changing this, as changing frame size is usually a minor problem.
</p>
<p><center><img src="http://www.gamedesign.net/miniwood/tutorials/images/ap1.gif" width="353" height="319" alt="ap1.gif (3115 bytes)"></center></p>

<p>
Ah hah... there's more. The above fig. 2 is an easy example to see two completely seperate areas. In fig 3. below, there is a room within a room. A common configuration of an outdoor room, or a room within a room. You might think that the two areas here are completely seperate. Quite WRONG. The problem lies in the inner room (red arrow). It's not seperate. It has the same floor and ceiling
(and if it didn't it wouldn't matter--it's not enough of a difference. The problem
is actually the walls.</p>

<p>While not entirely incorrect, this configuration may work as is, albeit with some trouble. Seperating the ceiling and floors of the inner room and making them different brushes of the outer room might work, but not if you need another entrance to
the inner room, other than teleporters.</p>

<p><center><img src="http://www.gamedesign.net/miniwood/tutorials/images/ap2.gif" width="420" height="321"
alt="ap2.gif (3320 bytes)"></center></p>

<p>Here is how to correctly build this type of room for an AP (fig. 4 below). Different walls, different ceilings, and so on (different floors and ceilings, green and blue). Trust me.. If you don't build your rooms like this, you're gonna rebuild them later.</p>

<p><center><img src="http://www.gamedesign.net/miniwood/tutorials/images/ap3.gif" width="397" height="363" alt="ap3.gif (4874 bytes)"></center></p>

<p>Okay.. you say.. I get it, I get it.. But do you? Do you know WHY? Here's
the answer:</p>

<p>1. An area is a completely sealed room (or container if you will) from which, all of
it's interior faces can ONLY be seen from within that area.</p>

<p>2. An area is a completely sealed room from which all of it's exterior faces, can only
be seen by the void (or nothing).</p>

<p>This of course doesn't include looking through where doors would be.</p>

<p>Below, you will find two examples, based on my map "Atmospheric Processor" (terraform2.bsp). I discovered in fig.5 below, my APs weren't working, yet I followed all the other tutorials (obviously). It ultimately came down to "What is an area?" The red outlined brushes represent sky, so this is an outdoor area. The above examples of a room in a room, are basically the box at the bottom of
the figure, with the tower on top. Most of the brushes, more or less were very similar to what you see here. Large, solid brushes. They broke rule 2. above. BSP did not see them as entirely seperate areas (in the tower and outside the tower), even though both ends of the openings (as seen) are terminated with APs.</p>

<p><center><img src="http://www.gamedesign.net/miniwood/tutorials/images/apt1.gif" width="442" height="380" alt="apt1.gif (6296 bytes)"></center></p>

<p>What I had to do is add a small room within the opening (actually I wound up rebuilding the entire tower to learn this--so do what you need to do). I basically wound up with an inner-lower room, and inner-tower room (both connected). The large outer room, was made of the "skybox" and floor room, and the outer shell of the tower, and outer shell
of the lower room (outer shell or lower room not shown below).</p>

<p><center><img src="http://www.gamedesign.net/miniwood/tutorials/images/apt2.gif" width="418" height="386" alt="apt2.gif (7594 bytes)"></center></p>

<h4>3. The Hall of Mirrors Effect (HOM)</h4>

<p>The Hall of Mirrors Effect is an error caused by an areaportal, which causes an area of the map to constantly display the contents of the screen without clearing. It's sort of like giant smudging, and sort of cool lookin I suppose, but.. still.. it's an error to be killed. What causes it? I don't know... But usually, it's not a bad areaportal. HOM usually appears after adding two or more APs to your map and usually it's because they connect the same areas... Can I help you fix it? Maybe.. Here's what I recommend. In the figure below, you will see the typical OK-side, and HOM-side. On the HOM-side you need to make the opening smaller (as
indicated by the red arrows). I'm talking about 2 grid points (pixels) here folks.. If you chose the right textures, you may not even have to realign them.</p>

<p>If you have HOM on BOTH sides of a door, then you have the problem on more than one areaportal. Do the above steps to each areaportal to see if this fixes it. If none of this works for you, I've usually found that having very symmetrical rooms (or groups of rooms) are the cause of this error (but not always), so try repositioning where the door is.</p>

<p><center><img src="http://www.gamedesign.net/miniwood/tutorials/images/hom1.gif" width="374" height="253" alt="hom1.gif (5170 bytes)"></center></p>

<h4>4. The Grey Door Problem</h4>

<p><i>NOTE: I knew I'd figure this out after emailing J. Carmack and all the level designers at Id, and before getting a response... ARGH.</i></p>
<p>I've usually found the grey door problem when testing my level in software mode. Hardware accelerated graphics boards (3Dfx, Permedia2) don't usually show the problem. I have found that this happens under two possible conditions.  Check your areaportals by the numbered list below:</p>

<ol>
<li>Be sure your areaportal has the <b>Clip</b> texture on <b>ALL</b> sides, or, you can use the <b>trigger</b> texture.<br>
<b>NOT</b> the Skip, Hint, or other textures. 
<br>
</li>
<li>Make sure the texture properties (again on <b>ALL</b> sides) have<br>
NoDraw <b>ON</b>, PlayerClip <b>OFF</b>, and MonsterClip <b>OFF</b>!<br><br>
<i>Try compiling at this point.</i><br><br>
</li>
<li>If you still have the grey areaportal, check to see if the frame<br>
of the door (you do have one right) completely touches the<br>
outer edges of the door.<br></li>
</ol>
<p>If the above doesn't work, then the area opposite the grey side may have too many
polygons to be drawn for software mode and this is just a result. You may have to remove the AP door, or change it to a regular door, and then perhaps use a U or L shaped hallway, or some other type of vis-blocker to make this part or your level work.</p>
<br><br>

<h4>Area Portals set for DM and Single Player</h4>

When using Area Portals in both DM and Single Player, you might find some problems.  In the typical single player game, doors are closed.  In DM most, if not all doors, are open.  You'll get the good ol' HOM.  Also, you won't get any errors related to areaportals and the number of areas they touch.
<br><br>
Sure you can take the cheap way (read, "easy") and make doors open real fast and close real fast (I personally like this, cause I don't think there is
any real place where doors are always open).  The hard way, is to have your DM areaportal doors not appear in deathmatch.  Sadly enough, I didn't have
an answer for the HOM portal problem.  Phil Daniels figured it out though, so he gets the credit for the info., cause I'd never have figured it out.
<br><br>
Most entities in most editors have spawnflags for whether they appear in single player, deathmatch, or under a particular difficulty level.  The
logical thing to do, would be to set the door to have a spawnflag "not in deathmatch" and the same for the areaportal (after all there is no more
door).  Nope.
<br><br>
The areaportals cannot be set this way.  They have to be operated, not flagged out (i.e. they will still be loaded).  Set a trigger_always targeted
to the ap's name and set it's spawnflags to "not in easy", "not in normal", and "not in hard".  The AP should have NO flags set, the door has "not in
deathmatch" set.
<br><br>
The level loads in DM and at load point, the areaportal is triggered (stays open) so there is no HOM.


<p>Copyright © 1998 Joel Caesar<br>
Permission granted to R U S T to publish this doc.</p></ul><h1 id="52" name="52" class="book-h3">Hint Brushes De-Mystified</h1><ul><h3>Quake 2</h3>
	<blockquote>
		Hint Brushes De-Mystified - <a href="mailto:jcaesar@mediaone.net">Joel "Death Mongrel" Caesar</a>
	</blockquote>
	
<br><br><b>Why this tutorial?</b>

<p>Even with the recent .plan file posting from PlanetQuake's QuakeFinger server detailing how to use hint brushes, many people still find them difficult to understand. I therefore offer this "Tutorial" to help you learn how, where, when, and why to use them. 

<p>The difficulty in learning how to use hint brushes is complicated, mainly because one has to know how the bsp and vis utilities (or QBSP/QVIS) actually work. I may not be 100% correct here, but in some test maps, the effects desired were achieved by placing the hint brush according to the steps which will follow below. 

<p>Knowing how bsp works is the most important aspect of using hint brushes. Learning how bsp builds triangles out of your brushes can really only be done well if you have a FULL OpenGL implementation on your build machine. If you do, you can use "gl_showtris 1" in the console to have the Quake2 engine display the triangles. Unfortunately 3Dfx boards don't allow this. FireGL1000Pro's from Diamond work nicely, and are a decent 3D accel. for NT (Not as smooth as 3Dfx in games like GLQuake1/2). The FireGL1000Pro also doesn't show colored lighting (if they do, I'd like to know how to turn that on). 

<p>All of the figures below will be shown from the top-down view only. (Please note that bsp will often be more complicated in building triangles out of your brushes, and my example was drawn to keep it "clean" and understandable). 

<p><hr width=75% color=black noshade><p>

<p><b>Part of the Map</b>

<p><div align="center"><img src="/content/quake2/tutorials/hint/hint_img1.gif"></div>

<p>Here is an example hallway between two areas (shown in later examples). Again, shown from the top-down view.

<p><hr width=75% color=black noshade><p>

<p><b>Understanding BSP Created Triangles</b>

<p><div align="center"><img src="/content/quake2/tutorials/hint/hint_img2.gif"></div>

<p>When you run BSP (or QBSP3) the program goes through each brush and slices it into triangles. Some people refer to the triangles as polygons. I will use the term triangles, because that should remind you that, to my knowledge, Quake doesn't use 4-point polygons. 

<p>Here you can see the brushes (at least as far as top-down view is concerned) have been divided into triangles as shown by the yellow lines. 

<p><hr width=75% color=black noshade><p>

<p><b>Understanding How VIS Determines What to Draw</b>

<p><div align="center"><img src="/content/quake2/tutorials/hint/hint_img3.gif"></div>

<p>Here you can see we've added two areas in red, representing either more hallways, rooms, or any "container" in which the player can go or see. 

<p>Notice the green line of sight line (LOS) that I've drawn. It indicates how far you can see into the hallway and around its corner from Area 2. 

<p>Now say your player is at Point A. Since he is not past the green line, the Quake engine will not draw triangles of and within Area 2. Now say your player moves to Point B. Suddenly, the Quake engine will draw area 2--and you're still behind the LOS line! 

<p>The reason? Point C, which is on the SAME triangle as Point B, can see into Area 2. When VIS determines what can and can't be seen from a single triangle, it uses the vertexes (I assume ;). 

<p><hr width=75% color=black noshade><p>

<p><b>What a Hint Brush is and How to Place It</b>

<p><div align="center"><img src="/content/quake2/tutorials/hint/hint_img4.gif"></div>

<p>A hint brush, is a brush with the hint texture applied to all sides. Typically you make it as small as is manageable (about 8 units thick) and large enough to slice through the area you need to "split." 

<p>As shown in the diagram, the hint brush (in pink, or fuscia if you will), completely slices through the section of hallway. DO NOT USE CSG!!! You will create a leak if you do. The hint brush is not rendered, and is only used by VIS (more on that in part 4). 

<p>In this example, the hint brush has been placed almost to the line of sight and extends into the void through the hallway. 

<p><hr width=75% color=black noshade><p>

<p><b>What the Hint Brush Does</b>

<p><div align="center"><img src="/content/quake2/tutorials/hint/hint_img5.gif"></div>

<p>The hint brush forces QBSP to "break" brush triangles at the indicated points (see diagram), creating more triangles VIS can use to calculate with. 

<p>Now, when the player is at Point A or B, Area 2 is NOT drawn. When the player is at Point C, Area 2 IS drawn. Notice how in example 2, Area 2 is drawn for 50 percent of the hallway. The triangle in example 4, under Point C, is now about 25 percent as large as it was previously. 

<p>What this means is, you've added maybe 10-20 triangles but 80 percent of the hallway doesn't draw Area 2, saving you even more triangles from Area 2 being drawn. 

<p><hr width=75% color=black noshade><p>

<p><b>Final Notes</b>:

<p>You need to be careful adding hint brushes. If BSP had created triangles as in example 4, then you don't need to add a hint brush. The "break" is already there. Adding the hint brush in this case would simply increase the total number of triangles in the hallway, completely defeating it's purpose.

<p>Also, in order to accurately determine whether or not you need a hint brush in a specific place, you really need the gl_showtris option set to 1, and a full OpenGL implementation on your system.

<p>
</ul><h1 id="46" name="46" class="book-h3">Jump pads in Q2? You betcha!</h1><ul><!-- <html> --> 
<!-- temp tag used for previewing, remove later -->

<!-- angles_data.htm - converted 21/08/01 from old rust documents -->
<h3>Quake 2</h3>
<blockquote>
		Jump pads in Q2? You betcha! - 
		<a href="mailto:rascal@magnolia.net">David Hyde</a> &amp; 
		<a href="mailto:tonykat127@earthlink.net">Mad Dog</a>
</blockquote>
<br><br>	

<h3>The "angles" key/value pair</h3>

 <p>OK, this is a long story, but you goons are required to read the whole thing... 
	that's the price you pay for cool information. My 
	<a href="http://tarot.telefragged.com"> Tarot</a> teammate and spiritual advisor 
	Monsto Brukes wanted to simulate Q3 jump pads in Q2 for map testing purposes. 
	Tarot's bit_twiddling nerd guy (that's me) opened up the Q2 source and started to 
	plug in an elevation value. But wait... he found that trigger_push code refers to 
	the "angles" key... but that's not right he says... trigger_push just uses 
	"angle". Well it turns out id didn't trust you mapper goons to be able to do a 
	little simple trigonometry, so they published the input for trigger_push as 
	"angle" only, but the code does not have that limitation.</p>

 <p>The "angles" values are pitch (up/down), yaw (left/right) and roll (fall over). 
	If "angle" is specified for an entity, then the code automatically sets "angles" 
	to 0,angle,0... and these values are used for the entity. But what happens if 
	instead of specifying "angle" in the .map file, you set the three "angles"?... 
	heh heh... you know the answer, don't ya? And all it takes is a little math to 
	translate those angles into movement directions... but not to worry, Tarot's 
	bit_twiddling nerd has done that for you. The translations performed by the game 
	source end up making a positive pitch down from horizontal. Yaw is unaffected by 
	this, so you'd use the same angle you've previously used for the angle key. And 
	roll is ignored for trigger_push, which is a shame, really... it would be nice 
	to have a trigger_push that made you do flips. Anyhow... quick example, and I'm 
	sure you can take it from there. Say you want the trigger_push to push you up 60
	degrees from horizontal and to the west. Set "angles" to _60 180 0. That's it.</p>

 <p>So how do you go about using this info in your editor? If your editor allows you 
	to enter user_defined keys (qED, QERadiant, QuArk), you're all set. Just enter 
	"angles" for the key and "<_pitch> <yaw> 0" for the value. If you're using Tread, 
	open up quake2.gdf, find trigger_push, and enter the following below the "angle" 
	line:<br>
	<blockquote><pre>def_key : string : "angles" : "pitch yaw roll" : ""</pre></blockquote><!-- <br> -->
	If you're using WorldCraft, Mad Dog has already done the work for you... 
	<a href="http://home.earthlink.net/~tonykat127/mapediting/fgd_q2.zip">get his new 
	.fgd file.</a> If you're using Qoole, stop. (ed. I’d have to agree.)</p>

 <p>One qualifier that could foul this up for you: If your editor forces an "angle" 
	key to be written to the .map file, "angles" will still work as long as it occurs 
	after the "angle" definition. So if you try this and you get the same old 
	trigger_push behavior, open up your .map file in a text editor, find the 
	trigger_push, and delete the "angle" line.<br>
	<br>
	The syntax for an 'angles' keyvalue is:<br>
	<blockquote><pre>"angles" "pitch yaw roll"</pre></blockquote><!-- <br> -->
	Pitch can be any number from _90 to 90; negative numbers "aim" up and positive 
	numbers "aim" down. Yaw can be virtually any positive number, generally 0_360 
	(this would be the same value one would typically use for 'angle'). Roll can be 
	any number from _180 to 180; this affects the "canted" view one can achieve with 
	an info_player_intermission. Depending on the entity, a "roll" value of anything 
	other than 0 can yield no result, an interesting result, or a result you want to 
	avoid.</p>
	
 <p>Some example entities by way of explanation:
	<ul type="square">
		<li><b>Ammo</b> - Ammo need not lie flat. If you want to put a box of ammo 
			on a tilted floor, or simulate an item amid a jumble of other debris you 
			can. Note that the bounding box of the ammo does not change position or 
			orientation, so you may need to work in a wedge_shaped mist brush in 
			there to get the visual effect just right. Giving values to all three 
			angles is fine.
			<br>&nbsp;
		<li><b>Player starts, deathmatch starts, teleporters</b> - DM spawn points 
			and teleporter/dest platforms can be canted just like ammo. However the 
			'angles' value translates into the direction the player looks when he 
			spawns. So if you want the player to spawn up on a high ledge, looking 
			down on the action, you could give the spawn point an 'angles' value of 
			"45 0 0", for example. Even if the player has freelook off and lookspring 
			on it works fine. I strongly advise against using a "roll" value of 
			anything other than 0, since the player gets stuck with the canted view. 
			Until he hits a teleporter dest which straightens him out anyway. Unless 
			of course you want to simulate drunkeness.
			<br>&nbsp;
		<li><b>Strogg ships, Vipers</b> - Simulate diving or launching ships. Or a 
			crashed misc_bigviper. Looks cool; use all 3 values. Advise the use of a 
			playerclip brush to avoid weird clipping problems with the misc_bigviper 
			model in the game.
			<br>&nbsp;
		<li><b>Banner</b> - All 3 values work, but the appearance is odd; so "roll" 
			has little value __ but a slight "pitch" effect could have its place I 
			suppose.
			<br>&nbsp;
		<li><b>Monsters</b> - Good for a laugh. Give a monster_soldier an 'angles' 
			keyvalue of "60 0 0" and he "swims" on the floor. Too bad monsters drown 
			in water. Death animations can be even funnier.
			<br>&nbsp;
		<li><b>Target_blasters</b> - Want a blaster that shoots up or down at an 
			angle? No problem. "Roll" values don't matter. Works with lasers too, if 
			you don't want to bother with an info_null. And it works with the 
			target_splash too.
			<br>&nbsp;
		<li><b>Doors and buttons</b> - This is very very cool. You can have
			multi_piece doors that move up/down at angles, and buttons that recess 
			properly into angled consoles. Figuring out 'lip' may be a problem; 
			I haven't experimented but I suspect that the game uses either a 
			horizontal or vertical orientation for calculating 'lip'; so I would
			avoid using _45 and 45 for "pitch", so you can get predictable results. 
			Again, "roll" doesn't matter.
			<br>&nbsp;
		<li><b>Weapons, keys, armor, etc</b> - Spinning crap seems to ignore 
			'angles'. Too bad.
	</ul>	
	Anyway these are some ideas. In order to use the 'angles' key properly in 
	Worldcraft, you should set 'angle' to '0'; this removes the 'angle' key from 
	the .map file. My .FGD prompts you for "pitch yaw roll" for entities which can 
	make use of "roll", and it prompts you for "pitch yaw 0" for entities which 
	can't.</p>
	
 <p>The team was so fired up about this that we built a fun DM map for you guys to 
	check out. We started out making a small tutorial sort of thing, but it got out 
	of hand pretty quickly and turned into the real deal: <br>
	<a href="http://tux.telefragged.com/file.pl?filename=jumpbch.zip&dir=telefragged/tarot/ryo/">
	You can download the map here (589Kb)</a>.<br>
	The map is an r_speeds hog, so if you don't have a 3D card please don't bother. 
	The .map file is included.</p>
	
 <p>You can download Mad Dogs .FGD 
	<a href="http://home.earthlink.net/~tonykat127/mapediting/fgd_q2.zip">here</a>.</p>
										
 <p><b>David Hyde:</b><!-- <br> -->
	<ul type="square">
		<li><a href="http://www.magnolia.net/~rascal">Home Page</a>
		<li><a href="http://mapspy.gamedesign.net">MapSpy 1.0</a>
		<li><a href="http://www.planetquake.com/gensurf">GenSurf 1.7</a>
		<li><a href="http://tarot.telefragged.com">Tarot Game Development</a>
	</ul>
	</p>

 <p><b>Mad Dog:</b><!-- <br> -->
	<ul type="square">
		<li><a href="http://home.earthlink.net/~tonykat127/">Home Page</a>
	</ul>
	</p>

 <p>Note: This tutorial was copied almost verbatim from the 
	<a href="http://forums.gamedesign.net">Rust Forums</a> (ed. note: the 
	<a href="http://forums.gamedesign.net/forums/">OLD Rust forums</a>, 
	that is - <a href="mailto:merlinis@bigpond.net.au">Merl</a>) with minimal 
	editing by <a href="mailto:raygunn@gamedesign.net">raYGunn</a>. It is also 
	interesting to note the discovery of the usage of the angles key by the authors 
	was independent and for different purposes.</p>

</font> <!-- jic -->

<!-- eof @ 163 --></ul><h1 id="47" name="47" class="book-h3">Making ENV. Maps with Bryce 2</h1><ul><h3>Quake 2</h3>
<blockquote>
	Making ENV. Maps with Bryce 2 - <a href="mailto:m.christian@student.murdoch.edu.au">Murray "[PnC]Muzman" Christian</a>
</blockquote>

<br><br>

<p>Want to make environment maps for Quake2 that don't look cubic? Want to do it without spending ages touching up the corners of the individual sky pics? This tutorial is about how to do exactly that with Bryce 3d.<br><br>

If you don't know anything about Q2 skies/environment maps you should read Fishman's tutorial on the subject to get familiarised with the basics. In particular the different images and the file name system for different angles, the different file formats for different renderers (software and hardware) and how to set the sky into your map (I'm not a mapper, I can't tell you how to do that).<br><br>

The technique described in this tutorial was done using Bryce 3d and Photoshop 4; Bryce 3d for building the scene and Photoshop 4 to convert it into the format used by Quake2. Photoshop 4 isn't essential for this, any graphics program will do so long as it can resize images and convert them to different formats and colour modes  (the shareware version of Paintshop pro for example). This technique should also work with Bryce 2 no problem, but some of the functions I talk about might be in different places. I'm also assuming that people reading this are reasonably familiar with Bryce 2 or 3d; how it works, rendering etc. If you want some more detail on Bryce 2 scene building there's a list of sites at the bottom that will get you started (and  much more). <br><br>

Ok, the first and most important thing to do is create a Bryce 2/3d document for the env map and set up the document, the camera and the sky  for (pretend) spherical rendering.</b><br><br>

Go into the File menu and go into Document setup. Down the right hand side of the box that pops up there is a list of default aspect ratios; pick Square (this makes the aspect ratio 1:1 ie the top/bottom and side resolutions will be the same)<br><br>

Next put in a resolution. Anything will do so long as the aspect ratio stays square. Also, remember that the final pics will have a resolution of 256x256, Photoshop and the like reduce images best when proportions are nice and relative, so multiples of 256 will get the best results. I chose 512x512 because I run windows in 800x600 and it fits nicely on the screen.<br><br>

This is what it should look like (in case I'm making no sense)<br><br>

<p><div align="center"><img src="/content/quake2/tutorials/bryce2/bryce2_img1.jpg"></div>

<p><hr width=75% color=black noshade><p>

<p><b>Next, the camera</b>

<p>Select a view other than the camera's view and select the camera itself. Go into the camera attributes (the little "A" seen right).

<p><div align="center"><img src="/content/quake2/tutorials/bryce2/bryce2_img2.jpg"></div>

<p>Set all the rotation axis' to zero. Set all the position axis' to zero except the y axis. This is the height of the camera  off the "ground". How high you put it is up to you, it depends on the sky you want and how it is meant to fit into the map. For example; I did a suburban sky and I wanted it to look like the ground and the players head/viewing height were in proportion, so setting y to 4 turned out to be the best. Over all there is not much need to go over 10 for this setting. Set the field of view (FOV) to 90 degrees. Set the viewing scale to 72 percent. These two settings are vital to making the finished product blend together, removing any "corners" from the sky.  Once set, do not change them. (In case you're wondering, it means that only 72 percent of the actual FOV is at 90 degrees. The rest is dragged in from 'outside' to fill the view, distorting things slightly. It's similar to increasing the FOV in Quake2; since you can't change the size of your monitor things get distorted. Confusing; hard to explain; but it works.) After all that the camera settings should look like this (with important stuff underlined in red)

<p><div align="center"><img src="/content/quake2/tutorials/bryce2/bryce2_img3.jpg"></div>

<p><hr width=75% color=black noshade><p>

<p><b>Now, the one and only sky setting</b>

<p>Go into the Sky&Fog section and pull down the options, choosing  Edit Sky/Fog

<p><div align="center"><img src="/content/quake2/tutorials/bryce2/bryce2_img4.jpg"></div>

<p>In there, make sure that the option 'Link sun to view' is turned off /not ticked. This is very important as it makes the sun stay put when rotating the camera (which we will be doing later), otherwise, as the name suggests, the sun will re-align in relation to the camera position. This option might be somewhere different in Bryce2, just remember to find it and turn it off or the whole effect will be lost.

<p><hr width=75% color=black noshade><p>

<p><b>Now the document is ready for the render sequence</b>

<p>Go ahead and build the scene, with the camera as the centre. You might want to do something simple to start with, like an infinite water plane and one of the preset cloud and sun arrangements, just to try it out.<br><br>

Once the scene is finished it's time to do the final render of the six images that make up the Q2 sky.  If the camera has been moved while doing the scene make sure it's returned to the position described above before you render using the following instructions.<br><br>

The camera is going to be turning right and up and down; doing this involves changing the x and y rotation axis' in the camera attributes (see the camera settings picture back up the page a bit).<br><br>

First render the scene (through the camera view) with x, y and z rotation at zero.  Then export the image (give it an obvious name with a 1 at the end). Five more to go.  Follow this sequence of camera rotations to get the rest.<br><br>

<blockquote>
	x= 0 y= 90 z= 0.  Render.  Export the image, named as the second in the series<br>
	(NOTE: Bryce will replace the rotation angles with negative numbers sometimes. Just delete them and put in the ones given here as you change them.)<br><br>

	x= 90 y= 90 z= 0. Render. Export the image, named as the third in the series.<br>
	x= 0 y= 180 z= 0. Render. Export the image, named as the fourth in the series<br>
	x= 0 y= 270 z= 0. Render. Expert the image, named as the fifth in the series.<br>
	x= 270 y= 270 z= 0. Render. Export image, named  as the sixth in the series.
</blockquote>

If everything went according to plan the last render should have been the camera pointing straight up.  And now you have six images which make up a cube.

<p><hr width=75% color=black noshade><p>

<p><b>Next up, the six images must be converted to Quake2's formats</b>

<p>Load them all into your graphics program and shrink them all to 256x256 pixels. Then change them to the appropriate file name (remember those little tags on the end for each face) and save them in .tga format. The filenames for the six pictures are as follows:

<blockquote>				
	image 1: back (bk)<br>	
	image 2: right (rt)<br>	
	image 3: down (dn)<br>	
	image 4: front (ft)<br>	
	image 5: left (lf)<br>	
	image 6: up (up)<br>	
</blockquote>

Then things get tricky, converting to 256 colours for the .pcx versions can have…….questionable results.  It depends on the colours in the original image and how close they are to colours in the Quake2 palette. Techniques on how to convert can be found all over the web, I used the one I found in the "tutorials" section of <a href="http://www.labyrinth.net.au/~jchin/skins/skins.htm" target="_top">this</a> page. This site describes both Paintshop and Photoshop conversion techniques for skins, but works great for skies as well. It gets around the differences that Photoshop and Quake2 have for the pcx format nicely.<br><br>

However, after conversion some serious touching up might be needed to get the most out of the format. (Photoshop dithering can be really bad, depending on the sky. Experiment a bit.)<br><br>

For an example check out the env map from the second of the awesome Falhaven ctf maps by Lance S. Winkel (<a href="http://www.planetquake.com/dl/dl.asp?captured/ctf2review/falhavn2.zip" target="_top">here</a>). The difference between the gl and sofware versions is vast, but necessary to keep the effect.<br><br>

Anyway, by now you should have a sky to try out on your map. For more map specific skies the orientation might have to be changed, just rotate the file names of the side images and rotate the actual up and down images to suit (a tip: the front -ft- image of the sky always joins to the right side of the up and down images). Or better yet, find out which way the sky sits in the map and build the sky to suit it.<br><br>

Good Luck! And mail me with any major questions (or better ways to do it)<br><br>

<p><hr width=75% color=black noshade><p>

<p>Some shots of the sky I did for the forthcoming Action Q2 map "The Crackdown" by Wanderer.

<p><div align="center"><img border="0" width="450"  src="/content/quake2/tutorials/bryce2/bryce2_img5.jpg"></div>

<p><div align="center"><img border="0" width="450"  src="/content/quake2/tutorials/bryce2/bryce2_img6.jpg"></div>

<p><hr width=75% color=black noshade><p>

<p>For more about the Bryce series and how to get the most out of them visit some of these<br><br>

<a href="http://www.metacreations.com" target="_top">http://www.metacreations.com</a><br>                       
The makers<br><br>

<a href="http://www.peter-sharpe.com" target="_top">http://www.peter-sharpe.com</a><br>                          
The home of indepth, advanced Bryce3d <br><br>

<a href="http://www.geocities.com/SoHo/Lofts/9589/bryce_almanak.html" target="_top">http://www.geocities.com/SoHo/Lofts/9589/bryce_almanak.html</a><br>
Absolutely everything and everywhere Bryce<br><br>

<a href="http://www.geocities.com/SoHo/Lofts/9589/bryce_tutorials.html" target="_top">http://www.geocities.com/SoHo/Lofts/9589/bryce_tutorials.html</a><br> 

How to do absolutely everything in the Bryces, from the ground up

<p>
</ul><h1 id="561" name="561" class="book-h3">Making Rain</h1><ul><!-- by by Chris "Kold" Stringer 2004 -->
<center><h3>Making Rain for Quake II and III</h3>
by Chris "Kold" Stringer</center>
<p class="q2bg1">Quake II has long been a game with many things we wanted but couldn't always have. <a href="http://www.planetquake.com/j-spot/jbuzz.html">Jester</a>, a fellow mapper recently made this deathmatch map and despite the amazing brush &amp; texture work .. one thing that caught my attention was the rain, now although quake II doesn't support such a feature without a engine mod, there's several ways to make it with one of them being animated (or flowing) textures if you will.<br><br>
<span class="note"><b>IMPORTANT CONSIDERATION:</b> There's one flaw to making the rain in this tutorial and that's the <a href="http://www.gamedesign.net/book/view/53">r_speeds</a>, you'll notice a massive difference in fps .. that noted don't use this affect too much in your map or it will be unplayable in the online arena's.</span></p>
<hr noshade width="75%" align="center">
<h3>Requirements:</h3>
<p class="q2bg1">Before you start this tutorial, in order for the rain to work you'll need a graphics card with the latest opengl driver's installed as the affect's of the texture/rain rapidly disappear in software mode as explained in this <a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/54">tutorial</a>.<br><br>You'll also need the <a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/content/quake2/tutorials/make_rain/rainb.wal">rain texture</a> and the <a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/content/quake2/tutorials/make_rain/raintut.zip">example map</a> I'm using in this tutorial (the rain texture is in the .zip with the example map)<br><br>In the editor, work with the grid settings on "16" as that's what I'm using in this tutorial.<br><br>phew ! With keeping all the above in mind, in this tutorial i'll show you a fast and affective way to make some convincing looking rain in no time!</p> 

<hr noshade width="75%" align="center">

<h3>Step 1: Make a Small Room</h3>
<center><img border="0" width="450" src="content/quake2/tutorials/make_rain/koldtut2.jpg"><br>
"TOP" View in QuArK</center><br><br>
<center><img border="0" width="450" src="content/quake2/tutorials/make_rain/koldtut1.jpg"><br>
in game shot</center><br><br>

<p>Firstly make a small room as shown above, then add a info_player_start in there along with some light fixtures to give us some light. I'm using Quark's default room for this tutorial so most of this should be already done for you . </p> 

<hr noshade width="75%" align="center">

<h3>Step 2: Adding the Rain Texture</h3>
<center><img border="0" width="450" src="content/quake2/tutorials/make_rain/koldtut3.jpg"></center><br><br>

<p>Next we'll add the rain texture into the map you just created , in the screenshot in step 1 there's a opening in the roof , make 1 brush for a start to fit between the sky brush and the floor ( click the image above on the left for a closer look )</p>

<center><img border="0" width="450" src="content/quake2/tutorials/make_rain/koldtut4.jpg"></center><br><br>

<p>Then rotate the texture if its facing the wrong way to look like the picture above, the flag settings should already be set with the texture but if they aren't add the following to each face <i>mist</i>, <i>current_dn</i>, <i>trans33</i> and <i>flowing</i>.</p>

<center><img border="0" width="450" src="content/quake2/tutorials/make_rain/koldtut5.jpg"><br>
The applied rain texture</center><br><br>

<p><b>Important:</b> Sometimes your rain may be flowing upwards ;o), if it is then just rotate the texture on that certain face in till it starts going the right way.</p>

<center><img border="0" width="450" src="content/quake2/tutorials/make_rain/koldtut6.jpg"><br>
the 5 brushes spread apart</center><br><br>

<p>Next, copy the brush you just made into 5 copy's , randomly move them around the gap in your roof as shown with the image above on the right, they don't have to be exactjust roughly but keeping them inline with the sky and the floor brushes as you did with the first brush. I spread mine apart to give the rain a better look.</p>

<center><img border="0" width="450" src="content/quake2/tutorials/make_rain/koldtut7.jpg"><br>
click for a bigger view</center><br><br>
 
<p>There's different ways you can tweak the affect I've just shown you like stretching the rain texture a little longer to give it a faster looking affect</p>

<hr noshade width="75%" align="center">
<h3>Step 3: The Result!</h3>
<center><img border="0" width="450" src="content/quake2/tutorials/make_rain/koldtut8.jpg"><br>
the finished result</center><br><br>
<hr noshade width="75%" align="center">
<h3>Summary</h3>

<p>I hope you enjoyed this tutorial and even if there isn't a true way to make rain in quake 2 , this is probably the closest you'll get without a engine mod . I look forward to writing more tutorials in the future, but until then go make yourself some rain! :o)<br><br>Here's my contact details if you need further help with this tutorial: <script language="JavaScript" type="text/javascript"> <!--
document.write('<a href="&#32;&#109;&#97;&#105;&#108;&#116;&#111;&#58;&#107;&#111;&#108;&#100;&#111;&#110;&#101;&#64;&#109;&#115;&#110;&#46;&#99;&#111;&#109">koldone</a>');
// --> </script></p>

</ul><h1 id="54" name="54" class="book-h3">Partial Transparency</h1><ul><h3>Quake 2</h3>
	<blockquote>
		Partial Transparency in Quake 2 - <a href="mailto:jexjackl@home.com">Jex</a> and <a href="mailto:suppenhuhn123@hotmail.com">Who</a>
	</blockquote>
	
<br><br>

<p>Something that's always been missing from Quake 2 is the ability to have "holes" in a texture. Half-life was one of the first games to properly implement "holes". Some examples of this are: see-through, shoot-through railings made from a single brush, see-through grating for floors. Well it is possible to do the same in Quake 2. While Quake 2's Partial Texture Transparency is not perfect, when used intelligently, it is a simple and effective way of adding detail without adding many faces.

<br><br><b>Image of the web texture before and after:</b>

<p><div align="center"><img src="/content/quake2/tutorials/pttrans/pttrans_img1a.jpg"> <img src="/content/quake2/tutorials/pttrans/pttrans_img1b.jpg"></div>

<p><div align="center"><img src="/content/quake2/tutorials/pttrans/pttrans_img2.jpg"></div>

<p>The first step in the process is preparing the texture; punching the "holes" in it. Any part of the texture that will be invisible must be coloured with Quake 2's transparency colour (Red: 159, Green: 91, Blue: 83). In our examples all the black spaces in the cobweb are replaced with the transparency colour.

<p>Once you've got you texture prepared, it is only a matter of applying the texture to a brush and setting the proper flags. In all cases either trans_33 or trans_66 will be checked (usually trans_66 as trans_33 makes the visible parts of the texture very noticably translucent) as this is what does the magic. This flag must be applied to all faces of the brush. All other flags are completely optional as with any other brush. 

<p><div align="center"><img src="/content/quake2/tutorials/pttrans/pttrans_img3.jpg"><br>Image of the web texture without trans_66 checked.</div>

<p><div align="center"><img src="/content/quake2/tutorials/pttrans/pttrans_img4.jpg"><br>Image of the web with trans_66 checked, the web texture is applied on all faces.</div>

<p><div align="center"><img src="/content/quake2/tutorials/pttrans/pttrans_img5.jpg"><br>Image of the web with a totally clear texture, and the web texture applied to one face (the "correct" way).</div>

<p>When making a fence-like brush, you will only want to have 1 face of the brush visible. One way would be to make a completely transparent texture to apply to all faces but one. This would be the "proper" way to do it. But there is also another trick which may come in handy as well as decreasing the translucency of the visible fence. Create the fence as a 1 unit thick brush. Keep the fence texture applied to both sides of the brush. If the brush is any thicker than 1 unit the double effect can become quite noticeable, but at 1 unit apart the player has to be very close to notice the effect.

<blockquote>
<p><div align="center"><a href="/content/quake2/tutorials/pttrans/pttrans_img6.jpg"><img src="/content/quake2/tutorials/pttrans/pttrans_img6_sm.jpg" border=0></a><br>Image of two fences, the right side is a brush 8 units thick. You can clearly see the double effect. The fence on the right is only 1 unit thick, making the double effect disappear, and also reducing the translucency.</div>
</blockquote>

<p>One disadvantage of this technique is that it cannot be used in software mode:

<p><div align="center"><a href="/content/quake2/tutorials/pttrans/pttrans_img7.jpg"><img src="/content/quake2/tutorials/pttrans/pttrans_img7_sm.jpg" border=0></a></div>

	<b>Things to remember when using this technique:</b><br>
        <li>This does not work in software rendering mode.
        <li>The visible parts of the texture will always be translucent which makes thinner visible areas preferable (example: a wire fence). 
        <li>Translucency can be reduced by making the brush 1 unit thick with two exact visible sides overlapping eachother. 
        <li>Placing the transparent brush partially out of range of the player will reduce the chances of any translucency/double effect being noticed. 
        <li>Colour for transparency is: Red: 159, Green: 91, Blue: 83. 
        <li>Detail added this way does not produce high r_speeds. 
        <li>Only works with trans_33 or trans_66 applied to all faces. 
        <li>Wherever the transparent brushes intersect other brushes, a faint red glow appears.<br>

<br><br><b>Some Examples:</b>

<p><div align="center"><a href="/content/quake2/tutorials/pttrans/pttrans_img8.jpg"><img src="/content/quake2/tutorials/pttrans/pttrans_img8_sm.jpg" border=0></a></div>

<p><div align="center"><a href="/content/quake2/tutorials/pttrans/pttrans_img9.jpg"><img src="/content/quake2/tutorials/pttrans/pttrans_img9_sm.jpg" border=0></a></div>

<p><hr width=75% color=black noshade><p>

<p> You can download the example map <a href="/content/quake2/tutorials/pttrans/pttrans_ex.zip">here</a>.

<p>
</ul><h1 id="53" name="53" class="book-h3">Polygon Count Reduction</h1><ul><h2>Polygon Count Reduction</h2>

<blockquote>By David Hyde, Mad Dog and Richard Neff</blockquote>
<br><br>
<!-- Table of Contents -->
<a name="TOC"></a>  
<p><b>Contents</b><br>
<p>(Click on a heading to quickly scroll down the page)<p>
	<ul><li><a href="/node/53/#introduction">Introduction</a><br>
        <li><a href="/node/53/#examples">Example maps</a><br>
        <li><a href="/node/53/#tricks">The Tricks</a><br>
		<ul><li><a href="/node/53/#cut1024">Awarenessof qbsp3's default cuts</a><br>
		<li><a href="/node/53/#func_wall">Alternative uses of func_walls</a><br>
		<li><a href="/node/53/#embedlites">Embedded light fixtures</a><br>
		<li><a href="/node/53/#donut">Doughnut hallway</a><br>
		<li><a href="/node/53/#evil">Brush subtraction is evil</a><br>
		<li><a href="/node/53/#gaps">Gaps between brushes</a><br>
		<li><a href="/node/53/#detail">Detail brushes</a><br>
		<li><a href="/node/53/#miter">Mitered corners</a><br>
		<li><a href="/node/53/#textures">Let the textures do the work</a><br>
		<li><a href="/node/53/#threesides">3 sides rather than 4</a><br>
		<li><a href="/node/53/#opaque">Transparent vs. opaque water</a><br>
		<li><a href="/node/53/#nodraw">No draw = No polys</a><br>
		<li><a href="/node/53/#fooled_you">Fast framerates for large, detailed areas</a></ul>
	<li><a href="/node/53/#summary">Putting it all together</a></ul>

<br><br>
<p><br><hr color=black noshade width=75%><br><p>

	<a name="introduction"></a><b>Introduction</b><br>
	<p>The purpose of this tutorial is to describe several simple techniques you can use in your Quake2 maps to reduce the number of polygons seen by the game engine, thereby increasing the performance of your map and improving gameplay. None of the techniques described here are difficult to implement, and will usually not result in any undesirable tradeoffs, i.e. reduced visual quality. This tutorial does <b>not</b> discuss hint brushes, which, like the techniques discussed here, are often used to influence the way qbsp3 partitions brushes. Proper use of hint brushes is a difficult technique to master, and, unlike the methods discussed here, generally requires a trial-and-error approach to achieve the desired results. NOTE: Don't even think about using hint brushes unless you are able to run &quot;gl_showtris 1&quot; (see below). It's just about impossible to know how to use hint brushes to block off areas when you don't know what the engine can/cannot see from a view. For more information on the use of hint brushes, see Steven Boswell's excellent article, <a href="/content/quake2/tutorials/poly_count/bspvis.htm">qbsp3, qvis3, and map-making</a>.<br><br>

	<p>The authors assume that the reader has some experience at creating maps for Quake2. This is not meant to be a primer on map editing, and we assume that the reader has prior knowledge of why reducing polygon counts is important. For basic information on creating Quake2 maps and map-related issues, read through the <a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/42">Tutorials</a>, <a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/21">Entity Properties</a>, and <a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/17">FAQ</a> sections at Rust. <br><br>
<a href="/node/53/#TOC">Back To Table Of Contents</a><br>

	<p><br><hr color=black noshade width=75%><br><p>

	<a name="examples"></a><b>Example maps</b><br>
	<p>This tutorial is accompanied by an example map that demonstrates most of the techniques mentioned here. To get the most out of this tutorial you should print this document and refer to it as you navigate through the rooms in the examples. The example map is available <a href="/content/quake2/tutorials/poly_count/poly_count.zip">here</a>. Two files are included - a standard .map file that you can import into most Quake2 editors, and a compiled bsp. Unzip tricks.zip to your quake2\baseq2\maps directory. To see the results achieved by the methods used in the examples, you should run the map with <b>r_speeds 1</b> and, if available to you, <b>gl_showtris 1</b>. Either start the map with a command line similar to:<br><br>

	<b>\quake2\quake2.exe +set r_speeds 1 +set gl_showtris 1 +map tricks</b><br><br>
 
	or start Quake2, bring up the console(press the '~' key), and type:<br><br>
   
	<b>r_speeds 1;gl_showtris 1;map tricks</b><br><br>

	<b>NOTE:</b> All of the example maps are very simple, and so the polygon counts are reasonably low with or without the methods described in this tutorial. Likewise, the reductions in polygon counts achieved by the methods described here are not very significant in the context of the examples. However, these methods <b>will</b> produce significant performance increases when used together in a large, detailed map.<br><br>
    
	<p>GL_Showtris draws white lines around all of the polygons in view of the game engine. This allows you to see how your brushes are broken up in a level, and also shows you what polygons the engine sees that you might have thought were sufficiently isolated that they would not be in view. If you have a 3dfx card, you will first need to download the <b>Mesa OpenGL drivers</b> from <a href="http://www.geocities.com/SiliconValley/Lakes/7220/mesa.html">Phil Frisbie's Programming Page</a>. These drivers will allow you to use the Default OpenGL video mode with your 3dfx card, which in turn allows you to use gl_showtris. Framerates will be only slightly slower than with the normal 3dfx setting.<br><br>


	<br><br><center><img src="/content/quake2/tutorials/poly_count/poly_count1.jpg"><br>Screenshot from a level you're probably familiar with, with gl_showtris turned on.</center><br><br>
    
	<p>R_Speeds displays several numbers of interest to map authors. The format of this report is dependent on what type of rendering you are using. With software rendering, r_speeds will display something like:<br><br>
    
        <b>33 ms 250/220/30
        poly 0 surf</b><br><br>
    
	The first number indicates the time, in milliseconds, required for one game cycle. Your framerate in frames/sec is 1000 divided by this number. The second number indicates how many polygons are in view, the third number shows how many polygons are drawn, and the fourth entry is the number of polygons in view but not drawn. For our purposes, the <b>second</b> number (polygons in view) is what we are trying to reduce.<br><br>

	With 3D accelerators, the r_speeds display will look something like:<br><br>
    
        <p><b>250 wpoly 450 epoly 3 tex 2 lmaps</b><br><br>

	&quot;wpoly&quot; is the number of world polygons in view and &quot;epoly&quot; is the number of entity polygons. Although you also need to monitor &quot;epoly&quot;, this tutorial concentrates on the <b>wpoly</b>entry.<br><br>
<a href="/node/53/#TOC">Back To Table Of Contents</a><br>

	<p><br><hr color=black noshade width=75%><br><p>

	<a name="tricks"></a><h3>The Tricks</h3><br>

<a name="cut1024"></a><b>Awareness of qbsp3's default cuts</b><br>The original id-supplied qbsp3 (and most other qbsp3's) initially divides your map into 1024x1024x8192 sections. This procedure can produce unwanted brush cuts unless you arrange your map to minimize these effects. Steven Boswell has produced a version of qbsp3 which does <b>not</b> divide your map up in this way (available <a href="http://yyz.com/~whatis/Quake2/bspvis.html">here</a>), but this can often produce &quot;Subdivide face: didn't split the polygon&quot; errors. In the first room of the example map, the inside face of the wall to the player's left is at x=-16. This causes qbsp3 to break the 4 adjoining surfaces (floor, ceiling, and adjacent walls) along the line x=0. <b><i>Any brush which intersects a line at x or y equal to a multiple of 1024 will be divided in this way</i></b>. (Since the sections used are 8192 units tall, and the maximum extents of a map are +/-4096 units in any direction, you don't have to worry about these cuts on the z axis.) The solution here is obvious: move the entire room (or only this one wall) 16 units in the +x direction, and these cuts are no longer made (Actually they are made, but no longer result in additional polygons). Of course if your room is larger than 1024 units in either the x or y direction, at least one of these cuts will still be made. However, you can minimize the effects of these cuts by careful arrangement of your brushes. For example, if you have a crate with one face at x=1022, move it over 2 units so that this face is at x=1024. This method can very easily decrease your polygon count by 50 or more in a room with many details.<br><br>
<a href="/node/53/#TOC">Back To Table Of Contents</a><br>

	<p><br><hr color=black noshade width=75%><br><p>

	 <p><a name="func_wall"></a><b>Alternative uses of func_wall</b><br> 
	 The second set of examples shows a room with 6 columns that span from floor to ceiling. The intersection of the columns with the horizontal floor and ceiling surfaces causes the horizontal faces to be broken up more than they would be if the columns were not present. In the next room, these columns are made into a func_wall. Since entities (including func_walls) do not influence the way qbsp3 breaks up your world brushes, the floor and ceiling are partitioned as they would be if the columns were not present at all.<br><br>

	 There are several limitations to using this method:
	 <ol>
		<li>The lighting quality of your func_wall will usually not be as good (though it is hard to see a difference in the example). Extra effort would usually be required to correct this.
		<li>Entities do not block light or, put another way, cast shadows. You can see this effect in the screenshots from the example map below.</li>
		<li>You cannot have more than 256 total models in any one map, and each func_wall counts against the total. If you exceed this limitation, you will get a game-crashing Index Overflow error. For more information on this subject, see <a href="http://mapspy.gamedesign.net/eio.html">this tutorial</a>. You <b>can</b> include multiple non-contiguous brushes in the same func_wall (as has been done in the example), <b>but:</b>
		<li>You should never allow a func_wall to span across areas that are not seen by the engine at the same time. For example, it might be tempting to include many brushes throughout your map into the same func_wall, like on opposite sides of an areaportal, to prevent Index Overflow errors. However, this practice will at a minimum cause visual errors in your func_walls.
		<li>You should <i>never</i> make a wall/floor/ceiling which &quot;touches&quot; the void an entity; otherwise, your map will leak!
	 </ol>
	 <br><br>



        <center><img src="/content/quake2/tutorials/poly_count/poly_count2.jpg"><br>Normal brushes used for columns</center><br><br>
           
        <center><img src="/content/quake2/tutorials/poly_count/poly_count3.jpg"><br>Columns are a func_wall. Note the lack of shadows.</center><br><br>
<a href="/node/53/#TOC">Back To Table Of Contents</a><br>

	<p><br><hr color=black noshade width=75%><br><p>

	<p><a name="embedlites"></a><b>Embedded light fixtures</b><br>
	<p>It's very easy to slap several of the 16x16 light fixture textures against your ceiling, walls, or floors to light a room. However, the 4 edges adjacent to the lit surface are visible, and will be divided up into 2 polygons each. You can embed your light fixtures in your ceiling/walls/floor such that the sides of the fixture aren't visible. This method generally results in a decrease of 8 polygons/fixture. Of course, this method is quite a bit more trouble, as you will also have to divide your ceiling/walls/floor up carefully. For best results, you could place the fixtures such that the edges are all at multiples of the texture dimensions, as well as making sure they line up with each other. This not only allows you to forego texture alignment hassles, but will also produce fewer brush cuts than if your fixtures are placed at random locations. <p>This method is applicable to other textures, of course. For example, &quot;exit&quot; signs, etc. and texture blending can use this method to decrease the number of brush cuts.<br><br>
    
	If you <b>want</b> the edges of the fixtures visible, such that it is apparent that the fixtures stand out from the mounting surface, consider moving the fixtures 1 unit from the surface such that the two brushes don't touch. (This technique is described <a href="/node/53/#gaps">below</a>). This method will not be as effective as embedding the fixtures, but <b>will</b>produce a lower polygon count than placing the fixtures flush against your ceiling/walls/floor.<br><br>
<a href="/node/53/#TOC">Back To Table Of Contents</a><br>

	<p><br><hr color=black noshade width=75%><br><p>

	<a name="donut"></a><b>Doughnut hallway</b><br> 
	The doughnut hallway is the only method presented here that significantly alters the appearance of your map. If you have adjacent rooms connected by a short hallway, but don't want to separate the rooms with a door and func_areaportal, the doughnut hallway is ideal for blocking visibility from one room to the next. This method was used extensively in Quake1, since it lacked func_areaportals to block vis from one room to another. It's popularly known as the &quot;Donut Trick&quot;, and is as viable a technique for Quake2 as it was for Quake1.<br><br>

	The key to the success of the doughnut hallway is to size the vis-blocking wall such that the player (and the engine) cannot see from one hallway entrance to the opposite side of the wall. This wall should extend from the floor to the ceiling, and both the floor and ceiling of the hallway must be constructed with solid non-transparent textures. Naturally, making this wall an entity in whole or in part would defeat efforts at blocking polygons from view.<br><br>

	<center><img src="/content/quake2/tutorials/poly_count/poly_count4.gif"><br>Doughnut hallway</center><br><br>
    
	<p>A similar result can be achieved in a large open space if a huge monolithic structure is placed so it blocks the view from one side of the area to the other. Naturally this would require experimentation to get just right for each specific open area where you might want to use this method. Of course you may only make things worse if your vis-blocking structure is not quite so monolithic, and its own polys added to the mix outnumbers the polys that it blocks.<br><br>
<a href="/node/53/#TOC">Back To Table Of Contents</a><br>

	<p><br><hr color=black noshade width=75%><br><p>

	<a name="evil"></a><b>Brush subtraction is evil</b><br>
	Well, OK, not really. But brush subtraction (or carving, hollowing, CSG subtraction) is generally the most abused feature of any map editor. The time savings you achieve with brush subtraction are very often more than offset by the time required to fix brush subtraction errors. At best what you're liable to get is a mess that is painful to look at and read in your editor. The example map shows a set of 3 arched doorways constructed with brush subtraction. In this case, small roundoff errors have resulted in several very noticeable gaps between brushes, and higher than necessary polygon counts. In the next room, the identical arched doorways have been created by manual placement of the brushes that form the arches. <b>NOTE:</b> Even if your editor does not have roundoff problems and you very carefully perform the subtraction operation with the cutting brush aligned to the grid and do everything else correctly, this example shows an obvious problem with using brush subtraction with a non-square cutting brush on a large wall - say you've constructed your arches, but then decide you want to move one arch over by 4 units - good luck. Well, take the opportunity then to pat yourself on the back for all the time you saved performing brush subtraction in the first place, because you're going to be using that time now.<br><br>
   
	<center><img src="/content/quake2/tutorials/poly_count/poly_count5.gif"></center><br><br>

	<p>If you insist on using brush subtraction for some odd masochistic reason for this type of operation, you will do <b>much less</b> damage in this case by isolating the area that is affected to the smallest possible one.<br><br>

	<center><img border="0" width="450"  src="/content/quake2/tutorials/poly_count/poly_count6.gif"></center><br><br>

	<p>In this example, the cylindrical top of the arch is subtracted from the smallest possible cube. The result of this operation is then copied to the other arch locations. This results in much simpler (and more importantly much easier to edit) brushes.<br><br>
<a href="/node/53/#TOC">Back To Table Of Contents</a><br>
    
	<p><br><hr color=black noshade width=75%><br><p>

	<a name="gaps"></a><b>Gaps between brushes</b><br>
	Brushes will <b>always</b> be split where they intersect other brushes. To get rid of this effect, you can move small objects away from the other brush by 1 unit so that they do not touch. If this trick is used with discretion this small gap will not be visible to the player. This technique is typically best used in areas where the player isn't going to notice differences in shadowing -- such as the ceiling or on the upper edges of walls. You can also use this technique on non-breakable windows to lower your polygon count (it won't help to use this method on breakable windows -- since they are entities they will not break up the window frame anyway). The lighting will be fine, but you should use this method with discretion if the player can get very close to the window - the gap will almost always be visible from close range. Floors are typically the worst place to try to implement this feature (as shown below), unless they're in a very well lit area with offsetting lights where shadows won't be dramatic.<br><br>

	<center><img src="/content/quake2/tutorials/poly_count/poly_count7.jpg"><br>The crate in this example is 1 unit from the floor. Notice that the resulting shadows give the crate the appearance of being suspended several units above the floor.</center><br><br>
         
	<p>In the example map, the roof of the test room is open to the sky with many criss-crossing roof beams. These beams result in the faces making up the walls of the room being broken up much more than they would be if the beams were not present. In the following room, these beams have been shortened by 2 units such that neither end touches a wall. Even in this relatively simple room, this method results in a polygon reduction of about 30. The lighting in this room is such that the gap is not visible at all, so there is no visual problem in this case.<br><br>

	<center><img src="/content/quake2/tutorials/poly_count/poly_count8.jpg"><br>Beams touch the wall. Notice how the wall is split up by qbsp3</center><br><br>

	<center><img src="/content/quake2/tutorials/poly_count/poly_count9.jpg"><br>Ends of beams are 1 unit away from wall</center><br><br>
	
	<p><b>NOTE: This method should </b><i>never</i> be used on brushes that would otherwise block visibility from one area to another. For example, creating 1-unit gaps at the tops and bottoms of vis-blocking walls is a pretty silly thing to do.</b><br><br>
<a href="/node/53/#TOC">Back To Table Of Contents</a><br>

	<p><br><hr color=black noshade width=75%><br><p>
    
	<a name="detail"></a><b>Detail brushes</b><br>
	You have probably seen warnings that the use of detail brushes will result in higher r_speeds. While <b><i>sometimes</i></b> true, the only way to know for certain whether the use of detail brushes will increase, decrease, or have no effect on r_speeds is to test it and measure the results. Detail brushes are usually recommended as a method for speeding up a lengthy vis, since they are not included in vis calculations. Qbsp3 will <b>not</b> use the planes of detail brushes to split your map, so <b><i>sometimes</i></b> the use of detail brushes will <b><i>decrease</i></b> the number of polygons in your map - this is what we want.<br><br>

	Detail brushes can generally safely be used on any object which does little or nothing to block visibility. If restricted to small objects which don't block the view of other objects, the use of detail brushes <b><i>usually</i></b> does not cause an increase in r_speeds. And in fact, in the 3rd roof beam example detail brushes actually <b>improve</b> r_speeds since the planes of the beams are no longer used to split up the map.<br><br>
	
	<center><img src="/content/quake2/tutorials/poly_count/poly_count10.jpg"><br>Beams are detail brushes. Contrast this screenshot with those above. Note that the planes of the beams are no longer selected as bsp splitters.</center><br><br>

	<p><b>NOTE: Detail brushes are designed to be used on brushes that do not block the player's view. You should <i>never</i> make a wall/floor/ceiling which &quot;touches&quot; the void a detail brush; otherwise, your map will leak!</b><br><br>
<a href="/node/53/#TOC">Back To Table Of Contents</a><br>

	<p><br><hr color=black noshade width=75%><br><p>

	<p><a name="miter"></a><b>Mitered corners</b><br>
	Some may think this method is generally best reserved for times when you are truly desperate to lower your polygon counts. While the return on your investment is usually small, and can be quite a bit of trouble (particularly if your editor does not support vertex manipulation - a glaring omission), in general this can be a good technique on general principles. In the example map, one room contains two open-ended concrete boxes that are constructed from normal cube brushes. The next room shows these same concrete boxes constructed with mitered brushes. This technique will generally result in lower polygon counts in any location where the <b>outside</b> corner of the intersection of two brushes is visible.<br><br>

	<center><img src="/content/quake2/tutorials/poly_count/poly_count11.jpg"><br>Exploded view of mitered box</center><br><br>
            
<a href="/node/53/#TOC">Back To Table Of Contents</a><br>

	<p><br><hr color=black noshade width=75%><br><p>

	<p><a name="textures"><b>Let the textures do the work</b><br>
	This is primarily intended for all of you engineers and architects and wannabe's out there - you know who we're talking about. It may be very tempting to try to mimic a real environment with brushes as much as possible, down to the smallest details. However, this practice will very often produce a completely beautiful, but unplayable map. If architectural details aren't critical to gameplay, consider simplifying your level by <b>simulating details with textures</b>. If a stock-Q2 texture does not exist that will accomplish what you want, make your own! There are several excellent tools available for creating custom textures (<a href="http://www.telefragged.com/wally/">Wally</a>, for example).<br><br>

	<center><img src="/content/quake2/tutorials/poly_count/poly_count12.jpg"><br>&quot;Correct&quot; Wide-flange beams</center><br><br>

	<center><img src="/content/quake2/tutorials/poly_count/poly_count13.jpg"><br>Beams simulated with custom texture</center><br><br>
	
	
	<p>Here's a sobering thought for those wishing to include custom textures (or sounds, models or custom anything for that matter) with multiplayer maps: An online server will seldom run such a map, for the simple reason that it is unlikely that all players connecting to that server will have the necessary files themselves. Other players who make their own maps as you do will have the Quake2 textures extracted for compiling purposes, and they may be loath to &quot;pollute&quot; their textures directory with new ones which will only make selecting textures for their own maps confusing. Additionally, if such a map has to be run from a custom &quot;game&quot; directory, it would be even more unlikely an online server would run it, unless your map is part of a mod which the server is running. Keep in mind also that it is not possible to run 2 &quot;game&quot; directories simultaneously, so maps run from custom directories cannot be used with bots. Custom files are probably best suited to single-player maps.<br><br>
<a href="/node/53/#TOC">Back To Table Of Contents</a><br>

	<p><br><hr color=black noshade width=75%><br><p>

	<p><a name="threesides"></a><b>3 Sides rather than 4</b><br>
	This one will seem obvious after you try it. If you have four-sided brushes in a spot where the player cannot get to the far side, use a 3-sided brush instead. Depending on the architecture of your map, this simple change can result in a significant decrease in your polygon count. In the example map, two barred windows are placed in the two test rooms. In the first room, the bars are regular square brushes; in the second room, triangular brushes are used with the point of the triangle facing away from the player. Even up close it is hard to tell that these brushes aren't 4-sided, but the peak polygon count drops by more than 50 with this simple change. This method will likely produce similar results with jail cells and any type of grate.<br><br>
<a href="/node/53/#TOC">Back To Table Of Contents</a><br>

	<p><br><hr color=black noshade width=75%><br><p>

	<p><a name="opaque"><b>Transparent vs. opaque water</b><br>
	Transparent water is cool, but of course does nothing to block visibility. If you have water brushes in a high-poly area of your map, consider turning off the TRANS33 or TRANS66 flags, which will make the water opaque (or use a non-transparent water texture). The water is still transparent on the inside, but will act like a normal solid brush from the outside and block visibility. Yeah, you say, &quot;but I like my transparent water.&quot; Before you dismiss this idea entirely check out the example map with r_speeds turned on (or the screenshots below, taken from another map) and note the difference.<br><br>


	<center><img src="/content/quake2/tutorials/poly_count/poly_count14.jpg"><br>Transparent water. Notice that the engine sees the bottom of the pool.</center><br><br>

	<center><img src="/content/quake2/tutorials/poly_count/poly_count15.jpg"><br>Opaque water</center><br><br>
<a href="/node/53/#TOC">Back To Table Of Contents</a><br>

	<p><br><hr color=black noshade width=75%><br><p>

	<p><a name="nodraw"></a><b>No draw = No polys</b><br>
	This may be the most obvious one of all (so why was it the last method we thought of?). Environment (or sky) textures do not contribute towards the polygon count. You can replace brushes that do little to contribute to the look of a room with sky brushes to lower your polygon count. In the example map, a small section of the ceiling has been replaced with a sky brush, resulting in lowering the world polygon count by 4. Of course, the more complex your  ceiling is, the greater will be the savings realized. Taken to its logical conclusion, here's a screenshot from our ultimate deathmatch map:<br><br>

	<center><img src="/content/quake2/tutorials/poly_count/poly_count16.jpg"><br>Not much to look at, but check out the r_speeds! Yeah, OK, it's a dumb idea. Shut up.</center><br><br>

	<p><b>NOTE: This method is best used on brushes which do not face other parts of a map. If a sky brush is located between two map areas, the player may sometimes see through the brushes of another area and into that area. These visual errors are sometimes hard to fix. For more information on the &quot;sky bug&quot;, see the <a href="http://www.gamedesign.net/quake2/q2faq.shtml">FAQ</a> at Rust.</b><br><br>
<a href="/node/53/#TOC">Back To Table Of Contents</a><br>

	<p><br><hr color=black noshade width=75%><br><p>

	<p><a name="fooled_you"></a><b>Fast framerates for large, detailed areas</b><br>
	Ha! Made you look! Sorry, but there's only so much you can do to make your map play well. Large areas with a lot of detail just don't work with Quake2.<br><br>
<a href="/node/53/#TOC">Back To Table Of Contents</a><br>

	<p><br><hr color=black noshade width=75%><br><p>


	<p><a name="summary"></a><b>Putting it all together</b><br>
	The following screenshots show the results of using several of the techniques described here in a single room. Your own results will vary, of course, but it should be apparent by now that by making prudent, well-thought-out changes to your map you may be able to significantly improve it's performance.<br><br>
   
	<center><img src="/content/quake2/tutorials/poly_count/poly_count17.jpg"><br>a. Room has southwest corner at -16,-16<br>b. Roof beams intersect walls<br>c. Light fixtures flush against walls<br>d. Hideous, evil brush subtraction used in floor</center><br><br>

	<center><img src="/content/quake2/tutorials/poly_count/poly_count18.jpg"><br>a. Room has southwest corner at 0, 0<br>b. Roof beams are detail brushes and do not touch walls<br>c. Light fixtures embedded in walls<br>d. Manually placed triangular brushes for the cylindrical part of holes in floor</center><br><br>

	<p>The authors consider this tutorial a work in progress, and are always open to new ideas which should be included here. If you find a technique not outlined here that works, by all means contact us and clue us in!<br><br>

</ul><h1 id="235" name="235" class="book-h3">Sunlight - Part 1</h1><ul><h1>Where did that <font color="orange">SUN</font> go?<br>(or what you will)</H1>
      
<H2>CONTENTS</h2>

<h3>Introduction</h3>
<ol>
<li>
<a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/235#intro">Just the facts, ma'am.</a>
</li>
</ol>
<h3>You're not the only one staring at the _sun.</h3>
<ol>
<li>
<a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/235#what">What does it do?</a>
</li>
<li>
<a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/235#sowhat">Okay, it's a sun.  So what?</a>
</li>
</ol>
<h3>That's neat.  How do I use it?</h3>
<ol>
<li>
<a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/235#_sun">From the beginning (_sun)</a>
</li>
<li>
<a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/235#_sun_light">Shedding a little light on the subject (_sun_light</a>
</li>
<li>
<a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/235#_sun_ambient">How about the shadows? (_sun_ambient)</a>
</li>
<li>
<a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/235#_sun_color">What color is the sun, anyway? (_sun_color)</a>
</li>
</ol>
<h3>No fluff</h3>
<ol>
<li>
<a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/235#sun">Explain it non-verbosely</a>                 </li>
</ol>
<h3>Summary</h3>
<ol>
<li>
<a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/235#example">What should my worldspawn look like?</a>
</li>
<li>
<a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/235#comments">Conclusion</a>
</li>
</ol>
<h3><font color="red">C</font><font color="orange">o</font><font color="yellow">l</font><font color="green">o</font><font color="blue">r</font><font color="purple">e</font><font color="violet">d</font> lights are neat, but...</h3>
<ol>
<li>
<a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/235#nocolor">...how about we not use it               </a>
</li>
</ol>

<h1><a name="intro">Introduction</a></h1>
<p>
For those of you who are using Geoffrey DeWan's version of Qrad3 version 1.03, this is going to be a real treat. If you have read the text file included with the executable, you may have noticed the mention of a sun feature. For whatever reason, everyone I have spoken to has been reluctant to try it.
</p>
<p>
Not only is the sun feature incredibly easy to use, but it also provides a lot more versatility than straight environmental lighting.  Plus, it looks a whole lot better. This tutorial is dedicated to helping you get started with using the sun (you'll never turn back).  It also mentions in passing another useful feature included, the -nocolor ption.
<br><br>
</p>
<h2><a name="what">What exactly does the _sun feature do?</a></h2>
<p>
As you may be aware, the ability to use environment maps is a welcome improvement that has accompanied the release of Quake2. The Environment maps are pretty gosh darned cool, but outdoor lighting is only so-so.
</p>
<p>
The _sun feature allows you to chose a direction for the sun to shine, and it lets you control diffuse lighting, highlight intensity, and sunlight color.&nbsp; Also, from what I have noticed areas lit by large amounts of sky can qrad much faster          when the area is lit by the sun instead of the sky         surface. In the test map I created, qrad took 1016        seconds when the sun was not used. The same map took 509 seconds with the sun activated.
</p>
<p>
If everything is properly entered, qrad should recognize your sun without having to use command lines.&nbsp; This was what confused me at first, since you activate your sun in your worldspawn entity, and not at the command line. In actuality, this makes things a lot easier. 
</p>
<h2>
<a name="sowhat">So what's the big deal?</a></h2>
<p>
<a href="http://www.gamedesign.net/miniwood/tutorials/images/nosun_l.jpg"><img src="http://www.gamedesign.net/miniwood/tutorials/images/nosun.jpg" height="120" width="160" align="left"></a>As you can see, outside areas look really nice, but the light looks like it is coming from everywhere. It also has a really ugly orange hue. That's not the most glaring of the things it lacks, there are no shadows!!! Well, okay, there are shadows, but they are not very well defined. The problem is, how do we get our outdoor lighting to look as cool as our indoor lighting without using a gazillion light entities and spending a couple years putting them in place? It's easier than you thought.
</p>
<p>
<a href="http://www.gamedesign.net/miniwood/tutorials/images/sun_l.jpg"><img src="http://www.gamedesign.net/miniwood/tutorials/images/sun.jpg" height="120" width="160" align="right"></a>
With a few alterations and a couple entities, a          drab outdoor scene can take on a whole lot of life and personality. There are now clearly defined shadows AND highlights. With the sun activated, outdoor scenes begin to really look like they are outside. What's better, you have complete control over the color that the sun emits.
<br><br><br><br>
</p>
<h1>How do I do it?</h1>
<h2><a name="_sun">You start with the _sun.</a></h2>
<p>
The first thing you need to do is to give the sun a vector. The qrad program looks for an entity that is targeted to an info_null. First, place a light anywhere inside your level (don't put it outside the level, or else you will create a leak). Target the light to the info_null that you are about to create. Now create your info_null and give it the appropriate targetname. The position of the info_null relative to the light that targets it will tell qrad the angle that the sun shines.
</p>
<p>
Add the _sun key to your worldspawn options (the same place you use to set your map's entering message). Give it a key value that is the same as your info_null's targetname. Here's an example from the .map file I used for the screenshots above.
</p>
<div class="bodytext">
<font face="Lucida Console">
"classname"&nbsp;&nbsp;"worldspawn"<br>
"sky"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"unit1_"<br>
"message"&nbsp;&nbsp;&nbsp;&nbsp;"Map With Sun"<br>
"_sun"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"star"
</font>
</div>
<div class="bodytext">
<font face="Lucida Console">
"classname"&nbsp;&nbsp;"light"<br>
"target"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"star"<br>
"origin"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"220 -232 272"
</font>
</div>
<div class="bodytext">
<font face="Lucida Console">
"classname"&nbsp;&nbsp;"info_null"<br>
"targetname"&nbsp;"star"<br>
"origin"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"192 -208 224"
</font>
</div>
<h5>For those of you that are confused about the Worldspawn entity. It is the place where you set all of the options such as sky, gravity, and map name. You simply add _sun to the keys.</h5>
<p>
If you have any brush faces that are on the same plane as a lit sky face, AND they faces have an unobstructed line of sight to each other, then you will get unexpected and undesirable effects. Make sure that your sky and non-sky faces are either not on the same plane, or not visible to each other. Failure to do so may cause sunlight to appear where it doesn't belong.
</p>
<p>
The final thing you need to do to make sure that your sun is working right is to give all of your sky textures a light value. Apply a light value (any light value) to all of your texture surfaces with the "sky" flag. If you do not do this, your sun may not work right. 
</p>

<h3><a name="_sun_light">Light me up!</a></h3>
<p>
Now that your sun is in place, the hard part is done. All that is left is to set the light values. The first thing we shall do is to set the highlight value. This is the value of any surface that has a clear line of sight to the sun. Add the _sun_light key to your worldspawn entity, and give it a value.  I have noticed that lower values tend to be quite dark. The screenshot above has a _sun_light value of 800.
</p>
<p>
How does this work? Well, qrad calculates the x y and z angles of the sun's direction, then checks all surfaces. From each surface, it checks if the sun is viewable at the opposite angle. In other words, the opposite angle of the sun's direction is calculated, the program checks each surface          at that angle.&nbsp; If it encounters a lit sky, then it is not in the shadow. If it encounters a solid without the sky flag, then it is in the shade.
</p>
<h3><a name="_sun_ambient">How about the shade?</a></h3>
<p>
With highlights, there must be shadows. If the shadows were completely unlit, it would be too harsh. After all, the diffuse light of a sky emits some light, even if it is not as bright as the sun. The _sun_ambient option allows you to fill your shadows. A value of 50-200 works best for this.
</p>
<p>
For a good example of how diffuse lighting works, take a look at the shadows outside on a sunny day. If you try to emulate this, you can't go wrong.
</p>
<h3><a name="_sun_color">Setting the sun's color</a></h3>
<p>
To give you absolute control over your sunlight, Geoffrey DeWan included the _sun_color option. This allows you to make your sun project any color without doing any screwy texture swapping.
</p>
<p>
Simply add the _sun_color key to your worldspawn and give it a color value just like you would to a light entity (I find that 1 1 .85 works good for a medium yellow light).  For a review of what your worldspawn entity should look like now, see the <a href="#example">example</a>.
</p>
<h2>In as few words possible</h2>

<h3><a name="sun">Using the sun feature</a></h3>
<p>
First, create a light and target it to an info_null. This will be your sun's angle.
</p>
<p>
Next, add the _sun key to your worldspawn, and enter the targetname of the info_null.
</p>
<p>
Make sure all of your sky textures have the light flag checked and a light value.
</p>
<p>
Add the _sun_light value to your worldspawn, and give it a light value.
</p>
<p>
Add the _sun_ambient value to your worldspawn, and give it a light value.
</p>
<p>
Add a _sun_color value to your worldspawn, and give it a value.
</p>
<p>
Run qrad3 as you normally would (make sure it's the one by Geoffry DeWan, version 1.03, or ArghRad 1.0).
</p>
<h3><a name="comments">Some closing thoughts</a></h3>
<p>
Version 1.02 of DeWan's qrad3 used the sun, sun_light, sun_ambient, and sun_color keys. This was annoying, because they would pop up a message "sun is not a valid field" when you would run the game.  Now that he has added an underscore before the keys, the error is gone, and everything          is peachy keen.</p>
<p>
The sun feature is incredibly useful. It is a definite improvement over the original qrad3 code. It is by the will of Id software that we have the source code available to improve an already great game, and by the hard work of the fans that the tools are there. Everyone should show their          appreciation of the spirit of free information by not plagiarizing or pirating software.
</p>
<div class="bodytext">
<a name="example"></A>Your worldspawn should look something like this now:
</div>
<BR>
<div class="bodytext">
<font face="Lucida Console">
"classname"&nbsp;&nbsp;&nbsp;"worldspawn"<br>
"sky"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"unit1_"<br>
"message"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"Map With Sun"<br>
"_sun"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"star" <font face="Times New Roman" size="2" color="red">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Use the targetname of your info_null</font><br>
"_sun_light"&nbsp;&nbsp;"800" <font face="Times New Roman" size="2" color="red">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The highlight brightness</font><br>
"_sun_ambient""100" <font face="Times New Roman" size="2" color="red">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The shadow depth</font><br>
"_sun_color"&nbsp;&nbsp;"1 1 .85" <font face="Times New Roman" size="2" color="red">&nbsp;&nbsp;&nbsp;&nbsp;Same as if it were a light</font>
</font>
</div>

<h2>
<a name="nocolor">How to qrad without color</A></h2>
<p>
If you have ever compiled a level with colored or texture lighting only to find out later that it looks a lot better without color, you can easily recompile it without having to change all of your entities and messing with your surface properties. All you have to do is add -nocolor to your          qrad command line. For example, if you normally compile with this command line:
</p>
<div class="bodytext">
qrad3 -extra -bounce 40 [filename]
</div>
<p>
You just add -noclor to it and you're good to go.
</p>
<div class="bodytext">
qrad3 -extra -bounce 40 -nocolor [filename]
</div>
<p>
The light intensities may not be the same as it was when you had color, but it shouldn't change too much. Here's a little clip from the text file included with version 1.03.
</p>
<BLOCKQUOTE><h5>
Disables colored lighting.  All colored light is computed as normal, but final lighting results are converted to grayscale according to the formula that is used to compute the Y signal of a color television broadcast (which is what a black & white television displays). The colors are not weighted equally (0.299Red + 0.587Green + 0.144Blue).         A green of the same intensity as a blue will convert to a brighter lightmap than the blue. Red falls in the middle. 
</h5></BLOCKQUOTE>
<br><br><br><br><br><br>
<center>
This was written by Michael N. Meadows, AKA Ryche. My sources were as follows: Me, the text file included with gddqrad3 version 1.03, and a lot of hard work. Feel free to quote me. Feel free to steal my words and claim them as your own. Your conscience is all that stands in your way. Most important of all, however, is that you have fun.
</center></ul><h1 id="237" name="237" class="book-h3">Sunlight - Part 2</h1><ul><h1>Sun part II</h1>

<p>I swear, these guys are worse than Intel! Just when you think you have one radiosity program nabbed, someone goes and releases another.
</p>
<p>
Actually, thanks goes to Tim Wright (Argh!) for making so many improvements. And thanks goes to Geoffry DeWan for getting the ball rolling. If you don't already have ArghRad, download it now!
<BR><BR>
<A HREF="http://www.planetquake.com/arghrad">Arghrad Homepage</A>
</p>
<h2>Contents</h2>
      
<h3>Why should I use something new...</h3>
<ol>
<li>
<a href=node/237/#why>...when what I have works fine?            </a>
</li>
</ol>

<h3>What's new?</h3>
<ol>
<li>
<a href=node/237/#four>Did you say FOUR suns?</a>
</li>
<li>
<a href=node/237/#shadow>Ambient shadow coloring</a>
</li>
<li>
<a href=node/237/#diffusion>Shadow diffusuion</a>
</li>
<li>
<a href=node/237/#alternate>Alternate aiming techniques</a>
</li>
</ol>
<hr width=100%>
<br><br>

<h3>Why should I use something new...</h3>

<div class="bodytext">
<a name=why>...when what I have works fine?</a>
</div>
<p>
Progress.
</p>
<p>
For real, though, ArghRad is like a version update of gddqrad3. It fixes some of limitations of gdqrad3 that caused the shadows caused by sunlight to look blocky, and made some definite improvements (like ambient color control and multiple suns. It does all of this WITHOUT sacrificing support of gddqrad3 and qrad3.
</p>

<h3>What's new?</h3>
<p>
Here are all of the new keys available for the sun. If you're hungry for more, go to the online manual         at the Arghrad page.
</p>

<h5>
&quot;_sun_angle&quot;<br>
&quot;_sun_mangle&quot;<br>
&quot;_sun_vector&quot;<br>
&quot;_sun_diffuse&quot;<br>
&quot;_sun_diffade&quot;<br>
&quot;_sun_difwait&quot;
</h5>
<p>
"_sun_angle" and "_sun_mangle" are aliases for the same function, as are "_sun_fade" and "_sun_wait", but that still leaves us with four new options, plus the ability to use up to four suns.
</p>
<div class="bodytext">
<a name=four>Did you say FOUR suns?</a>
</div>
<p>
Yes! You can now use up to four suns in your maps, each with their own color and angle. To use multiple suns, you would simply define them as you normally do, except you substitute "_sun2" "_sun3" and "_sun4" for "_sun" when entering information on your second, third, and fourth suns.
</p>
<p>
You can use multiple suns on all of the _sun keys except "_sun_ambient".
</p>
<div class="bodytext">
<a name=shadow>Ambient shadow coloring</a>
</div>
<p>
You can color your ambient shadows now (the part that can't see the sun, but can see the sky). If you define a straight light value instead of a color value, the shadow color will default          to the average of all of your suns' colors. To define the color of the shadow, simply enter three values after the "_sun_ambient" key instead of one.
</p>
<h5>"_sun_ambient" "[red] [green] [blue]"</h5>
<p>
Each value represents the brightness of each individual color, so if the value entered were 120 150 50, the shadow color would have a minimum red brightness of 120, a minimum green brightness         of 150, and a minimum blue brightness of 50.    </p>
<div class="bodytext">
<a name=diffusion>Shadow diffusion</a>
</div>
<p>
This feature is so freakin' cool, I can't contain myself! What shadow diffusion does is provide an buffer of hazy shadow between the shade and the direct sunlight. This can make your shadows look much smoother less harsh. To define the diffusion, simply enter a value less than the highlight value,
and greater than the shadow value.
</p>
<h5>
"_sun_diffuse"   "[value]"
</h5>
<p>
To control the fade distance of the diffusion, Tim Wright has added the _sun_diffade and _sun_difwait keys. A value less than 1 will cause the diffusion to fade out slower, while a value greater than 1 will make it fade faster. Be aware, however, that if you use a large value, you may need to reduce         your -chopsky value (or else you will get a chunky shadow). This defaults to a value of 1, and any value entered will scale relative to the default. For example, if you entered a value of .5, the diffusion would fade twice as rapidly as it          did at 1.
</p>
<h5>
"_sun_diffade"   "[value]"
</h5>
<h5>
"_sun_difwait"   "[value]"
</h5>
<div class="bodytext">
<a name=alternate>Alternate aiming techniques</A>
</div>
<p>
There are now two additional ways to aim your sun (both of which you can substitute for the "_sun" "targetname" method. The first method is angle aiming. This uses pitch and yaw to aim. This method is the same as is used to aim info_player_intermission minus the roll.
</p>
<p>
The yaw is the position on the z axis. You aim yaw the same way you aim a door, or a player facing, with 0 pointing east, and moving counter-clockwise. Pitch is the angle on the horizon. Pitch values range from negative 90 to positive 90. -90 points straight down, and 90 points straight up.
</p>
<h5>
"_sun_angle"    "[yaw] [pitch]"
</h5>
<h5>
"_sun_mangle"    "[yaw] [pitch]"
</h5>
<p>
The second method is vector aiming. By using vector         aiming, you enter a vector coordinate into the value field, and ArghRad will calculate the angle from the origin (0 0 0) to the vector (x y z) coordinates you entered. The resulting angle         will be the sun's angle.
</p>
<h5>
"_sun_vector"    "[x] [y] [z]"
</h5>
<br><br><br><br><br>
<center>      
This was written by Michael N. Meadows, AKA Ryche AKA eg0. My sources were as follows: Me, the text file included with ArghRad 1.0, Tim Wright, and a lot of hard work. Feel free to quote me. Feel free to steal my words and claim them as your own. Your conscience is all that stands in your way. Most important of all, however, is that you have fun.</center></ul><h1 id="55" name="55" class="book-h3">Surface Properties and Content Properties</h1><ul><!--  converted 15/12/01 from old rust documents -->
<h2>Surface Properties and Content Properties</h2>
<blockquote>
		By Fishman
</blockquote><br><br>

 <p>One of the newest, coolest editing options in quake2 is the ability to set surface properties and content properties. They are:
    <ul type="square">
        <b>Surface Properties</b>
        <li>light
        <li>slick
        <li>sky
        <li>warp
        <li>trans33, trans66
        <li>flowing
        <li>nodraw
        <li>hint
        <li>skip
    </ul>
    <ul type="square">
        <b>Content Properties</b>
        <li>solid
        <li>window
        <li>aux
        <li>lava, slime, water
        <li>mist
        <li>player clip, monster clip
        <li>current_0, _90, _180, _270, _up, _down
        <li>origin
        <li>monster, corpse
        <li>detail
        <li>translucent
        <li>ladder
    </ul>
    </p>

<h3>Differences between a surface property and a content property.</h3>

<p>The main difference between surface and content properties is that <b>surface  properties</b> can be applied to any number of a brush's faces.  <b>Content  properties</b> must be the same on every face of a brush.<br><br>
For example, you could mark one brush face as light, or two face, or three, etc, but for a detail brush, every face must be marked as detail, or you will get an error when you compile the level (<b>Entity x, Brush x: mixed face contents</b>) Thanks <a href="mailto:autolycus@valvesoftware.net">autolycus</a> for the above info.
</p>

<h3>How to Set a Surface\Content Property</h3>

<p>In each editor setting surface properties are done differently.
    <ul type="square">
        
<li><b>In BSP:</b><br>
            Select the brush, press the '<b>S</b>' key, select the properties you want to set, then hit apply to brush, or apply to face. <br>&nbsp;

<li><b>In QERadiant & GTKRadiant:</b><br>
            Surface properties work the same in QERadient as in BSP. Select the brush, 
            press the '<b>S</b>' key, select the properties you want, then hit apply.
            <br>&nbsp;
       
 <li><b>In QOOLE:</b><br>
            Select the brush or surface and hit <b>alt-t</b>, select the property you 
            want, hit apply
            <br>&nbsp;
        
<li><b>In QuArK:</b><br>
            In QuArK you must select the brush and side you wish to add the surface 
            attribute to and then click (no flag). <br><br>
                    
<li><b>In WorldCraft 1.6:</b><br>
            Select the brush & Press Shift+A to call up the face properties window.<br><br>
        
<li><b>In DeathMatch Maker 2:</b><br>
            My pal <a href="mailto:DMM2Editor@aol.com">Richard Neff</a> has sent along this 
            <a href="/content/quake2/tutorials/surface/dmm2.zip">ScreenCam tutorial</a>(405 kb) on how to work with surface 
            properties and contents. So if your a DMM2 user then check em out.
            <br>&nbsp;
        
<li><b>In qED:</b><br><ol>
                <li>Select the brush from the level outline (tree view).
                <li>Select the "texture" tab from the properties notebook.
                <li>Right-click on the proper brush surface in the list or the top
                    &lt;brush&gt; line for all brush surfaces.
                <li>Select "surface attributes" from the pop-up menu that appears.
                <li>Put a check mark in the proper boxes and set the light value
                if necessary.
            </ol>&nbsp;<br>
        
<li><b>In BSP:</b><br>
            <ol>
                <li>Select the Brush
                <li>Hit the 'S' key
                <li>set the properties and remember to hit the 'apply to brush' button
            </ol>&nbsp;
        
<li><b>In Quest:</b><br>
            Select the face or brush, press <b>ALT-F</b>, select the properties
            you want to set, then hit <b>OK</b>. - thanks <a href="mailto:martin.fuchs@physik.fu-berlin.de">Martin Fuchs</a>
            <br>&nbsp;
    </ul>
    </p>

 <p>If there is an editor I missed (which I did) and you know how to use the surface properties then 
    please post on the <a href="http://forums.gamedesign.net/viewforum.php?f=14">RUST Q2 forum</a> and I will add it.
    </p>
    
<h3>What the Surface Properties/Contents Do</h3>

<ul type="square">
    <li><b>light</b><br>
        This means that the face will emit light the color of the texture. So if you 
        have a yellow texture emmiting light then the light will be yellow. This is 
        probably the most often used and useful surface property. To set the 
        brightness of the light you must enter the number of the brightness in the 
        value edit box that should appear on most editors' surface properties 
        windows'. This is a great alternative for creating your own light entities, 
        because it is much easier and provides more realistic lighting effects.<br>
        <br>
        The only thing that you should know is that sometimes, depending on the size 
        of the brush that will be emitting light, you will have to set the brightness
        of the light very bright. Sometimes as high as <b>10000</b> is needed.
        <br>&nbsp;
    <li><b>slick</b><br>
        Slick will make the selected surface slippery and the player will slide. Used
        in the id level cool1, the Cooling Station. There's an area where you jump on
        some crates and hop onto a large piston that takes you up to the next
        floor.  At the bottom around the piston there's a green slick area you can
        slide around in.
        <br>&nbsp;
    <li><b>warp</b><br>
        Makes the surface warp like water. Should be used when making water, forcefields, lava, etc.
        <br>&nbsp;
    <li><b>trans33, trans66</b><br>
        These make the selected surface transparent. 33 means 66 percent transparent, 
        66 means 33 percent transparent. So therefore trans33 is going to be more 
        transparent then trans66.<br>
        <br>
        You should also remember that <b>entities cannot be transparent</b>, so you 
        couldn't have a transparent func_water, or a transparent func_door, etc.
        <br>&nbsp;
    <li><b>flowing</b><br>
        flowing makes the surface look like it is moving. It is usually used along with 
        the <b>current_*</b> surface property to create the effect of a river flowing.<br>
        <br>
        It will move in the direction of the texture so if you wish it to flow in a 
        different direction then you need to <b>adjust the rotation of the texture</b>.
        <br>&nbsp;
    <li><b>nodraw</b><br>
        This is used for triggers and clip brushes. What it does is makes the selected
        surface invisible if it is a clip brush or a trigger such as a trigger_once 
        and a trigger_multiple.<br>
        <br>
        By default though, triggers are already set to not drawn.
        <br>&nbsp;
    <li><b>hint</b><br>
        A hint brush blocks vis from seeing into certain areas, thus decreasing frame 
        rate(which is a good thing) They are difficult to determine where to place though.
        There is a good <a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/52">tutorial</a> 
        written by <a href="mailto:jcaesar@mediaone.net">Joel Caesar</a> on hint brushes 
        that will help you figure out how to use them.
        <br>&nbsp;
    <li><b>solid</b><br>
        Solid is the default for all brushes. Not real sure on why you would have to use it though.
        <br>&nbsp;
    <li><b>window</b><br>
        Prevents the renderer from drawing the backfaces of a brush.  Used on windows 
        (or other transparent brushes.) For an example, look at the window at he very beginning of base1.
        <br>&nbsp;
    <li><b>skip</b><br>
        A skip brush is very strange. It does nothing if a whole brush is set as a skip brush, 
        but if you only set one face of it to a skip brush then it will create the effect of 
        one way glass. The player on the side of the brush that is marked as skip will be able
        to see through the brush, but not shoot through it, and the player on the sides which
        are not marked skip will not be able to see through or shoot through the brush.
        <br>&nbsp;
    <li><b>aux</b><br>
        Does not do anything. I may be wrong though.
        <br>&nbsp;
    <li><b>lava, slime, water</b><br>
        these 3 are pretty self explanatory. Lava takes off the most damage. Slime takes off a 
        lower amount of damage, and water takes off no damage, unless you stay in it too long.<br>
        <br>
        The brush that has one of these properties turned on will not actually warp like water until
        you also give the brush the <b>warp</b> property. It will act the same way though without warp 
        set (you will be able to walk through it).
        It's cool to use these attributes with different textures, like give the lava attribute to a 
        metal brush, etc for some strange different effects. For example, in the 
        <a href="/content/quake2/tutorials/surface/surface.zip">example
        map</a> I created water but I didnt use a water texture. I used the crystal texture. It turned out pretty good.
        <br>&nbsp;
    <li><b>mist</b><br>
        Mist makes the brush nonsolid, thus you could walk through it. You can also create a mist 
        type effect by setting the mist, warp, and trans_33 properties on. Pretty cool.
        <br>&nbsp;
    <li><b>player clip, monster clip</b><br>
        The player cannot walk through a brush set with player clip but he will be able to shoot 
        through it. Monster clip is the same thing but it affects the monster_ entities instead of 
        the player. Good for not allowing monsters past a certain point or restricting the player 
        so he/she can't get into areas in which there is a possibility of getting stuck.  The use of clip brushes discussed in detail in <a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/49"this tutorial</a>.<br>
        <br>
        You must also have nodraw set for the clip properties to work.
        <br>&nbsp;
    <li><b>current_0, _90, _180, _270, _up, _down</b><br>
        all the current properties are used to push the player in the selected direction (in water). 
        So current_0 will push the player in the angle of 0, which is straight right.<br>
        <br>
        The majority of the time current_ will be used along with the flowing and water properties to 
        create the effect of flowing, moving water.
        <br>&nbsp;
    <li><b>origin</b><br>
        The origin property is used with certain entities like the <a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/39">turret_</a> 
        entities, <a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/24#func_rotating">func_rotate</a>, and 
        <a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/24#func_door_rotating">func_door_rotating</a>. Check those corresponding pages on how
        to use the origin property with these entities.
        <br>&nbsp;
    <li><b>monster, corpse</b><br>
        These do nothing at all. I may be wrong though
        <br>&nbsp;
    <li><b>detail</b><br>
        Detail brushes are very useful. They can be used to decrease vis time for a level. When a brush is 
        marked as a detail brush, vis will ignore it, thus decreasing the amount of time that qvis3 will 
        take while compiling your level.<br>
        <br>
        Too many detail brushes though will actually slow a level down. Try to keep detail brushes restricted
        to brushes that the player will not often see.<br>
        <br>
        Detail brushes, and how to use them, are discussed in 
        <a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/53">this tutorial</a>.
        <br>&nbsp;
    <li><b>translucent</b><br>
        if you have water and trans33 or 66 *not* set and the surface
        light flag 0 as well, then the water brush interior isn't lighted.
        when you set the translucent flag, light from outside can come inside
        although the water surface is not-see-thru. thanks 
        <a href="mailto:martin.fuchs@physik.fu-berlin.de">Martin Fuchs</a>
        <br>&nbsp;
    <li><b>ladder</b><br>
        The ladder attribute allows the player to climb up or down the brush. Most often used for creating ladders. 
        A number of people have been having problems with creating ladders but they are actually pretty easy to make.<br>
        <br>
        Make the ladder and then give every brush that the ladder is made up of the surface property of ladder. It's that 
        simple. The trouble comes up when you have the steps of the ladder too far apart and the player can't touch the next 
        step. If this is the case then you will have to create a very thin brush right in front of the ladder and set 
        the surface property player_clip and ladder to it. This will create the illusion of the player climbing up the
        ladder when in fact the player is climbing up the invisible player_clip brush.
        <br>&nbsp;
</ul>

<h3>Things to Remember about Surface/Content Properties</h3>

 <p>All the textures that are used with quake2 and are available for use by level 
    designers have default surface properties already set. For example... If you 
    select a glass texture, then it will already have the trans_33 property on. It 
    also follows that all the light textures, already have the light surface property
    set and with a light value that the creators of the texture thought was right. 
    All of this can overridden though if you desire.<br><blockquote>(Editor's Note:  Users of GTKRadiant, which was not written with Quake 2 in mind, may find that Surface & Content Properties are not set by default and will have to be set manually)</blockquote>
    <br>
    Surface Properties can also be mixed. So you could have one texture with lava, 
    flowing, current_0, tran_33 all set.<br>
    <br>
    Also remember that the surface <B>properties</B> can have selected faces with properties
    while, surface <B>contents</B> MUST have the whole brush selected with the same content 
    or a mixed face error will occur.<br>
    <br>
    The 
    <b><a href="/content/quake2/tutorials/surface/surface.zip">example map</a></b> 
    I made does not show examples of all the surface properties but it does show some
    potential of some of the cool effects you can get. It also shows how you can 
    misuse the light emitting textures. =) Way too colorful. <br>
    <br>
    Well anyways if you still don't understand please post your questions to the 
    <a href="http://forums.gamedesign.net">forums</a>.
    </p>


<!-- eof --></ul><h1 id="238" name="238" class="book-h3">Texture Blending</h1><ul><h3>Texture Blending</h3>
<br>
By James Parkman
<p>
I got an email from someone who played my maps, asking how to create the effect of a wall being painted with multiple textures. The solution is simple, but there are some nice tricks you can use to enhance both the appearance and speeds of rooms created like this. Here goes.
</p>
<p>
Ok, the goal here is to create a room whose walls appear to be painted with separate but well integrated textures. This is something you need to learn pretty quickly when editing Quake 2. Tim Willits mastered this in his levels in Quake2, and that's basically where I got the inspiration for the base style I used in Abandon All Hope. The textures were made to be used this way, and are usually clustered together by name in a manner that makes it easy to find a nicely fitting group of textures for your room. For instance, a lot of the e1u1 textures are 64x64, and their edges are specifically drawn to fit together perfectly with one another.
</p>
<p>
The idea is to <strong>let the textures do the work for you</strong>. Complex architecture may look pretty cool, but your speeds will suffer, and your vis times will completely skyrocket. So instead of adding to your poly count by crafting decorations, it's a lot more effective in the Quake 2 engine to simply meld two brushes, each painted with a well fitted texture.
</p>
<p>
<h4>An Example</h4>
<p><font size="2" face="verdana">Here you've got a simple wall. Paint it with one of the "duct" textures from e1u1, you'll notice that the texture doesn't look so hot when it's used on a large brush. So take that section of wall, decrease it's height by 64 units, and create another brush of equal width and length, this one 64 units high. Place this section in the spot that's now open from decreasing the former large wall brush. Here's 2 screenshots, before and after:
<p><center><img src="http://www.gamedesign.net/miniwood/tutorials/images/tbtut01.jpg" width="300" height="225"> <img src="http://www.gamedesign.net/miniwood/tutorials/images/tbtut02.jpg" width="300" height="225"></center></p>

<p>This adds a lot, without the need for complex architecture and outcroppings which slow down the level... plus it's simply got a nice even flow which doesn't draw your attention immediately, but creates a deep atmosphere within your level... to me, that's the difference between a level thats a work of art, and one that's "pretty cool". The best authors out there have this method down, and use it alot.
</p>
<p>Let's throw a wall support in now, using the same principle:
</p>
<p><center><img src="http://www.gamedesign.net/miniwood/tutorials/images/tbtut03.jpg" width="300" height="225"></center></p>
<p>... no  seams, blended well... get a motif like this going, and your level is one step closer to becoming a classic... take for instance this hallway from Abandon All Hope.
</p>
<p><center><img src="http://www.gamedesign.net/miniwood/tutorials/images/tbtut04.jpg" width="350" height="263"></center></p>
<p>I've used this effect to create an entire hallway, including the ceiling, walls, and support structures. Notice the depth and atmosphere this gives to the area. I'd say that this hallway was the first time I truly had that lightbulb flicker in my skull about the "art" of texture use... before this, I'd fight the editor alot trying to stretch and align whatever texture I was working with to fit the architecture. The key is, the OPPOSITE is what you should aim to do: design the architecture around the textures you will be using for your level. Of course, the brush count here is significantly higher than a simple cubic hall would give, but chances are that if you build a simple cudic hall, you're going to spend alot of time and waste alot of cpu power on decorations, or the hallway will end up looking quite plain.
</p>

<p>One other thing I should mention is light fixture placement. Personally, I like to carve my light brushes into the wall... some authors, even very good ones, don't mind having their lights jut out from the wall, which makes editing alot easier for them, as they don't have to deal with carving up their walls. If you do decide, however, to carve your lights into walls, keep in mind that you should make your light brush at least as thick as your wall, or you'll be splitting your wall brush not only into the 4 sections that result from splitting with a cube, but a 5th section, lengthwise, resulting from splitting a brush with another which is less thick. This makes it alot more difficult to move and resize your walls, and should you have alot of lights like this, you'll soon end up with a nasty  mess.</p>
<br><br>

J Parkman</ul><h1 id="44" name="44" class="book-h3">The Absolute Beginner's Guide to Quake 2 Editing</h1><ul><h3>Quake 2</h3>
	<blockquote>
		The Absolute Beginner's Guide to Quake 2 Editing - <a href="mailto:dmm2editor@aol.com">Richard Neff</a>
	</blockquote>
	
<br><br><b>In the Beginning...</b>

<p>So, you've finally played Quake 2 until your eyes are bloodshot and rather than get some sleep, you've decided, &quot;Hey, it would be sooooo cool to create my own levels!&quot; Unfortunately, you're getting into level design rather late, since Quake 2 is really an evolution of Id games since Wolfenstein 3D. So, keep one thing in the back of your mind: it is <b>not</b> a trivial thing to do Quake 2 editing. It is a very long and time consuming process - but, rest assured, the first time you blast a Strogg in a level you've created yourself, you'll be very glad you put the time into it 

<p>Just be aware that not only are you going to have to spend time creating the level, but you'll have to spend time learning the basic concepts, learning the editor you've chosen, planning the design of your level, waiting a <b>lot</b> on the compilers to do their job, and putting in the time to do all the picky little detail work on your level before it's &quot;good enough&quot; to post. Be fully aware that all of this takes some serious time, so don't expect to have a quality level in a few days.
	
<br><br><b>The First Steps</b> 

<p>The first thing you need (other than the registered version of Quake 2) is a level editor. Right now, I'm only talking about an editor that creates Quake 2 levels, not skins, texture, entities, models, etc. Some editors also include a few of those functions, but right now, let's just concentrate on the basic level editing functions. The first questions that are probably popping into your head are: &quot;What's the best editor?&quot; or &quot;What did Id use? That <b>must</b> be the best editor!&quot; First and foremost, you have to understand that <b>there is no best editor!</b>

<p>I know, all your friends babble endlessly how great one editor is and how another sucks. But, the bottom line is that you are the one that gets to spend hours bleary-eyed in front of this thing, so you need to check out all the editors you can before committing to a single one. In fact, you may have already jumped the gun and bought/downloaded an editor. That's ok too, just realize that although it may be the editor you learn on, it may not be the editor that you use to do all your later maps. (And Id used a rather hard-to-get working QE4, which had an interface that was designed more for people who REALLY knew the game rather than beginners. If you're really interested in trying to use QE4 under Windows 95, you're probably much better off just downloading QERadiant - trust me on this.)
	
<br><br><b>Where Do I Get a Level Editor?</b> 

<p>Fortunately, you're in luck. Go to the Links page here at Rust and you'll see a listing of some of the major Quake 2 editors. Keep in mind that some of them are freeware, some are shareware, and finally some are retail products. However, don't assume that the retail products are any better/worse than the others. Also, each has it share of advantages, disadvantage and flaws. Most also have Web sites dedicated to updates, tutorials and other editor specific information (as opposed to Rust which is pretty editor non-specific.)

<p>Additionally, there is something you may need beyond the level editor itself: the compiling tools. Id uses 3 compilers to turn the maps that editors create into fully playable levels for Quake 2. They are QBSP3, QVIS3, and QRAD3. Each of these has a different purpose which will be described later in this document. Some editors provide these files with the package/download, while others require you to download them yourself.
	
<br><br><b>Knowing the Components of the Quake 2 Engine</b>

<p>The key components of the Quake 2 engine are: Entities, Attributes, Brushes, .map files, and the compiler programs. Let's look at each and what it does.

<blockquote>
	
	<b>Entities</b>

	<p>Entities are the &quot;active&quot; objects of Quake 2. Things like monsters, weapons, powerups, triggers, etc. are all entities. Each entity in Quake 2 has a specific task that is hard coded, either in the regular Quake 2 engine or as a separate add-on modification, such as Capture the Flag (CTF) or the Mission Pack. Additionally, there are two different types of entities: point entities and solid entities.

	<p>A point entity is an entity that has a model preassigned to it. For example, a monster. The monster does not require the user to create the physical representation of the monster or its movement. This has already been done by the entity creator. When you place a monster entity in your editor, Quake 2 automatically puts the monster in its proper place. Typically, this also means that if you use a box and make it a monster, you don't need to worry about the size of the box, since it will be replaced by the appropriate model when Quake 2 runs. Some examples of point entities: monsters, lights, health, player starts and powerups.

	<p>A solid entity is an entity where the level designer does have to give a solid geometry in order for the entity to work. An example of this is a door. You have to make a door the size and shape you want. The advantage of having to define the solid for the entity is to allow a greater design range for which to create those entities. For example, you may want a double door rather than a single door, so being able to define this gives you that option. Examples of solid entities are: doors, triggers, buttons, trains, and platforms.

	<p>A common thing about all entities is that certain things need to be defined for each entity in the level to modify the behavior of that entity. For example a trigger isn't much good if you can't tell what is to be done by that trigger. So, each entity has properties that can be defined by the user. These properties are known as <em>attributes</em>.

	<br><br><b>Attributes</b>
	
	<p>An attribute is basically, the stuff that defines how an entity is supposed to work. For example, a trigger needs to have something to target when the player goes over it. So, one attribute of a trigger is the Target attribute, which points to the name of whatever is supposed to happen when the player runs over it. If the trigger is to open a door, then the Target attribute will have the name of that door. Additionally, a trigger entity also has a delay, which allows you to set the amount of time has to pass before the trigger becomes &quot;active&quot; again.

	<br><br><b>Brushes</b>
	
	<p>Now that we know what entities are, we can adequately describe what brushes are. Brushes are simply anything in the Quake 2 level <b>other</b> than entities. Basically, this means the walls, floor, ceiling and anything else that the player can't pass through, but don't really do any other functions. A good way to think of brushes is to equate them to bricks or building blocks. They simply define the structure of a level.

	<p>Some things to note about brushes, however. A brush can only be convex. This means that no &quot;dents&quot; are in the brush. You can't pass a straight line through a brush where it passes out of the brush and back in. For example, a square is a convex brush. A &quot;C&quot; shape, is not a convex brush. However, you can make multiple brushes to comprise a &quot;C&quot; shape.

	<p>Additionally, brushes must be solid and are comprised of straight edges. You can't ever be &quot;inside&quot; a brush (rooms are actually &quot;hollowed out&quot; brushes where you have six solid brushes making up the walls, roof, and floor.) The Quake 2 engine also doesn't support curved edges - however, you can have many straight edges on a &quot;side&quot; that make it seem curved. This was done by Id and other levels to simulate rounded objects.

	<br><br><b>*.MAP Files</b>
	
	<p>This is the standard for all Quake 2 editing files. However, as with any type of &quot;standard&quot; in the industry, each editor may implement .map files differently - which may make it harder to open a .map file created in one editor into another. That aside however, all editors (whether they are able to import .map files are not) must be able to create a .map file so the compilers can create a playable level.

<p>The structure of the .map file is actually pretty straightforward. It is a text file (meaning you can open it and modify it directly in any text editor, such as Notepad) that holds descriptions and attributes of the brushes and the entities that make up the level.

	<br><br><b>Compiler Programs</b>
	
        <p>As I mentioned earlier, you need 3 compiler programs in order to create playable Quake 2 levels. These compilers turn the text-based .map file into a compiled .bsp file which users can play. The first compiler, QBSP3, creates the initial .bsp file. This breaks up all the brushes into smaller brushes and builds the playable .bsp file. In fact, you could just run the QBSP3 compiler and have a playable map (and you'll usually do this as your maps get bigger for testing purposes.) However, the other two compilers do more modifications to the .bsp file that make it run faster and look better.
        
        <p>The next compiler, the QVIS3 program, does something known as visibility calculating. Basically, it calculates what a player can see from any given viewpoint in the level. The primary function of the VIS compiler is to speed the level up during gameplay be pre-determining whether or not a player can see certain areas of the map at the current viewpoint. While you may not notice much of a difference in the actual appearance of a VIS compiled map, the speed should almost always be faster than a map that hasn't had the VIS compile run.
        
        <p>The final compiler, QRAD3, is the lighting (radiosity) generator. Until this compiler is run, the map will not have any lighting effects defined. This means that the level will run completely lit, regardless of the location of any light entities or surface texture lighting. This is the last compiler to run, meaning you must run the QBSP3 and the QVIS3 compilers before this compiler can be run.
        
        <p>A thing to note about the compiled .bsp files. In Quake 1 textures used in the level were kept inside the .bsp file. In Quake 2 however, they are not. So, if you decide to use custom textures other than the ones originally used in the Id game, you have to provide those textures either in a .zip file or .pak file (which Id used to store all the .bsp level files) to distribute those textures. However, this is a little outside the range of what you should worry about as a beginner.

	<br><br><b>And Just What the Heck is a Leak?</b>

	<p>The dreaded leak - the biggest stumbling block to the beginner editor (and it even plagues more advanced editors from time to time). To understand leaks you need to understand how the Quake 2 engine views the world around it. By default, anything a that isn't in a self contained room, is in the 'void.' (not to be confused with the sky) Players can NEVER see or go into the void.

	<p>The best way to handle this is to realize that your level much be completely contained. Imagine filling up your level completely with liquid...if any of the liquid could escape, then your level is not completely contained - and a leak occurs. However, this checking occurs from the player start position and works out - so, if you have the player starting outside the outer walls of your level, a leak could occur as well.

	<p>Additionally, the player can't be able to see into the void. So, you can't use transparent textures as outer walls. This will also cause a leak error to be displayed.

        <p>As I mentioned, don't confuse this with the sky. A sky is simply a special texture property. The Quake 2 engine gives the illusion that there is more out there beyond the limits of your map, but from a design standpoint, your level still has to be self contained and the player can't see the void anywhere.

	<p>Keep in mind leaks can be very small...the slightest gap between two outer walls can cause leaks (and on a more advanced note - be sure to use the right compiler for your editor since some editors, such as Qoole, use 'floating point' sizes, while some compilers round off.) And some editors can use what's known as pointfile information to draw a line to leaks, while other editors don't offer this feature.

	<p>But, why worry about leaks? First and foremost, leaks are bad because they slow the engine down a lot. Also, they prevent you from running the VIS and RAD compilers, so you don't get proper lighting or a fast playing level. Both of which are considered bad and prevent you from having your levels posted or played by others. Finally, anywhere a player can see into the void may cause effect like the &quot;Hall of Mirrors&quot; effect where the last image is constantly displayed or a &quot;grey area&quot; effect, where the player is able to see grey where the void is.

</blockquote>

<b>What about the Next Steps?</b>

<p>Ok, so you've learned the basic concepts of Quake 2 editing, now lets look at what all Quake 2 levels need:

<blockquote>

	<b>The Worldspawn Entity</b>
	
	<p>The Worldspawn entity is a special entity that defines certain things about the map, like the CD track to play, the sky to use, the next level, and other things that affect the entire level. Keep in mind that with some editors, this may be listed or access differently (Qoole and DMM2 come to mind - Qoole requires you to bring up the entity window while no other entities are selected and DMM2 uses File, Game Options to edit these settings.)

	<br><br><b>A Room</b>
	
	<p>This is pretty obvious. But, you do need to have a least a room before you can place entities into your quake level

	<br><br><b>The Player_Start Entity</b>
	
	<p>Even in DM and CTF maps, you probably want to put this entity down to test your levels. Some editors will even put this entity in if you don't explicitly specify it. You can have only one player_start entity. However, you need to have a player start, even if you use the DM or CTF starts, in order to play your map.

	<p>The player_start has to be inside the level otherwise a leak will occur. This is especially important with editors that put a player_start where the observer in the editor is when you don't have an explicit player_start entity defined.
	
</blockquote>

<b>And that's about all the basics!</b>

<p>That's is the overview of Quake 2 editing in general.
Obviously, we didn't cover every single aspect of editing. Heck,
we didn't even talk about how to create a room! That's because
most anything else you want to do is going to be specific to a
particular editor. Some editors will create a room automatically
with all six sides, while some editors will require you to create
a box, then &quot;hollow&quot; it out. Check out the tutorials
for your editor on either the editor's home page or pages
dedicated to that editor to help you get started.

<p>However, Rust lists all the Quake 2 entities and attributes
for the entities included with the Id game (however, not all
modifications, total conversions (TCs), and mission pack entities
are listed). Additionally, other tutorials are here for helping
you to create better Quake 2 levels.

<div align="center"><br><br><b>Some Tips for Beginners</b><br><br></div>

<table width="400" align="center" border="0" cellspacing="0" cellpadding="0"><tr><td> 
        <li><b>Go slowly.</b> Don't try to make the perfect level on your first few attempts! Make small practice levels to learn basic concepts and effects before implementing them in a level you care about.<br><br>     
        
        <li><b>Read a </b><em><b>lot</b></em><b>! </b>Read through all of the tutorials here at Rust before you go head-first into map building. In fact, you may want to fire up the ol' printer and get some of this stuff in hardcopy so you have it in front of you while editing. Trust me, you'll save yourself a lot of time and frustration later on if you do this.<br><br>
        
        <li><b>Learn your editor!</b> One of the best things you can do is visit sites dedicated to your editor and learn what it can/can't do. It always amazes me the number of people who complain, &quot;My editor can't do this!&quot; when, in fact, it can. They just didn't take the time to read all the tutorials out there.<br><br>
        
        <li><b>Start small!</b> Don't try to do every single cool effect you've ever seen. A lot of this stuff was done by people who had done a lot more maps than you have, so don't assume that you can do the cool stuff that Id or anyone else did right away. The truth of the matter is that your first few maps probably aren't even &quot;playable&quot; maps, so don't even post them - in fact, expect this and realize that they are learning experiences, not &quot;playable&quot; levels.<br><br>
        
        <li><b>Keep rooms small too!</b> The Quake engine is very picky about size. The larger the room, the more the Quake engine has to do to display the room and all the stuff in it. <b>Don't</b> do large outdoor areas!!! Until you learn what the Quake 2 engine can handle, don't even try to create outdoor rooms. This is better left for when you've gotten some basic experimenting out of the way.<br><br>
        
        <li><b>Plan ahead.</b> Without question, the biggest mistake of the beginner. Quake is very sensitive to the number of brushes and entities in a single view. The more stuff the engine has to render, the slower the gameplay. Also, knowing what you want to do makes it easier to create a level that &quot;flows&quot; well from one room to another. Keep in mind a level isn't just a bunch of different rooms connected to each other. It's something that is designed to either complete an objective in Single Player mode or to create a fair, yet interesting battleground for DM mode. You have to plan ahead to keep from spending hours on a map that doesn't even play well or doesn't look good. <br><br>

        <li><b>Ask questions, but don't bug people.</b> Most editors are willing to help a beginner out, but don't abuse that willingness. When you have a question, post it on a discussion board, like the one here at Rust, or a public discussion area, such as a newsgroup. And don't assume the world revolves around you. You're question may sit a while before it's answered (and if it goes unanswered too long either your idea can't be done or you haven't exhausted the sources of information out there.) Be sure that you've read FAQs and tutorials about Quake 2 editing and your editor specifically before posting questions - otherwise, you may get the short reply of, &quot;Check the FAQ&quot; or some other less-than-happy reply. Additionally, don't assume that an author of a tutorial, FAQ, or reply wants a personal e-mail. (Especially in my case!) You should ask before you send questions whizzing through cyberspace using e-mail, or you may not like the reply (plus still not get your question answered by someone who could normally help.) <br><br>
             
        
        <li><b>Finally, have fun!</b> Editing is a long and tedious process, but the final result almost always makes it worthwhile!
</td></tr></table>

<p>
</ul><h1 id="266" name="266" class="book-h3">The BSP Process and Visibility</h1><ul><h2>The BSP Process and Visibility</h2>
<h3>By Geoffrey DeWan<h3>

<hr>

<center><B>**** Let this page load fully or the animated GIF's may not animate. ****</B></center>

<hr>
<br><a NAME=TOC></a><h3><b>TABLE OF CONTENTS</b></h3>

<ul>
<li>
<a href=/node/266#PDF#PDF Version</a></li>

<li>
<a href="/node/266#Introduction">Introduction</a></li>

<li>
<a href="/node/266#TheMap">The Map</a></li>

<li>
<a href="/node/266#TheBspProcess">The BSP Process</a></li>

<li>
<a href="/node/266#VisibilityNodes">Visibility Nodes</a></li>

<li>
<a href="/node/266#CheckingVisibility">Checking Visibility</a></li>

<li>
<a href="/node/266#HintBrushes">Hint Brushes</a></li>

<li>
<a href="/node/266#DetailBrushes">Detail Brushes</a></li>

<li>

<a href="/node/266#DetailHintBrushes">Detail Hint Brushes</a></li>

<li>
<a href="/node/266#Files">Files</a></li>

<li>
<a href="/node/266#End">Credits</a></li>
</ul>

<hr>
<br><a NAME=PDF></a>(<a href="/node/266#TOC">Table of Contents</a>)


<H3><b>PDF VERSION</b></H3>
A version of this tutorial exists as a PDF file.
<BR><BR>
<a href="http://www.gamedesign.net/miniwood/tutorials/files/bsp_pdf.zip">DOWNLOAD - bsp_pdf.zip</a>
<BR><BR>
The AVI's in this archive need to be extracted to the same directory as the .pdf file.

<p>
<hr>
<br><a NAME=Introduction></a>(<a href="/node/266#TOC">Table of Contents</a>)
<h3>
<b>INTRODUCTION</b></h3>
This tutorial is written for Quake II and to some extent Quake 3 Arena.&nbsp;
However, all Quake engine games work on a similar principle (though not
all have hint brushes or detail brushes).
<p><img SRC="http://www.gamedesign.net/miniwood/tutorials/images/warning.jpg" HSPACE=5 align=LEFT>This symbol
represent a very important warning or caution.
<br>&nbsp;
<p><img SRC="http://www.gamedesign.net/miniwood/tutorials/images/q3a.jpg" HSPACE=5 align=LEFT>These sections
to apply to Quake 3 Arena.
<br>&nbsp;
<p><img SRC="http://www.gamedesign.net/miniwood/tutorials/images/q3a.jpg" HSPACE=5 align=LEFT>In Quake 3
Arena,&nbsp; q3map handles all the functions that q3bsp, qvis3, and qrad3
handled for quake II.

<br>&nbsp;
<p>
<hr>
<br><a NAME=TheMap></a>(<a href="/node/266#TOC">Table of Contents</a>)
<h3>
<b>THE MAP</b></h3>
The examples in this tutorial are going to use the following map, which
consists of 4 walls, and 2 objects in the middle:
<p><center><img SRC="http://www.gamedesign.net/miniwood/tutorials/images/bsp_quake2view.jpg" ></center>
<p>We will use the following overhead view for this tutorial:
<p><center><img SRC="http://www.gamedesign.net/miniwood/tutorials/images/bsp_base.gif" ></center>
<p>This map is a 2 dimensional map.&nbsp; Lines in this map will correspond
to polygons in the&nbsp; 3 dimensional map.&nbsp; The polygons in this
2 dimensional map will correspond to brushes in the 3 dimensional map.

<p>
<hr>
<br><a NAME=TheBspProcess></a>(<a href="/node/266#TOC">Table of
Contents</a>)
<h3>
THE BSP PROCESS</h3>
There are 12 extraneous polygons on the outside walls of this map, so lets
simplify matters a bit by eliminating them (which will happen anyway during
the BSP process if there are no leaks):
<p><center><img SRC="http://www.gamedesign.net/miniwood/tutorials/images/bsp_start.gif" ></center>
<p>The gray area around the edge will represent the part of the world we
do not care about since it will be outside the play area.&nbsp; There will
be some additional bsp splits by the 12 eliminated surfaces out here but
nothing that will affect the interior of the map.&nbsp; White is the empty
area a player can move around in.&nbsp; The stone is solid.

<p>During the BSP process qbsp3 takes each polygon one by one and inserts
them into the bsp tree.&nbsp; The term tree describes the data structure
the bsp nodes are stored in (if the data structure is drawn graphically
on a piece of paper, it looks something like a tree or bush).&nbsp; As
each polygon is inserted, it will split space up into smaller and smaller
regions, but it will only split up the regions it is inserted into.&nbsp;
The process is shown graphically below (if this image is not animating,
reload the page and don't stop the loading of the page, or open image up
in a separate browser window):
<p><center><img SRC="http://www.gamedesign.net/miniwood/tutorials/images/bsp_process.gif"  height=190 width=380></center>
<p>As you can see, the order the polygons are inserted have an effect on
how the map is broken up.&nbsp; Adding, deleting,&nbsp; or changing a single
brush can cause qbsp3 to go into an entirely different direction and cause
significant performance changes (either better or worse).
<p>In reality, qbsp3 uses certain rules to select which order to insert
polygons.&nbsp; First it assigns a really high priority to axial polygons.&nbsp;

These are polygons whose X values are all the same, Y values are all the
same, or Z values are all the same (in the editor, in 2 of the 3 possible
2d views, the polygon will show as a simple line).&nbsp; After that, it
will look for polygons that will split up the remaining uninserted polygons
the least.&nbsp; The bsp animation with the darker gray border is the one
much more in line with what qbsp3 will actually do.&nbsp; However, for
this tutorial, I am going to use the one with the lighter gray border for
illustrative purposes.
<p>Both the thick blue and thin black lines lie on what are known as bsp
split planes.&nbsp; They break the map up into small (or sometimes, not
so small) regions.&nbsp; Each of these regions is a bsp node.&nbsp; You
will never find a world polygon in the middle of a bsp node.&nbsp; They
all lie on a bsp node edge/side.&nbsp; Moving objects, etc. are not part
of the bsp tree and are handled separately.

<p>The thick blue lines are your solid polygons.&nbsp; You can't move through
them.&nbsp; They are almost always visible.&nbsp; If it is not visible
for whatever reason, you will probably wind up with what is known as the
Hall Of Mirrors (HOM) effect or see other, further parts of your level
through it.
<p>The thin black lines are what become your portals.&nbsp; Portals separate
bsp nodes where there is no solid polygon.&nbsp; They are not visible,
but polygons generated with a mist-ed brush, or other non solid brush can
overlap them.&nbsp; They do not block movement.&nbsp; There are actually
2 between any 2 bsp nodes (where there is no solid polygon).&nbsp; Each
of those 2 portals is attached to its respective bsp node.&nbsp; See image
below (if this image is not animating, reload the page and don't stop the
loading of the page, or open image up in a separate browser window):

<p><center><img SRC="http://www.gamedesign.net/miniwood/tutorials/images/bsp_twin_portals.gif"  height=190 width=380></center>
<p>The arrows indicate which way the portal faces.&nbsp; The shaded node
is the node the portal is attached to.
<p>When a polygon is inserted that is inside 2 or more bsp nodes, it gets
split into several pieces such that each piece is in a single node.&nbsp;
However, qbsp3 will later to try to merge faces with identical properties
together if possible (so you may have a single polygon attached to multiple
bsp nodes), so you often wont see evidence of this effect if you turn on
gl_showtris (see discussion of gl_showtris below).
<p>The following is a 3d representation of this map in Quake II:
<p><center><img SRC="http://www.gamedesign.net/miniwood/tutorials/images/bsp_quake2view2.jpg" ></center>
<p>The thin semi-transparent windows represent the portals which you can't
normally see.
<p><img SRC="http://www.gamedesign.net/miniwood/tutorials/images/q3a.jpg" HSPACE=5 align=LEFT>Unlike qbsp3
which breaks up polygons to fit into polygon nodes, then tries to merge
them again later, q3map for Quake 3 Arena leaves polygons unbroken, and
makes no attempt to merge later.&nbsp; The ultimate effect is roughly the
same.&nbsp; The bsp tree itself is still built as normal.
<p>
<hr>

<br><a NAME=VisibilityNodes></a>(<a href="/node/266#TOC">Table of
Contents</a>)
<h3>
VISIBILITY NODES</h3>
Lets take the following possible final bsp arrangement (from one of the
example bsp-ings above):
<p><center><img SRC="http://www.gamedesign.net/miniwood/tutorials/images/bsp_final1.gif" ></center>
<p>As mentioned above, each of the white areas is a bsp node.&nbsp; These
bsp nodes are also used for visibility determination.&nbsp; Qvis3 goes
through and determines which nodes are visible from which nodes.&nbsp;
Lets take the following 2 points, one being an observer, another being
a point on a wall that is being looked at:
<p><center><img SRC="http://www.gamedesign.net/miniwood/tutorials/images/bsp_view1.gif"></center>

<p>As you can see by the red line, the two points are not visible too each
other.&nbsp; However, with this bsp, qvis3 (and thus Quake II) will think
they are.&nbsp; Why is this?&nbsp; Because the nodes they are in are visible
to each other.&nbsp; Qvis3, when checking for visibility, checks each portal
against each other portal.&nbsp; If it finds 2 portals that can see each
other, then the 2 bsp nodes they are part of can see each other.&nbsp;
In the following image, the portals currently being looked at are marked
in yellow.
<p><center><img SRC="http://www.gamedesign.net/miniwood/tutorials/images/bsp_portal1.gif"></center>
<p>Since they can see each other (1 of the infinite number of possible
lines of sight is marked in a dashed red line), the bsp nodes the black
dots are in can see each other.&nbsp; This means that as far as qvis3 and
Quake II are concerned, the observer can see the point on the wall.

<p>This, by the way, is where the infamous "Leaf portals saw into leaf"
warning comes from.&nbsp; When this happens, it means it tried comparing
2 leaf portals that belongs to the same visibility node.&nbsp; There was
a nasty bug in the original qbsp3 (yes, qbsp3.&nbsp; It wrote out a bad
bsp that qvis3 had problems with) that resulted in seeing this error often.&nbsp;
Seeing it often meant that there were serious problems with the map.&nbsp;
However, a number of rewritten qbsp3's fixed this problem.&nbsp; In the
<a href="/node/266#Files">files</a>
section below is a link to my <a href="/node/266#Files">gddqbsp3</a> which has this
fix.&nbsp; Even with fixed qbsp3's, you may still see the warning.&nbsp;

Take a look at the following:
<p><center><img SRC="http://www.gamedesign.net/miniwood/tutorials/images/bsp_leaferror.gif" height=190 width=380></center>
<p>The red and yellow portals were originally 1 portal that got split into
2.&nbsp; Normally, qvis3 takes steps to prevent unnecessary portals from
being checked against each other, but this can fail.&nbsp; Both the shown
portals should lie on the same plane, but due to limitations of floating
point numbers as they are represented in computers, they may be slightly
bent with respect towards each other (by a real small amount you could
never hope to see with the naked eye).&nbsp; If this happens, and they
bent in a concave fashion, you will get this error.&nbsp; The following
picture shows what this looks like (if this image is not animating, reload
the page and don't stop the loading of the page, or open image up in a
separate browser window):
<p><center><img SRC="http://www.gamedesign.net/miniwood/tutorials/images/bsp_leaferroranim.gif" height=190 width=380></center>
<p>The angles are highly exaggerated.&nbsp; The dashed line shows how the
node saw itself.&nbsp; In this situation, the warning is harmless.&nbsp;

There are several other similar situations where you might see this warning,
all the result of a computer's finite precision floating point math.&nbsp;
If you have a fixed qbsp3, do not worry about this warning.
<p>If the portal in question is axial, this should not happen.
<p>
<hr>
<br><a NAME=CheckingVisibility></a>(<a href="/node/266#TOC">Table
of Contents</a>)
<h3>
CHECKING VISIBILITY</h3>
So you have your map up and running and want to see how visibility worked
out where you have speed problems.&nbsp; The primary way of doing this
is using one of the OpenGL rendering modes, then setting gl_showtris 1.
Take the following view from base64 (deathmatch compilation of base1, base2,
and base3 from the single player game):
<p><center><img SRC="http://www.gamedesign.net/miniwood/tutorials/images/notris.jpg" ALT="gl_showtris 0"></center>

<p>And now with gl_showtris 1:
<p><center><img SRC="http://www.gamedesign.net/miniwood/tutorials/images/tris.jpg" ALT="gl_showtris 1"></center>
<p>This shows us that Quake II believes that a lot of polygons are visible
when they really are not.&nbsp; It is showing all the polygons in all currently
visible nodes.&nbsp; In case you are wondering, I removed the player weapon
by typing "hand 2" at the console.
<p>The triangles are not part of the bsp.&nbsp; When polygons are rendered,
they get broken up into triangles in the engine.
<p><img SRC="http://www.gamedesign.net/miniwood/tutorials/images/warning.jpg" HSPACE=5 align=LEFT>In either
Quake II or Quake 3 Arena, it is possible to have polygons cross node boundaries.&nbsp;
Thus gl_showtris is not useful for showing where your portals are.
<br>&nbsp;
<br>&nbsp;
<h3>
3Dfx Cards</h3>

The 3dfx minidriver does not support gl_showtris.&nbsp; You can use the
default OpenGL drivers, but if you are using the software OpenGL (Microsoft's
or SGI's), it will be really slow, and possibly somewhat unstable.&nbsp;
You can also load the MesaGL driver for 3dfx cards.&nbsp; A link to these
drivers can be found in the <a href="/node/266#Files">files</a> section below.&nbsp;
Once you have the drivers, put it in your Quake II directory (DO NOT put
it into your system/system32 directory).&nbsp; Make sure it is named opengl32.dll
if it isn't already.&nbsp; Now when you use default opengl drivers, it
will use the Mesa drivers (which the above screenshot was taken with).
<p><img SRC="http://www.gamedesign.net/miniwood/tutorials/images/warning.jpg" HSPACE=5 align=LEFT>This data
was acquired in early 1999.&nbsp; Later versions of MesaGL may not support
gl_showtris.&nbsp; However later versions of 3dfx's drivers might.

<br>&nbsp;
<h3>
Still Not Seeing Triangles?</h3>
If you do not see triangles, you may need to issue the following commands
at the console:
<p>gl_ext_multitexture 0
<br>vid_restart
<p>As this may involve performance degradation, you will want to do the
following when done using gl_showtris:
<p>gl_ext_multitexture 1
<br>vid_restart
<p>
<hr>
<br><a NAME=HintBrushes></a>(<a href="/node/266#TOC">Table of Contents</a>)
<h3>

HINT BRUSHES</h3>
In the example bsp, there are only 4 pairs of bsp nodes that are not visible
to each other (shown marked below):
<p><center><img SRC="http://www.gamedesign.net/miniwood/tutorials/images/bsp_nonvis1.gif"></center>
<p>There are 21 possible pairs of bsp nodes, only 4 of which are hidden
from each other. This is not good.&nbsp; It will result in problems similar
to above in the base64 map.&nbsp; The base64 scene above is actually not
too bad but you can get more extreme examples where you may be drawing
the same part of the screen 3, 4, 5, or more times.&nbsp; In the original
Quake, mappers were forces to go through various games to keep visibility
reasonable.&nbsp; Fortunately, Quake II gives us a tool with which we can
control bsp-splits: the hint texture.&nbsp; What does the hint texture
do?&nbsp; The hint texture is a texture that forces a bsp split even though
the hint texture is not visible.&nbsp; Another feature of the hint texture
is that qbsp3 will not chose a polygon insertion order that will result
in a non-hint polygon splitting a hint polygon.

<p>The hint texture is typically used in conjunction with the skip texture.&nbsp;
The skip texture polygons are not inserted into the bsp-tree and thus,
not used by Quake II.&nbsp; The idea is to take a brush, apply the skip
texture, then apply to a single side of the brush the hint texture.&nbsp;
This will result in a single hint polygon inserted where the brush is,
which is generally all that is necessary.&nbsp; However, you can use an
entire hint brush, but this will make the bsp-splits a bit more complicated.
<p>When you lay out your hint planes, you have to place them such that
two areas you intend to keep hidden from each other don't have the hint
planes facing each other.&nbsp; For the example map, we will try a grid
as follows:
<p><center><img SRC="http://www.gamedesign.net/miniwood/tutorials/images/bsp_myhints.gif"></center>
<p>In an editor (this particular shot came from Qeradiant), it will look
something like this (except for the inset):
<p><center><img SRC="http://www.gamedesign.net/miniwood/tutorials/images/bsp_quake2hint.jpg"></center>
<p>The inset shows the area at the base of the line from another angle.&nbsp;

These brushes all have 5 skip faces, and 1 hint face.&nbsp; The skip faces
are completely ignored, only the hint faces are processed.&nbsp; We could
reduce the number of hint/skip brushes down to as few as 3 by using more
than one hint face per brush but for this example, we will use 1 hint face
per brush (for one thing, by keeping the brushes thin, they don't clutter
up the view in the editor as much).
<p>The 2 points we used above are still going to be visible to each other
as the new nodes they will be in will still be visible to each other:
<p><center><img SRC="http://www.gamedesign.net/miniwood/tutorials/images/bsp_portal2.gif"></center>
<p>However, there are more areas hidden from each other.&nbsp; None of
the areas marked with the same letter will be visible to each other. There
are additional areas not visible to each other (for example, the nodes
in each set of opposite corners) which would have made the diagram too
complex and confusing if completely listed.&nbsp; Visibility will never
be perfect. At any given point in your level, there will be parts of your
level that are not visible but will get drawn anyway (with a few exceptions
like facing an outside wall with nothing behind it).
<p>It will take some trial and error to get a feel for what works well.
Deciding where to place hint planes can be something of an art form.&nbsp;
One good use for hint brushes is in hallway bends as follows:
<p><center><img SRC="http://www.gamedesign.net/miniwood/tutorials/images/bsp_hall1.gif"></center>
<p>You can keep people from seeing too far around the bend by laying a
hint brush across the corner like this:

<p><center><img SRC="http://www.gamedesign.net/miniwood/tutorials/images/bsp_hall2.gif"></center>
<p>This way you make sure you can only see down both hallways at once if
you are in the corner.
<p><img SRC="http://www.gamedesign.net/miniwood/tutorials/images/warning.jpg" HSPACE=5 align=LEFT>One thing
you have to watch for is that the hint brush must make contact with all
edges.&nbsp; Otherwise, if qbsp3 puts a split plane between a surface and
your hint brush, you are not going to get the results you expect.&nbsp;
You may want to even extend them into the adjacent surfaces slightly.
<br>&nbsp;
<p><img SRC="http://www.gamedesign.net/miniwood/tutorials/images/warning.jpg" HSPACE=5 align=LEFT>It is
possible for portals lying on the same plane to cause problems.&nbsp; We
can trust that nodes of the same letter in the above example are not visible
to each other in spite of the fact they share portals on the same plane
because they are axial, but look at the following 2 nodes:
<p><center><img SRC="http://www.gamedesign.net/miniwood/tutorials/images/bsp_nonvis2.gif"></center>
<p>The portals on the planes shared by both shaded nodes are not axial.&nbsp;
As a result, slight numerical errors due to the limits of the floating
point unit on your CPU may cause them to be visible to each other after
all as shown:
<p><center><img SRC="http://www.gamedesign.net/miniwood/tutorials/images/bsp_unaligned.gif" height=190 width=380></center>
<p>The angle of error shown here is extremely exaggerated.&nbsp; When forcing
a split on a non-axial plane, a single hint plane may not be enough.&nbsp;

You may want to use a double sided hint brush about 8 or 16 units, with
the ideal portal running through the middle as follows:
<p><center><img SRC="http://www.gamedesign.net/miniwood/tutorials/images/bsp_double.gif"></center>
<p>The red/yellow/black striped lines are the hint brushes.&nbsp; The 2
red parts on the edges would be the hint surfaces of the hint brush, the
rest of the surfaces of the hint brush would be marked as "skip".&nbsp;
The black line running down the center is where the original portal was.&nbsp;
This will trap any errors between the two planes.&nbsp; You can use either
2 hint brushes, or opposite sides of the same thin hint brush.&nbsp; This
is only necessary when you care about how 2 or more portals that lie on
the same plane interact with each other.
<p>In addition to placing hint brushes where you want portals, you can
place them in the void or in geometry to separate parts of the level from
each other.&nbsp; For example, if your map consists of 2 separate parts
connected only by teleporters, putting a huge hint brush (such that you
cannot connect any 2 points, one from each part, without going through
it) between the 2 parts will keep brushes in either part (except for other
hint brushes) from causing bsp splits, etc., in the other.
<p><img SRC="http://www.gamedesign.net/miniwood/tutorials/images/warning.jpg" HSPACE=5 align=LEFT>In reality,
due to either face merging in Quake II, or not being split in the first
place in Quake 3 Arena, the polygons on the perimeter would span multiple
nodes, and if a polygon is visible in any of the nodes, it is completely
visible.&nbsp; In this example, it would make hint brushes practically
useless.&nbsp; In a real map, with a much higher density of polygons per
major area you want to partition off, this is hardly a problem.

<p><img SRC="http://www.gamedesign.net/miniwood/tutorials/images/warning.jpg" HSPACE=5 align=LEFT>It may
be tempting to break up your map into a bunch of real tiny areas with hint
brushes but while this will certain help visibility, this will greatly
increase the amount of time qvis3 takes to run, and you will probably run
afoul of the 1 megabyte limit for the map's visibility data (see section
on detail brushes below for more information on how to reduce visibility
complexity).&nbsp; You generally want to take steps only when you have
speed problems.&nbsp; Often the level geometry itself will be sufficient.
<p><img SRC="http://www.gamedesign.net/miniwood/tutorials/images/q3a.jpg" BORDER=0 align=LEFT><img SRC="http://www.gamedesign.net/miniwood/tutorials/images/warning.jpg" HSPACE=5 align=LEFT>Quake
3 Arena has a skip texture, but it does not work.&nbsp; In fact, due to
the way q3map processes the map, this cannot be represented at all.&nbsp;
The entire brush will have to be a hint brush.
<br>&nbsp;
<p><img SRC="http://www.gamedesign.net/miniwood/tutorials/images/q3a.jpg" BORDER=0 align=LEFT><img SRC="http://www.gamedesign.net/miniwood/tutorials/images/warning.jpg" HSPACE=5 align=LEFT>In
Quake 3 Arena, hint brushes do not get preferential treatment when being
inserted into the bsp tree.&nbsp; This means that hint brushes can only
be used to create portals,&nbsp; The tip above about separating map parts
will not work.
<p>

<hr>
<br><a NAME=DetailBrushes></a>(<a href="/node/266#TOC">Table of
Contents</a>)
<h3>
DETAIL BRUSHES</h3>
Lets take our previous map, and add a few small brushes.&nbsp; The final
bsp might look something like this:
<p><center><img SRC="http://www.gamedesign.net/miniwood/tutorials/images/bsp_splits.gif"></center>
<p>As you can see, the number of bsp nodes has increased from 7 to 13.&nbsp;
The number of nodes to run bsp calculations has almost doubled and will
cause the size of the visibility information to nearly quadruple.&nbsp;
However, the new brushes do practically nothing to block visibility, making
the visibility information needlessly complex.&nbsp; In the original Quake,
this was a fact of life you pretty much had to live with.&nbsp; With Quake
II, like the hint texture above, we get a tool to help us out: the detail
brush.&nbsp; Unlike the hint texture, which is applied to individual brush
faces, detail is a property that applies to the entire brush.

<p>What happens with detail brushes, is that the polygons making it up
are inserted into the bsp tree last.&nbsp; Additionally, when detail brush
polygons are inserted, they do not create portals, and the bsp nodes they
cut up are treated as one single visibility node.&nbsp; Lets make the 3
triangular brushes detail brushes.&nbsp; Then we will end up with something
like:
<p><center><img SRC="http://www.gamedesign.net/miniwood/tutorials/images/bsp_detail.gif"></center>
<p>The dashed lines are bsp splits, but do not contain portals.&nbsp; Qvis3
treats the entire shaded area as a single node for visibility calculations.&nbsp;
This greatly simplifies the qvis3 process and makes it a lot faster.&nbsp;
When deciding if a brush should be a detail brush or not, you should pick
those that look like that could be seen around easily.&nbsp; Good candidates
for this are things like beams, light fixtures, computer terminals, pretty
much anything small that doesn't do a good job of blocking visibility.&nbsp;

This can be tricky and will some take some trial and error to get a good
feel for.&nbsp; You will want to use gl_showtris mention above as an aid
to this process.
<p><img SRC="http://www.gamedesign.net/miniwood/tutorials/images/warning.jpg" HSPACE=5 align=LEFT>Make sure
all sides of your detail brush are either detail or structural.&nbsp;&nbsp;
If this is not the case, you will get mixed face contents warnings.&nbsp;
If your editor has an option to make a brush structural or detail, you
may want to use that instead of using the editor's surface properties dialog
box.
<p><img SRC="http://www.gamedesign.net/miniwood/tutorials/images/q3a.jpg" align=LEFT><img SRC="http://www.gamedesign.net/miniwood/tutorials/images/warning.jpg" HSPACE=5 align=LEFT>Detail
brushes work differently in Quake 3 Arena then they do in Quake II.&nbsp;
They are still used in the same situations, but hidden sides are not removed
by CSG operations.&nbsp; This means that you will have to remove them manually
by applying the "caulk" texture to all hidden surfaces to keep unnecessary
drawing down.
<p>
<hr>
<br><a NAME=DetailHintBrushes></a>(<a href="/node/266#TOC">Table
of Contents</a>)

<h3>
DETAIL HINT BRUSHES</h3>
Detail hint brushes are not part of id's original compiling utilities.&nbsp;
If you are using those, you will not be able to use this feature.&nbsp;
In my <a href="#Files">gddqbsp3</a> (see <a href="#Files">files</a> section
below), they are implemented such they are hint brushes that only affect
detail brushes.&nbsp; They were primarily implemented as an aid to terrain
generators to keep detail brush based rolling terrain from cutting itself
up.&nbsp; <a href="#Files">Gensurf</a> (see <a href="#Files">files</a>

section below) is capable of using detail hint brushes (it also comes with
its own version of qbsp3 that also implements detail hint brushes).
<p>
<hr>
<br><a NAME=Files></a>(<a href="/node/266#TOC">Table of Contents)</a>
<h3>
FILES</h3>

<ul>
<li>
<a href="http://home.insightbb.com/~gryndehl/q2compile/quake2.html">gddqbsp3</a> along
with my other enhanced Quake II compile utilities.</li>

<li>
<a href="http://tarot.telefragged.com/gensurf/">Gensurf</a> by David Hyde.</li>

<li>
<a href="http://www.geocities.com/SiliconValley/Lakes/7220/mesa.html">MesaGL.</a></li>
</ul>

<hr>
<p><a NAME=End></a>(<a href="/node/266#TOC">Table of Contents</a>)
<h3>

CREDITS</h3>
Tutorial written by Geoffrey DeWan <a href="mailto:gdewan@prairienet.org">gdewan@prairienet.org</a>
<p>Many thanks to those who have helped proofread and give suggestions
for this tutorial:
<ul>
<li>
SmallPileofGibs</li>

<li>
bushboy (for the optimized images)</li>

<li>
some guy I know</li>

<li>
EutecTic</li>

<li>
Johnny Law</li>

<li>
XO (for pdf version)</li>
</ul></ul><h1 id="56" name="56" class="book-h3">Timing in Quake 2</h1><ul><h3>Quake 2</h3>
	<blockquote>
		Timing in Quake 2 - <a href="mailto:demolisherfx@usa.net">DemolisherFX</a>
	</blockquote>

<br><br><b>TECHNIQUE #1</b>: 

<p>I've played a few quake2 maps and haven't seen any timing implemented. People just use direct triggers in their maps. 

<p>I will tell you in this tutorial how to implement timing using two techniques that I have perfected. 

<p>First of all lets start of with the simple way. Now lets say you have a room with four lights in it and you want the second to turn on 1 second after the first, the third 1 second after the second, and so on. 

<p>On top of this you want them triggered with one switch. Now a trigger_relay has no delay build in so you have to use something else. Most of you probably don't know this but a trigger_multiple has a targetname for a reason. The obvious reason is that it can be triggers both when the player walks in or if it is triggered by another event. 

<p>As for the lights lets create a small room with four light. Give each light a different targetname: Light1 for the first, light2 for the second, and so on. 

<p>Now create a button or trigger that will turn on the light. Give the button or trigger a target of start. 

<p>Now create a very small brush, make it a trigger_multiple, and place it at the upper left corner of both the top and back view. The placement is not necessary but you want to have the triggers out of reach so the player doesn't trip them accidentally. 

<p>Now give the trigger_multiple a targetname of start and a target of light1. You can use the delay field to choose when you want the first light to turn on. 

<p>Create 3 more trigger_multiple for the rest of the lights and follow the step above. Just set different delays for them and then you got four independent lights turned on at different times.


<br><br><br><b>TECHNIQUE #2</b>: 

<p>This is not really necessary but this way is good if you don't expect to use the triggers twice. 

<p>The technique is almost the same. The first step is to create a room with 4 lights with different targetnames. Also create a button or trigger that will turn on the lights and give it a target of start. 

<p>The second step is to create a func_timer with a targetname of start and a target of start1. 

<p>The third step is to create a trigger_count with a targetname of start1 and a target that point to the first light. I don't think it matters where you put a func_timer. 

<p>Don't forget that the counters themselves don't have a delay but you can set a wait time for the func_timer. Lets say its 1. 

<p>Now follow the third step for the rest of the lights that need to be triggered. You have to give the trigger_count for the first light a count of 1 and for the second a count of 2, and so on for all the lights. 

<p>What this does that each light will be triggered every value of second that you put for the wait field in the func_timer. As for this func_timer there is a wait of 1, so the first light will tun on instantly. The second one in one second. The third in two and so on. 

<p>That should be it. I think this will broaden the range of effects that could be created in quake2. 

<p>If you find a better way for timing without coding anything please email me at DemolisherFX@usa.net or jmario1002@hotmail.com.

</font>

<p>
</ul><h1 id="57" name="57" class="book-h3">Turrets</h1><ul><!-- q2faq.htm - converted 21/08/01 from old rust documents -->
<h3>Quake 2</h3>
<blockquote>
		User Controlled Turrets - Fishman</a>
</blockquote>
<br><br>	

 <p><b>turret_breach</b>, <b>turret_base</b>, and <b>turret_driver</b> all must be 
	used together to create those cool gun turrets that are in 2 of the quake2 
	levels. These entities are by far the hardest I have come across to use in a 
	level and only advanced level editors should attempt this. I would of never of 
	figured it out if it wasn't for steve at the 
	<a href="http://www.planetquake.com/QuakeLab/QuakeLab2/"><b>quakelab</b></a> 
	telling me to specify an origin for the turret_breach and turret_base. We will 
	get to that though in due time.</p>

 <p>The first thing you need to do is to <b>create the gun</b>. This might take 
	awhile to make it look good. Here is a shot of the id one:</p>

<center>
	<img src="/content/quake2/tutorials/turret/gunpic1.JPG" width="250" height="143" border="0" alt="gunpic">
</center>

 <p>You must also make everything <b>orientated towards angle 0</b>(straight right 
	from a top view), The trick is to kind of <b>make it into 2 parts. The barrel 
	and the base.</b> the barrel is the part that is going to be the turret_breach 
	and the base is going to be the turret_base. Also take into consideration that 
	the creature driving the gun will be standing on the turret_breach so actually 
	<b>the turret_breach will include the barrel and the platform that the 
	turret_driver will be standing on.</b> Here is another visual example to show you
	what the hell I am talking about:</p>

<center>
	Here is the barrel which includes the barrel and the platform for the driver to 
	stand on(<b>turret_breach</b>):<br>
	<img src="/content/quake2/tutorials/turret/barrel.jpg" width="250" height="52" border="0" alt="barrel"><br>
	&nbsp;<br>
	Here is the base(<b>turret_base</b>):<br>
	<img src="/content/quake2/tutorials/turret/base.JPG" width="250" height="146" border="0" alt="turret_base"><br>
	&nbsp;<br>
	Here is the barrel(<b>turret_breach</b>) and the base(<b>turret_base</b>) 
	together:<br>
	<img src="/content/quake2/tutorials/turret/both.jpg" width="250" height="70" border="0" alt="turret_breach and turret_base">
</center>

 <p>Once you get these 2 parts made then you must <b>select the barrel and make it a 
	turret_breach, and select the base and make it a turret_base.</b> Now you must 
	<b>give the turret_breach a targetname</b>. So for this example lets give it a 
	targetname of breach. <b>targetname=breach</b>. The turret_breach and the 
	turret_base go together so <b>they must be teamed</b>. To do this give each of 
	these entities the key value pair <b>team</b> with the same value. For this 
	example lets give them a team name of gun. So on <b>both</b> the turret_breach 
	and the turret_base there should be a key value pair of <b>team gun</b> Now you 
	must decide which direction you want your gun to point in the game and <b>set the
	key value pair angle to what ever direction you want the gun to point.</b> 
	<b>BOTH</b> the turret_breach and the turret_base should have the same angle. For
	this example we will set the angle to be 180. <b>angle 180</b>.</p>

 <p>Next thing you must do is create the target that the gun will shoot at. To do 
	this you must <b>create an info_notnull entity and place it at the tip of the 
	barrel and give it a targetname.</b> For this example our info_notnull will have 
	a targetname of tip. <b>targetname tip</b>. Then <b>set the target of the 
	turret_breach to the info_notnull</b>. <b><b>target=tip</b></b>.</p>

 <p>Next thing you need to do is to <b>create the turret_driver and target it to the 
	turret_breach.</b> target=breach. Place the turret_drive where you want him to be
	standing(on the platform you made him on the turret_breach).</p>

 <p>Now to the part that I couldn't figure out but steve at the 
	<a href="http://www.planetquake.com/quakelab/quakelab2/">quakelab</a> helped me 
	out on. For the turret_breach and the turret_base <b>you must have a brush set as
	an origin brush</b>. These will keep gun from rotating all around the room and 
	looking really messed up. So the turret_breach <b>must</b> have an origin brush 
	and the turret_base <b>must</b> have an origin brush. To make a brush an origin 
	brush you must <b>change the surface property</b> of that brush and set the 
	origin flag. This is done differently for each editor. Check your manual. It is 
	better to select origin brushes that for breach and the base that are near each 
	other. Here is a diagram of what brushes i made into origin brushes.</p>

<center>
	<img src="/content/quake2/tutorials/turret/complete.JPG" width="400" height="168" border="0" alt="complete">
</center>

 <p>Thats about all there is too it. As you can see this is a <b>very</b> difficult 
	entity to use. Not very fun at all. I urge you to download my 
	<a href="/content/quake2/tutorials/turret/rust7.zip">example</a> map if you are going to try do this. If you still
	have problems post your question in the 
	<a href="http://forums.gamedesign.net/">Rust forums</a> and someone will give
	you a hand.</p>
</ul><h1 id="49" name="49" class="book-h3">Using Clip Brushes</h1><ul><h3>Quake 2</h3>
	<blockquote>
		Using Clip Brushes - <a href="mailto:dmm2editor@aol.com">Richard Neff</a> and <a href="mailto:rascal@magnolia.net">David Hyde</a>
	</blockquote>
	
<br><br>

<p>One of the signs of a quality map maker for any game is creating maps that do two things:

<ul>
<li>Create visually exciting areas for the player 
<li>Create a level that is interesting to play 
</ul>

<p>This tutorial is going to concentrate on the latter concept.  More precisely, the use of Clip brushes to help keep the player from being "snagged" on small brushes used to help with the first concept above.

<br><br><b>"Oh no! I'm stuck"</b>

<p>One of the things you'll notice if you fire up any of Id Software's original Quake 2 levels, is that there are a lot of columns and uneven surfaces running along walls.   This creates an exciting visual impact, however, you should notice that the player can run along those walls backwards and not stop until they reach another wall.

<p>To be more precise, let's look at the following screenshot from one of those levels, base1.bsp (the first level in single player.)

<p><div align="center"><img border="0" width="450"  src="/content/quake2/tutorials/clip/clip_img1.jpg"></div>

<p>Towards the end of the level, you'll see this wall near the stairs.  Note that there are both columns and light fixtures running along this wall.  Yet, if you press yourself against this wall and run all the way to the next wall, you don't get "snagged."  A <b>very</b> useful thing when you're being pursued by a Quake 2 monster, or worse yet, a real live Deathmatch opponent!

<br><br><b>So, how is this done?</b>

<p>Ok, the answer is pretty obvious given the title - It was done using Clip brushes.   But, in this tutorial we'll look at the two methods of using Clip brushes to keep players from being "snagged" while playing your levels.

<p>Clip brushes themselves are pretty easy to create.  Simply create a brush with the Clip texture on all sides of the brush.  It's totally invisible in the game and it won't have any effect on the poly count (r_speeds) of the level.   Essentially, they're like invisible "force fields" that prevent the player from getting to an area (useful for more than "snagging" problems also.) Some editors may require that you manually specify the Clip content property, but most will automatically create the Clip brush.  If you run your map and see the Clip texture, then you probably haven't applied that texture to all sides of the brush.

<br><br><b>The Two Techniques</b>

<p>Truthfully, none of this is rocket science - it's pretty straightforward.   However, there are two ways to handle not getting "snagged."   Consider the image above showing base1.bsp.  One way to help the player from getting snagged is to put an angled brush on both sides of the columns or lights.   For example, here's a screenshot in my editor of a light fixture that hangs on a wall:

<p><div align="center"><img border="0" width="450"  src="/content/quake2/tutorials/clip/clip_img2.jpg"></div>

<p>In this example, you'll notice that the clip brushes on each side are designed to gently let the player get around the protruding light fixture by forcing them along an angle between the wall and the fixture itself.  The slope of the angle is something you sometimes have to work with, but typically a 45 degree angle between perpendicular surfaces works well.

<p>So, what's the drawback to this method?  Two primary drawbacks come to mind.   One involves the player, the other often involves you, the editor.  First, if a player is running on the surface of a such a wall, their direction will change slightly.   For those players that like to run backwards against a wall while firing, this will affect those shots when the light fixture is hit.  And, as well all know, this could mean life or death in a deathmatch game!

<p>The next drawback is with editing.  If you wanted to do this along a wall with a lot of columns or light fixtures, you'd have to create 2 clip brushes for each object that protrudes from that wall.  Needless to say, this makes an already tedious process more painstaking!  So, this method is best used for any light fixtures or the like that you've created as a prefab in your editor.

<p>So, what's the easiest way to handle a wall like the base1.bsp figure that won't take a lot of time to create, yet still allow the player good movement along the wall?  The answer is actually quite simple -- make a Clip brush that covers all the protruding objects along that wall. (And what Id actually did in that particular area.)

<p>Here's some screenshots to help you out:

<p>In this figure, here's a room with some columns

<p><div align="center"><img src="/content/quake2/tutorials/clip/clip_img3.jpg"></div>

<p>If the player were to run along the wall on the right, they'd get snagged on every column and I'd need to make 6 total clip brushes using the first technique.

<p>However, if I make the Clip brush (the red box) like so:

<p><div align="center"><img src="/content/quake2/tutorials/clip/clip_img4.jpg"></div>

<p>Then, the player will run along the entire wall without getting snagged or being moved.   Plus, the added benefit to the level maker is that it is a much simpler job to create 1 rectangular brush than 6 triangular ones!

<p>So, why not use this method all the time?  Well, one word -- doors.  If we had a door on the right side we couldn't have the Clip brush covering the door, the player would never be able to pass through the door.  In this case, a combination of the above methods would need to be used.

<br><br><b>Pretty Simple Huh?</b>

<p>Well, that's pretty much the main points about Clip brushes.  See, that wasn't very hard, was it?  However, putting Clip brushes in your level will make a big difference for those people playing your maps (especially if you're designing DM or CTF maps.)  So, it's worth the extra time placing Clip brushes in your level.

<p>
</ul><h1 id="552" name="552" class="book-h3">Using Text Editors for Mapping</h1><ul><h2>Using Text Editors For Mapping</h2>

<blockquote>by Ricebug</blockquote>

<p>You've been working on this huge map and have just discovered
that about a thousand brushes need the <i>detail</i> property applied to them.
This job would be tedious in the best of
circumstances, not to mention the possibility of missing a few brushes.&nbsp; Or let's
say you need to change all the _focus values for a certain light entity. Those
mine lights are a bitch to select due to their size. Again, an exercise in
tedium.</p>

<p>Lucky for us, the standard .map format is nothing more than
simple ASCII---in other words, plain English. So opening it up in a text editor
provides us with the ability to use the <i>Search &amp; Replace</i> functions to
do sweeping changes in a map, thus removing the drudgery. Doing so requires some
preparation, however.</p>

<p align="left"><font face="Arial">1. Back up the map file! There's nothing worse than destroying a
map with the click of a mouse.</font></p>

<p align="left"><font face="Arial">2. Get a text editor. I'd recommend <a href="http://www.jgsoft.com/"><b>EditPad</b></a>.
It's free, it will do operations on multiple files, and will not contaminate the
map file with unnecessary (and fatal) characters. If you like more muscle, <a href="http://www.idmcomp.com/index.html"><b>UltraEdit32</b></a>
is also a good choice. Do not use Windows' <i>Notepad.</i> It has the nasty
habit of inserting or deleting carriage returns. Besides, it has a limited
filesize buffer. Same for any high-end word processor. Unless you really
understand the different .txt formats, (there are 4) it's safer to use EditPad.&nbsp;</font></p>

<p align="left"><font face="Arial">3. If you're using a map editor that saves its maps in a
proprietary format, such as WorldCraft or QOOLE, you'll have to export the map
as a <i>.map</i> file. Once the changes have been made, you can then re-load the
repaired map and press on.</font></p>

<div align="center">
  <center>
  <table border="1" width="450">
    <tr>
      <td bgcolor="#FFFFFF">
        <p align="center"><font face="Arial">WARNING</font></p>
  </center>
        <p align="center"><font face="Arial">If your editor supports&nbsp; brush
        grouping or some other hierarchical tactic,
        you will lose this information in the export process. See the caveat and
        recommendations mentioned at the end of this tutorial.</font></td>

    </tr>
  </table>
</div>
<hr>
<h3><font face="Arial">The Basic Brush</font></h3>
<div align="center">
  <center>
  <table border="0" width="450" bgcolor="#FFFFFF">
    <tr>
      <td width="711">

        <p align="left"><font face="Arial" size="2">{<br>
        ( 128 0 -64 ) ( 8 0 -64 ) ( 8 -128 -64 ) e1u1/c_met11_2 0 0 0 1 1 0 0 0<br>
        ( 8 -128 0 ) ( 8 0 0 ) ( 128 0 0 ) e1u1/c_met11_2 0 0 0 1 1 0 0 0<br>
        ( 8 -64 8 ) ( 128 -64 8 ) ( 128 -64 0 ) e1u1/c_met11_2 0 0 0 1 1 0 0 0<br>
        ( 64 -128 8 ) ( 64 0 8 ) ( 64 0 0 ) e1u1/c_met11_2 0 0 0 1 1 0 0 0<br>
        ( 128 0 8 ) ( 8 0 8 ) ( 8 0 0 ) e1u1/c_met11_2 0 0 0 1 1 0 0 0<br>

        ( 0 0 8 ) ( 0 -128 8 ) ( 0 -128 0 ) e1u1/c_met11_2 0 0 0 1 1 0 0 0<br>
        }</font></td>
    </tr>
  </table>
  </center>
</div>

<p align="left"><font face="Arial">This is all the info describing a 64<sup>3</sup> brush with the <b>c_met11_2</b>

texture applied to it. If you care to check, one corner of this brush sits at
the center of the world (0 0 0). Imagine having to construct an entire map using
a text editor! Believe it or not, the first CAD programs were done exactly in
this manner. Lucky for the users, they only had to worry about drawing a 2-dimensional world.</font></p>

<p align="left"><font face="Arial">What we're really interested in are the numbers following the
texture name. You'll see there are eight. Taken from the example above, the
first line would be <span style="background-color: #FFFFFF">0 0 0 1 1 0 0 0</span>.
These are all of the texture values and spawnflags. The fact that there are
mostly zeros means the texture has no surface or content flags set for it; it's
just a plain old texture. The two 1's are the texture's dimensions, which mean
that it has been applied with it's default size.&nbsp;</font></p>

<p align="center"><font face="Arial"><img border="0" src="content/quake2/tutorials/text_editing/texf_01.gif"></font></p>

<p align="center"><b><font color="#800000" size="2" face="Arial">A visual reference for the
texture property flags</font></b></p>

<p align="left"><font size="3" face="Arial">Even though you may use a different
editor, the flags still mean the same thing.</font></p>
<hr>
<h3 align="left"><font face="Arial">Texture Properties</font></h3>

<p align="left"><font face="Arial">Now that you know what the 8 data bits reference, you now need
to know what possible values can be used. Let's take the light value, which is
used typically for sky textures and light-emitting textures. Therefore, a string
of <font color="#000000"><span style="background-color: #FFFFFF">0 0 0 1 1 0 0
100</span></font> means that you've get a light value of 100. However, since the
light flag is normally set for a situation like this, it would read <span style="background-color: #FFFFFF"><font color="#000000">0
0 0 1 1 0 1 100.</font></span> Reason being, is that 'light' is the first item
in the surface property list, and therefore has a spawnflag value of '1'.
'Slick' is '2', sky is '4' and so on, following the numerical convention used
for spawnflags. Here's a handy reference showing all of the spawnflags:</font></p>
<div align="center">
  <center>
  <table border="1" width="450" bgcolor="#FFFFFF">
    <tr>
      <td align="center" bgcolor="#808080" colspan="2"><b><font face="Arial">Surface Property
        Spawnflags</font></b></td>

      <td align="center" bgcolor="#808080" colspan="2"><b><font face="Arial">Content Property
        Spawnflags</font></b></td>
    </tr>
    <tr>
      <td valign="top">	<font face="Arial">	Light<br>
	Slick&nbsp;<br>
	Sky Flag<br>

        Warp<br>
	Trans33&nbsp;<br>
	Trans66&nbsp;<br>
	Flowing&nbsp;<br>
	NoDraw&nbsp;<br>
	Hint<br>

        Skip<br>
        </font>
      </td>
      <td valign="top"><font face="Arial">1<br>
        2<br>
        4<br>
        8<br>

        16<br>
        32<br>
        64<br>
        128<br>
        256<br>
        512</font></td>

      <td><font face="Arial">Solid<br>
	Window<br>
	Aux<br>
	Lava<br>
	Slime<br>
	Water<br>

	Mist<br>
	PlayerClip<br>
	MonsterClip<br>
	Current_0<br>
	Current_90<br>
	Current_180<br>

	Current_270<br>
	Current_up<br>
	Current_dn<br>
	Origin<br>
	Monster<br>
	Corpse<br>

	Detail<br>
	Translucent<br>
	Ladder</font></td>
      <td><font face="Arial">1<br>
        2<br>
        4<br>

        8<br>
        16<br>
        32<br>
        64<br>
        65536<br>
        131072<br>

        262144<br>
        524288<br>
        1048576<br>
        2097152<br>
        4194304<br>
        8388608<br>

        16777216<br>
        33554432<br>
        67108864<br>
        134217728<br>
        268435456<br>
        536870912</font></td>

    </tr>
  </table>
  </center>
</div>
<p><font face="Arial">With this information you can now fix certain things in the blink of an eye.
Some suggestions:</font></p>
<p><font face="Arial">In some map editors, applying the ladder flag can be a tedious process.
Suppose your ladder is using a texture named <b>eggwhite</b>. Open the map in
EditPad, highlight and copy the text, paste it into the <i>Text to find</i>
field, paste it again into the <i>Replace with:</i> field and replace the <u>third
zero from the end</u> with the ladder spawnflag number.</font></p>

<p align="center"><font face="Arial"><img border="0" src="content/quake2/tutorials/text_editing/texf_02.gif"></font></p>
<p align="center"><b><small><font color="#800000" face="Arial">EditPad's Find &amp; Replace
dialog</font></small></b></p>
<p><font face="Arial">Or suppose you had a level with a lot of sky brushes and it needed the light
value jacked up. A real pain to do so within the editor, but a piece of cake
with a text editor.&nbsp;</font></p>
<p align="center"><span style="background-color: #FFFFFF"><font face="Arial">e1u1/sky1 0 0 0 50 50 0 133
50</font></span></p>
<p align="left"><font face="Arial">&nbsp;The '50 50' tells you that I've applied a vertical and
horizontal stretch value of 50 to the sky texture. The '133' is a surface
property spawnflag total of light (1) + sky (4) + nodraw (128). The '50' at the
end is the light value I applied to the sky texture. Since 100 would give me
better results, changing this last number via EditPad on all sky brushes would
be a piece of cake.</font></p>
<p align="left"><font face="Arial">I had a large warehouse whose ceiling used a light-emitting
texture that covered a host of various-sized brushes. As in the case of the sky,
the same method was used to correct the light value, A real time saver.</font></p>
<hr>
<h3 align="left"><font face="Arial">A Note Concerning Non-Radiant Editors</font></h3>
<p align="left"><font face="Arial">Mad Dog had some input on this issue which is relevant to
Worldcraft, QOOLE, and QuArk users. If you're thinking of replacing textures
globally with new properties using a text editor, do not export not the entire
map as a .map.&nbsp; Instead, first determine which groups are affected, and
then export each group<br>

individually as a separate .map. Then, after changing things, copy the contents
of each of those new &quot;maplets&quot; into your primary map, make each a new
group, and replace each old group with the new ones. That way the grouping is
preserved.</font></p>
<hr>
<p align="left"><font face="Arial">Map making should be fun and not tedious. Hopefully, I've
enlightened you on how to be more productive in your endeavors and put the fun
back into creating those worlds.&nbsp;</font></p>
<hr>
<div align="center">
  <center>
  <table border="0">
    <tr>
      <td width="50%"><a href="http://ricebug.qeradiant.com/"><font face="Arial"></font></a></td>

      <td width="50%"><a href="http://ricebug.qeradiant.com/menu1.shtml"><font face="Arial"></font></a></td>
    </tr>
  </table>
  </center>
</div>
<p align="center"><b><font face="Arial"><small>Copyright 2001, by Terry DeLaney. Permission is granted to
distribute this file as long as the author receives credit.</small></font></b></p>
</ul><h1 id="21" name="21" class="book-h2">Entity Properties</h1><ul>Description of the Quake II entities</ul><h1 id="22" name="22" class="book-h3">Ammo</h1><ul><h3>Quake 2 Ammo Entities</h3><p>

	<ul>
	
	<!-- Start description -->
	<p><a name="#ammo_bullets"><b>ammo_bullets</b></a> - Ammo for the machine gun and chaingun.
	<p><a name="#ammo_cells"><b>ammo_cells</b></a> - Ammo for the hyperblaster and BFG.
	<p><a name="#ammo_grenades"><b>ammo_grenades</b></a> - Ammo for the grenade launcher and hand grenades
	<p><a name="#ammo_rockets"><b>ammo_rockets</b></a> - Ammo for the rocket launcher
	<p><a name="#ammo_shells"><b>ammo_shells</b></a> - Ammo for the single and double barrel shotguns
	<p><a name="#ammo_slugs"><b>ammo_slugs</b></a> - Ammo for the railgun

	
	<!-- End description -->

	</ul>

</ul><h1 id="24" name="24" class="book-h3">Func</h1><ul><h3>Quake 2 Func Entities</h3><p>


	

	<!-- Start description -->

<p><b>
<ul>
<li><a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/24#func_areaportal">func_areaportal</a></li>
<li><a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/24#func_button">func_button</a></li>
<li><a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/24#func_clock">func_clock</a></li>
<li><a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/24#func_conveyor">func_conveyor</a></li>
<li><a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/24#func_door">func_door</a></li>
<li><a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/24#func_door_rotating">func_door_rotating</a></li>
<li><a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/24#func_door_secret">func_door_secret</a></li>
<li><a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/24#func_explosive">func_explosive</a></li>
<li><a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/24#func_object">func_object</a></li>
<li><a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/24#func_group">func_group</a></li>
<li><a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/24#func_killbox">func_killbox</a></li>
<li><a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/24#func_plat">func_plat</a></li>
<li><a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/24#func_rotating">func_rotating</a></li>
<li><a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/24#func_timer">func_timer</a></li>
<li><a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/24#func_train">func_train</a></li>
<li><a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/24#func_wall">func_wall</a></li>
<li><a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/24#func_water">func_water</a></li><br></ul></b>
</p>

	<p><b><a href="/content/quake2/entity/samples/func_areaportal.zip">Download Sample Map</a></b><br><br>
	
	<a name="func_areaportal"><h3>func_areaportal</h3></a>

<hr color=black noshade width=75%>	

	<p>A <b>func_areaportal</b> is a strange entity but does some bad ass things. If you have done any extensive quake editing then you know that the quake engine can see right through a door and draws all the polys beyond that door. This causes the framerate to increase and cause map makers much havoc. Well in quake2, John Carmack has given us a solution to this problem and it's the func_areaportal entity. What it actually does is when used it will make it so the engine cannot see through the door and keeps the framerate low. I could go into a bunch of tech talk explaining exactly what it does but you don't want to hear all of that and I really don't want to type it all so I will simply tell you how to use it.<br><br>
	
	<b>How it works</b><br>A <b>func_areaportal</b> will only work when it <b>is enclosed within a portal such as a door</b>. It is actually very simple to use. First you make the doors of course. Then you create a brush that is enclosed within the door and completely covers the area of the door so engine can't see through it at any areas. What I usually do is make it just a bit taller and wider then the door just to make sure. Next thing you need to do is turn this brush into a <b>func_areaportal</b>.<br><br>
	
	<b>Next you need to link the func_areaportal and the door so that when the door is opened the func_areaportal will disappear and when it is closes it will reappear</b>. This is done by giving the func_areaportal a targetname and then targeting the func_areaportal with the door. For example, if the func_areaportal has a targetname of ap1, <b>targetname ap1</b>, then the func_door would have a target of ap1. <b>target ap1</b>. If you don't target the func_areaportal then you will get this weird hall of mirrors effect when the door is opened.<br><br>
	
	Here are 2 example shot of that i took to show you the effect of using the func_areaportal does. The shots are from the doors tutorial example map with and without using area_portals. I simply turned on r_speeds right when the player enters the level and is standing in front of a hallway with 4 doors in it. <br><br>
	
	<center><img src="/content/quake2/entity/images/func_areaportal1.jpg"><br>
	
	with an areaportal<br><br>
	
	<img src="/content/quake2/entity/images/func_areaportal2.jpg">
	
	<br>without</center><br><br>
	
	<p><hr color=black noshade width=75%>
	
	<p>As you can see there is a huge difference with that first number which is the number of polys in the current view. This is from a small simple level. Just think of the improvements that could be made on a huge level.<br><br>

	<p><b><a href="/content/quake2/entity/samples/func_button.zip">Download Sample Map</a></b><br><br>
	
	<a name="func_button"></a><h3>func_button</h3><p><hr color=black noshade width=75%><p>The <b>func_button</b> entity is a very simple entity that is used for for triggering other entities such as doors to open, platforms to rise, etc, etc. In many ways it acts like a regular trigger_ entity but there are a few more options and differences that you may notice.<br><br>
	
	<b>Creating the func_button</b><br>First thing you need to do is create the brush/brushes that will be the func_button and then turn it into a func_button. Pretty straight forward and simple.<p><hr color=black noshade width=75%><p><br><br>
	
	<b>Key Value Pairs</b><br>
	
	<b>Angle</b> - Angle determines the direction that the button will move when it is pressed. In most cases you will set the angle towards the wall that the func_button is up against to give the impression that it is being pressed into the wall. There are also cases in which you would have the angle set differently then towards the wall that it is up against. For example: You could have a button on the floor that the player would step on to trigger. Another advanced use of the angle key is for creating a lever. This would just be made by creating a thin lever shaped brush that has the angle set parallel to the wall.<br><br>
	
	<b>Target</b> - It should be set to the corresponding targetname that the func_button will trigger. A func_button MUST have a target or it would be useless.<br><br>
	
	<b>Targetname</b> - A targetname on a func_button is very strange, but it still works fine and can be useful. When a func_button has a targetname and is triggered the button will be set off just like it was pushed by the player, setting off it's own targets in the process.<br><br>
	
	<b>Speed</b> - Speed is pretty self explanatory. It determines the speed in which the button moves when it is pushed.<br><br>
	
	<b>Wait</b> - Wait is the amount of time that the button will pause before becoming active again. If you don't want the button to return then set the wait to -1.<br><br>
	
	<b>Lip</b> - Lip is the length of the button that is offset after being activated. So if you have a large lip value then more of the button will stick out after being pressed in.<br><br>
	
	<b>Health</b> - A value for health can be set if you want the button to be activated when shot. The button MUST be killed to be activated. Pushing it won't do anything after a value for health is set. The higher the value for health the more damage is needed to trigger it.<br><br>
	
	<b>Sounds</b> - The key value pair sounds works the same way for the func_button entity as it does for func_door and func_door_rotating:<br><br>
	
	1. There are no choices for different sounds, only one sound is available.<br><br>
	
	2. If you set this key to anything else than 1, you will always get the same standard button sound. If you set it to 1, you will have no sound.<br><br>So the "sound choices" list in the source code comments are outdated and probably just left over from Quake1. You do NOT have to use this key value pair unless you want your button to be silent.
	
	<p><hr color=black noshade width=75%><p><br><br>
	
	<b>Spawnflags</b><br>There are no spawnflags that are required or used for the func_button
	
	<p><hr color=black noshade width=75%><p><br><br>
	
	<b>Animated Textures</b><br>There are lots of animated textures that can be used for buttons. Animated textures are not something new but in Quake2, they behave a bit differently and this is one of it's coolest features. The best choice for these are 4 frame texture sets: To make a long story short, the button's face will toggle between the first 2 when idle and between the last 2 when pressed. Here's an example:<br><br>
	
	Suppose you make a button and apply the <b>e1u1/arrow0</b> texture, when the button is idle, the button face will cycle between the arrow0 and <b>arrow1</b> textures. While the button is pressed, the button face will cycle between the <b>arrow2</b> and <b>arrow3</b> textures.<br><br>
	
	This will work with all textures that follow one another in alphanumeric order and which end with the numbers <b>0 to 3</b>. If you use a set which has only 2 textures in a row in the list, the button face will cycle between these 2 textures <b>both</b> in the idle and pressed states. Note that if there are more that 4 textures in the set, the ones after 3 will simply <b>not</b> be used. For instance, there is a <b>e1u1/arrow4</b> in the last example: well, it is not used in the animation sequence. If you apply it to the button face, the texture will <b>not</b> be animated.<br><br>
	
	Also note that whether you apply the first, last or any other texture in the set makes no difference, the button face's texture will still be animated. If you use a 4 texture set, changing which one of the 4 you apply to the button face will change the sequence of which pair is displayed in the idle and pressed state. Let's pick up the previous example with a slight modification:<br><br>
	
	Also note that whether you apply the first, last or any other texture in the set makes no difference, the button face's texture will still be animated. If you use a 4 texture set, changing which one of the 4 you apply to the button face will change the sequence of which pair is displayed in the idle and pressed state. Let's pick up the previous example with a slight modification:<br><br>
	
	Make a button and apply the <b>e1u1/arrow1</b> texture, when the button is idle, the button face will cycle between the <b>arrow1</b> and <b>arrow2</b> textures. While the button is pressed, the button face will cycle between the <b>arrow3</b> and <b>arrow0</b> textures.<br><br>
	
	Most animated "4 frame sequence" textures usually look and operate better when you apply the <b>first</b> texture (no. 0) in the set to the button face but that's not a fixed rule. Experiment and see what works best for you.<p><hr color=black noshade width=75%><p><br><br>
	
	<b>Uses of the func_button</b><br>In most cases you are going to use the func_button for easy tasks such as opening a door or triggering a lift of some sort. Which is very simple. Just make the func_door or platform give it a targetname, then target it with the func_button.<br><br>
	
	There are also some more advanced uses of a func_button such as a platform or a lever. Remember that although it is called a func_button you can use it for anything that you want to use it for.<br><br>

	<p></a><b><a href="/content/quake2/entity/samples/func_clock.zip">Download Sample Map</a></b><br><br>
	
	<a name="func_clock"><h3>func_clock</h3></a>

<p><hr color=black noshade width=75%>

<p>These entitys are probably the one that gave me the most trouble out of any of them. They are not easy to use(except for the target_explosion). The <b>func_clock</b> acts like a time of day clock and in most instances it will be used with a <b>target_character</b> and <b>target_string</b>. It was used in the biggun level and the last level where you have to escape before in a certain amount of time.<br><br>
	
	In this example we will make a button that you press and it will make a counter appear on the wall that will count down from 10 and when it gets to 0 then the room will explode killing you and everything else..<br><br>
	
	The <b>first</b> thing you need to do is make a somewhat small room and put a player_start and a light in it.<br><br>
	
	Next you need to create a <b>func_clock</b> entity. You can put this entity anywhere you want. It will not show up in the level. This will control the clock. The key value pairs that you can set are <b>count</b>, <b>pathtarget</b>, and <b>style</b>. count determines the amount of time that the func_clock will count. Pathtarget is the target that will be triggered once count runs out. Style is for the actual visual clock that we will explain later. There are 3 styles. 0(xx), 1(xx:xx), and 2(xx:xx:xx). In this example we are going to set <b>count</b> to 10 and we are going to use style 2. We also need to specify the <b>pathtarget which we will set to bang</b>. Pathtarget bang. This will be the targetname of the <b>target_explosion</b> that we will make later that will kill everything. Now set the target to string which will be the <b>target_string</b> that we will make next. Also give the func_clock a <b>targetname of clock</b> so we can use a button that we will make later to trigger it into action.<br><br>
	
	There is also a variety of spawnflags for the func_clock. They are <b>timer_up</b>, <b>timer_down</b>, <b>start_off</b>, and <b>multiuse</b>. <b>Timer_up</b> makes it so the counter will count up and <b>timer_down</b> makes it so the counter will count down. This is basically just for looks. It does'nt effect the outcome. <b>Start_off</b> should be set if the clock will be triggered into starting. If this is off then the func_clock will start when the level starts. <b>Multiuse</b> should always be on. I'm not sure what it does but I do know that I have never ran into any problems when I keep it on. For this example we will set the timer_down, start_off, and multiuse spawnflags.<br><br>
	
	The next thing we will do is make a <b>target_string</b> entity. It doesn't matter where this entity is placed either. It will not be shown. Give it a <b>targetname of string</b> so that the func_clock will be targeted to it. Also give it a <b>team key value pair of countdown</b>. team countdown. This is all you have to do for the target_string.<br><br>
	
	Now we need to make 8 small brushes 8x16 right next to each other. These will represent the 8 characters that will be used from the <b>style</b> key value pair that we set on the func_clock. xx:xx:xx<br><br>You then need to turn all of these 8 brushes into <b>target_strings</b>. There are 2 key value pairs that you can set. They are <b>count</b> and <b>team</b>. The count is the position of the string that this the brush is and the team is the team that the entity is on. So on all 8 of these target_strings the team needs to be countdown. The count must be different for each of the 8. The one on the far left needs to start with 1. count 1. and the one on the far right needs to be set to 8.<br><br>
	
	Now the tricky part that I could'nt figure out till EutecTic told me. Y<b>ou must have the texture of all these target_strings set to num_0 that is in the test.wal file</b>. If you don't have this texture set then the countdown will not be printed.<br><br>
	
	Now we have to make the func_button that will trigger the func_clock into action. Make a button on the wall and set the target of it to clock and the wait to -1 so you will not be able to press the button again.<br><br>
	
	Now we have to make the <b>func_button</b> that will trigger the func_clock into action. Make a button on the wall and set the target of it to clock and the <b>wait to -1</b> so you will not be able to press the button again.<br><br>
	
	The final thing we need to do is to make the explosion that will kill everything. For this we will use a <b>target_explosion</b>. What a target_explosion does is when triggered creates a visual explosion that can be set to do any amount of damage. There are 2 key value pairs that you can set. <b>Dmg</b> and <b>delay</b>. Dmg is the amount of damage the explosion will cause and delay is the amount of time after triggered that the explosion will take place. For this example we will put the target_explosion in the middle of the room and give it a targetname of bang and a damage of 10000. This extreme high value will make sure everything is dies when it is triggered. If you have a larger room or a huge level then you will need to use multiple target_explosions all with the same targetname. and we are done. Be sure to check out the example map.<br><br>
	
	You can also use a func_clock without the visual countdown, just don't create any target_strings. You still must have a target_character though. As you can see this is a somewhat difficult entity to master but can come in handy for quite a few things<br><br>

	<p><a name="func_conveyor"></a><h3>func_conveyor</h3><p><hr color=black noshade width=75%><p>Useless, If you want a conveyor use a func_train. This entity is NEVER used in quake2<br><br>

	<p></a><b><a href="/content/quake2/entity/samples/func_door.zip">Download Sample Map</a></b><br><br>
	
	<a name="func_door"><h3>func_door</h3></a>

<p><hr color=black noshade width=75%>

<p>To me I think that doors are one of the hardest entities to master. There are just so many different options and uses for a door. Now doors have even more options since there are rotating doors in Quake2.<br><br>
	
	The First thing you need to do is make brushes that are going to make up the door and turn it into a func_door. Then you need to decide which way the door is going to open and <b>set the angle</b>. After you have done this your door will be in working order. As of now the door will open when you touch it. If you want to set it so that you have to set off a trigger to open it then just give your <b>func_door a targetname and target it with a trigger</b>.<br><br>
	
	There are a ton of key value pairs and spawnflags for func_doors that do a variety of cool things. We will go over all the spawnflags first. They are: <b>message</b>, <b>angle</b>, <b>health</b>, <b>speed</b>, <b>wait</b>, <b>lip</b>, <b>dmg</b>, and <b>sounds</b>. <b>Message</b> will print a message when the door is touched <b>ONLY</b> when it is triggered open. Message won't do anything if your func_door does'nt have a targetname. <b>Angle</b> is of course the opening direction. If <b>health</b> is set then the door must be shot to open. <b>Speed</b> determines how fast the door moves. <b>Wait</b> is the length of time between opening the door and when the door closes. If you never want the door to close then set wait=-1. <b>Lip</b> is the length remaining after the door opens. I get a lot of question asking for this. <b>dmg</b> is of course the amount of damage the door will give off when blocked by an entity like the player. Damn! I sure made that sound difficult. hehe. Sounds determines the sound the door with put out when opened. Choices are 1)<b>silent</b>, 2)<b>light</b>, 3)<b>medium</b>, 4)<b>heavy</b>.<br><br>
	
	The <b>spawnflags</b> that you can set for a func_door are: <b>start_on</b>, <b>crusher</b>, <b>nomonster</b>, and <b>toggle</b>. <b>Start_on</b> will make the door operate in reverse. So the door will be open and then close. By default when a door crushes you again a wall it will take off damage and then go back a bit and then take off damage again. If <b>crusher</b> is on then there won't be that little pause between trying to close again. It will just keep trying to close and crush you. No matter what, if crush is turned on or turned off a door will take off damage and eventually kill you. Crusher will just do it quicker. <b>nomonster</b> makes it so a creature can not open the door. By default a monster can open a door. <b>Toggle</b> will only make a difference when a door has a opened by a trigger. It makes it so it wait until triggered in both the opening position and the closing position.<br><br>
	
	<center><img src="/content/quake2/entity/images/func_door.jpg"><br>amount of lip</center><br><br>
	
	<p><hr color=black noshade width=75%>
	
	<p>Those are all the different spawnflags and key value pairs that are available for a regular func_door.<br><br>

	<p><a name="func_door_rotating"></a><h3>func_door_rotating</h3>
	
	<p><hr color=black noshade width=75%>
	
	<p>Now to the amazing <b>func_door_rotating</b>. A func_door_rotating basically works the exact same way a normal door does except for a few minor things. A func_door_rotating <b>must</b> have an <b>origin brush</b> as part of the brush. This is the actual part that the door rotates around. So the first thing you have to do is make the brushes that will make up the func_door_rotating and the brush you want as the origin brush. Then select the brushes for the actual door and the origin brush and make them into func_door_rotating.<br><br>
	
	Next thing you have to do is <b>select the brush that is going to be the origin brush and change the surface property of this brush to an origin brush</b>. All the editors have different ways of setting the surface properties. Hit the 'S' key in BSP and Qed4. Alt T will do it for QOOLE. Check your editor documentation if you don't know.<br><br>
	
	There are also a few additional key value pairs and spawnflags for a rotating door that I will of course tell you about.<br><br>
	
	There is only 1 new key value pair called <b>distance</b>. Distance determines the degrees the rotating door will travel. So a distance of 90 will make the door rotate 90 degrees. There are also 3 new spawnflags. <b>reverse</b>, <b>x-axis</b>, and <b>y-axis</b>. <b>Reverse</b> will make the door rotate in the opposite direction. <b>X-axis</b> will make the door rotate along the x-axis and <b>y-axis</b> will make the door rotate along the y-axis. By default the door will rotate along the <b>z-axis</b> so there isn't a spawnflag for that. Everything else about a func_door_rotating is exactly like a regular door so to save me from typing all that over again like....just go up and read it there. =)<br><br>
	
	Now I am going to try to explain how to make a door that must have a key to be opened. This is kind of nasty.<br><br>
	
	First you need to make the door. I already explained all that. Next you need to give the door a <b>targetname and a message</b>. The message should be a message that tells what item the player needs to open the door. Now you must place a <b>trigger_key</b> somewhere. It really doesn't matter where. The <b>trigger_key</b> entity only has one key value pair...<b>item</b>. Set this to the name of the entity that is required to open the door. Now you must target the door with the <b>trigger_key</b>. Now here is the trick. The trigger_key entity must be triggered by another trigger to work. So you must make another trigger that will be targeted to the trigger_key. Kind of nasty huh? If you want the door to open only once and stay open then you should use a <b>trigger_once</b> entity and target the <b>trigger_key</b>. So therefore the trigger_key must also have a targetname.<br><br>
	
	<p><a name="func_door_secret"></a><h3>func_door_secret</h3>
	
	<p><hr color=black noshade width=75%>
	
	<p>The final type of door is a <b>func_door_secret</b>. These of course are the doors that usually look like walls and when you shoot them they slide forward or back and then to the side. I'm sure you've seen them before. They are actually pretty simple to use. First you need to make the door of course then make it into a func_door_secret entity. There are 3 key value pairs. <b>angle</b>, <b>dmg</b>, <b>wait</b>. <b>Angle</b> is the direction the door will slide open. <b>dmg</b> is the amount of damage the door will give off when the player blocks the progress of the door. <b>wait</b> is the duration of time that the door stays open before closing. There is also 4 spawnflags. <b>once_open</b>, <b>1st_left</b>, <b>1st_down</b>, and <b>always_shoot</b>. <b>open_once</b> makes the door open once...duh. <b>1st_left</b> makes the door move a small amount to the left and then go the angle of the door. <b>1st_down</b> does the same thing but it goes down instead of left. <b>Always_shoot</b> makes the door always open when shot even where the door is targeted to open my another trigger.<br><br>
	
	<p></a><b><a href="/content/quake2/entity/samples/func_explosive.zip">Download Sample Map</a></b><br><br>
	
	<a name="func_explosive"><h3>func_explosive</h3></a>
	
	<p><hr color=black noshade width=75%>
	
	<p>This is a pretty easy entity to use. func_explosive is an object that when triggered explodes.<br><br>
	
	Just make the brush you wish to explode and make it into a func_explosive. Yep, thats it. If you want a visual explosion then you will have to set the <b>dmg=value</b>, value being the amount of radius damage. There are also <b>health</b> and <b>mass</b> key value pairs. Health determines the amount of damage the brush can take before exploding and mass determines the amount of rubble that is produced when the brush explodes. That's all there is to a func_explosive.<br><br>
	
	<center><img src="/content/quake2/entity/images/func_explosive.jpg"><br>settings example</center><br><br>

<p><b><a href="/content/quake2/entity/samples/func_object.zip">Download Sample Map</a></b><br><br>
	
	<a name="func_object"><h3>func_object</h3><p><hr color=black noshade width=75%></a>
	
	<p>A <b>func_object</b> is a pretty cool entity plus its easy to use. Its a object that when triggered falls down. There are no key value pairs that need to be set for the func_object except for the targetname. Just create the brush you want to fall, give it a targetname, and set the trigger_spawn spawnflag. To make it easier to understand for you beginners here is a pic of the func_object entity dialog box from BSP.<br><br>
	
	<center><img src="/content/quake2/entity/images/func_object.jpg"><br>sample settings</center><br><br>
	
	<p><hr color=black noshade width=75%>
	
	<p>A good way to use a func_object is to team it with a func_explosive. In the example map I made I created a column that when shot the base of it explodes and the top part falls to the ground. So the exploding part of the column would be the func_explosive and the top part that falls to the ground is the func_object. To get this to work all you have to do is give the func_object a target_name and set the target of the func_explosive to the func_object. Be sure to set the trigger_spawn spawnflag of the func_object though.<br><br>
	
	Another good example of a func_object and func_explosive is on the level biggun. After you kill the boss and stop the computer or whatever and your trying to escape the ceiling is falling down and explosions are going off, etc. Hope all this helps.<br><br>

	<p><a name="func_group"></a><h3>func_group</h3><p>

<hr color=black noshade width=75%>

<p>Not used in the game. Only used in qed4 for grouping brushes.<br><br>
	
	<p><b><a href="/content/quake2/entity/samples/func_killbox.zip">Download Sample Map</a></b><br><br>
	
	<a name="func_killbox"><h3>func_killbox</h3></a>
	
	<p><hr color=black noshade width=75%>
	
	<p>When I first tried to get <b>func_killbox</b> to work I had no success and I got really frustrated but then my friend EutecTic emailed me and told me what I was doing wrong. I had already put on the tutorials page that the func_killbox did nothing, so this tutorial is here all because of him. <b>Thanks EutecTic</b>. This guy is good!<br><br>
	
	What the func_killbox does is kill everything inside of it. It is actually a pretty simple entity to use, but there is a trick to it that gave me all my problems.<br><br>
	
	The <b>first</b> thing you need to do is decide where you want the func_kill box and create the brush. If you want it to kill everyone in a room then you need to make sure that the box is covering that whole room or it will be at least hitting every entity. Once you get the brush the size you want it then make it into the func_killbox.<br><br>
	
	The <b>next</b> thing you need to do is give the <b>func_killbox a targetname</b>. This is the only key value pair that you will need. For this example lets just give it a targetname of die.<br><br>
	
	Now you must make the trigger that is going to set off the func_killbox. In this example lets make it a button on the wall. So create the button and make it into a func_button. G<b>ive the func_button a target of the func_killbox. target=die</b>. Now here is the trick that I was I couldn't figure out. <b>You must also give the trigger that will set off the func_kill box a pathtarget of the func_killbox</b>. So in this example we would give the func_button a key value pair pathtarget and set it to die. pathtarget=die.<br><br>
	
	Thats it for a func_killbox. Your probably laughing at me right now cause this one was so easy. =) I wouldn't have such a problem if there were more comments in the code.<br><br>
	
	<p></a><b><a href="/content/quake2/entity/samples/func_plat.zip">Download Sample Map</a></b><br><br>
	
	<a name="func_plat"><h3>func_plat</h3></a>
	
	<p><hr color=black noshade width=75%>
	
	<p><b>Introduction to Quake 2 platforms</b><br>
	
	Platforms in Quake 2 work pretty much the same as in Quake 1 with a few minor distinctions. Let's first take a look at what is unchanged and clarify a few things at the same time:<ul><li>Platforms can only be made to go up. IOW, their normal idle position is the lowered position unless they are targeted (more on this later).<li>Plats must be drawn in the raised position in the map editor so the lighting can be calculated properly by the compiling utility (Qrad3).<li>BUT, a platform will initially be drawn in the lowered position in the game unless it is targeted.</ul><br><br>
	
	Now, let's take a look at what has changed from Quake 1 to Quake 2 about platforms. Unfortunately, these differences are not really an improvement. IMO, it's quite the opposite, here's why:<br>
	
	<ul><li>In Quake 1, when you wanted a plat to start in the raised position, you simply set the "Plat Low Trigger" spawnflag (who knows why they called it that?). Once the plat was touched or triggered and brought down the first time, it would thereafter function like a normal platform.<li>In Quake 2, if you want the platform to start in the raised position, you have to target it with a trigger, independently of the state of the "Plat Low Trigger" spawnflag. If you set the spawnflag without targeting the plat, nothing will happen and it will just behave as a normal plat. IOW, the spawnflag is useless by itself. This is the first setback compared to Quake 1.<li>For platforms in Quake 1, you had 2 choices of sounds or no sound at all if you wanted them to be silent.<li>In Quake 2, platforms not only don't have any choice of sounds, but you can't even make them silent either. This is what I call "major setback No. 2" in platforms. Funny, I somehow expected more from Quake 2 plats than Quake 1 plats, not less!... Oh well...</ul><br><br>
	
	<p><hr color=black noshade width=75%>
	
	<p><b>Ok, how do I make these work? Do I use height and lip?</b><br>
	
	There are 2 basic ways to make and set platforms to operate exactly the way you want (that is within their basic limitations):<br><br>The first and most common way is to use the physical dimension of the brushes that are part of the platform to set it's up-down travel distance. In this particular case, the <b>height</b> key pair is not used but the <b>lip</b> key pair is and can be extremely useful. The basic setup formula in this case is as follows:<br><br>
	
	(Total platform height - <b>lip</b> value) = platform travel distance<br><br>
	
	<b>Total platform height:</b><br>
	
	This is the overall height of all the brushes that are part of the <b>func_plat</b> entity when measured from the <b>lowest</b> point to the <b>highest</b> point. You're probably thinking: hey! This definition is overkill. I could have figured that out for myself long ago! All I have to do is add up all the individual heights of all the brushes that are part of my plat and I'm in business right?... Well, as long as <b>none</b> of your brushes <b>overlap</b> heightwise. Otherwise, you'll have to <b>measure</b> the distance from the highest to the lowest point.<br><br>
	
	<b>Lip value:</b><br>
	
	The height or amount by which your platform will be raised from the floor when it's in the lowered position.<br><br>
	
	<center><img src="/content/quake2/entity/images/func_plat1.gif"><br>
	
	First method of evaluating platform travel</center><br><br>

<p><hr color=black noshade width=75%>

<p>The second and easiest, most predictable way to set your platforms is to use the <b>height</b> key pair. In this case, the <b>physical dimensions</b> of the brushes that are part of the platform have no importance and the <b>lip</b> key pair has no effect and needs not be used. The basic setup formula is as simple as it gets:<br><br>
	
	<b>height</b> value = platform travel distance<br><br>
	
	I bet you're saying: what?... that's it?... Yep! That's it! That's all there is to it. Just make the platform and turn it into a <b>func_plat</b>. Measure the <b>distance</b> between the <b>start</b> and <b>end</b> position of the <b>top</b> of your platform and transfer that value straight to the <b>height</b> key pair and you're all set. It makes no difference what size or shape the brushes of your platform are or whether they overlap or not when using this method. The only restriction is that the plat has to be drawn in the raised position as always.<br><br>
	
	<center><img src="/content/quake2/entity/images/func_plat2.gif"><br>
	
	Second method of evaluating platform travel</center><br><br><p><hr color=black noshade width=75%><p>So in conclusion, both methods work fine. Choosing which one to use at this point depends mainly on design particulars and personal taste.<br><br>
	
	You can also specify the speed, acceleration and deceleration of the platform. <b>Speed</b>, <b>acceleration</b> and <b>decelaration</b> are self explanatory.  If you want to have the platform triggered then just give it a targetname and target it with a trigger.<br><br>

	<p></a><b><a href="/content/quake2/entity/samples/func_rotating.zip">Download Sample Map</a></b><br><br>
	
	<a name="func_rotating"><h3>func_rotating</h3></a>
	
	<p><hr color=black noshade width=75%>
	
	<p>Rotating brushes were first showcased in hipnotic's quake mission pack and they were <b>extremely</b> difficult to get to work. They required a ton of work to get them to turn out right. Well quake2 fixed all this. Rotating brushes are very easy to use now.<br><br>
	
	The first step in making your rotating brush is to make the actually brushes that will be rotating. There are basically 2 parts to a rotating brush. First part is the object that will <b>rotate</b> and the second is the object that part 1 will <b>rotate</b> around. We are going to call this the <b>origin brush</b>. Think of it as the part that won't be moving. For example...picture a fan with 2 blades that are spinning around. The middle part that the blades are connected to would be the origin brush.<br><br><center><img src="/content/quake2/entity/images/func_rotating.jpg"><br>rotation explanation</center><br><br>
	
	<p><hr color=black noshade width=75%><p>After creating the brushes that will make up your <b>func_rotating</b> then select all the parts of the object and turn it into a <b>func_rotating</b>. Now <b>select</b> the part of the object that will be the non moving center(<b>origin</b>) of the object and change the surface property of it to an origin brush.<br><br>
	
	By default the object will rotate on the z axis. To change this just set the spawnflag to either <b>x_axis</b> or <b>y_axis</b>. <b>Z axis</b> rotation is parallel to the floor. <b>X axis</b> rotation will be parallel to the wall at 90 or 273 degrees. <b>Y axis</b> rotation is parallel to the wall at 0 and 180 degrees.<br><br>
	
	There are a few more spawnflags that you can set for a <b>func_rotating</b>. They are <b>start_on</b>, <b>reverse</b>, <b>touch_pain</b>, and <b>stop</b>. <b>Start_on</b> will make the rotating object start rotating when the game begins. Reverse makes the brush rotate in the opposite direction. By default the rotating object will only cause you pain if you are stuck between the object and a wall or something. If <b>touch_pain</b> is turned on then it will cause damage to any entity it touches. <b>Stop</b> makes the rotating object stop completely when the an entity such as the player blocks its way. It will still take your health away though. By default a func_rotating will push you around with it. With stop set it will not push you just give damage.<br><br>
	
	You can also specify the <b>speed</b> of the object and <b>damage</b> it will give out. Just set the key value pairs speed and dmg to change these. So if you made a fan and you wanted it to kill the player very quickly when touched then you would set dmg to something like 200. dmg=100. Likewise with speed.<br><br>

	<p><a name="func_timer"></a><h3>func_timer</h3>

<p><hr color=black noshade width=75%>

<p>Information will be added later<br><br>

	<p></a><b><a href="/content/quake2/entity/samples/func_train.zip">Download Sample Map</a></b><br><br>
	
	<a name="func_train"><h3>func_train</h3></a>

<p><hr color=black noshade width=75%><p>A func_train is moving object that travels along a specified path. For those of you familiar with quake1 editing then your probably familiar with func_trains. They are not the easiest entity to use but they are not extremely difficult.<br><br>
	
	<p><hr color=black noshade width=75%>
	
	<p><b>How do I get the dang thing to work?!</b><br>
	
	It takes at least 2 entities to get a func_train in working order. The actual func_train and more then 1 path_corner. The <b>path_corners</b> specify the actual path that the func_train will follow. We will get to that in a little later though.<br><br>
	
	<b>First</b> thing you need to do is to build the actual object that will be the func_train. This can be one single brush or multiple brushes, it all depends on what you want the train to be. After you have build the object then you will need to turn the object into a func_train entity. It does not matter where you place the func_train because it will automatically spawn at the first path_corner.<br><br>
	
	The <b>second</b> thing that you need to do is to make all your <b>path_corners</b>. These will be the actual path that the func_train will follow as mentioned above. Each path_corner will link to the next. So if I made a lift that would travel around the corners of a square room then I would have 4 path_corners. The first one would have a <b>targetname p1</b>, and a <b>target p2</b>. The second one would have a <b>targetname p2</b> and a <b>target p3</b>. Third one would have a targetname p3 and a target p4. The fourth one would have a targetname p4 and if you wanted the lift to continuously travel around the room then you would give it a <b>target p1</b>, which is the targetname of the first <b>path_corner</b>. Now I am going to go into more detail on all the different key value pairs and spawnflags.<br><br>
	
	<p><hr color=black noshade width=75%><p><b>Key Value Pairs of the func_train</b><br><b>speed</b> - speed is simply the speed that the func_train will travel from path_corner to path_corner.<br><br>
	
	<b>dmg</b> - dmg is the amount of damage the train will inflict when it crushes you up agaist a object. What I mean is it won't take off damage by just touching you...only when you are like...trapped up against a wall and the func_train.<br><br><b>noise</b> - noise is the sound that will be played when the func_train is moving. Here is a list(<b>please link to list</b>) of sounds that you can use. Don't forget to include the directory along with the sound name. Example: <b>noise</b> world/pump1.wav.<br><br>
	
	<b>target</b> - target will be set to the first path_corner. A func_train MUST have a target key and it MUST be a path_corner.<br><br>
	
	<b>targetname</b> - If a func_train has a targetname then it will have to be triggered before it will be become active.<br><br>
	
	<p><hr color=black noshade width=75%><p><b>spawnflags</b><br>
	
	<b>start_on</b> - By default a train will only start moving when triggered by another entity. If you set the start_on spawnflag then the func_train will start moving when the level starts.<br><br>
	
	<b>toggle</b> - toggle will allow the func_train to be toggled on and off numerous times. It will only work when a func_train is triggered into action multiple times by another entity such as a func_button. This is useful in making moving elevator type platforms.<br><br>
	
	<b>block_stops</b> - When the spawnflag block_stops is set the func_train will stop completely when an entity like the player is blocking its way and it won't take any damage off. EVEN if the dmg key is set.<br><br>
	
	<b>Other misc. things you might like to know about the func_train and path_corners</b><br>
	
	func_trains are very useful entities and can be used for a variety of cool effects. To get some of these cool effects you need to be familiar with some of the spawnflags of a path_corner like, <b>teleport</b>, <b>pathtarget</b>, and <b>wait</b>.<br><br>
	
	<b>teleport</b> will actually teleport the func_train to the next path_corner that is targeted. This was used in the id levels to create the cool conveyor belts in some of the levels. It can also create the effect of moving crates. Just use one func_train that looks like a crate, target it to 2 path_corners, have teleport on for the second one.<br><br>
	
	<b>pathtarget</b> corresponds to a targetname of an entity that will be triggered when the func_train arrives at that path_corner. This can be used for a variety of cool effects. I remember seeing this in the id level where a machine is carrying a barrel from the ceiling and it smashing into the wall and blows a hole in it. This effect was created by placing a path_corner very close to a wall that is actually a func_explosive. Then the pathtarget of that path_corner is set to the targetname of the func_explosive. Pretty cool.<br><br>
	
	<b>wait</b> will make the func_train wait at that path_corner for the specified amount of time before preceding to the next path_corner.<br><br>

	<p></a><b><a href="/content/quake2/entity/samples/func_wall.zip">Download Sample Map</a></b><br><br>
	
	<a name="func_wall"><h3>func_wall</h3></a>

<p><hr color=black noshade width=75%>
	
	<p>A <b>func_wall</b> is a very strange entity. It's basically a wall that can be triggered into or out of existance. id used func_walls on a number of levels to make a wall <b>disappear</b> and let creatures out to surprise you. If you have played single player quake any then you know what I'm talking about. Well they are real easy to use. Func_walls that is.<br><br>
	
	First thing you do is make the wall. Then you turn it into a func_wall. Currently this wall will not show up in your level. It must be triggered to work. So give the func_wall a targetname and create some sort of trigger like a func_botton or whatever and set the target of the trigger to the func_wall. So lets say you give your func_wall a targetname of wall1. Then you make a trigger_once to trigger it open. You would give the trigger_one a target of wall1. Now whenever the player comes in contact with this trigger_once then the wall will suddenly blink into existance killing anything blocking it. Cool huh?<br><br>
	
	There are a few spawnflags that you can set that will change the actions of the wall. They are <b>trigger_spawn</b>, <b>toggle</b>, and <b>start_on</b>. <b>Trigger_spawn</b> must be set if you have triggered the func_wall. In all the possible uses that I can think of for the wall I can't think of one in which you wouldn't have trigger_spawn set. s<b>tart_on</b> makes the wall work in reverse. Instead of the wall blinking into existance it will blink out of existance. This is how id uses func_wall in a lot of their levels to let monsters out of a secret room to surprise the player. If <b>start_on</b> is set then toggle must be set also. I actually don't think it has to be set but if you don't set it then you will get a error message when entering your level. Probably a bug in the code but it doesn't hurt anything.<br><br>

	<p></a><b><a href="/content/quake2/entity/samples/func_water.zip">Download Sample Map</a></b><br><br>
	
	<a name="func_water"><h3>func_water</h3></a>

<p><hr color=black noshade width=75%>

        <p><b>Func_water</b> is kinda an easy entity to use and its pretty damn cool. What it does is creates a water brush(lava, slime, etc) that can move. Like a pool of water slowly bobbing up and down. You can also use it to make some other cool effects like a trap that when triggered an area fills up with lava. IF you really want to get fancy you can make a func_water brush without a solid non-water brush to make some kick ass effects that i have included in the examples zip file at the bottom of the page.<br><br>
	
	First thing you need to do is create the brush you want to be the moving water and make it a <b>func_water</b> entity. One thing to remember is that the water must not be <b>translucent</b>. For some reason only non-translucent water will work with a func_water. A func_water entity must be triggered to work so therefore it must have a <b>targetname</b>. So lets give it a targetname of <b>water1</b>.<br><br>
	
	Next you need to specify the <b>angle</b> of the water movement. For most purposes you will only need the water to move up and down but if you can find a purpose to make the water move left or right then go for it. So lets set the angle of the movement to be down. angle=-2.<br><br>Now you need to set the <b>sound</b> of the water brush. You can either have 0)no sound, 1)water, 2)lava. lets make it have a water sound. sounds=1<br><br>
	
	You can also specify the <b>speed</b> of the movement, the wait before returning, and the lip remaining at end of the move.<br><br>
	
	Okay, the final thing to do to get your <b>func_water</b> to work is to make the <b>trigger</b> that will start the movement of the water. Any kind of trigger will work. If you want the water to bob up and down continuously you will need to use a <b>func_timer</b>. If you want to make a lava trap you will need to use a <b>trigger_once</b>, <b>trigger_multiple</b>, or a <b>func_button</b>.<br><br>
	
	so all that is left to do is choose what you are going to use the func_water for and pick the trigger entity that you wish to use and set the target of the trigger entity to the name of the func_water.target=water1<br><br>
	
	<center><img src="/content/quake2/entity/images/func_water.jpg"><br>water in a tube</center><br><br>

	

	<!-- End description -->

</ul><h1 id="23" name="23" class="book-h3">Info</h1><ul><h3>Quake 2 Info Entities</h3><p>

	<ul>
	
<li><a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/23#info_player_intermission">info_player_intermission</a>


	<!-- Start description -->
	
	<p><a name="#info_notnull"></a><h3>info_notnull</h3><p><hr color=black noshade width=75%><p>see turret_<br><br>
	
	<p><a name="#info_null"></a><h3>info_null</h3><p><hr color=black noshade width=75%><p>see light_<br><br>
	
	<p><a name="#info_player_coop"></a><h3>info_player_coop</h3><p><hr color=black noshade width=75%><p>Where a player is spawned in a cooperative game.<br><br>
	
	<p><a name="#info_player_deathmatch"></a><h3>info_player_deathmatch</h3><p><hr color=black noshade width=75%><p>Where a player is spawned in a deathmatch game.<br><br>
	
	<p><a name="#info_player_intermission"></a><b><a href="/content/quake2/entity/samples/info_player_intermission.zip">Download Sample Map</a></b><br><br><h3>info_player_intermission</h3><p><hr color=black noshade width=75%><p>The <b>info_player_intermission</b> is the camera you see after a level ends in DeathMatch. They are a little hard to get used to, but after you know the basics, you should do fine.<br><br>
	
	There is only one key/value pair you need to know with the info_player_intermission, and that is <b>"angles"</b>. Most entities have an <b>"angle"</b> key, but in the case of the <b>info_player_intermission</b>, you need three (hence, the 's'.) Here's the breakdown:<br><br>Create an info_player_intermission where you want your intermission camera to be, and give it a key of "angles". Now, you want to put three numbers in as your value. Each one of these numbers is an angle. The first is the pitch, the second yaw, and the third roll. Chances are you won't be using the third number (roll) much, since it tilts you side to side, but hey, you can do what ever you want. Heres a little picture illustrating <b>pitch</b>, <b>yaw</b>, and <b>roll</b>:<br><br>
	
	<center><img src="/content/quake2/entity/images/info_player_intermission.gif"><br>xyz</center><br><br>
	
	<p><hr color=black noshade width=75%><p>The <b>pitch</b> angle (first number of the three) controlls the up/down angle of the camera. Lets say you would like your camera to look down about 15 degrees. In this case, you would make the first number a 15.<br><br>The <b>yaw</b> angle (second number) controls how much the camera is turned from the zero angle (pointing east, on a top-down view of your map.) If you want the camera to look to the west (again, we're talking about a top-down view relative to the map in your editor, and not relative to the actual camera view,) you would give it an angle of 180. If you wanted it to look south, you would use 270.<br><br>The <b>roll</b> angle controls the side to side tilt of the camera. Chances are, you will want to leave this at zero, unless you're going for the "just got shot, laying on your side" look, in which case you could give it 90 or 270. If you want the "hanging by your feet" look, then 180.<br><br>So, an info_player_intermission that looks 30 degrees down, southwest, and standing on it's "feet" (or hanging by it's "hair", it's all relative) would have an "angles" key with a value of "30 225 0".<br><br>
	
	<p><a name="#info_player_start"></a><h3>info_player_start</h3><p><hr color=black noshade width=75%><p>Where a player is spawned in a Single Player game.<br><br>
	<!-- End description -->

	</ul>
</ul><h1 id="26" name="26" class="book-h3">Item</h1><ul><h3>Quake 2 Item Entities</h3><p>

	<ul>
	
	<!-- Start description -->
	<p><a name="#item_adrenaline"><b>item_adrenaline</b></a> - This slightly increases your health permanently.
	
	<p><a name="#item_ancient_head"><b>item_ancient_head</b></a> - John Carmacks head. Adds 2 to max health
	
	<p><a name="#item_armor_body"><b>item_armor_body</b></a> - adds 100 to armor
	
	<p><a name="#item_armor_combat"><b>item_armor_combat</b></a> - adds 50 to armor
	
	<p><a name="#item_armor_jacket"><b>item_armor_jacket</b></a> - adds 25 to armor
	
	<p><a name="#item_armor_shard"><b>item_armor_shard</b></a> - adds 2 to your armor
	
	<p><a name="#item_bandolier"><b>item_bandolier</b></a> - Increases your carrying capacity for all ammunition except grenades and rockets.
	
	<p><a name="#item_breather"><b>item_breather</b></a> - This provides oxygen when submerged in liquids.
	
	<p><a name="#item_enviro"><b>item_enviro</b></a> - This provides protection from harmful fluids.
	
	<p><a name="#item_health"><b>item_health</b></a> - heals 10 hitpoints
	
	<p><a name="#item_health_large"><b>item_health_large</b></a> - heals 25 hitpoints
	
	<p><a name="#item_health_mega"><b>item_health_mega</b></a> - heals 100 hitpoints
	
	<p><a name="#item_health_small"><b>item_health_small</b></a> - heals 2 hitpoints
	
	<p><a name="#item_invulnerability"><b>item_invulnerability</b></a> - renders you temporarily indestructible
	
	<p><a name="#item_power_screen"><b>item_power_screen</b></a> - Gives you 200 armor towards energy weapons
	
	<p><a name="#item_power_shield"><b>item_power_shield</b></a> - provides improved protection against energy weapons. While it is being used, it drains energy from your cells when damaged.
	
	<p><a name="#item_quad"><b>item_quad</b></a> - temporarily multiplies all your weapons' strengths by four
	
	<p><a name="#item_silencer"><b>item_silencer</b></a> - silences the discharge of any weapon

	<!-- End description -->

	</ul>
</ul><h1 id="25" name="25" class="book-h3">Key</h1><ul><h3>Quake 2 Key Entities</h3><p>

	<ul>
	
	<!-- Start description -->

	<p><a name="#key_airstrike_target"></a><b><a href="/content/quake2/entity/samples/key.zip">Download Sample Map</a></b><h3>key_airstrike_target</h3>

	<p><a name="#key_blue_key"></a><h3>key_blue_key</h3>

	<p><a name="#key_commander_head"></a><h3>key_commander_head</h3>

	<p><a name="#key_data_cd"></a><h3>key_data_cd</h3>

	<p><a name="#key_data_spinner"></a><h3>key_data_spinner</h3>

	<p><a name="#key_pass"></a><h3>key_pass</h3>

	<p><a name="#key_power_cube"></a><h3>key_power_cube</h3>

	<p><a name="#key_pyramid"></a><h3>key_pyramid</h3>
	
	<p><a name="#key_red_key"></a><h3>key_red_key</h3>
	
	<p><hr color=black noshade width=75%>
	
	<p>You might be thinking thinking why the hell I did a tutorial over keys cause they are just items that you can place anywhere and they have no spawnflags or key value pairs to mess with. Well you are right. They are very simple to put in your level but getting some use out of them is a different story.<br><br>
	
	There are 9 different kinds of keys. They are <b>key_airstrike_target</b>, <b>key_blue_key</b>, <b>key_commander_head</b>, <b>key_data_cd</b>, <b>key_data_spinner</b>, <b>key_pass</b>, <b>key_power_cube</b>, <b>key_pyramid</b>, and <b>key_red_key</b>.<br><br>
	
	All of them act in exactly the same way, they just look different. What's cool about the keys is that they can be used to trigger anything you want them to, not just doors. You could have a key stop a turbine or make a computer explode. The possibilities are endless.<br><br>To get the keys to do these kind of things you must use a few different entities. For example:<br><br>
	
	Lets make it so that you have to use a <b>key_data_spinner</b> to turn off a big fan. <br><br>
	
	<ul><li>First we would make the fan of course and make it into a func_rotating and then make the computer that you will stick the key_data_spinner into that will turn off the fan. If you don't know how to do this then I suggest you check out my tutorial on the func_rotating entity. You also need to give the func_rotating a targetname. Lets give it a targetname of fan. targetname=fan.<li>The next thing we want to do is to place a trigger_key somewhere in the level and target it to the fan. target=fan. You should also give the trigger_key a targetname. Lets give it a targetname of key. targetname key<li>Next we need to specify what item will be needed to trigger the func_rotating and turn it off. You do this by setting the key value pair item to the name of the key. So in this example we would set item=key_data_spinner on the trigger_key entity.<li>There is one more thing to do and that is there must be a trigger where you want the key to be used that will trigger the trigger_key entity. So we would go to the area we made where the key_data_spinner will need to be placed and put a trigger_multiple right in front of the area. The closer and smaller the better. Then target the trigger_key with the trigger_multiple. In this example we would set target=key for the trigger_multiple.</ul><br><br>
	
	<center><img src="/content/quake2/entity/images/key.gif"></center><br><br>
	
	<p><hr color=black noshade width=75%>
	
	<p>Hope this clears everything up for ya. Now this is just one little example. There are unlimited uses for these keys. Instead of turning off a fan the key to make some computers explode. One of the more noticable uses of the keys that is in the id maps was the airstrike, which is just the key_airstrike_target and a trigger_key that triggers the misc_viper_bomb to fly by and a big explosion. I will definitly explain this in a future tutorial.<br><br>

	
	<!-- End description -->

	</ul>
</ul><h1 id="27" name="27" class="book-h3">Light</h1><ul><h3>Quake 2 Light Entities</h3><p>

	<ul>

<li><a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/27#light">light</a>
<li><a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/27#light_mine1">light_mine1</a>
<li><a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/27#light_mine2">light_mine2</a>
	
	<!-- Start description -->

	<p><a name="light"></a><b><a href="/content/quake2/entity/samples/light.zip">Download Sample Map</a></b><h3>light</h3>
	
	<p><hr color=black noshade width=75%>
	
	<p>Ask any level designer what the most time consuming part of level design is, and they will most likely answer: lighting. The fact is, lighting isn't that difficult in implementation, but rather in choices of lighting, and the amount of options available. We'll try to break down the choices here.<br><br>
	
	Lights, since they are just point entities with working defaults, are among the easiest entities to add, but the actual method varies from editor to editor, so check the docs for yours.<br><br>
	
	Now, on to the good stuff. Here are the flags and fields, and their uses:<br><br>
	
	<p><hr color=black noshade width=75%>
	
	<p><b>LIGHT</b><br>
	
	This is the brightness of the light. Default is 300. The fall-off distance of the light is proportional (the brighter the light, the further it shines.)<br><br>
	
	In order to change the light value, simply add a key of "<b>light</b>" with the desired keyvalue.<br><br>One thing worthy of mention. Light entities differ from lit surfaces, in that the amount of light that a surface emits is dependent on the size of the face, whereas two light entities with the same "<b>light</b>" keyvalue will always emit the same amount of light, regardless of color. (which is why software Q2 always looks so bright)<br><br>
	
	<p><hr color=black noshade width=75%>
	
	<p><b>_COLOR</b><br>
	
	(Note, a value prefixed with an underscore means that the key will be ignored if the default is not applicable. This is why "color" works here as well. It's good practice to always include the underscore, even if it works without it.)<br><br>
	
	This is the color that the light entity will emit. The actual color is determined by a set of three numbers between 0 and 1, representing red, green, and blue, respectively. The _color values are proportional, meaning that a value of "<b>0.1 0.1 0.1</b>" would give you exactly the same thing as "<b>1 1 1</b>", and "<b>0.5 1 1</b>" would give you the same as "<b>0.25 0.5 0.5</b>"<br><br>
	
	<b>Example</b><br
	
	>"_color" "0 0 1" would emit blue light in gl<br>"_color" "1 1 1" would emit white light in gl<br>"_color" "0.5 0.5 0.5" would emit white in gl<br>"color" "1 0 0" would emit red light in gl, but kick out a "color is not a field" warning in software. (moral: use the underscore)<br><br>
	
	<p><hr color=black noshade width=75%><p><b>STYLE</b><br>
	
	The style key determines whether or not the light will be a dynamic light, and if so what pattern it will follow. The default is 0 (static).<br><br>Here are the values, and their patterns. 'a' represents total darkness, and 'z' represents double brightness. 'm' is normal brightness (nabbed from the gamex86 source):<br><br>
	
	<ul><li>FLICKER (first variety): "mmnmmommommnonmmonqnmmo"<li>SLOW STRONG PULSE: "abcdefghijklmnopqrstuvwxyzyxwvutsrqponmlkjihgfedcba"<li>CANDLE (first variety): "mmmmmaaaaammmmmaaaaaabcdefgabcdefg" <li>FAST STROBE: "mamamamamama" <li>GENTLE PULSE 1: "jklmnopqrstuvwxyzyxwvutsrqponmlkj" <li>FLICKER (second variety): "nmonqnmomnmomomno" <li>CANDLE (second variety): "mmmaaaabcdefgmmmmaaaammmaamm" <li>CANDLE (third variety): "mmmaaammmaaammmabcdefaaaammmmabcdefmmmaaaa" <li>SLOW STROBE (fourth variety): "aaaaaaaazzzzzzzz"<li>FLUORESCENT FLICKER: "mmamammmmammamamaaamammma" <li>SLOW PULSE NOT FADE TO BLACK: "abcdefghijklmnopqrrqponmlkjihgfedcba" </ul><p><br><br>
	
	12-31 open for modification<br><br>
	
	32-62 reserved by QRAD3 for switchable light styles, and 63 is reserved for testing<br><br>
	
	In order to make a dynamic light, simply add a key of "style" and the appropriate value. (ex: "style" "5" will make a pulsing light.)<br><br>
	
	<p><hr color=black noshade width=75%><p><b>TARGET/INFO_NULL/SPOTLIGHTS</b><br
	
	>A light entity can only target one thing: an info_null. What happens when you target an info_null? a spot light happens. (woo) Personally, I dig spotlights, and use them a lot. Here's how you do it.<br><br>
	
	Create a light. Give it a "target" key, and a keyvalue (we'll use "spot1".) <b>Create an info_null at the place at which you want the spotlight to point</b>. Give the info_null a "targetname" key, and keyvalue (again, "spot1".)<br><br>
	
	Now, what if you want a wider spotlight? Well, that's why we have...<br><br>
	
	<p><hr color=black noshade width=75%>
	
	<p><b>_CONE</b><br>
	
	The default _cone value is 10. The higher the value, the wider the spot. To use it, add the "<b>cone</b>" key, and the desired value to the light entity.<br><br>
	
	<p><hr color=black noshade width=75%>
	
	<p><b>Switchable lights</b><br>
	
	Let's say we wan't a light to be turned on or off by some other event (be it a button, trigger, etc..) What we need to do in this case, is to set up the triggering event (in this case, a <b>func_button</b>) and give it a "<b>target</b>" (we'll use "<b>lt1</b>".) Now, we need to create a light, and give it a "<b>targetname</b>" of "<b>lt1</b>". We now have a light that turns off when we hit the button. If you would like the light to turn on when you hit the button, set the <b>start_off</b> spawnflag for the light.<br><br>
	
	<p><a name="light_mine1"></a><h3>light_mine1</h3>
	
	<p><a name="light_mine2"></a><h3>light_mine2</h3>
	
	<p><hr color=black noshade width=75%>
	
	<p>The light mines are simply predefined lights that are the lights that were used on the mine levels in quake2. They act like normal lights they just have a predefined shape. Here are pics of them.<br><br>
	
	<center><img src="/content/quake2/entity/images/light_mine1.jpg"><br>light_mine1<br><br><img src="/content/quake2/entity/images/light_mine2.jpg"><br>
	
	light_mine2</center><br><br>
	
	<p><hr color=black noshade width=75%>
	
	<p>NOTE: If you want to rotate a light_mine (1 or 2) you have to give it an "angle" key. <br><br>
	
	<p><hr color=black noshade width=75%><p>
	
	<b>_minlight</b><br>
	
	_minlight is a very strange key value pair that can be used with certain entities like func_door, func_button, func_rotating, etc, etc. Basically any visual entity except the item entities. What it does is makes the object glow. Lets say you have a very dark room and there is a button the player has to press but it is so dark that the player is not going to be able to find it. Well, this is where _minlight can come in very handy. Select the func_button entity and give it a key value pair of _minlight and a value of 1. This will make the func_button glow a faint white so it will be more visible. <br><br>
	
	The glow from _minlight does not make the surronding area any brighter, just the object that has the _minlight value. <br><br>
	
	The values for _minlight should be between 0 and 2. I have not noticed any difference with exteremly high values. 2 seems to be the max.<br>

	<!-- End description -->

	</ul>
</ul><h1 id="28" name="28" class="book-h3">Misc</h1><ul><h3>Quake 2 Misc Entities</h3>
<p><a name="#misc_banner"><b>misc_banner</b></a> - misc_banner is the cool wavy flag that is seen on base1. Pretty cool looking. It's uhhhh...very easy. Just place it where ever you want and thats where the flag will appear. <b>Angle</b> determines which side of the flag faces what. In the docs it says it is 128 units high but it seems much bigger to me.<br><br>
	
	<p><a name="#misc_bigviper"><b>misc_bigviper</b></a> - The misc_bigviper is the ship model that you can see in the quake2 intro that can be placed in a level but acts very differently then the other ship entities. It does absolutly nothing at all!<br><br>
	
	<p><a name="#misc_blackhole"><b>misc_blackhole</b></a> - There are no flags or options for misc_blackhole. It just spins. The only thing worthy of mention is the fact that, while the entity in your editor is about the size of a light, the in-game misc_blackhole is very, very big. Allow at least 256 units in all directions.<br><br>
	
	<p><a name="#misc_deadsoldier"><b>misc_deadsoldier</b></a> - Not much to say about these. Pretty self explanatory. There are six varieties, determined by spawnflags: <b>on_back</b>, <b>on_stomach</b>, <b>back_decap</b>, <b>fetal_pos</b>, <b>sit_decap</b>, and <b>impaled</b>. Obviously, only one flag can be set for each <b>misc_deadsoldier</b> (a guy would have to be pretty badly worked over to be on his back and his stomach at the same time.) Insert one in your map, and voila! Instant dead guy! Two things worth of mention, however: 1) <b>misc_deadsoldier</b> entities will not drop to the floor, so if you don't want them to float, align them on the floor. 2)a <b>misc_deadsoldier</b> with the <b>impaled</b> flag just won't look right unless he's suspended or impaled somehow. (in water, on a hook, etc).<br><br>
	
	<p><a name="#misc_easterchick"><b>misc_easterchick</b></a> - see below
	
	<p><a name="#misc_easterchick2"><b>misc_easterchick2</b></a> - see below
	
	<p><a name="#misc_eastertank"><b>misc_eastertank</b></a> - The easter egg entities are easy to use for your own SPQ levels, the difficult part is creating the chair for the misc_eastertank to sit in, but I'll leave that part of it to you :)<br><br>
	
	<ol><li>Make sure that your editor is zoomed in pretty close with a grid or maybe 8 or so.  This way you can be sure that you line everything up right.<li>Place the <b>misc_eastertank</b> along the floor.<li>Put the <b>misc_easterchick</b> so that it's bottom side is aligned with the bottom side of the <b>misc_eastertank</b>.<li>Now put the misc_easterchick2 in the same place as the misc_easterchick.  The picture below will give you a pretty good idea of what it will look like in the editor after steps 3 and 4.</ol><br>
	
	<center><img src="/content/quake2/tutorials/misc_easter/easter.jpg"></center><br><br>
	
	It really doesn't get any easier than that.  Again, don't ask me how you make the chair for the misc_eastertank, that is up to you to design.<br><br>
	
	<p><a name="#misc_explobox"><b>misc_explobox</b></a> - Those barrels that are pushable and explode when shot.
	
	<p><a name="#misc_gib_arm"><b>misc_gib_arm</b></a> - see target_spawner for use
	
	<p><a name="#misc_gib_head"><b>misc_gib_head</b></a> - see target_spawner for use
	
	<p><a name="#misc_gib_leg"><b>misc_gib_leg</b></a> - see target_spawner for use
	
	<p><a name="#misc_insane"><b>misc_insane</b></a> - The <b>misc_insane</b> are the marines you see wandering around in the game. They're extremely easy to use. They act a bit like monsters, in that if they don't have a specific path, they will follow you around.<br><br>
	
	There are a few spawnflags and keys for misc_insane:<br><br>
	
	<b>ambush</b>: A misc_insane with this flag set will not react to you until it has a direct line of sight, or until you do damage to it. Then it will follow you around. If the misc_insane is set to follow a path, it will only react when shot.<br><br>
	
	<p><a name="#misc_satellite_dish"><b>misc_satellite_dish</b></a> - The <b>misc_sattelite_dish</b> can be either placed in a map on its own, in which case it will just sit there and look...well...like a sattelite dish; or it can be triggered by another event, such as a func_button. If the dish is triggered, it will tilt up, and then rotate to the left. One thing to keep in mind when setting up the triggering event, though: When the dish is triggered, it moves smoothly, but if it is triggered again, it jerks back to it's starting position, with no animation frames. So, it's best to either use a trigger_once, or a button with a "<b>wait</b>" value of "<b>-1</b>" (never return.)<br><br>
	
	<p><a name="#misc_strogg_ship"><b>misc_strogg_ship</b></a> - see misc_viper
	
	<p><a name="#misc_teleporter"><b>misc_teleporter</b></a> - The <b>misc_teleporter</b> and <b>misc_teleporter_dest</b> are 2 extremely simple entities that must be used together to create the teleporters that you see in the id maps when playing deathmatch. They can be used in single player but I don't seem to remember id using them any time in the game. Getting a teleporter to work is very simple, much easier then in quake1.<br><br>
	
	First thing you must do is decide where you want the teleporter of course and then place the misc_teleporter entity. Then you must place the misc_teleporter_dest where you want to be teleported. Then <b>give the misc_teleporter_dest a targetname and target it with the misc_teleporter</b>. It's that simple. For example, lets give the misc_teleporter_dest a <b>targetname</b> of t1. Then we would give the misc_teleporter a target of t1. Thats it.<br><br>
	
	In quake2 you cannot change the look of the teleporters or the size. They are solid entities that have their own models.<br><br>
	
	<p><a name="#misc_teleporter_dest"><b>misc_teleporter_dest</b></a> - see misc_teleporter above
	
	<p><a name="#misc_viper"><b>misc_viper</b></a> - The <b>misc_viper</b>, and <b>misc_strogg_ship</b> are those space ships that you see in some of the id levels that fly through the sky every once in awhile. There are a few of them that you can see on the very first level. They are very simple to use in a level and look real cool.<br><br>
	
	<u>How do I make the damn things?</u><br>There is minimum of 4 entities that must be used to get these ships flying. They are some sort of <b>trigger</b> to start the ships movement, the <b>ship</b>, the <b>starting path_corner</b>, and the <b>ending path_corner</b>. There can be more path_corners in between the first and the last one for a more detailed flying path but only 2 are required.<br><br>
	
	The <b>misc_viper</b> and <b>misc_strogg_ship</b> are used in a very similar way to a func_train. <br><br>
	
	The first thing you must do is pick the ship you wish to use. You can place the ship entity anywhere in the level because it will automatically appear at the first path_corner.<br><br>
	
	The second thing you need to do is to make the beginning and ending path_corners and any number of ones in between. This will be the actual path the ships will follow when triggered. Each path_corner must target the next. You should also give the ship a target to the first path_corner. So if the first path_corner has a targetname of p1 then the ship entity will have a target of p1. If you want the ship to keep going forever then you will need to set the <b>teleport spawnflag</b> for the <b>last path_corner</b> and set the target of the last path_corner back to the first path_corner. This will actually teleport the ship back to the area of the first path_corner and create the appearance of multiple ships. Pretty cool.<br><br>
	
	The last thing you need to do to get the ship to actually work is to <b>create a trigger</b> of some sort to turn the ship on. If you want it to start when the level starts then you should use a <b>trigger_always</b>. So what this means you have to give the ship a targetname then give the trigger that will be used to turn the ship on a target key value pair equal to the targetname of the ship.<br><br><u>Key Value Pairs</u><br><b>speed</b><br>Speed is the speed that the ship will travel.<br><br>
	
	<b>angle</b><br>
	
	angle determines the direction the ship will face. This should be set to the direction the ship will travel or it will look strange.<br><br>
	
	<p><a name="#misc_viper_bomb"><b>misc_viper_bomb</b></a> - At first I had the misc_viper_bomb in another tutorial with the ship entities because I thought it was one of the ships like the viper but I was wrong. It is actually a bomb that one of the ships can drop. It was used during the game with the airstriker marker. It's a pretty complicated entity to figure out but I will show you how its done. Also thought I should mention that this tutorial is here because of EutecTic. This guy knows everything! He even made the awesome example map.<br><br>
	
	First thing you need to do is place the actual ship entity that will drop the bomb. You will have to use the <b>misc_viper</b>. You will also need to know how to get it to work, which I explained in a past tutorial you can check out here.<br><br>
	
	So now you should have the ship linked to some <b>path_corners</b>. Now create the misc_viper_bomb and place it at the path_corner where you want the ship to drop the bomb. Not on the ground but up in the air right on the path_corner. Since the bomb falls in an arc trajectory, it has to be released ahead of it's target just like the real thing. It's forward speed is about half of it's falling speed so if you place the bomb at one half the forward distance of its release height, it should fall right where you want it to.<br><br>
	
	Now you need to specify the damage that you want the bomb to take off. If you want it to kill everyone in site then set <b>dmg</b> to 10000. <b>You also need to give the misc_viper_bomb a targetname and a pathtarget</b>. These should be the same name. So lets set the targetname to boom and the pathtarget to boom.<br><br>
	
	Now select the path_corner where the bomb will be dropped at and give it the key value pair <b>pathtarget</b> and set it to the bomb. pathtarget=boom.<br><br>
	
	Things to remember.....The misc_viper <b>must</b> be triggered! If you don't understand how to get the misc_viper working then read the tutorial.<br><br>

	<!-- End description -->

	</ul>
</ul><h1 id="29" name="29" class="book-h3">Monster</h1><ul><h3>Quake 2 Monster Entities</h3><p>

	
	
	<!-- Start description -->

Monsters are an essential part of your single-player map, it would be a little boring without them! For maximum effect monsters have to be used in the right place and in the right way.  Here is RUST's advice on the best ways to shred your poor player.<BR><BR>  
<TABLE WIDTH=100% BORDER=0 CELLPADDING=10 CELLSPACING=0>
	<COL WIDTH=128*>
	<COL WIDTH=128*>
<TR VALIGN=TOP>
		<TD bgcolor=#000000 WIDTH=20%>
		</TD>
		<TD bgcolor=#000000 WIDTH=80%>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD WIDTH=20%>
			<img src="http://www.gamedesign.net/miniwood/tutorials/images/monster_berserk.jpg">
		</TD>

		<TD WIDTH=80%>
			<b>monster_berserk</b> - <b>Berserker</b><br><br> Health: Low <br><br> 

Knives.  Hammers.  This is the Strogg equivalent of the handy-man! Useless at a distance, unless you want the player to be distracted, he's better to come from behind, the side, or suddenly in the player's face, forcing them to react!  Good for use on cat-walks, since he can fling you off, to a bloody death, or a sizzle in the lava, or a swim back to the nearest ladder/elevator.  The Berserker is a bit of a dolt tho, and doesn't realize to stop swinging if you've backed off, so you might want to put one in an enclosed room, so the player has little room to dodge around.  This however defeats the purpose of his hyper-fast legs!  So use him is both situations.  The second being in a large room, so he has room to gain on you, but keep the player's arsenal to a low, other-wise, he's not good for much except a place to put all that lead the player carries around in.<BR><BR>
		</TD>
	</TR>
<TR VALIGN=TOP>
		<TD bgcolor=#000000 WIDTH=20%>
		</TD>
		<TD bgcolor=#000000 WIDTH=80%>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD WIDTH=20%>
			<img src="http://www.gamedesign.net/miniwood/tutorials/images/monster_boss2.jpg">
		</TD>
		<TD WIDTH=80%>
			<b>monster_boss2</b> - <b>Hornet</b><br><br> Health: Enormously High <br><br>

It's a Bird! It's a Plane! It's.... oh crap! This guy is about as rutheless as the Tank Boss, but he flies! Did I mention he has TWO chainguns? AND fires 4 rockets AT THE SAME TIME? This bastard is lethal and good at a distance. His rockets are fairly easy to dodge, but can KILL the player if he hits... In theory you could use two, but it could be considered unfair, or an overkill. But these guys work as a team, honestly 4 chainguns, 8 rockets, the player'll never know what hit 'em!<BR><BR>
		</TD>
	</TR>
<TR VALIGN=TOP>
		<TD bgcolor=#000000 WIDTH=20%>
		</TD>
		<TD bgcolor=#000000 WIDTH=80%>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD WIDTH=20%>
			
		</TD>
		<TD WIDTH=80%>
			<b>monster_boss3</b> - <b>Stupid Jorg</b> Health: Enormously High<br><br>

			This is a version of the final boss that will not do anything.<BR><BR>
		</TD>
	</TR>
<TR VALIGN=TOP>
		<TD bgcolor=#000000 WIDTH=20%>
		</TD>
		<TD bgcolor=#000000 WIDTH=80%>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD WIDTH=20%>
			<img src="http://www.gamedesign.net/miniwood/tutorials/images/monster_brain.jpg">
		</TD>

		<TD WIDTH=80%>
			<b>monster_brain</b> - <b>Brain</b><br><br> Health: High + Power Screen <br><br>

Probably the stupidest, yet coolest enemy in Quake II.  The brain is slow as hell, has a stupid method of attack, but if used correctly can be a rather effective enemy.  First, try not to think of the Brain as an attacker, he works better as a computer technician or scientist trying to get you out of his lab, or distract you from the other Strogg soldiers sneaking up on you.  They have a Power-Screen to keep them alive. Brains have a lot of life, and take a pounding, so in swarms they can produce some very gratifying situations, in one map I was stuck on a  table, surrounded by 4 or 5 Brains, very creepy, because they just slowly edge towards you, snapping out the tentacles when they get close enough. Brains are useful in the dark, since their attack has a decent range.<BR><BR>
		</TD>
	</TR>
<TR VALIGN=TOP>
		<TD bgcolor=#000000 WIDTH=20%>
		</TD>
		<TD bgcolor=#000000 WIDTH=80%>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD WIDTH=20%>
			<img src="http://www.gamedesign.net/miniwood/tutorials/images/monster_chick.jpg">

		</TD>
		<TD WIDTH=80%>
			<b>monster_chick</b> - <b>Iron Maiden</b><br><br> Health: Medium <br><br>

Sugar and spice, and everything not nice.  This is one bad girl, but you probably don't wanna be spanking her titanium ass!  She's a little dull at a distance, since she hasn't quite figured out what the rockets in her launcher are for...<br><br> So use her with a distraction, so she can launch a few of those bad boys up the player's ass, where they belong.  After all, isn't it about killing him/her?<br><br> Her claws are razor sharp, but again, she prefers to slap you with them if you get close enough for a kiss, so keep her above you to have some nice rocket bombardment.  For inexperianced players, her voice can be misleading, so hide her well, and spring her when they least expect her... hehehe...<BR><BR>
		</TD>
	</TR>
<TR VALIGN=TOP>
		<TD bgcolor=#000000 WIDTH=20%>
		</TD>
		<TD bgcolor=#000000 WIDTH=80%>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD WIDTH=20%>
			<img src="http://www.gamedesign.net/miniwood/tutorials/images/monster_flipper.jpg">
		</TD>
		<TD WIDTH=80%>
			<b>monster_flipper</b> - <b>Barracuda Shark</b><br><br> Health: Low <br><br>

Ever see the movie Jaws?  No relation here!  These sardines don't pose TOO much threat, unless in huge swarms.  Their best attribute is their speed and the fact that they are hard to hit.  Best used to suprise a player, unleash them behind him, and watch the water fill with blood!<BR><BR>
		</TD>
	</TR>
<TR VALIGN=TOP>
		<TD bgcolor=#000000 WIDTH=20%>
		</TD>
		<TD bgcolor=#000000 WIDTH=80%>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD WIDTH=20%>
			<img src="http://www.gamedesign.net/miniwood/tutorials/images/monster_floater.jpg">
		</TD>
		<TD WIDTH=80%>
			<b>monster_floater</b> - <b>Technician</b> Health: High <br><br> 

These are probably THE most annoying enemy in Quake 2!  They take forever to kill, they fly, their weapons are devastating, and they're rather stealthly. So let's have some fun with them!  Like the Brains, Technicians are NOT soldiers!  They belong in computer places, pipes or just about anywhere that maintenence might be required.  They attack best when from above, in front of the player makes them an easier target, but at the end of a hall can be quite deadly, as their hyper-blaster stings like hell!  The Technicians have a snapping claw, not very useful.  A tazer, not quite as useless, and then they have their blaster.  Technicians are good for dropping items such as key-cards and CD's.... But it's best that they simply hover around and make like they're repairing stuff.<BR><BR>
		</TD>
	</TR>
<TR VALIGN=TOP>
		<TD bgcolor=#000000 WIDTH=20%>
		</TD>
		<TD bgcolor=#000000 WIDTH=80%>
		</TD>
	</TR>
	<TR VALIGN=TOP>

		<TD WIDTH=20%>
			<img src="http://www.gamedesign.net/miniwood/tutorials/images/monster_flyer.jpg">
		</TD>
		<TD WIDTH=80%>
			<b>monster_flyer</b> - <b>Flyer</b><br><br> Health: Low <br><br>

Sorta like vultures with laser cannons, Flyers can be rather annoying, best used in groups of 3, as Id Software showed, these little mutha's can be a pain in the ass if not taken care of.  Good for distraction and as a security measure.  Make these little buggers fly over roof-tops to make them a little more surreal!<BR><BR>
		</TD>
	</TR>
<TR VALIGN=TOP>
		<TD bgcolor=#000000 WIDTH=20%>
		</TD>
		<TD bgcolor=#000000 WIDTH=80%>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD WIDTH=20%>
			<img src="http://www.gamedesign.net/miniwood/tutorials/images/monster_gladiator.jpg">
		</TD>
		<TD WIDTH=80%>
			<b>monster_gladiator</b> - <b>Gladiator</b><br><br> Health: Medium <br><br>

This is the ugly one.  With a face not even a mother could love, and a pair of legs which make him look like a certain hooved menace with a rocket launcher we all loved to hate, the Gladiator is one of the nasty ones.  Usually I play the game thru, and only death, or a rail-shot to the head can make me quick-load.  He's a little slow, but fast enough to scare you.  Keep him at a distance, so he makes good use of his shoulder mounted railgun.  Up close his melee attack does the most damage, save for the Berserker, but his railgun does far more.  Good for guarding keys, and exits, also useful when below you, or above, and picks you off as you ride the elevator.  On the other end of a bridge is a nice touch since he's not gonna be asking three questions before he launches the player's sorry ass off the bridge.<BR><BR>
		</TD>

	</TR>
<TR VALIGN=TOP>
		<TD bgcolor=#000000 WIDTH=20%>
		</TD>
		<TD bgcolor=#000000 WIDTH=80%>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD WIDTH=20%>
			<img src="http://www.gamedesign.net/miniwood/tutorials/images/monster_gunner.jpg">
		</TD>
		<TD WIDTH=80%>
			<b>monster_gunner</b> - <b>Gunner</b><br><br> Health: Medium <br><br>

This is the ultimate Strogg.  He has a gun that takes a while to open a rapid-fire grenade launcher, and an attitude!  If other enemies get in his path of destruction he is indifferent to it, and will keep firing until either you or him is dead.  When placed above the player on cat-walks he is effective at causing a rain of grenades, when in a room full of explosive crates, explosive barrels, or just little room to move, this is probably his most lethal use.  His gun is a little slow, but if put out of sight, not totally, just until the player looks around a bit, he can be rather devastating without the use of armor.<BR><BR>

		</TD>
	</TR>
<TR VALIGN=TOP>
		<TD bgcolor=#000000 WIDTH=20%>
		</TD>
		<TD bgcolor=#000000 WIDTH=80%>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD WIDTH=20%>
			<img src="http://www.gamedesign.net/miniwood/tutorials/images/monster_hover.jpg"> 
		</TD>
		<TD WIDTH=80%>
			<b>monster_hover</b> - <b>Icarus</b><br><br> Health: High <br><br>

His ass must get hot from those two jets mounted on his shoulders.... The Icarus is a rather distinctive enemy, useful for patrol of areas with high ceilings, or the outdoors areas.  The Icarus is a type of enemy that can perch, since he seems to have a standing motion, how to get it used, I have NO idea, but it's there.... maybe the guy's just confused. These guys are a little stealthly, but their jet ambience gives 'em away so use them wisely, for best impact.<BR><BR>
		</TD>
	</TR>
<TR VALIGN=TOP>
		<TD bgcolor=#000000 WIDTH=20%>
		</TD>
		<TD bgcolor=#000000 WIDTH=80%>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD WIDTH=20%>
			<img src="http://www.gamedesign.net/miniwood/tutorials/images/monster_infantry.jpg">
		</TD>
		<TD WIDTH=80%>
			<b>monster_infantry</b> - <b>Enforcer</b><br><br> Health: Low <br><br>

Bald head, beady eyes, a chaingun that's gotta be cocked before firing.  This guy is even trained in martial arts!  What more could you ask for in an enemy?  These guys are my personal favorite enemy; they go down from one double-barreled shotgun blast, at close range of course, and have several deaths, the flip being the most exciting! These boys are useful in waves, and effective as prison guards, they have about the I.Q. of the gun they are carrying, and know how to duck rockets at a distance.  A final note is that up close they always use they karate chop, so keep them at a distance, and let the berserkers do the chopping and mangling!<BR><BR>
		</TD>
	</TR>
<TR VALIGN=TOP>
		<TD bgcolor=#000000 WIDTH=20%>
		</TD>
		<TD bgcolor=#000000 WIDTH=80%>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD WIDTH=20%>
			<img src="http://www.gamedesign.net/miniwood/tutorials/images/monster_jorg.jpg">
		</TD>

		<TD WIDTH=80%>
			<b>monster_jorg</b> - <b>Jorg</b><br><br> Health: Enormously High <br><br> 

This is THE BIG BOSS.  He sports 2 ASS-KICKING CHAIN-CANNONS and a FREAKING BFG 10K!!! Yipes!  The Jorg makes a lot of noise when moving about, and I'm pretty sure he makes this creepy laugh as he goes about his business of mopping the floor with you!  If the player has a Quad or Invulnerability or BOTH then the Jorg is screwed.  Also it's passenger is pretty much eff'd. So try to deny the player these things.  When the Jorg is killed the Makron leaps from it's body and proceeds to kick yer ass with a Railgun, a HYPER-BLASTER and another freaking BFG10K!!  Actually, it's the same one as the Jorg had, since the Jorg would raise its torso and let's the Makron fire it.  When knocked down Makron says stuff like "Not Good Enough!" or "Weakling!" Needless to say, he's a pretty creepy character.  I don't recommend using this thing UNLESS it is a Return of the Makron MOD!  Makron got killed at the end of the game, so try and keep faithful to that.<BR><BR>
		</TD>
	</TR>
<TR VALIGN=TOP>
		<TD bgcolor=#000000 WIDTH=20%>
		</TD>
		<TD bgcolor=#000000 WIDTH=80%>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD WIDTH=20%>
			

		</TD>
		<TD WIDTH=80%>
			<b>monster_makron</b> - <b>Makron</b><br><br> Health: Enormously High <br><br> See monster_jorg for details.<BR><BR>
		</TD>
	</TR>
<TR VALIGN=TOP>
		<TD bgcolor=#000000 WIDTH=20%>
		</TD>
		<TD bgcolor=#000000 WIDTH=80%>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD WIDTH=20%>
			<img src="http://www.gamedesign.net/miniwood/tutorials/images/monster_medic.jpg">
		</TD>
		<TD WIDTH=80%>
			<b>monster_medic</b> - <b>Medic</b><br><br> Health: High <br><br>

Stroggs have this amazing talent of coming back from the dead! Their secret had been revealed, the Medic. Not too useful as a stand-alone warrior, but beautiful as a mortician.  Hehehe... He doesn't get around in a hearse tho, instead, two metal, goat-like legs, which flop nicely when he's killed.  The Medic pumps life, literally, into dead Stroggs, and is pretty efficient at it.<br><br> If sent into the fray the Medic can be somewhat useful, but is better sent in after a huge battle, to pick up the pieces, so to speak...<BR><BR>
		</TD>
	</TR>
<TR VALIGN=TOP>
		<TD bgcolor=#000000 WIDTH=20%>
		</TD>
		<TD bgcolor=#000000 WIDTH=80%>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD WIDTH=20%>
			<img src="http://www.gamedesign.net/miniwood/tutorials/images/monster_mutant.jpg">
		</TD>
		<TD WIDTH=80%>
			<b>monster_mutant</b> - <b>Mutant</b><br><br> Health: High <br><br>

These bastards are EVIL!  They move faster, and farther than the Demon in Quake 1, and have this eerie sound they make when they stalk around!  Great for hiding behind walls and such, or in hidden cages, to be released when the player gets to a certain area.  The Mutants have plenty of life, but a hyper-blaster or chaingun will take them out fairly efficiently.  Mutants work well in sewers and mines, but not in base areas, unless they came from the sewers, in which case it's best to show where they came from.<BR><BR>
		</TD>
	</TR>
<TR VALIGN=TOP>
		<TD bgcolor=#000000 WIDTH=20%>
		</TD>
		<TD bgcolor=#000000 WIDTH=80%>
		</TD>
	</TR>
	<TR VALIGN=TOP>

		<TD WIDTH=20%>
			<img src="http://www.gamedesign.net/miniwood/tutorials/images/monster_parasite.jpg">
		</TD>
		<TD WIDTH=80%>
			<b>monster_parasite</b> - <b>Parasite</b><br><br> Health: Medium <br><br>

Here poochy-poochy-poochy!  PLAY DEAD!  This is probably the most foul enemy in the game, he literally sucks the life out of you, and he sniffs other Strogg's butts!  (j/k)  But seriously, with the personality of a dog, what could you expect, he's even got fleas. Useful around corners, such as crates, or pipes.  He works well from the hidden cubby-hole in the wall to your left/right.  Takes a bit of a pounding, and moves pretty fast.  His clicking sounds can be mistaken for mechanical ambience.  Again, useless at a distance, works well in narrow halls, with little room to dodge, but gives the player a straight line-of-sight.  Works well with the distraction technique, but gives his presence away with that un-Godly bark.<BR><BR>
		</TD>
	</TR>
<TR VALIGN=TOP>
		<TD bgcolor=#000000 WIDTH=20%>
		</TD>
		<TD bgcolor=#000000 WIDTH=80%>
		</TD>
	</TR>
		<TR VALIGN=TOP>
		<TD WIDTH=20%>
			<img src="http://www.gamedesign.net/miniwood/tutorials/images/monster_soldier.jpg">
		</TD>
		<TD WIDTH=80%>
			<b>monster_soldier</b> - <b>Shotgun Guard</b><br><br> Health: Very Low <br><br>

Bigger gun, bigger life, same size brain.  Having the same smarts as the light guard the shotgun guard can be applied in the same manner as his weaker cousin.  However, his weapon is twice as big as he is, so he can tear you up!  Without the protection of armor shotgun guards will kill you in a matter of moments, if they are given the advantage of height, or cover, or simply in large numbers. As stated, he's not to bright, so give him room to maneuver, and a friend or two.<BR><BR>

		</TD>
	</TR>
<TR VALIGN=TOP>
		<TD bgcolor=#000000 WIDTH=20%>
		</TD>
		<TD bgcolor=#000000 WIDTH=80%>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD WIDTH=20%>
			<img src="http://www.gamedesign.net/miniwood/tutorials/images/monster_soldier.jpg">
		</TD>
		<TD WIDTH=80%>
			<b>monster_soldier_light</b> - <b>Light Guard</b><br><br> Health: Very Low <br><br>

This bad-boy just ain't so bad, he's got a puny laser, and not a lot of life.  He's noisy, and not too bright. But oh, the possibilities!<br><br>If you place light guards above the player, in packs, they can amount to something, at first the player might shrug it off as tho it were just a mosquito bite, but as each blaster bolt fries his skin, it starts to wear on him.  This can also be used to distract him from hidden or approaching enemies, that are elsewhere.  <br><br>Add a barrel, or explosive crate near the light guards for an easy, and dazzling kill, or to save playing time.  Or you could just leave them there, for the player to have to pick off.<BR><BR>
		</TD>

	</TR>
	<TR VALIGN=TOP>
		<TD bgcolor=#000000 WIDTH=20%>
		</TD>
		<TD bgcolor=#000000 WIDTH=80%>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD WIDTH=20%>
			<img src="http://www.gamedesign.net/miniwood/tutorials/images/monster_soldier_ss.jpg"> 
		</TD>
		<TD WIDTH=80%>
			<b>monster_soldier_ss</b> - <b>Machine Gun Guard</b><br><br> Health: Very Low <br><br>

Even bigger gun, even smaller intellect.  But what a nasty, this guy is the "king of sting."  Nothing hurts more than having a machinegun guard behind you whittling away at your armor, and all that time you thought it was the gunner dishing out twice the damage!  These guys are a pain in the butt, so use them sparingly or in groups for a challenge, they go splat with explosives, so to add to the tension equip player with a shotgun, or machinegun and watch the cursing start!<BR><BR>
		</TD>
	</TR>
<TR VALIGN=TOP>
		<TD bgcolor=#000000 WIDTH=20%>
		</TD>
		<TD bgcolor=#000000 WIDTH=80%>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD WIDTH=20%>
			<img src="http://www.gamedesign.net/miniwood/tutorials/images/monster_supertank.jpg">
		</TD>
		<TD WIDTH=80%>
			<b>monster_supertank</b> - <b>Super Tank</b><br><br> Health: Enormously High <br><br>

Did I say the Tank was the BIG mother?  This guy is HUGE!!  Taller than Gunners, taller than Tanks and 3 times as lethal!  This guy sports the MOTHER-OF-ALL-CHAINGUNS and will mow you down in a second with it, his rockets are similar to the Tank's, but I think they move faster, or do  more damage or something.  He has lasers, but rarely uses them.  The Tank Boss is a little slow however, and with the proper armament can be taken down rather easily.  For best challenge, don't give the player a Quad or any HEAVY weaponry, then use him as a doorblock. Give this guy room to maneuver, or he'll be useless.<BR><BR>
		</TD>
	</TR>
<TR VALIGN=TOP>
		<TD bgcolor=#000000 WIDTH=20%>
		</TD>
		<TD bgcolor=#000000 WIDTH=80%>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD WIDTH=20%>
			<img src="http://www.gamedesign.net/miniwood/tutorials/images/monster_tank.jpg">
		</TD>

		<TD WIDTH=80%>
			<b>monster_tank</b> - <b>Tank</b><br><br> Health: Very High <br><br>

The BIG mother, this guy is huge, taller than the Gunners, and twice as lethal.  The tank utilizes 3 weapons, a hyper-blaster, a chaingun and a rocket launcher.  The Tank is slow as hell, so be careful where you place him.  In confined areas he is useful, but only if the player has no room to maneuver.  At a distance is good, but again, makes him an easy target.  The Tank is a hard enemy to get good placement with.  His menacing walk is enough to strike fear into a poorly armed player, so keep them on their toes by throwing one of these bastards near the beginning, and there's no way around except to find a bigger gun.<BR><BR>
		</TD>
	</TR>
<TR VALIGN=TOP>
		<TD bgcolor=#000000 WIDTH=20%>
		</TD>
		<TD bgcolor=#000000 WIDTH=80%>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD WIDTH=20%>
			<img src="http://www.gamedesign.net/miniwood/tutorials/images/monster_tank_commander.jpg">

		</TD>
		<TD WIDTH=80%>
			<b>monster_tank_commander</b> - <b>Tank Commander</b><br><br> Health: Very High <br><br>

Just a fancied up Tank, I have found no differences, perhaps a little more aggressive?  This guy can be used as a leader of several tanks, or just in a palace level, since he is kinda like a Tank with ROYAL armor, instead of chamo-combat armor.<BR><BR>
		</TD>
	</TR>
</TABLE>

	<!-- End description -->
</ul><h1 id="31" name="31" class="book-h3">Path</h1><ul><h3>Quake 2 Path Entities</h3><p>

	<ul>
	
	<!-- Start description -->
	<p><a name="#path_corner"><b>path_corner</b></a> - see misc viper.<br><br>
	
	<!-- End description -->

	</ul>
</ul><h1 id="30" name="30" class="book-h3">Point</h1><ul><h3>Quake 2 Point Entities</h3><p>

	<ul>
	
	<!-- Start description -->
	
	<p><a name="#point_combat"><b>point_combat</b></a> - One thing that I mentioned earlier but I would like to go over again is the <B>point_combat</B> entity. Point_combats are used just like path_corners. They are not drawn in the map. Point_combat entites are simply points that the monster will walk to before attacking the player. You can have more then one linked.  Just give each point_combat a target to the next. Remember though that the monster will not attack until it is finished walking it's point_combats. In the <A HREF="rust21.zip">example</A> map I made 2 monster_chicks that when they see the player they take cover behind 2 low lying walls. This effect was achieved using point_combats. By default once the monster reaches the last point_combat it will go after the player like a normal monster. If you set the spawnflag <B>hold</B> on the point_combats then the creatures will hold their position once they reach the last point_combat and attack you from there. One thing I did notice though is if you shoot the monster and hurt it then it will quit following its point_combat and just attack the player.<br><br>
	
	There are a couple monster entities that don't act like the others. They are <B>monster_makron</B> and <B>monster_commander_body</B>. monster_makron is a broken entity and shouldn't be used and monster_commander_body is just the dead body of a monster_tank_commander that is just used for decoration.<br><br>
	
	I hope that this tutorial opened your eyes to many possibilities you can use the monster_ entities for. I thought that writing this tutorial was the one that I learned the most from out of all of the tutorials and I hope that it helped you as much as it helped me. If you find any errors or something new then please email <i>(note: author doesn't exist anymore)</i> me and let me know.<br><br>
	<!-- End description -->

	</ul></ul><h1 id="32" name="32" class="book-h3">Target</h1><ul><h3>Quake 2 Target Entities</h3>

<p>
<ul>
<li>
<a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/32#target_actor">target_actor</a>
<li>
<a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/32#target_blaster">target_blaster</a>
<li>
<a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/32#target_changelevel">target_changelevel</a>
<li>
<a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/32#target_character">target_character</a>
<li>
<a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/32#target_crosslevel_target">target_crosslevel_target</a>
<li>
<a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/32#target_crosslevel_trigger">target_crosslevel_trigger</a>
<li>
<a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/32#target_earthquake">target_earthquake</a>
<li>
<a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/32#target_explosion">target_explosion</a>
<li>
<a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/32#target_goal">target_goal</a>
<li>
<a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/32#target_help">target_help</a>
<li>
<a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/32#target_laser">target_laser</a>
<li>
<a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/32#target_lightramp">target_lightramp</a>
<li>
<a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/32#target_secret">target_secret</a>
<li>
<a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/32#target_spawner">target_spawner</a>
<li>
<a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/32#target_speaker">target_speaker</a>
<li>
<a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/32#target_splash">target_splash</a>
<li>
<a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/32#target_string">target_string</a>
<li>
<a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/32#target_temp_entity">target_temp_entity</a>
<li>
<a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/32#target_actor">target_actor</a>
</ul>
</P>
<br><br>
<hr>

<p>
<a name="target_actor"><b>target_actor</b></a>
<BR><BR>
 - Not implemented. The code is incomplete. (The code for target_actor has been completed and enhanced in the <A HREF="http://www.planetquake.com/lazarus">Lazarus Mod</A>
</P>
<p>
<a name="target_blaster"><b>target_blaster</b></a> 
<BR><BR>
- The <b>target_blaster</b> entity is simply blaster fire that can be triggered. What I mean by blaster fire is like when you shoot the your blaster(1st weapon) or your hyperblaster. I didn't really notice many times in the id levels where these were used. The only level I remember seeing this entity is the first secret level. Anyhow, it's very simple and there are numerous uses for it.<br><br>The <b>first</b> thing you need to do is create the gun or whatever that is going to shoot the blaster fire. You don't really need to make it if you don't want to if though.<br><br>Next thing you do is place the <b>target_blaster</b> entity where you want the blaster fire to originate from.<br><br> There are a few key value pairs and spawnflags that you can set to make the <b>target_blaster</b> act in different ways. The  key value pairs are <b>angle</b>, <b>damage</b>, and <b>speed</b>. <b>angle</b> determines the direction the target_blaster will fire. <b>damage</b> is of course the amount of damage the blast will take off when it hits another entity. <b>speed</b> is how fast the blaster fire will travel.<br><br>
</P>
<p>
<a name="target_changelevel"><b>target_changelevel</b></a>
<BR><BR>
 - The <b>target_crosslevel_*</b> entities are used to trigger unit-wide events. Press a button (or series of buttons) in one level of a unit, and a door opens in another. They aren't all that hard to use, if you're comfortable with triggers and targets, but before we get started, there are a few things you should know about the <strong>target_crosslevel_trigger</strong>, and <strong>target_crosslevel_target</strong> entities: <br><br>1.) The <strong>target_crosslevel_</strong> entities work by setting one or more of eight spawnflags, which are retained throughout a unit, which simply means <strong>you only get eight cross-level events per unit</strong>.   <br><br>2.) <strong>Make sure you have a unit exit at the end of the last level of the unit</strong>, as not resetting the spawnflags results in fewer available spawnflags for the next unit. A unit exit is just a target_changelevel with an asterisk (*) in front of the actual map$startpoint keyvalue. 
<BR><BR>
Here are a few examples: 
<ul><br><br>To go to e1u2 of the id levels (skipping the cinematic,) you would have a target_changelevel with the key 'map', which would have the keyvalue '*bunk1$start' <br><br>To go to e1u2 (including the cinematic,) you would have a target_changelevel with the key 'map', which would have the keyvalue 'eou1_.cin+*bunk1$start'  <br><br>To go to e1u1 you would have 'map'='*base1' (because the start for base1 doesn't have a targetname)</ul>
<br><br>3.) The crosslevel spawnflags are read when Q2 initializes the map, which means <strong>any crosslevel triggers will not have any effect until a level change. </strong> <br><br>With all of that in mind, let's start.  <br><br>First off, let's create a room with an <strong>info_player_start</strong>. Decide where you want your exit to be. Make a brush with the 'trig' texture at the area you've chosen as the exit, and make it into a trigger. It doesn't matter if it's multiple or once, because we'll be using it to exit anyway. Make a <strong>target_changelevel</strong>, and give it a key of '<strong>map</strong>' with a keyvalue of '<strong>tcex2$from1</strong>'. In this case, the '<strong>tcex2</strong>' is the next example map we'll be making; '<strong>$</strong>' means we'll be going to a specific <strong>info_player_start</strong> in tcex2; and '<strong>from1</strong>' will be the targetname of that <strong>info_player_start</strong>. <br><br>Now create another <strong>info_player_start</strong>, and put it near, <strong>but not touching</strong>, the exit (preferably facing away from it, but that's up to you.) Give it a targetname of '<strong>from2</strong>'. This is where you'll spawn if you come back to this map. <br><br>The next thing you need to do is set something up to trigger your <strong>target_crosslevel_trigger</strong>. This can be a button, item pickup, or anything that can trigger another event. Give it a target (we'll use <strong>tc1</strong> for this example.) Now, create your <strong>target_crosslevel_trigger</strong>, and give it a matching targetname (again, <strong>tc1</strong>.) Set the flag for <strong>trigger1</strong> in the entity window for your editor. Now, when you trigger it, the <strong>trigger1</strong> spawnflag will be set for the next map. <br><br>Save the map as '<strong>tcex1.map</strong>' <br><br>Now we need another level to go to. Create a room similar to the last, but with two exits this time. Set the keys for one <strong>target_changelevel</strong> to '<strong>map</strong>'='<strong>tcex1$from2</strong>' and the other to '<strong>map</strong>'='*<strong>base1</strong>'. Place an <strong>info_player_start</strong> near the exit that goes back to <strong>tcex1</strong>, and give it a targetname of '<strong>from1</strong>'. <br><br>Now, create a <strong>target_crosslevel_target</strong> and set the <strong>trigger1</strong> flag. Give it a '<strong>target</strong>' of '<strong>boom</strong>', and a '<strong>delay</strong>' of '<strong>2</strong>'. Make a <B>func_explosive</B>, and give it a '<strong>targetname</strong> 'of '<strong>boom</strong>'. <br><br>Compile and run the map. If everything worked properly (cross your fingers, it helps) then you should be able to trigger in the first level, and then go into the second level, wait a second, and *<strong>boom</strong>*. Just to make sure, try not to trigger the <strong>target_crosslevel_trigger</strong> before you go into the second map. <br><br>For further experimentation, you can set up more than one <strong>target_crosslevel_trigger</strong>, each with a different trigger flag checked (1, 2, 3...), and then set up one target_crosslevel_target with those flags checked. <strong>Only after you've triggered all events</strong> will the target be fired.<br><br>In the example maps, the first <strong>target_changelevel_trigger</strong> is a button, and the second, Carmack's head (I just <i>had</i> to throw it in.) When you come to the third level, a wall explodes, and you exit to the intro cinematic, followed by base1. I hope you find this helpful, as it helped me to make it. <br><br>
<B>-GrrandMaMa</B><br><br> You can download the <A HREF="http://www.gamedesign.net/miniwood/tutorials/maps/tarchlvl_maps.zip">example map</A> here. Also if you have any problems or need some help please post to the <a href="http://forums.gamedesign.net">RUST Forums</a>.
</P>
<p>
<a name="target_character"><b>target_character</b></a>
<BR><BR>
 - See func_clock
</P>
<p><a name="target_crosslevel_target"><b>target_crosslevel_target</b></a>
<BR><BR>
 - See <a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/32#target_changelevel">target_changelevel</a>
</P>	
<p>
<a name="target_crosslevel_trigger"><b>target_crosslevel_trigger</b></a>
<BR><BR>
 - See <a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/32#target_changelevel">target_changelevel</a>
</P>
<p>
<a name="target_earthquake"><b>target_earthquake</b></a>
<BR><BR>
What this does is......create an earthquake!! Pretty difficult huh? There are a few options and other rules that you should know about though

The target_earthquake does NOT start on and must be triggered into working. There are 2 key value pairs that you can set. They are speed and count. Speed is the magnitude of the quake. Count is the length of time the quake will last. Some other things to know is that the earthquake does not give off damage and it is not viewed in the level so size of the entity does not matter.
</P>
<p>
<a name="target_explosion"><b>target_explosion</b></a> 
<BR><BR>
What a target_explosion does is when triggered creates a visual explosion that can be set to do any amount of damage. There are 2 key value pairs that you can set. Dmg and delay. Dmg is the amount of damage the explosion will cause and delay is the amount of time after triggered that the explosion will take place.
</P>
<p>
<a name="target_goal"><b>target_goal</b></a> 
<BR><BR>
The <strong>target_goal</strong> is used in exactly the same way as the target secret. However, since you will most likely have set up a <a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/32#target_help">target_help</a> to tell the player just what the goal is, you will most likely want to set up a new one at or near the <strong>target_goal</strong>. You don't want people wandering around with nothing to do. <br><br>
</P>
<p><a name="target_help"><b>target_help</b></a>
<BR><BR>
 - <b>target_help</b></font> is the entity that makes those messages appear on your computer. It also makes the computer blink. They used it in quake2 to tell you about your primary and secondary missions on each level. 
<BR><BR>This entity must be triggered so therefore it <b>must have a targetname.</b> Set the key value pair <b>message</b> to whatever you want it to print. If you want it to come on right when the level is started then use a trigger_always. To specify primary or secondary objectives just set the spawnflag help1 and the message will appear in the primary objective space otherwise it will appear in the secondary. If you are having problems with the message being too long for the space provided on the computer then simple put a <b>\n</b> where you want the line to end.
<p>
</P>
<p><a name="target_laser"><b>target_laser</b></a>
<BR><BR>
 - This is another somewhat easy entity to use. i'm sure if you've played through quake2 then you've seen many examples of lasers and the cool effects that id used with the lasers. The cool effects like the moving spiraling lasers are a bit more difficult to implement but i'll try to show you how.<br><br> <br><br><center><img src="http://www.gamedesign.net/miniwood/tutorials/images/laserpic1.JPG" width=250 height=188 border=0 alt="pic of target_laser"></center> <br><br>First thing you need to do is decide where you want the laser and what you want to use it for. The laser can either be <b>triggered</b> or <b>start on</b>. If you want it to be turned on then you need to <b>give the target_laser a targetname</b> and make some kind of trigger to start the laser. If you want  the laser to start on the just <b>set the start_on spawnflag</b>. The laser can either shoot in a direction or shoot at a target. If you want the laser to shoot in a direction other then anything horizontal or up and down then your going to have to have it shoot at a target. This target must be an <b>info_notnull</b>.<br><br> <center><img src="http://www.gamedesign.net/miniwood/tutorials/images/6pic1.GIF" width=125 height=318 border=0 alt="pic1"></center> <br><br> There are 5 colors you can choose from: <b>red, green, blue, yellow, and orange</b>. Just set the spawnflag of the color you want. You can also have larger lasers by setting the <b>spawnflag big</b>. If you want the laser to take off more damage then set the key value pair <b>dmg <i>n</i></b> where <i>n</i> is the amount of damage the laser takes off. <br><br>Moving lasers work just like the example above except the <b>target_laser must be targeted to a func_train.</b> And of course the func_train must be connected to multiple path_corners so it will move. The laser will follow the func_train. <br><br> There are some very cool things you can use lasers for. You can use them for doors, for traps, etc. On the <a href="http://www.gamedesign.net/miniwood/tutorials/maps/t_laser.zip">example map</a> I have made examples of 4 kinds of uses of a target_laser. One as a door opened with a button, another using info_notnulls to create diagonal lasers, another with a func_timer to make a laser that blinks off and on, and one using a func_train to make a moving laser. If you have any other questions on a target_laser then please post them on the <a href="http://forums.gamedesign.net">RUST Forums</a><br><br>
</P>
<p>
<a name="target_lightramp"><b>target_lightramp</b></a>
<BR><BR>
 - The <B>target_lightramp</B> entity is another easy entity to use. What it does is makes a light fade in or fade out. I actually don't really remember seeing this used in quake2 but it is such a sutle effect that I just probably didn't notice. <br><br> The <B>first</B> thing you need to do is do create the light that you want to fade in or fade out. Give it a <B>light</B> value. This light value will be the maximum the brightness of the light will be when it is all the way faded in. <br><br> The <B>second</B> thing you need to do is decide if you want the light to start dark and become bright or start bright and become dark. If you want to the light to start dark then you need to set the spawnflag <B>start_off</B> on the light entity. If you want the light to start light and become dark then you need to have the start_off spawnflag off. You must also <B>give the light a targetname</B>. Lets just give it a targetname of light. <B>targetname light</B>. <br><br> Next you need to make the actual <B>target_lightramp</B> entity. It doesn't matter where it goes because it will not be visible. The first thing you need to do to the target_lightramp is to <B>give it a target to the light</B>. target light. While your at do also <B>give the target_lightramp a targetname</B>. Lets give it a targetname of ramp. This is because the lightramp doesnt start on and must be triggered by another entity, but we will get to that in just a minute. There are two key value pairs that you can set for the target_lightramp. They are <B>speed</B> and <B>message</B>. <B>Speed</B> determines how many seconds it will take for the light to fade in or fade out. So if you have speed set to 20 then the light will gradually fade in  or fade out within 20 seconds. The message key value pair <B>must have 2 letters and only 2 letters</B>. These 2 letters determine the starting light level and the ending light level. The range of these letters is <B>a</B> to <B>z</B>. So if you want the light to fade in from dark to light then the message would be az. message az. if you want it to fade out from light to dark them the message would be za. message za. Just think of it as A getting brighter and brighter as it goes towards z, with z being the brightest. <br><br> There is also one spawnflag called <B>toggle</B> for the target_lightramp. If this is on and you have the target_lightramp triggered with a func_button or a trigger_multiple then if you trigger it again with the button or trigger_multiple it will turn on and turn off as many times as you trigger it. So in other words you can use it more then once.(turn the light on then turn it off) <br><br> The <B>last</B> thing you need to do is create the entity that will turn on the target_lightramp. This can be any kind of trigger you want. It all depends on the effect that you are looking for. You could use a <B>func_button</B> if you wanted it to be like a light switch that you could turn off and on. You could use a <B>trigger_once</B>, <B>trigger_multiple</B>, <B>trigger_always</B>, etc. You could even use a <B>func_timer</B> which would make the light fade in and fade out multiple times in row. So make the trigger entity that you wish to use and set the <B>target to the target_lightramp</B>. For this example it would be target=ramp. <br><br> That's all there is to a target_lightramp. Pretty cool little entity which can provide you with some very interesting effects. In the <a href="http://www.gamedesign.net/miniwood/tutorials/maps/t_lightramp.zip">example</a> map I included a target_lightramp that is triggered with a func_button. So the lightramp can be turned on or off. Any other questions please post them in the <a href="http://forums.gamedesign.net">RUST Forums</a><br><br>
</P>
<p>
<a name="target_secret"><b>target_secret</b></a>
<BR><BR>
When a map is loaded, Quake II counts up all of the <strong>target_secret</strong> entites in the map. When one of them is triggered, it adds 1 to the total secrets found. That's it. <br><br>
	
Anything that can trigger another event can trigger a target_secret. Since the entity is removed as it's used, you can even use a <strong>trigger_multiple</strong>, in which case it will trigger the secret on the first firing. Simply add a <strong>&quot;target&quot;</strong> key and value (let's use <strong>&quot;sec1&quot;</strong>) to the triggering event, and a <strong>&quot;targetname&quot;</strong>  and value (<strong>&quot;sec1&quot;</strong>) to the <strong>target_secret</strong>. You're done. 
<br>
You can also add a <strong>&quot;message&quot;</strong> key to a <strong>target_secret</strong>, and the message value will be displayed in the center of the screen upon discovery of the secret.
</P>
<p>
<a name="target_spawner"><b>target_spawner</b></a> <BR><BR>
- A <b>target_spawner</b> can be used for a number of things. What it actually does is makes an item of your choice appear at the location of the target_spawner. Any single item can be spawned. Even weapons and health. id didn't ever use the target_spawner for things like that though. They mainly used it to spawn gibs, insane people, and creatures. This entity is pretty simple once you figure out a few things. <br><br> There are <b>two</b> entities that must be used to get the target_spawner to work properly. There must be the actual <b>target_spawner</b> and <b>some kind of entity</b> that will actually trigger the target_spawner into working like a func_timer or a trigger_once. <br><br> Now for an example:<br> Lets make a trap that will drop soldiers into a pool of lava.<br><br> The <b>first</b> thing we need to make is the tube coming from the ceiling that will drop the soldiers into the lava and the actual pool of lava. Now we need to put a <b>target_spawner</b> inside of the tube coming from the ceiling. Now we need to specify what the target_spawner will spawn. This is the part that most people get stuck on. Instead of actually targeting a misc_insane entity <b>you must set the target of the target_spawner to the name of the entity that you want to spawn.</b> So therefore in this example we would set <b>target=misc_insane</b>. <br><br> Next you need to create a entity that will start the target_spawner. Lets <b>give the target_spawner a targetname of lavapool</b>. targetname=lavapool. Now let's use a <b>func_timer</b> to actually spawn the misc_insane. <b>Set the target of the func_timer to the target_spawner</b>. target=lavapool. Also be sure that you set the <b>turn_on</b> spawnflag for the func_timer. Unless you want to make it so you can turn it on with another trigger like a <b>func_button</b>. If you were to do this then you would just give the func_timer a targetname and target it with the func_button. <br><br> There are some key value pairs that you can set for a target_spawner to get some different effects. They are <b>speed</b> and <b>angle</b>. <b>Speed</b> is the speed that the item will come out of the target_spawner. <b>If speed is not set then the item will be dropped</b>. <b>Angle</b> is the direction that the item will be spawned and if speed is set then it is the direction the item will be thrown.<br><br> One of the most common uses of a target_spawner is to spawn gibs and those insane soliders. There are 3 types of gibs. <b>misc_gib_arm</b>, <b>misc_gib_leg</b>, and <b>misc_gib_head</b>. The names are pretty much self explanatory. Another entity that is commonly spawned on a few of the id levels is the <b>misc_insane</b> entity which is an insane solider.<br><br> There are many uses for a target_spawner. A trigger on one side of the level will spawn a creature on the other side of the level to surprise the player when he/she returns. You can even spawn health, weapons, and armor. Don't know what the use of that would be but I'm sure there are a few good ideas you guys can come up with.<br><br> As you can see target_spawner is a pretty simple entity to use. Just remember that you must have some sort of trigger to set off the target_spawner. Anything can be used...such as a trigger_once, func_timer, trigger_multiple, etc. It all depends on how you plan on using the target_spawner.<br><br> To understand the target_spawner more you can download the <a href="http://www.gamedesign.net/miniwood/tutorials/maps/t_spawner.zip">example</a> map. Anymore questions then please post to the <a href="http://forums.gamedesign.net">RUST Forums</a><br><br>
</P>
<p>
<a name="target_speaker"><b>target_speaker</b></a> <BR><BR>
- The <b>target_speaker</b> entity is another one that will be used VERY often by a map designer and should be known very well. What it does is spawns all those crazy sounds you here in quake2. Like the humming of a generator, breaking of glass, water flowing, ships flying overhead, etc. I will attempt to show you how to use this entity...hopefully. <br><br>Creating the target_speaker - <br><br> A target_speaker should be placed where you want the sound to originate from. By default a target_speaker will not start on and will have to be triggered by another entity such as a trigger_once, trigger_multiple, func_button, or whatever you want the sound to be triggered by. If you want a window to set off the sound then you would create the func_explosive that would be the breaking window and add a target key and set it to the the target_speaker. There is a way to make the target_speaker to start on that I will explain in the spawnflags section. <br><br>Key Value Pairs - <br><br><b>Noise</b><br><br>Noise is the name and path of the actual sound that will be played. The trick to it, if you want to call it a trick, is that you must specify the directory path and the name of the sound. Here is a <b><a href="sounds.shtml">list</a></b> of all the sounds that you can use and their directory paths. A common thought is that you can only use the sounds in the world/ directory but this is simply not true. You can use <b>ANY</b> sound at <b>ANY</b> time. You will soon find out though that the sounds in the world directory will be used much more often. So for an example if we want the target_speaker to produce a pump sound then we would set noise=world/bigpump.wav.<br><br> <b>Things to remember:</b> <li>Every target_speaker <b>MUST</b> have a noise key.</li> <li>Case does not matter. xian.wav and XIAN.WAV will both work.</li> <br><br> <br> <b>attenuation</b> <br><br> attenuation is the distance the sound will travel before fading out. There are 4 different levels of attenuation: <li><b>-1</b> : No fade off, the whole level will hear the sound</li> <li><b>1</b> : Normal fighting sounds. This is also the default attenuation for normal sounds.</li> <li><b>2</b> : idle sound level. </li> <li><b>3</b> : ambient sound level. Default attenuation for target_speaker entities that have the spawnflag looped-on set.</li> a value of 0 for attenuation will default to 1. <br><br><b>volume</b><br><br>Volume is pretty self explanatory. Volume levels can be values of 0.0 to 1.0. 1.0 being the loudest. If volume is left blank then the default volume is set to 1. A volume of .1 will barely  be audible. If there are multiple target_speaker entities with the same sound playing at the same time then the volume will increase beyond normal but excessive target_speakers will do nothing beyond a certain point. <br><br>Spawnflags - <br><br><b>looped-on</b><br><br>When looped-on is set then the sound will start on when the level is started and stay on until triggered. Thus the sound will loop over and over again until triggered and turned off. Sounds that are looped-on <b>always</b> have an attenuation of 3 and a volume of 1 and can <b>not</b> be changed. <br><br><br><b>looped-off</b><br><br>Looped-off is the opposite of looped-on naturally. The sound will start off and then when trigger will start and stay on. As with a looped_on sound they always will have an attenuation of 3 and a volume of 1 and can <b>not</b> be changed. <br><br><b>reliable</b><br><br>reliable is used when you have a very important sound that player must hear, like for crucial voiceovers. It makes the sound that is marked as reliable to override all the other sounds that are playing at the same time. <br><br>Uses of the Target_Speaker - There are virtually unlimited uses of the target_speaker entity. Of course you are going to want to use a lot of the world/ sounds with breaking glass, moving trains, computers humming, etc. But there are also uses of the non world/ sounds. Like some of the monster sounds at random areas to create a freaky feel of the level. There is an example of this on the <a href="http://www.gamedesign.net/miniwood/tutorials/maps/t_speaker.zip">example</a> map.<br><br> Well anyways if you still don't understand please post your questions to the <a href="http://forums.gamedesign.net">RUST Forums</a><br><br>
</P>
<p>
<a name="target_splash"><b>target_splash</b></a>
<BR><BR>
 - first thing you need to do is open your favorite editor and make a small room with nothing in it. Decide where you want the splash of particles and create a <B>trigger_splash</B> entity. <br><br> Now you need to give the <B>trigger_splash</B> a targetname. For this example lets give the entity a <B>target_name of splash1</B><br><br>Now we must specify what kind of spark you want. There are 6 different kinds. 1) sparks<br>2) blue water<br>3) brown water<br>4) slime<br>5) lava<br>6) blood<br><br>To set this use the keyname sounds and set it to whichever you want from above. For this example we are going to set <B>sounds=4</B> for slime. <br><br> The next step is to set the number of sparks you want. For this example we are going to make it 2. so set <B>count=2</B> for the trigger_splash entity. <br><br> We arent done yet though. To get the sparks to actually appear and work right you must create a <B>func_timer</B>. This is what actually spawns the sparks. It doesnt matter where you make this entity so just make it anywhere on the level and <B>set the target of this func_timer to the trigger_splash</B>. So in this example we would set <B>target=splash1</B>. If you want the sparks to start on then be sure to set the spawnflag <B>start_on</B>. Below is my some shots from my example using multiple trigger_splashes to make the acid look like it is bubbling, etc. first 2 shots are from the editor(bsp), last one is from the game. You can download the map file <A HREF="http://www.gamedesign.net/miniwood/tutorials/maps/t_splash.zip">here</A>. <BR><BR> <CENTER><IMG SRC="http://www.gamedesign.net/miniwood/tutorials/images/t_splash1.gif" WIDTH=300 HEIGHT=218 BORDER=0 alt="image 1"><br><br><IMG SRC="http://www.gamedesign.net/miniwood/tutorials/images/t_splash2.gif" WIDTH=300 HEIGHT=177 BORDER=0 alt="image 2"><br><br><IMG SRC="http://www.gamedesign.net/miniwood/tutorials/images/t_splash.JPG" WIDTH=400 HEIGHT=300 BORDER=0 alt="image 3"> </CENTER><br><br>
</P>
<p>
<a name="target_string"><b>target_string</b></a>
<BR><BR>
 - See func_clock
</P>
<p>
<a name="target_temp_entity"><b>target_temp_entity</b></a> <BR><BR>
- The <b>target_temp_entity</b> is one of the strangest entities available to level designers for quake2 but very very <b>cool</b>. In the game it was only used once in the level boss1. What it does is spawns some sort of sprite. You have <b>3</b> of them to choose from(that i know of). First is a green electrical type fire that gives off dynamic green light. Second is a pixel explosion that looks similar to fireworks. Third one is a badass cloud of particles that shoots up and then encaves on itself. My descriptions don't do them justice though, download the <a href="http://www.gamedesign.net/miniwood/tutorials/maps/t_tempent
.zip">example</a> map and check them out for yourself. I'll show you how you can use these cool effects in your levels below. <br><br>Creating the target_temp_entity<br><br> - First you have to decide where you want the sprite to spawn at. Place the <b>target_temp_entity</b> at this location.<br><br>Since it is a target_ entity it must be triggered by something else. So therefore you must trigger it with an entity such as a trigger_once, trigger_multiple, trigger_relay, trigger_always, func_button, func_timer etc.<br><br> Key Value Pairs - <br><br><b>style</b>There is only one key value pair that can be set for the target_temp_entity. It's called <b>style</b>. What is does is specifies the sprite that will be displayed. <b>These values MUST range from 17,18,20-22 or there will be an error and the game will crash.</b> I am not sure if there are any other values other then these, these were the only  ones I found to work. <br><br> Another thing you should know is that style 22 is the only one used in the id levels and is the only one that has a sound that is played when it is triggered. Style 20 and 21 <b>MUST</b> have a target_speaker used to get sound(if you want sound). Here are some screenshots of 3 of the different styles: <br><br> <center><img src="http://www.gamedesign.net/miniwood/tutorials/images/t_tempent1.JPG" width=300 height=225 border=0 alt="style 20"><br>style 20<br><br><img src="http://www.gamedesign.net/miniwood/tutorials/images/ttemp_ent2.JPG" width=300 height=225 border=0 alt="style 21"><br>style 21<br><br><img src="http://www.gamedesign.net/miniwood/tutorials/images/ttemp_ent3.JPG" width=300 height=225 border=0 alt="style 22"><br>style 22</center> <br><br><b>17</b> is the rocket explosion, <b>18</b> is the grenade explosion.(thanks obama) Uses of the target_temp_entity - <br><br> This entities uses are visual and just for looks but very very cool. You could have big generators that give off the electrical cloud of style 22. You could have a trap that would set off a target_temp_entity under the feet of the player and disintegrate him. There are numerous cool and unique uses for this entity that all of you guys/gals can up with.</blockquote> There is an example of the 3 different styles on the <http://www.gamedesign.net/miniwood/tutorials/maps/t_tempent.zip">example map.</a> <br><br> if you still don't understand please post your questions to the <a href="http://forums.gamedesign.net">RUST Forums</a> <br><br>
</ul><h1 id="38" name="38" class="book-h3">Trigger</h1><ul><h3>Quake 2 Trigger Entities</h3><p>

<blockquote>
	<h3>Trigger Entites</h3>
</blockquote>
	
<!-- Start description -->
<p><a name="#trigger_always"><b>trigger_always</b></a> - <br>
	
This is just a trigger that is always on and starts on when the level begins. The other keys you can set are <b>target</b>, <b>killtarget</b> and <b>delay</b> (default 0.2).<br><br>
	
<p><a name="#trigger_counter"><b>trigger_counter</b></a> - <br>
	
	This is a trigger that allows for multiple inputs. What this means is that you can have a door that only opens when 2 or more buttons are pushed. This is just once example though. The trigger_counter could trigger anything. You could set it up so the player would have to use 2 [insert you favorite item here] with a computer or something which in turn destroys a bunch of walls.<br><br>
	
	There are only 3 keys that you have to set. <b>Count</b>, <b>target</b>, and <b>targetname</b>.<br><br></p>
	
	<blockquote>
	  <p>
	  <b>1. Count</b> is the amount of actions that is required before the trigger_counter triggers its target. So if you have a door that must have 2 buttons pressed to open then you would give the trigger_counter a count of <br>
        <br>
	    
	  <b>2. Target</b> is the target of the entity that will be triggered when the specific amount of actions is performed on the trigger_counter.	  </p>
	  <p><b>3. Targetname</b> is self explanatory, but I just wanted to stress that the trigger_counter <b>MUST</b> have a targetname. For example, Lets say you want a door that will be opened by pressing 2 buttons. First you would make the door and give it a targetname of door1. Next make the trigger_counter and set the target to door1, the count to 2, and targetname to count1. Now create the 2 buttons and give each of them a target to count1. That's it! Pretty simple huh?<br>
        <br>
      </p>
	</blockquote>
    There is one spawnflag that can be used with the trigger_counter which is <b>nomessage</b>. By default, when the buttons in the example above are pressed, the messages, "1 more", "2 more", and "sequence complete" would be printed. nomessage disables these messages.<br>
    <br>
	
	
	<p><a name="#trigger_elevator"><b>trigger_elevator</b></a> - 
	
	<br>This a very difficult entity to master and I would only recommend going through this tutorial if you are a pretty experienced level designer. What it is basically an elevator. That's the easiest way I can explain it. Lets say there are 4 floors. You hit a button on the 4th floor and the platform will come to the forth floor. Hit a button on the 3rd floor and the platform will come to the third floor or however you want to set it to do. There are other easier ways to implement an elevator by using a <a href="../func_train/func_train.shtml" target="_top">func_train</a> but the trigger_elevator is more functional as working like a true elevator but again I stress that it is a very difficult entity to master.<br><br>
	
	Entities that can be used with the trigger_elevator:
	
	<blockquote>
		<p><li><a href="../func_train/func_train.shtml" target="_top">see func_train</a>    
	  	<li><a href="../misc/misc.shtml">path_corner</a>    
	  	<li><a href="../func_button/func_button.shtml">func_button</a><br><br></p>
    </blockquote>	
	
	Make sure you are familiar how all these entities work before attempting the trigger_elevator<br><br>
	
	 <ol>
	   <li>The first thing you need to do is to place the trigger_elevator entity somewhere in the level. This is not the actual elevator. In fact...this entity is <b>not</b> visual in the map, so it does not matter where you put this entity.</li><br>
	   
       <li>Now you need to <b>give the trigger_elevator a targetname and a target</b>. For this example lets give it a <b>targetname of elevator</b> and a <b>target of train</b> which will be the actual elevator. We havnt made the actual elevator object yet though. we will get to that next.</li><br>
	   
       <li>Now we will create the object that will be the actual elevator. Now you need to decide how you want your elevator to look. It could be simply a 1 brush platform or you could go all out and it could be a full blown 200 brush detailed elevator. Does not matter. When you are finished designing the elevator select it and turn it into a <b>func_train</b>. Yep, you heard it right...a func_train....I'll explain in a minute.</li><br>
	   
	   <li>Now give the func_train you just made a targetname and a target. The targetname for this example will be train. The target will be to the first <b>path_corner</b>. Lets call this p1. So lets recall what we have done so far: We have a <b>trigger_elevator</b> entity that is linked to a <a href="../func_train/func_train.shtml" target="_top">func_train</a> entity which is linked to a <a href="../misc/misc.shtml">path_corner</a> entity that we have <b>not</b> made yet.</li><br>
	   
	   <li>Now we need to create the actual path the elevator will follow. These will be <b>path_corner</b> entities. We will place one at each area the elevator will stop. So if there are 4 floors then we will have to make 4 path_corners. So place path_corners at each floor the elevator will be stoping on <b>INCLUDING</b> the bottom floor. It will take awhile to get the placing of the path_corners just right so that the elevator will look right.You can get them precisely placed by positioning the exact origin of the path_corner at the exact lower left corner (both top and front views) of any func_train's *bounding box*.  In the case of s nice rectangular train, this is incredibly easy to be absolutely precise.(thanks <a href="mailto:jloftus@sprintmail.com">Freznor</a>)</li><br>
	   
	   <li> Now we are going to give each path_corner a targetname and a pathtarget. Give the first one a targetname of p1, second one of p2, all the way to p4 if you will be having a 4 floor elevator. Each path_corner will also <b>HAVE</b> to have the key value pair <b>pathtarget</b>. What this is is a unique name of the elevator stop that the path_corner represents. So on this example lets say there are 4 floors. The first path_corner on the bottom floor will have a <b>pathtarget of stop1</b>. The second floor path_corner will have a <b>pathtarget of stop2</b>, third will have a <b>pathtarget of stop3</b>, and the fourth floor will have a <b>pathtarget of stop4</b>.</li><br>
	   
	   <li>Now we are going to create the <b>func_buttons</b> that will trigger the elevator. So this means that <b>each floor will have a func_button</b>. So we will create 4 func_buttons for an elevator that will be stoping on 4 floors.</li><br>
	   
	   <li> Now you must target each func_button to the trigger_elevator entity. So every func_button will have the key value pair <b>target elevator</b>, because we gave our trigger_elevator a targetname of elevator.</li><br>
	   
	   <li>The final thing we have to do is give each func_button a key value pair of <b>pathtarget</b>. This should be set to the cooresponding <b>targetname</b> of the <b>path_corner</b> that you want the elevator to stop on when the button is pressed. Recall that we have 4 path_corners each with a targetname of p1, p2, p3, and p4 respectfully. So if we wanted the elevator to take us from the top floor to the bottom floor we would set the pathtarget of the func_button on the fourth floor to p1, which is the targetname of the path_corner that is on the bottom floor. Pretty simple huh? yeah right.<br><br>
       </li>
	 </ol>
	 As you can see this is a very difficult entity to use but it is very useful and very cool. It was also very hard for me to figure out since there is no comments or anything in the code. I had to decompile a bsp file and see how id did it in one of the mine levels. Not fun. =) Here is a diagram that I might help you out a bit<br><br>
	
	<center><img src="/tutorials/quake2/tutorials/trigger_elevator/elevator.gif" width=300 height=385 border=0 alt="trigger_elevator"></center><br><br>
	
	I definitly suggest you check out the <a href="/tutorials/quake2/tutorials/trigger_elevator/trigger_elevator/elevator.zip">example</a> map and see how I got mine to work. Any other questions please post them in the <a href="http://forums.gamedesign.net/forums">discussion</a> board.<br><br>

	<p><a name="#trigger_gravity"><b>trigger_gravity</b></a> - <br>
	
	This entity at first I didn't think it worked because it was <b>NEVER</b> used in any of the id levels.(whole level gravity is set with the <a href="../worldspawn_and_more/worldspawn_and_more.shtml">worldspawn</a> entity.) It was not until I saw over at <a href="http://spq2.telefragged.com/" target="_top">Akuma's SPQ</a> that it worked. The bad thing about it is that <b>it only effects spawned entities, gernades, and gibs</b>.It has NO effect on the player. Its very simple though.<br>
      <br>
      <b>Creating the trigger_gravity</b><br>
      <br>
      First thing you need to do is just create a brush that will cover the entire area that you want to have a different gravity. It would also be a good practice to give it the trigger texture. Now turn it into the trigger_gravity entity. Pretty simple huh?<br>
      <br>
      Key Value Pairs<br>
      <br>
      <b>gravity</b> - <br>
      There is only 1 key value pair and it is pretty self explanatory. <b>gravity</b> will be the value you want the gravity to change to. Default gravity is 1, so if you want a room with low gravity set it to something like .5 or .3. If you want a room with no gravity, in which a grenade will just keep going and going, then set the gravity to 0. A negative value will make the grenades and the gibs go towards the ceiling. A real positive value will make the grenades and gibs immediately shoot towards the ground. But remember though, <b>this ONLY effects spawned entities, grenades, and gibs.</b> Nothing else is effected.<br>
      <br>
      Uses of the trigger_gravity - <br>
      <br>
      <br>
      Since the trigger_gravity entity is so limited there are not many uses for it but to confuse the player. You could have a creature that is spawned and falls from the ceiling and it would fall very slow if the gravity was low. You could have spawned gibs fly across the room very slowly. Pretty strange huh?<br>
      <br>
      Be sure to check out the <a href="../trigger_gravity/trigger_gravity.zip">example</a> map.<br>
      <br>
      If you still don't understand please post your questions to the <a href="../../quake2/discussion/quake2discussion.shtml">discussion</a> board.<br>
      <br>
	</p>
	<li><p><a name="#trigger_hurt"><b>trigger_hurt</b></a> - Another pretty easy entity to use. Its an area that you specify that when the player comes in contact with it he/she will take damage. You can specify the damage by setting the key value pair <b>dmg</b>. There are a number of spawnflags for a trigger_hurt. They are <b>start_off, toggle, silent, no_protection, and slow.</b> start_off and toggle are for trigger_hurt entities that are triggered. So you could have an area where the player wasn't taking damage but then one of their actions triggers something that causes the player to take constant damage until he/she is out of the area of the trigger_hurt. There are a lot of uses for this. <b>Slow</b> simply decreases the frequency of the damage taken. trigger_hurt can also be used for setting traps..like the floor opens and the player falls into a pit of spikes. just draw a brush covering the tips of the spikes and make it into a trigger_hurt.<br><br>
	        
	<p><a name="#trigger_key"><b>trigger_key</b></a> 
	    
	- See key_
	        
	<p><a name="#trigger_monsterjump"><b>trigger_monsterjump</b></a> - <br>
	    
	See monster_
        
	<p><a name="#trigger_multiple"><b>trigger_multiple</b></a> - <br>
	    
	The <b>trigger_multiple</b> works in basically the same exact way the trigger_once does except for a few minor details.<br><br>First of all, it can be triggered multiple times instead of just once. It also has 1 more key value pair and 1 other spawnflag.<br><br>The new key value pair is <b>wait</b>, which determines the amount of time to wait before the trigger will trigger its target again when touched by the player. An interesting thing to note is that if you assign a value of -1 to this, you will effectively have transformed your trigger_multiple into a trigger_once. Not much point in doing that but anyway... :-)<br><br>The new spawnflags is <b>monster</b>. What monster does when enabled is allows a monster or the player to use the trigger. This is opposed to not_player which allows only monsters to use the trigger. For some reason the spawnflag monster does not work for trigger_once. Strange.<br><br>As for all the other keys and spawnflags, just look at the trigger_once. They behave in the same way except for the 3 differences I mentioned above.<br><br>
        
	<p><a name="#trigger_once"><b>trigger_once</b></a> - <br>
	    
	If you have any editing experience at all then you probably know how to use this entity. What it does is triggers an event when another entity such as the player or a monster(we will go over this in a minute) touches it, but only 1 time. One thing you should know when making the brush that will be the trigger_once is that all the trigger entities that we are going to go over in this tutorial are not visable in the level so it doesn't matter where you place them. Also it is good editing practice to give the trigger_once or any other non visable brush the trigger texture. This makes it easier to see and organize in your level editor. The key value pairs for trigger_once are <b>target</b>, <b>targetname</b>, <b>killtarget</b>, <b>sounds</b>, <b>message</b>, and <b>delay</b>.<br><br><b>Target</b> is the name of the corresponding targetname that will be triggered when the trigger_once is touched by the player or a monster(see below). So if you want the trigger_once to open a door then you need to give the door a targetname of something like door1 and then set the target of the trigger_once to door1.<br><br><b>Sounds</b> is the sound that the trigger will play when the trigger_once is touched. This can be set to 0,1,2 or 3. Each corresponding to a different sound. 0 is the default "beep beep" sound and 3 is no sound. If you use 3, you will get an annoying but harmless error message in the game saying "couldn't load sound/misc/trigger1.wav" but the trigger will still work and won't make any sound. This is due to a bug in the entity code. If you open the PAK file, you will see that sound/misc/trigger1.wav doesn't exist and that's the reason why the game complains.<br><br><b>Message</b> will print to the screen whatever it is set to when the trigger_once is triggered. So if  you want the trigger_once to print "door was opened" then you would set message to "door was opened". Pretty simple. Remember to use \n to break to the next like or you will run out of space.<br><br><b>Delay</b> is the amount of time between the touching of the trigger and the actual triggering taking place. So if you have a trigger_once targeted to a target_explosion, setting delay=2 will create a 2 second delay between the touching and the explosion.<br><br><br><br><b>Targetname</b> is used along with the <b>triggered</b> spawnflag (see below).<br><br><br><br><b>Killtarget</b> will remove any entity that has a matching targetname. You can target pretty much any entity you want with this, including monsters. If you target a monster with killtarget, it won't gib or anything, it will just disappear.<br><br>The 2 spawnflags that can be turned on for a trigger_once are <b>not_player</b> and <b>triggered</b>.<br><br><b>not_player</b> is not listed on any of the entity references but it is there. Just set the <b>spawnflag 2</b> and not_player will be turned on. What not_player does is makes it so the player has no effect on this trigger_once. Something like a monster must touch it and trigger it. This can be used for a variety of cool things. A monster could trigger a trap on the player or could spawn more monsters that would actually come to the place of the trigger. This could give the effect of the monster calling for reinforcements. Very cool.<br><br>The <b>triggered</b> spawnflag makes it so the trigger_once must be triggered itself to be turned on. So therefore, if this spawnflag is on then the trigger_once must have a <b>targetname</b>. What you should remember though is that the trigger_once that is triggered by another entity will NOT actually trigger its own targets when it is triggered. The trigger_once will only become "live" or "enabled" if you will. So after it is triggered, the player will have to touch it for it to trigger its targets. That sure was a mouthful. =) That's about as easy as I can explain it though. An example of a way to use this is the following:<br><br>Lets say that you have a huge level in which the player walks across a bridge to get into the strogg base. Later near the end of the level after he defeats the boss alien he unknowingly walks across a trigger_once that in turn makes another trigger_once near the bridge live. The player now has to exit the base and walk back across the same bridge. Well..the trigger_once that was just made live triggers the bridge to explode as the player is walking over it and he falls into the river getting into more trouble. Hope this kind of helped. I know it's kind of stupid though. hehe.<br><br>
	        
	<p><a name="#trigger_push"><b>trigger_push</b></a> - <br>
	    
	This is the same as it was in quake1. Use it to push the player in a given direction. You can specify the speed by setting the the key value pair <b>speed</b>. You can also make the push only work once by setting the <b>spawn_flag push_once</b>.<br><br>
	        
	<p><a name="#trigger_relay"><b>trigger_relay</b></a> - <br>
	    
	This is used to relay actions. This can be used for a variety of effects and is used very often in the id levels. a trigger_relay is not triggered when touched so therefore it must have a targetname and must be triggered by something else to work. It must also have a target. The other keys that can be set is <b>delay</b>, which determines the amount of time to pause before triggering it's target, <b>killtarget</b> and <b>message</b>. There are <b>NO</b> spawnflags. An example use of this would be to have a crate that when shot explodes, but when it explodes it triggers more explosions in the surrounding areas. What you would do is create the func_explosive crate and give it a target to a trigger_relay which in turn would target multiple target_explosions that would all have the same targetname. Or you could target several trigger_relay's all with different delay values that each in turn target their own func_explosive crates so you can have a sequence of timed explosions for cool effects. Hope this explains it a bit.<br><br>
        
	<!-- End description -->
        
	</ul>
    </ul><h1 id="39" name="39" class="book-h3">Turret</h1><ul><h3>Quake 2 Turret Entities</h3><p>

	<!-- Start description -->

	<p><a name="#turret_base"><b>turret_base</b></a> - This enitity along with <b>turret_breach</b> and <b>turret_driver</b> all must be used together to create those cool gun turrets that are in 2 of the quake2 levels. These entities are by far the hardest I have come across to use in a level and only advanced level editors should attempt this. I would of never of figured it out if it wasn't for steve at the <a href="http://www.planetquake.com/QuakeLab/QuakeLab2/" target="_top"><b>quakelab</b></a> telling me to specify an origin for the turret_breach and turret_base. We will get to that though in due time.<br><br>
	
	The first thing you need to do is to <b>create the gun</b>. This might take awhile to make it look good. Here is a shot of the id one:<br>
	
	<br><center><img src="/content/quake2/tutorials/turret/gunpic1.JPG" width=250 height=143 border=0 alt="gunpic"></center><br><br>
	
	You must also make everything <b>orientated towards angle 0</b>(straight right from a top view), The trick is to kind of <b>make it into 2 parts. The barrel and the base.</b> the barrel is the part that is going to be the turret_breach and the base is going to be the turret_base. Also take into consideration that the creature driving the gun will be standing on the turret_breach so actually <b>the turret_breach will include the barrel and the platform that the turret_driver will be standing on.</b> Here is another visual example to show you what the hell I am talking about:<br><br><center>here is the barrel which includes the barrel and the platform for the driver to stand on(<b>turret_breach</b>)<br>
	
	<img src="/content/quake2/tutorials/turret/barrel.jpg" width=250 height=52 border=0 alt="barrel"><br><br>
	
	Here is the base(<b>turret_base</b>)<br>
	
	<img src="/content/quake2/tutorials/turret/base.JPG" width=250 height=146 border=0 alt="turret_base"><br><br>
	
	Here is the barrel(<b>turret_breach</b>) and the base(<b>turret_base</b>) together<br>
	
	<img src="/content/quake2/tutorials/turret/both.jpg" width=250 height=70 border=0 alt="turret_breach and turret_base"></center><br><br>
	
	Once you get these 2 parts made then you must <b>select the barrel and make it a turret_breach, and select the base and make it a turret_base.</b> Now you must <b>give the turret_breach a targetname</b>. So for this example lets give it a targetname of breach. <b>targetname=breach</b>. The turret_breach and the turret_base go together so <b>they must be teamed</b>. To do this give each of these entities the key value pair <b>team</b> with the same value. For this example lets give them a team name of gun. So on <b>both</b> the turret_breach and the turret_base there should be a key value pair of <b>team gun</b> Now you must decide which direction you want your gun to point in the game and <b>set the key value pair angle to what ever direction you want the gun to point.</b> <b>BOTH</b> the turret_breach and the turret_base should have the same angle. For this example we will set the angle to be 180. <b>angle 180</b>.<br><br>
	
	Next thing you must do is create the target that the gun will shoot at. To do this you must <b>create an info_notnull entity and place it at the tip of the barrel and give it a targetname.</b> For this example our info_notnull will have a targetname of tip. <b>targetname tip</b>. Then <b>set the target of the turret_breach to the info_notnull</b>. <b>target=tip</b>.<br><br>
	
	Next thing you need to do is to <b>create the turret_driver and target it to the turret_breach.</b> target=breach. Place the turret_drive where you want him to be standing(on the platform you made him on the turret_breach)<br><br>
	
	Now to the part that I couldn't figure out but steve at the <a href="http://www.planetquake.com/quakelab/quakelab2/" target="_top">quakelab</a> helped me out on. For the turret_breach and the turret_base <b>you must have a brush set as an origin brush</b>. These will keep gun from rotating all around the room and looking really messed up. So the turret_breach <b>must</b> have an origin brush and the turret_base <b>must</b> have an origin brush. To make a brush an origin brush you must <b>change the surface property</b> of that brush and set the origin flag. This is done differently for each editor. Check your manual. It is better to select origin brushes that for breach and the base that are near each other. Here is a diagram of what brushes i made into origin brushes.<br><br>
	
	<center><img src="/content/quake2/tutorials/turret/complete.JPG" width=400 height=168 border=0 alt="complete"></center><br><br>
	
	Thats about all there is too it. As you can see this is a <b>very</b> difficult entity to use. Not very fun at all. I urge you to download my <a href="/content/quake2/tutorials/turret/rust7.zip">example</a> map if you are going to try do this. If you still have problems post your question in the <a href="http://forums.gamedesign.net/forums">discussion</a> board and I will try to help you out.<br><br>
	
	<p><a name="#turret_breach"><b>turret_breach</b></a> - See turret_base
	
	<p><a name="#turret_driver"><b>turret_driver</b></a> - See turret_base
	<!-- End description -->

	</ul>
</ul><h1 id="40" name="40" class="book-h3">Weapons</h1><ul><h3>Quake 2 Entities</h3><p>


	
	<!-- Start description -->
	<p><a name="#weapon_bfg"><b>weapon_bfg</b></a> - Most powerful weapon. Takes ammo_cells
	
	<p><a name="#weapon_chaingun"><b>weapon_chaingun</b></a> - Wastes lots of ammo_bullets
	
	<p><a name="#weapon_grenadelauncher"><b>weapon_grenadelauncher</b></a> - Takes ammo_grenades
	
	<p><a name="#weapon_hyperblaster"><b>weapon_hyperblasters</b></a> - Very good weapon that takes ammo_cells
	
	<p><a name="#weapon_machinegun"><b>weapon_machinegun</b></a> - Takes ammo_bullets
	
	<p><a name="#weapon_railgun"><b>weapon_railgun</b></a> - Slow firing powerful gun that takes ammo_slugs
	
	<p><a name="#weapon_rocketlauncher"><b>weapon_rocketlauncher</b></a> - Takes ammo_rockets
	
	<p><a name="#weapon_shotgun"><b>weapon_shotgun</b></a> - 2nd gun that takes ammo_shells
	
	<p><a name="#weapon_supershotgun"><b>weapon_supershotgun</b></a> - Awesome weapon that takes ammo_shells. shoots 2 at a time
	
	<!-- End description -->
</ul><h1 id="41" name="41" class="book-h3">Worldspawn</h1><ul><h3>Quake 2 Worldspawn Entities</h3><p>

<p><a name="worldspawn"><b>worldspawn</b></a> - This entity has got to be one of the easiest entities to use, (hence one of the easiest tutorials to write, heh) but it adds immensely to the completeness of a level.<br><br>

If you've compiled and run a map, you've already used worldspawn. There are, however, a few keys that you can add to it, that change the environment throughout the map. These are: <br><br>

<blockquote>		
	<strong>sky -</strong> 
	
<blockquote>
	This key changes the environment map for the level. In order to use it, add the <strong>&quot;sky&quot;</strong> key, and give it the value of the sky you wish to use. The environment maps included in Quake II are <strong>unit1_</strong> through<strong> unit9_</strong> and <strong>space1</strong>. 
</blockquote>
	
	<strong>skyaxis -</strong> <blockquote>
	
	If you would like to have a rotating sky, like in the final boss level, you'll need to define an axis for the sky to rotate around. Simply add a key of <strong>&quot;skyaxis&quot;</strong> and give it a vector using three numbers (vectors are the same values that define projectile paths, and line of sight for monsters.) If you don't quite know vectors, just play around with the numbers until you find one you like. Don't use 0 0 0 however, as this will give you a hall of mirrors effect. (doesn't define a vector, so it doesn't draw the sky) 0 0 1 will give a flat rotation.</blockquote><br><br>
	
	<strong>skyrotate -</strong>
	
<blockquote>
	This controls the speed of rotation for the sky. Add the <strong>&quot;skyrotate&quot;</strong> key, and give it a value in degrees per second.
</blockquote>
	
	<strong>sounds -</strong>
	
<blockquote>
		This is the CD track that will play during the level. Add the <strong>&quot;sounds&quot;</strong> key, and give it a track number.
</blockquote>
	
	<strong>gravity -</strong> 

<blockquote>
	This controls the gravity level. Default is 800. The gravity in the <strong>Comm Sattelite</strong> level is set at 100. 
</blockquote>
	
	<strong>message -</strong> 
	
<blockquote>
	This is the text that will appear at the console when you begin the level, and in the computer. Anything more than 32 characters, and you'll get a warning at the beginning of the level. Add a key of <strong>&quot;message&quot;</strong> and give it a value of whatever the title of 			the level is. 
</blockquote> <br>
</blockquote>



-GrrandMaMa<BR><BR>
	
	
</ul><h1 id="12" name="12" class="book-h1">Quake III Arena</h1><ul><center><img border="0" width="450"  src="content/quake3/banner/banner.jpg" align="center" alt="Quake III Arena level Editing" title="Quake III Arena level Editing">
<h3>Quake III Arena Level Editing</h3><br><small>Quake III Arena is a multiplayer first person shooter game by <a href="http://www.idsoftware.com">ID Software</a>.</small></center>
<p class="q3bg1"><img src="/images/qiii-bg1a.jpg" align="left" hspace="5" vpsace="0" alt="Quake III Arena" title="Quake III Arena">The Quake III Arena section covers vanilla Quake3 information, QIII tutorials, Q3 Entity descriptions, & QIII FAQs. Further contribution is greatly welcomed.<br><br>The Fallen, Pagans, Crusaders, Intruders, and Stroggs all duel together in arenas specifically designed for Free-for-all, Capture-the-flag, Team-deathmatch and Deathmatch type games. Traversing lava pits, crushing blocks, underwater tunnels and starless space you battle for supremecy using gauntlet, machinegun, shotgun, plasmagun, lightning gun, railgun, rocket launcher, grenade launcher and bfg!<!--break--><br><br>If you have any immediate questions check out the <a href="http://forums.gamedesign.net/viewforum.php?f=15">RUST Quake III Arena Forums</a> for fast feedback on any Quake III Arena Questions, Chat, Gossip ... etc. What these guys don't know isn't worth knowing. Also visit the <a href="http://en.wikipedia.org/wiki/Quake_III_Arena">Quake III Arena Wiki</a></p>
<hr noshade color="black"><!--break-->      </ul><h1 id="601" name="601" class="book-h2">Updates/Downloads for Quake III</h1><ul><h3>Quake III Updates/Patches</h3></ul><h1 id="801" name="801" class="book-h3">Downloads (ID Software/Official)</h1><ul><h3>Downloads via ID Software</h3>
The following is the official download list provided by ID Software. These are the links found in the Quake download area of ID. Excluding the links to Quake II and Quake I files.
<!--break-->
<table width="100%" cellspacing="3" cellpadding="1" border="0">
<tr bgcolor="#FF6666"><td align="right"><b>Title</b></td>
<td align="center"><b>Size</b></td>
<td align="center"><b>Format/Download Link</b></td></tr>
<tr bgcolor="#C7B9A4"><td align="right">Q3 Arena Demo</td>
<td align="center">50MB</td>
<td align="center" nowrap>Win32 - Linux - Mac<br> <a href="http://www.activision.com/downloads/253.asp" target="_blank">File</a> 
- <a href="http://www.activision.com/downloads/256.asp" target="_blank">File</a> 
- <a href="http://www.activision.com/downloads/254.asp" target="_blank">File</a></td></tr>
<tr><td align="right">Q3: Team Arena Demo</td>
<td align="center">127MB</td>
<td align="center" nowrap>Win32 - Mac<br> <a href="ftp://ftp.idsoftware.com/idstuff/teamarena/TeamArenaDemo.exe">File</a> 
- <a href="ftp://ftp.idsoftware.com/idstuff/teamarena/mac/tademobeta.bin">File</a></td></tr>
<tr bgcolor="#C7B9A4"> 
<td align="right">Q3A 1.27g Point Release</td>
<td align="center">18MB</td>
<td align="center" nowrap>Win32 - Mac<br> <a href="ftp://ftp.idsoftware.com/idstuff/quake3/win32/q3pointrelease_127g.exe">File</a> 
- <a href="ftp://ftp.idsoftware.com/idstuff/quake3/mac/mac127beta.bin">File</a></td></tr>
<tr><td align="right">Q3A 1.27g Game Src.</td>
<td align="center">2.2MB</td>
<td align="center" nowrap>Win32 <a href="ftp://ftp.idsoftware.com/idstuff/quake3/source/Q3A_TA_GameSource_127.exe">File</a></td></tr>
<tr bgcolor="#C7B9A4"> 
<td align="right">Q3A 1.27g Tool Src.</td>
<td align="center">1.5MB</td>
<td align="center" nowrap>Win32 <a href="ftp://ftp.idsoftware.com/idstuff/quake3/source/Q3A_ToolSource.exe">File</a></td></tr>
<tr><td align="right">Q3A 1.17 Game Src.</td>
<td align="center">1.3MB</td>
<td align="center" nowrap>Win32 <a href="ftp://ftp.idsoftware.com/idstuff/quake3/source/q3agamesource_117.exe">File</a></td></tr>
<tr bgcolor="#C7B9A4"> 
<td align="right">Q3A Tools</td>
<td align="center">4.5MB</td>
<td align="center" nowrap>Win32 <a href="ftp://ftp.idsoftware.com/idstuff/quake3/tools/q3toolsetup.exe">File</a></td></tr>
<tr><td align="right">-- Q3A Tools Patch</td>
<td align="center">1.3MB</td>
<td align="center" nowrap>Win32 <a href="ftp://ftp.idsoftware.com/idstuff/quake3/tools/q3toolsetup_mar172000.exe">File</a></td></tr>
<tr bgcolor="#C7B9A4"> 
<td align="right">Q3Radiant Manual</td>
<td align="center">600KB</td>
<td align="center" nowrap>HTML - .DOC - .PDF<br> <a href="ftp://ftp.idsoftware.com/idstuff/quake3/tools/q3rmanhtml.zip">File</a> 
- <a href="ftp://ftp.idsoftware.com/idstuff/quake3/tools/q3rmanpc.zip">File</a> 
- <a href="ftp://ftp.idsoftware.com/idstuff/quake3/tools/q3rmanpdf.zip">File</a></td></tr>
<tr><td align="right">Q3A Bot Edit Docs.</td>
<td align="center">19KB</td>
<td align="center" nowrap> Win32 <a href="ftp://ftp.idsoftware.com/idstuff/quake3/tools/q3abotedit.zip">File</a></td></tr>
<tr bgcolor="#C7B9A4"> 
<td align="right">Q3A Shader Manual</td>
<td align="center">962KB</td>
<td align="center" nowrap>.DOC <a href="ftp://ftp.idsoftware.com/idstuff/quake3/tools/q3ashader_manual.doc">File</a></td></tr>
<tr><td align="right">Terrain Construction Manual</td>
<td align="center">70KB</td>
<td align="center" nowrap>.DOC <a href="ftp://ftp.idsoftware.com/idstuff/teamarena/docs/terrainconstruction_1.zip">File</a></td></tr></table></ul><h1 id="602" name="602" class="book-h3">Patch (Version 1.32/Latest)</h1><ul><h3 align="center">Quake III Arena Version 1.32 Patch</h3><p class="q3bg1">The latest Quake III Arena updates are always found at <a href="http://www.idsoftware.com/">ID Software</a>. The following is a list of the latest fixes.<br><br>Here are some locations to download the 1.32 Patch/es.<ol>
    <li><a href="http://planetquake3.net/download.php?op=viewdownloaddetails&lid=1150" target="_blank">PlanetQuake 
      1.32 Quake III Arena patch download</a></li>
    <li><a href="http://www.avault.com/pcrl/patches_temp.asp?patch=quake3arena" target="_blank">The 
      Adrenaline Vault Quake 3 Arena patches</a></li>
    <li><a href="http://www.voodoofiles.com/8180" target="_blank">Vodoo Files 
      1.32 QIII Arena patch download</a></li>
    <li><a href="http://www.3dgamers.com/news/more/1036379327/" target="_blank">3D 
      Beta Gamers 1.32 Q3 patch for the MAC download</a></li>
    <li><a href="http://www.megagames.com/news/html/patches/quakeiiiarenapointreleasev132final.shtml" target="_blank">Megagames 
      1.32 QIIIArena patch download</a></li>
    <li><a href="http://www.softwarepatch.com/games/quake3.html" target="_blank">SoftwarePatch 
      1.32 Quake 3 patch download</a></li>
  </ol>
</p>
<hr noshade width="75%" align="center">
<h3>1.32 updated 10.9.02</h3>
<p><b>General:</b><br>
<blockquote class="tinytext"> - new network protocol, 68<br>
- network code:<br><br>
~ improved fragmented messages handling<br>
~ map change while client loads map no longer causes an 'Invalid .PK3' error<br>
~ map_restart while client loads map no longer causes a reload<br>
~ fixing donedl being ignored after autodl if map_restart'ed<br>
- the demo command has a list of compatible protocols, it will loop through 66 67 68. You can do '/demo four' and it will try four.dm_66 four.dm_67 four.dm_68, or you can explicitely give a '/demo demoname.dm_??'<br>
- added mousewheel support in the console:<br><br>
~ wheel to scroll, ctrl+wheel to scroll faster, shift+wheel to scroll history<br>
- UI in baseq3/ and missionpack/ for PunkBuster configuration. Punkbuster server in server creation dialog (sv_punkbuster) Punkbuster client in server browser (cl_punkbuster) added PB Yes/No to the browsers<br>
- removed obsolete MPlayer UI stuff<br>
- bumped server browser to handle up to 4096 servers<br>
- IP maintained in userinfo<br>
- cl_guid in userinfo (as part of PB integration)<br>
- printing ports as unsigned ints, no longer printing negative port numbers <br>
- cleaned up the legacy IP banning code<br><br>
~ use * for IP pattern matching now instead of 0 (fixes some confusion)<br>
~ ex: 192.246.12.*<br>
~ made it safe from overflowing and crashing<br>
~ NOTE: using PunkBuster's banning system is advised instead though<br>
- rcon: some fixes to the buffering to avoid overflowing and dropping parts of the message<br>
- rcon: now supports quoting /rcon g_motd "foo bar"<br>
- added SVF_CLIENTMASK (0x00000002), works only with <= 32 players set bitmask of players to which send entity<br>
- pushed cl_maxpackets upper limit to 125<br>
- added [skipnotify] from RTCW, use to display in the console only, but not on client screen (also fixes pb_msgprefix and pb_sv_msgprefix)<br>
- new cvar sv_lanForceRate (defaults 1):<br><br>
- forces LAN clients to the maximum rate instead of accepting client setting (1 is the default behaviour, backward compatible)<br>
- new cvar sv_strictAuth (defaults 1):<br><br>
- server side variable to control wether strict CDKEY auth should be performed with the auth server<br>
- this is required if you want reliable cl_guid for the server (for users tracking)</blockwuote>
  <div class="tinytext">- filesystem: client re-orders it's pk3s according to 
    the order given by server (fixes some 'Invalid .PK3 files referenced' situations<br>
    - fixed invisible entities/players bug (thanks goes to Rick Johnson / Raven 
    for this one!)<br>
    - update x86 VM code (better and safer optimisations) (Richk Johnson / Raven 
    too)<br>
    - clearing client gentity before GAME_INIT call<br>
    - failing vote if there's only one voting client (fixes exploit on 2-player 
    server where one player votes then disconnects, forcing vote to pass)<br>
    - added trap_FS_Seek<br>
    - renderer fix: if client game code registers a shader after drawsurfaces 
    are generated but before frame is rendered had a one-frame visual glitch (shader 
    indexes messed up)<br>
    ~ r_roundImagesDown 0 + map q3dm1 -> crash (buffer overflow fix)<br>
    ~ fixed a crash in widescreen displays (q3dm11)<br>
    ~ MAX_SHADERS up to 2^12<br>
    ~ moved screenshot from frontend to backend, fixes broken r_smp 1 screenshots</div>
</blockquote>
<p> <strong>TA fixes:</strong></p>
<blockquote>
  <div class="tinytext"> - MOD_KAMIKAZE MOD_JUICED logging properly to games.log<br>
    - fixed bot taunt spamming<br>
    - fixed typo in scripts/models2.shader (shader error Ursula head)</div>
</blockquote>
<hr noshade color="black">
<p><b>Win32 specific:</b></p>
<blockquote>
  <div class="tinytext">- fixed the DirectInput mouse init procedure<br>
    - rcon: fixed rcon not working on NT/2000/XP workstations that have a long 
    uptime</div>
</blockquote>
<hr noshade color="black">
<p><b>Linux specific:</b></p>
<blockquote>
  <div class="tinytext">- no longer trying to load libMesaVoodooGL.so obsolete 
    code, was confusing when trying to setup correct OpenGL acceleration<br>
    <br>
    - SMP support in the renderer. Detects CPU count, r_smp 1 default if available. 
    (thanks to Gareth Hughes for contributing this)<br>
    <br>
    - changed default GL driver from libGL.so to libGL.so.1 see LSB 1.2 spec:<br>
    - <a href="http://www.linuxbase.org/spec/refspecs" target="_blank">http://www.linuxbase.org/spec/refspecs</a><br>
    - Handle Ctrl and Space key together correctly (Ctrl was disabling Space)<br>
    - sub-frame timing of input events (key/mouse) (input timing quality now equivalent 
    to win32)</div>
</blockquote>
</ul><h1 id="680" name="680" class="book-h3">Patches (Quake III/Other)</h1><ul>So you've got Quake III Arena now but don't think you're ready for 1.32 servers or you know a community somewhere that's playing online using 1.16 or some other version. this is the place for you.<br><br>
<div class="q3bg1"><strong>OFX QIII Switcher</strong>
<a href="http://www.ofxclan.com/modules.php?name=Downloads&d_op=viewdownloaddetails&lid=20&ttitle=OFx_Q3_Version_Switcher_v2.05_Full_Install" target="_blank">This utility</a> 
will allow anyone running v1.32 of Quake 3 to revert back to older versions 
of the game should a particular server require it. 1.16n, 1.17, 1.27g, 1.29h, 
1.30, 1.31, 1.32 supported. Can be used to select at game launch! - Win32 <br><br>
<strong>OFx Q3 Version Switch 2.02 &gt; 2.05 Update</strong>
Use <a href="http://www.ofxclan.com/modules.php?name=Downloads&d_op=viewdownloaddetails&lid=21&ttitle=OFx_Q3_Version_Switch_2.02%2B_%3E_2.05_Update" target="_blank">this version switcher</a> 
only if you already have v2.02 of the OFx Q3 Version Switch installed. Use this 
to overwrite/replace previous Q3Switch.exe executable. And then run the OFxUpdater.exe 
to setup required file(s).</div><br>
<h3>Previous to 1.32 Patch Downloads</h3>
<strong>1.16n QIII Patch Downloads</strong> 
<blockquote class="q3bg2"><a href="http://www.ofxclan.com/modules.php?name=Downloads&d_op=viewdownloaddetails&lid=1&ttitle=Quake_3:_Arena_Point_Release_1.16n" target="_blank">Old Fart Xtreme Gaming</a><br>
<a href="http://downloads.gameplanet.co.nz/dl.dyn/Files/2306.html">GamePlanet</a></blockquote>
<strong>1.17 QIII Patch Downloads</strong>
<blockquote class="q3bg2"><a href="http://www.ofxclan.com/modules.php?name=Downloads&d_op=viewdownloaddetails&lid=6&ttitle=Quake_3:_Arena_Point_Release_1.17" target="_blank">Old Fart Xtreme Gaming</a><br>
<a href="http://downloads.gameplanet.co.nz/dl.dyn/Files/2307.html">GamePlanet</a></blockquote>
<strong>1.27g QIII Patch Downloads</strong>
<blockquote class="q3bg2"><a href="http://www.ofxclan.com/modules.php?name=Downloads&d_op=viewdownloaddetails&lid=7&ttitle=Quake_3:_Arena_Point_Release_1.27g" target="_blank">Old Fart Xtreme Gaming</a><br>
<a href="http://downloads.gameplanet.co.nz/dl.dyn/Files/2521.html">GamePlanet</a></blockquote>
<strong>1.29h QIII Patch Downloads</strong>
<blockquote class="q3bg2"><a href="http://www.ofxclan.com/modules.php?name=Downloads&d_op=viewdownloaddetails&lid=8&ttitle=Quake_3:_Arena_Point_Release_1.29h" target="_blank">Old Fart Xtreme Gaming</a></blockquote>
<strong>1.30 QIII Patch Downloads</strong>
<blockquote class="q3bg2"><a href="http://www.ofxclan.com/modules.php?name=Downloads&d_op=viewdownloaddetails&lid=5&ttitle=Quake_3:_Arena_Point_Release_1.30" target="_blank">Old Fart Xtreme Gaming</a></blockquote>
<strong>1.31 QIII Patch Downloads</strong>
<blockquote class="q3bg2"><a href="http://www.ofxclan.com/modules.php?name=Downloads&d_op=viewdownloaddetails&lid=2&ttitle=Quake_3:_Arena_Point_Release_1.31" target="_blank">Old Fart Xtreme Gaming</a></blockquote></ul><h1 id="703" name="703" class="book-h3">Quake III Arena Modifications</h1><ul><h3>List of Quake III Arena Mods</h3>
<p class="q3bg1"><b>(<a href="http://dictionary.reference.com/search?q=modification">Modification</a>) A term referring to..</b> a change made to a published game. Mods are almost always made by fans of the game and are usually encouraged by the developers. Mods go beyond simply creating a level, usually changing the game in ways by adding elements or altering the rules and codes. For example: one popular mod for the game Quake III involves the addition of a grappling hook weapon which allows players move around the game world in ways the developer never intended. The grappling hook was not part of the original game.<br><br>
When id Software released Quake III Arena, they released many files that make it possible for people with certain skills to modify the original Quake III Arena game code. A modification(mod) is a game based on the Quake III Arena gaming engine. All mods for Quake III Arena are free. Some of them make only small changes [like making weapons more powerful], while others are more complex and create a total conversion(TC).</p>
<p class="q3bg2"><b>Use the list below</b> to learn more about the various modifications available for Quake III Arena.</p></ul><h1 id="893" name="893" class="book-h4">CPMA Challenge ProMode  Arena</h1><ul><center><h3>Challange Pro Mode Arena</h3>info provided by the Promode website</center>
<p class="q3bg1"><a href="http://www.promode.org">Promode</a> The Challenge Pro Mode (CPM) project was created by Richard 'Hoony' Sandlant in May 1999 (when the 'Q3test' was released) after he realised that Quake 3 Arena was going to have a lot of "newbie-friendly" features and after John Carmack admitted a more challenging version might be better for professional gamers (which is where the name "pro mode" came from).<br><br>The Challenge Pro Mode's goals were, first and foremost, to make a more exciting and challenging game to play and we hoped that this would help advance Q3 into a professional sport. Along the way we made a choice between making only small conservative changes to Q3A, and making the changes that our design team recommended. We took the path of making the changes that our design team felt were necessary.<br><br>Our approach was to form an international project team and to separate "Design" from "Programming". While the programming team might have input into the design process they didn't make final design decisions - that was left to a team of experienced Quake players who tested changes using a "tweaks" mod. The design team consisted of players with a mix of competitive experience across Q1, Q2, Q3 and even UT.<br><br>Before the design team began their work we asked the community to 'brainstorm' a list (called the "candidates list") of all the possible changes they would like to see (some were contradictory). We also asked noted commentators (pundits) in the community what they thought might be best. The designers took note of all of these suggestions, and used a long process of tweaking and testing to develop the Challenge Pro Mode design. The team released two public betas of their work for feedback and input from the community.<br><br>And that is pretty much how the project team has worked ever since. The result is a gameplay design which we think is "finely tuned".<br><br>As the work progressed, the Challenge Pro Mode team expanded to include many mappers, programmers, and talented people, but the biggest development was undoubtedly when Kevin 'arQon' Blenkinsopp added 'Multi-Arena' functionality in 2001.<br><br>Challenge Pro Mode became 'Challenge Pro Mode Arena' (CPMA) and arQon became the project's Lead Programmer, spending an enormous amount of time to turn CPMA into the most advanced FPS competition mod of it's type in the world.<br><br>The number of active players who play CPMA competitively has never been huge, but the number of people who have downloaded the mod is VERY large - close to 200,000 downloads at the time of writing, although there are overlaps due to new versions being released. A better indicator is probably the number of downloads on CHTV of CPM Map Packs - around 30,000. Another indicator is the popularity of CPMA demos and the number of CPMA competitions - there have been 2 or 3 'significant' CPMA competitions each year (in the US and EU) and CPMA demos are widely acknowledged (even by gamers who don't play CPM) to be among the most exciting 'Quake' demos around.<br><br>As we go forward into an uncertain future (with DOOM3 and Quake 4 looking to be slower, more 'realistic' games) it is great to have 'our own game' to play around with. Thanks largely to arQon listening closely to the community and working on adding great features, the mod is really advanced now, truly worthy of its name: 'pro mode'. It is great to see an active mapping community constantly seeking feedback on new maps designed for competitive play using CPMA. It's also well worth it when the most talented CPMA players compete and new demos are released for all to enjoy.<br><br>Given that the playability of CPMA is actually increasing as computers become more and more capable of rendering the game at high FPS, and given the fact that QW is still played competitively and beloved by Quake players all over the world, the CPMA team feel that there are a few more good years left in CPMA and we recommend that - if you want a real challenge - you give it a try.</p>
<ul><li> <a href="http://www.challenge-tv.com/index.php?mode=filedetail&file=134">CPMA 1.31 Full</a></li>
<li><a href="http://www.challenge-tv.com/index.php?mode=filedetail&file=129">CPMA 1.0</a></li>										
<li><a href="http://www.challenge-tv.com/index.php?mode=filedetail&file=133">Map Pack 5</a></li>
<li><a href="http://www.challenge-tv.com/index.php?mode=filedetail&file=166">Map Pack 6</a></li>
<li><a href="http://www.challenge-tv.com/index.php?mode=filedetail&file=106">1.31 Upgrade</a></li></ul>										</ul><h1 id="911" name="911" class="book-h4">Frantiq - Incomplete Mod</h1><ul><center><h3>Fratiq - Incomplete Modification</h3>Courtesy of the <a href="http://www.planetquake.com/spitfire">Spitfire Studios website</a></center><br><br>
<p class="q3bg3"><a href="http://www.planetquake.com/spitfire/frantiq.htm">Official Site</a> - Again, like Q3a, FrantiQ has a 'story' behind it. The full story will be available in single player mode, but here is a brief: An archaelogical discovery leads to developments in slip technology, but it is soon discovered slipping puts the mind into a frantic state - with violent consequences. The Arenas are established as the solution...<br><br><!--break-->The gameplay is based on the story and essentially the name of the game - frantic. As the end of level nears, the intensity of the game increases. All features have been designed to meet this overall idea as well as making the game fun and easy to play.<br><br>New gameplay modes are also in development, such as PaniQ, an elimination type game where time is your enemy, unlike clan arena where getting fragged will get you out. No longer can you hide to stay in the game...</p></ul><h1 id="910" name="910" class="book-h4">ICE - In Game Item Editing Mod</h1><ul><h3>ICE  - Item Configuration Editor</h3>
<p class="q3bg1b"><b>Author</b>: Janus, MTE,. JaB, Blakjack, Pusher, Terak</p>
<p class="q3bg1b"><a href="http://www.fileplanet.com/dl.aspx?/planetquake/spitfire/ice-beta1-2.zip">Download Beta1 Revision2</a><br><a href="http://www.planetquake.com/spitfire/ice/manual/manual.htm">Manual</a><br><a href="http://www.planetquake.com/spitfire/ice.htm">Official Site</a><br><br>ICE is a Quake 3 mod that lets the player change the layout of items and other entities in maps. Originally an acronym for Item Configuration Editor, we just call it ICE now that entities other than items are supported.<br><br>ICE introduces a new gametype, the editor, in which players can add, remove, and move around map items to their satisfaction. These new item layouts can be saved to file and then loaded along with existing maps in the actual game. It can be used to give tired maps a new spark, test item layouts in new maps, or enable other mods with different entities to use vanilla maps without recompiling them.</p></ul><h1 id="707" name="707" class="book-h4">Insta-Unlagged - HPB's Revenge</h1><ul><center><h3>Insta-Unlagged</h3>info provided by the IU website</center>
<p class="q3bg1"><a href="http://www.digitaldelay.net/InstaUnlagged">Insta-Unlagged</a> is every 56ker's dream; the arena for HPB's Revenge on all the evil LPB's that roam the world of Quake III. All the features of InstaGib (plus many more) with the power of <a href="technology.cfm">Unlagged technology</a>. <br><br>Although <a href="http://www.digitaldelay.net/InstaUnlagged">Insta-Unlagged</a> has all the features of Instagib+, it is not an Instagib copycat. With four new gametypes  and over 30 server variables, <a href="http://www.digitaldelay.net/InstaUnlagged">Insta-Unlagged</a> takes instagib to a whole new level. New features include: accuracy and holyshit awards, spawn waiting, spawn protection, rounds, control over weapon cycle and spread, control over knockback (per self, opponent, and teammate), railjumping, /ready command, control over splash damage as well as self and falling damge, plus much more.<br><br>The 1.0 Release of <a href="http://www.digitaldelay.net/InstaUnlagged">Insta-Unlagged</a> also includes a beta version of a small application to help users easily setup
Insta-Unlagged servers. In its current state the application merely lists all configurations in the Insta-Unlagged
sub-directory and allows the user to choose which one they would like to use. Once the user has made his choice, 
the application asks the user what type of server they would like to run. The program then executes Q3A with these
parameters and creates the server.<br><br>Learn more about the new gametypes... <br>
<ul><li> <a href="http://www.digitaldelay.net/InstaUnlagged/technology.cfm">Learn more about Unlagged technology...</a></li>
<li> <a href="http://www.digitaldelay.net/InstaUnlagged/cfgarena.cfm">Learn more about my upcoming mod CFG Arena...</a></li>										
<li> <a href="http://www.digitaldelay.net/InstaUnlagged/features.cfm">Complete Feature List...</a></li>
<li> <a href="http://www.digitaldelay.net/InstaUnlagged/files.cfm">Download Insta-Unlagged 1.1</a></li></ul>										

<p class="q3bg2"><b>NOTE:</b> This is a server-side only modification (mod) to Quake III Arena. This means that only those people who wish to run servers should download this mod. </p>	</ul><h1 id="889" name="889" class="book-h4">Maldavria</h1><ul><center><h3>Maldavria - Modification</h3>Courtesy of the <a href="http://www.skyroadz.tk">Maldavria website</a></center><br><br>
<p class="q3bg3"><a href="http://www.planetquake.com/maldavria/">Official Site</a> - Maldavria is a modification of Quake III Arena.<br><br>Prepare to enter a world where hi-tech and fantasy meets in a unique mix of action. In Maldavria the Melazin race faces the evil Garaehl in a battle to destroy each other. With gods at their sides the only way to destroy each other is to control the devine items known as Artifacts.<br><br>Create your own character and fight for your race with futuristic weapons and ancient magic at your disposal! Large Scale Hi-Tech & Fantasy Warfare awaits you...  More info in <a href="http://www.planetquake.com/maldavria/story.html">The Story</a></p>
<!-- break -->
<h3>Maldavria Downloads</h3>
Full version of Quake III Arena with Point Release 1.30 is required!<br>
<br>
<b>Beta1</b> [.zip] (40 MB) from:<br><br>
<table width="100%" class="q3bg1"><tr><td width="50%"><b>Fileplanet</b></td>
<td width="50%"><a href="http://www.fileplanet.com/dl/dl.asp?/planetquake/maldavria/maldavriabeta1.zip">Download</a></td></tr>
<tr><td width="50%"><b>Extreme-Players.de</b></td>
<td width="50%"><a href="http://www.extreme-players.de/showfiles.asp?ID=4012">Download</a></td></tr>
<tr><td width="50%"><b>PlanetQuake3</b></td>
<td width="50%"><a href="http://www.planetquake3.net/download.php?op=viewdownloaddetails&lid=416&ttitle=Maldavria_Beta1">Download</a></td></tr>
<tr><td width="50%"><b>BarrysWorld</b></td>
<td width="50%"><a href="ftp://ftp.barrysworld.com/pub/games/quake3/mods/maldavria/maldavriabeta1.zip">Download</a></td></tr>
<tr><td width="50%"><b>FragZone</b></td>
<td width="50%"><a href="http://ftp.fragzone.se/viewfile.php?s=&p=spel/quake3/maldavria/">Download</a></td></tr></table><br><br>
<b>Beta1a</b> [.zip] (3 MB) from:<br><br>

<table width="100%" class="q3bg1"><tr><td width="50%"><b>Fileplanet</b></td>
<td width="50%"><a href="http://www.fileplanet.com/dl/dl.asp?/planetquake/maldavria/maldavriabeta1a.zip">Download</a></td></tr>
<tr><td width="50%"><b>PlanetQuake3</b></td>
<td width="50%"><a href="http://www.planetquake3.net/download.php?op=viewdownloaddetails&lid=470&ttitle=Maldavria_Beta1a">Download</a></td></tr>
<tr><td width="50%"><b>FragZone</b></td>
<td width="50%"><a href="http://ftp.fragzone.se/viewfile.php?s=&p=spel/quake3/maldavria/">Download</a></td></tr></table><br><br>
<b>MapKit</b> [.exe] (48 MB) from:<br><br>
<table width="100%" class="q3bg1"><tr><td width="50%"><b>Fileplanet</b></td>
<td width="50%"><a href="http://www.fileplanet.com/dl/dl.asp?/planetquake/maldavria/maldavria_mapkit.exe">Download</a></td></tr></table>
<br>
<b>MapKit</b> [.zip] (48 MB) from:<br><br>
<table width="100%" class="q3bg1"><tr><td width="50%"><b>Fileplanet</b></td>
<td width="50%"><a href="http://www.fileplanet.com/dl/dl.asp?/planetquake/maldavria/maldavria_mapkit.zip">Download</a></td></tr></table>
<br>
<table width="100%" class="q3bg1"><tr><td width="50%"><br>
Other files</td></tr>
<tr><td width="50%"><b>Gamespy Tab</b></td>
<td width="50%"><a href="files/maldavria.qst">Download</a></td></tr>
<tr><td width="50%"><b>Gamespy Arcade Tab</b></td>
<td width="50%"><a href="files/maldavria.apk">Download</a></td></tr></table><br><br>
<table width="100%" class="q3bg1">
<tr>
<td width="50%"><br>
Quake3 Files</td>
</tr>
<tr>
<td width="50%"><b>Point Release 1.30 (25.5 MB)</b></td>
<td width="50%"><a href="http://www.fileplanet.com/index.asp?file=61607">Fileplanet</a></td>
</tr>
<tr>
<td width="50%"></td>
<td width="50%"><a href="http://www.planetquake3.net/download.php?op=viewdownloaddetails&lid=33&ttitle=Quake_III_Arena_1.30_Point_Release">PlanetQuake3</a>
<tr>
<td width="50%">
PakScape Files</td>
</tr>
<tr>
<td width="50%"><b>PakScape v0.11 (106 kb)</b></td>
<td width="50%"><a href="http://dl.fileplanet.com/dl/dl.asp?maldavria/pakscape/pakscape-011.zip">Download</a></td>
</tr>
</table>
</ul><h1 id="706" name="706" class="book-h4">Orange Smoothie Productions OSP for Q3</h1><ul><center><h3>OSP for Quake III Arena</h3>
info provided by the OSP website</center>
<p class="q3bg1"><a href="http://www.orangesmoothie.org">Orange Smoothie Productions</a>: We are a group of both students and professionals that came together through Quake at the University of Kansas, the stomping grounds of Quake legends such as Impulse9, KillCreek, and Entropy. There is a proud quake heritage here at KU and we hoped to continue in that tradition with the introduction of our Quake2 mod group, Orange Smoothie Productions back in February of 1998.<br><br>Orange Smoothie Productions has since evolved into a PC Game Mod group with plans in the works to develop mods for Unreal Tournament, Quake 3 Arena, and Tribes.</p>
<h3>OSP Downloads</h3>
<p class="q3bg2"><a href="http://www.orangesmoothie.org/html-downloads.html">OSP Downloads Page</a>
</ul><h1 id="705" name="705" class="book-h4">PADman - The Biggest Q3A-Funmod Project</h1><ul><center><h3>PADman</h3>Courtesy of the World of PADman website</center>
<p class="q3bg1"><a href="http://www.worldofpadman.com">PADman</a> is an incredible mod featuring tiny blue PADcharacters who live in a giant PADworld. The levels for this PADmod are fantastic and inspiring. The authors of the PADmod are mostly German but you'll find that most can get by in english fairly well.<br><br>
<span class="feat">Here's what they're saying the the PADman news...</span><br><br>As you know, we are currently working on a small update pack to fix a few bugs and add some new features. We hope to get this one done soon. A new version is already available to all our betatesters and includes the following changes:<br><br>
<small>- Logos in syc-ffa-team (these should now work correctly and not be reset at a new round)<br>
- Mac problems solved<br>
- g_WarmupReady 0-1<br>
- a cartridge-drop key can be assign for syc-tp (you will be able to give your collected cartridges to a teammate)<br>
- the Server-Browser got a filter and added a add-to-favorit button<br>
- "gamename" is set to "wop" in the code<br>
- new chat (with player icons)<br>
- killerducks got more health<br>
- "speedy-look"<br>
- fixed a bug coming up at the combination of follow+sprayroom<br>
- fixed the shoe at the blue Pelvis skin (why has nobody noticed that he has only one foot?)<br>
- Pumper: new impacteffect<br>
- NiPPER: new sound and color<br>
- 3 new Padman skins<br>
- Music-menu fixed (now we are able to release new soundtracks)<br>
- Botsupport<br>
- Spraylogo "PadLogo" changed<br>
- Creditz redone<br>
- Following Text in Spec. smaller<br>
- new sound in BigBalloon (for Balloon Destroyed)</ul><h1 id="816" name="816" class="book-h4">Q3 JailBreak:: Prisoners Of War</h1><ul><center><h3>Q3 JailBreak:: Prisoners Of War</h3>info provided by the Black Knight Productions website</center>
<p class="q3bg3"><img src="/images/q3jbpow.jpg" hspace="10" align="left"><a href="http://www.planetquake.com/bkp/jbpow">Official Site</a>  Prisoners of War is an online multiplayer modification created by Black Knight Productions for id software's Quake III: Arena. POW is your basic red team versus blue team mod with a few little twist. Your primary goal as a team is to capture each member of the opposing team and contain them within your prison. To do this,you simply frag them, one by one. What happens when you capture the entire enemy team? They are executed and lose the round. You must also break into the enemy base to free your own captured teammates because they are Prisoners of War.<br><br>This may sound simple, kill the opposite team and free your teammates, but there is another little twist that must be accounted for. It is possible for the enemies to be freed from your prison. How is that possible? Each prison is equipped with a release mechanism, usually some type of switch or button, and, when triggered, the prison doors are opened thus freeing the prisoners. How can this be prevented? There is one way to prevent the escaping of your prisoners and that is to maintain a strong defense within your base. If the enemies are unable to breach your defenses, they will be unable to free their comrades. Be aware, however, that your offense must be capable of breaching the enemy defenses if you are to free your own teammates.<br><br>How do you win? Each time you manage to capture the enemy team, your team is awarded a single termination point. The first team to reach the termination point limit wins the map. If the timelimit is reached, the team with the highest number of terminations will take the win. In Prisoners of War it doesn't matter if you happen to be the best player to ever grace the 'net, what matters is that you can function as a part of the team. You can find yourself as the lone surviving member of a team with an entire enemy team seeking you, and then the odds are greatly in their favor. Individual score counts don't contribute to who wins the map, but are kept track of, along with several other stats, for personal reference only. Also, if both teams are tied when the timelimit hits 'sudden death' is activated and both teams fight it out (timelimit free) until one of them gets the next termination and is awarded the win.</p>

<h3>Downloads</h3>
Below are links to download locations for JB : POW, patches and map paks. We will add more as they become available.<br>
<p class="q3bg2"><b>Newest Files: </b><a href="#newest">JB:PoW 1.4</a><br><br>
<b>Download  FULL JB:PoW (191mb):</b> (for those with no previous versions)<br>
<a href="http://www.fileplanet.com/dl/dl.asp?/bkp/jbpow1.4%20full.exe ">Fileplanet Download - Installer (exe)</a><br>
<a href="http://www.fileplanet.com/dl/dl.asp?/bkp/jbpow1.4full.zip">Fileplanet Download - Zip w/ mod files</a><br><br>
<a href="http://www.neds.ca/files/jbpow/jbpow1.4%20full.exe">NEDs Gaming Download - Installer (exe)</a><br>
<a href="http://www.neds.ca/files/jbpow/jbpow1.4full.zip">NEDs Gaming Download - Zip w/ mod files</a><br><br>
<a href="http://www.extreme-players.de/downloads.asp?ID=4399">Extreme Players Download - Installer (exe)</a><br>
<a href="http://www.extreme-players.de/downloads.asp?ID=4398">Extreme Players Download - Zip w/ mod files</a><br><br>
If installing from a ZIP file, create a "jbpow" folder, under your quake3 folder, and unzip directly into it.</p>
<hr>
<p class="q3bg2"><b>Download JB : PoW 1.0:</b><br>
<a href="http://www.fileplanet.com/dl/dl.asp?/bkp/jbpow-v1.0.exe">Fileplanet Download - Installer w/ mod files</a><br>
<a href="http://www.fileplanet.com/dl/dl.asp?/bkp/jbpow.zip">Fileplanet Download - Zip w/ mod files</a><br><br>
<a href="http://www.neds.ca/files/jbpow/jbpow-v1.0.exe">NEDs Gaming Download - Installer w/ mod files</a><br>
<a href="http://www.neds.ca/files/jbpow/jbpow.zip">NEDs Gaming Download - Zip w/ mod files</a><br><br>
<a href="http://www.extreme-players.de/showfiles.asp?ID=3631">Extreme Players Download - Installer w/ mod files</a><br>
<a href="http://www.extreme-players.de/showfiles.asp?ID=3630">Extreme Players Download - Zip w/ mod files</a><br><br>
<a href="http://www.quakeshit.com/files/jbpow-v1.0.exe">Quakeshit Download - Installer w/ mod files</a><br>
<a href="http://www.quakeshit.com/files/jbpow.zip">Quakeshit Download - Zip w/ mod files</a><br><br>
<a href="ftp://ftp.fragzone.se/pub/quake3/jbpow/jbpow-v1.0.exe">Fragzone (Sweden) Download - Installer w/ mod files</a><br>
<a href="ftp://ftp.fragzone.se/pub/quake3/jbpow/jbpow.zip">Fragzone (Sweden) - Zip w/ mod files</a><br><br>
<a href="http://www.q3center.com/downloadsindex.phtml?id=82640&language=en" target="_blank">Q3 Center Download - Installer w/ mod files</a><br>
<a href="http://www.gibgames.com/downloads/q3a/jbpow.zip">GibGames Download - Zip w/ mod files</a></p>
<hr>
<p class="q3bg2"><b>Download the JB : PoW 1.1 Patch:</b><br>
<a href="http://www.neds.ca/files/jbpow/jbpow11-upgrade.exe">Neds Gaming Download - Installer(exe) for Windows Users</a><br>
<a href="http://dl.fileplanet.com/dl/dl.asp?bkp/jbpow11-upgrade.exe">Fileplanet Download - Installer(exe) for Windows users</a><br>
<a href="http://dl.fileplanet.com/dl/dl.asp?bkp/jbpow11-upgrade.zip">Fileplanet Download - Zip for Mac/Linux users</a><br>
<a href="http://www.gibgames.com/files.shtml">GibGames Download Page. Patch can be found on/near top of page.</a><br><br>
<hr>
<p class="q3bg2"><b>Download the JB : PoW Map Pak:</b><br>
<a href="http://www.neds.ca/files/jbpow/jbpow-pack.exe">NEDs Gaming Download - Installer (exe) for Windows users</a><br>
<a href="http://www.gibgames.com/files.shtml">GibGames Files Page (look on page for jbpow-pack) - Installer(exe) for Windows users</a><br>
More will be add more as they become available.</p>
<hr>
<p class="q3bg2"><b>Download the JB : PoW 1.4 Map Pak (71.2mb):</b><br>
<a href="http://www.neds.ca/files/jbpow/jbpow1.4%20upgrade.exe">NEDs Gaming Download - Installer (exe) for Windows users</a><br>
<a href="http://www.neds.ca/files/jbpow/jbpow1.4upgrade.zip">NEDs Gaming Download - Zip for Linux/Mac users</a><br>
<a href="http://www.neds.ca/files/jbpow/jbpow1.4bots.zip">NEDs Gaming Download - Bot Files in Zip for all users</a><br><br>
<a href="http://www.fileplanet.com/dl/dl.asp?/bkp/jbpow1.4%20upgrade.exe">Fileplanet Download - Installer w/ mod files</a><br>
<a href="http://www.fileplanet.com/dl/dl.asp?/bkp/jbpow1.4upgrade.zip">Fileplanet Download - Zip w/ mod files</a><br><br>
<a href="http://www.extreme-players.de/downloads.asp?ID=4402">Extreme Players Download - Installer (exe) for Windows users</a><br>
<a href="http://www.extreme-players.de/downloads.asp?ID=4400">Extreme Players Download - Zip for Linux/Mac users</a><br>
<a href="http://www.extreme-players.de/downloads.asp?ID=4403">Extreme Players Download - Bot Files in Zip for all users</a><br><br>				
<a href="http://www.gibgames.com/files.shtml">GibGames Files Page (look in list for JB:PoW 1.4 files)</a><br>
More will be add more as they become available.</p>
<hr>
<p class="q3bg2"><b>Download the JB : PoW Gamespy Tab here:</b> <a href="http://216.173.214.59/JBPOW_tab.zip">Gamespy Tab</a><br>
Unzip the file into your My Documents folder as Gamespy will first look there. ALso read the readme file included for more instructions.</p></ul><h1 id="912" name="912" class="book-h4">Quake 3 Humiliation</h1><ul><center><h3>Humiliation Q3 Mod</h3>info provided by the tikidomain</center>
<p class="q3bg1"><a href="http://www.planetquake.com/tikidomain/hum/index.asp?mode=downloads">Downloads</a><br><a href="http://www.planetquake.com/tikidomain/hum/index.asp?mode=setup">How to play/Setup</a><br><a href="http://www.planetquake.com/tikidomain/hum/index.asp?mode=faq">FAQ's</a></p><p class="q3bg3"><a href="http://www.planetquake.com/tikidomain/hum">Humiliation</a> is a mod for Quake III: Arena takes deathmatch right up in your face with with some thick hand to hand combat. Yes this is it... the Gauntlet mod you have been waiting for!<br><br><!--break-->Do your LANs go flat after the twenty plus hours of game? Why bother needlessly bopping eachother with the the Gauntlet when you get bored? Put the action back in your bordem! Grab this mod today while supplies last! And, if you download within the next twenty minutes we will throw in a complimentery Gauntlet upon your first spawn!<br><br>Humiliation was originaly a Gauntlet only mod. Then we decided that that would get extremely boring. The solution? Two different modes of gameplay. Humiliation Original makes gameplay nothing but in your face being gauntlet only. This is good for grins, but for some true deathmatch or tourney action, try our Humiliation Extended! This gameplay features the Gauntlet and one other weapon only. Gauntlet kills are worth two points in this mode, and weapon pickups only give you a little bit of ammo. The weapon and amount of ammo given on a per weapon basis is fully customizable on the server.</p>
</ul><h1 id="855" name="855" class="book-h4">Quake III: Outpost</h1><ul><center><h3>Quake III: Outpost</h3>Courtesy of the <a href="http://www.skyroadz.tk">Outpost website</a></center><br><br>
<p class="q3bg3"><img src="/images/outpost.jpg" hspace="5" align="left"><a href="http://www.planetquake.com/outpost">Official 
  Site</a> - Many years into the future, you are stationed at an exploration outpost on the surface of Chton-F13 as a security operative. You are just going back to duty when you stand to talk to a few of your buddies. Suddenly a loud roar shakes the ground benethe you. Followed shortly by a distant, but loud, explosion. When the ground and noise settles you're called for in the outpost command. There you receive word that something had gone terribly wrong with the supply ship en-route to the outpost. It crashed only a short distance from the outpost. You are ordered to find the crash site and look for survivors. After saluting your commander you make haste to the armory to gear up. When you stand in the airlock taking a look outside for the first time since you arrived on Chton, you take a deep breath and proceed out into the unknown.<br><br><h3>Features</h3>
<b>Singleplayer.</b><br>
Q3: Outpost has it's own new singleplayer experience, featuring storyline driven action and events, along with hordes of evil monsters.<br>
<b>Cooperative Multiplayer.</b><br>
If you can't make it on your own, rally a few friends!<br>
<b>Monsters.</b><br>
Q3: Outpost houses a wide range of different monsters that you have to work your way through in order to complete your mission.<br>
<b>Objective based gameplay.</b><br>
Q3: Outpost aids the player with objectives display to follow in order to andvance through the game.<br>
<b>Lens flares.</b><br>
Q3: Outpost uses advanced area calculated lens flares to further the gloomyness of the mod.<br><br><h3>Level Editing for Outpost</h3>
<b>The Development documents needed to make your own Outpost Episodes have been released:</b>
<a href="http://www.planetquake.com/outpost/episodemaking/">Making your very own Outpost Episodes</a>
<b>Outpost Mapmodels package v1.0:</b>
<a href="http://www.fileplanet.com/dl.aspx?/planetquake/outpost/op_mapmodels.zip">op_mapmodels.zip</a><br><br>
<a href="http://www.planetquake.com/modifia/forum/display_forum_topics.asp?ForumID=16">Outpost: News &amp; Announcements</a><br>
<a href="http://www.planetquake.com/modifia/forum/display_forum_topics.asp?ForumID=17">Outpost: Questions &amp; Answers</a><br>
<a href="http://www.planetquake.com/modifia/forum/display_forum_topics.asp?ForumID=18">Outpost: Opinions &amp; Suggestions</a></p>
<h3>Downloads</h3>
<p class="q3bg1"><a href="http://www.fileplanet.com/dl.aspx?/planetquake/outpost/outpostdemo.zip">Download</a> the Outpost Demo from FilePlanet<br>
<a href="http://planetquake3.net/download.php?op=viewdownloaddetails&lid=1839">Download</a> the Outpost Demo from PlanetQuake3.net<br>
<a href="http://www.gamecenter.cz/Default.gcs?file_id=4348">Download</a> the Outpost Demo from GameCenter.cz</p>
</ul><h1 id="802" name="802" class="book-h4">Reaction Quake 3 - Total Conversion</h1><ul><h3>Reaction Quake 3</h3>
<p class="q3bg3"><img src="/images/reactionq3.jpg" width="100" height="29" hspace="10" align="left"><a href="http://www.reactionquake3.com/" target="_blank">Official Site</a> - Reaction Quake 3 (or simply known as &quot;Reaction&quot;) is essentially a direct-as-possible port of Action Quake 2 (AQ2) to Quake 3: Arena. Because the A-Team decided to continue work on Action Half-Life and Action Unreal Tournament, there will be no official port of AQ2 to Quake 3. Reaction Quake 3 is a community-based effort to implement the gameplay from the hit modification with Quake 3's superior rendering engine and networking code. Reaction Quake 3 IS NOT Action Quake 3!<br><br>Presently, you will need a copy of Quake 3: Arena and a computer that meets or exceeds its system requirements (for smooth gameplay, we highly recommend the latter). Bot support is not exactly a priority right now so a good internet connection for finding and playing on online servers is also required.</p>
<h3>DOWNLOADS</h3> 
<table width="100%" cellpadding="0" cellspacing="2">
  <tr> 
    <td bgcolor="#C7B9A4"><a href="http://www.reactionquake3.com" target="_blank">RQ3</a></td>
    <td bgcolor="#C7B9A4"><a href="ftp://ftp.rq3.com/pub/RQ3/ReactionQuake3-v3.0-Full.exe">Win Install</a></td>
    <td bgcolor="#C7B9A4"><a href="ftp://ftp.rq3.com/pub/RQ3/ReactionQuake3-v3.0-Full.bin">Mac Install</a></td>
    <td bgcolor="#C7B9A4"><a href="ftp://ftp.rq3.com/pub/RQ3/ReactionQuake3-v3.0-Full.zip">Zip Install</a></td>
  </tr>
  <tr>
    <td><a href="http://www.planetquake3.net" target="_blank">PlanetQuake3</a></td>
    <td><a href="http://planetquake3.net/download.php?op=viewdownloaddetails&lid=1573">Win Install</a></td>
    <td><a href="http://planetquake3.net/download.php?op=viewdownloaddetails&lid=1572">Zip Install</a></td>
    <td>&nbsp;</td>
  </tr>
  <tr> 
    <td bgcolor="#C7B9A4"><a href="http://static.hugi.is" target="_blank">Hugi.</a></td>
    <td bgcolor="#C7B9A4"><a href="http://static.hugi.is/games/quake3/RQ3/ReactionQuake3-v3.0-Full.exe">Win Install</a></td>
    <td bgcolor="#C7B9A4"><a href="http://static.hugi.is/games/quake3/RQ3/ReactionQuake3-v3.0-Full.zip">Zip Install</a></td>
    <td bgcolor="#C7B9A4">&nbsp;</td>
  </tr>
  <tr>
    <td><a href="http://www.modportal.net" target="_blank">Modportal</a></td>
    <td><a href="http://files.modportal.net/games/quake3/mods/rq3/ReactionQuake3-v3.0-Full.exe">Win Install</a></td>
    <td><a href="http://files.modportal.net/games/quake3/mods/rq3/ReactionQuake3-v3.0-Full.zip">Zip Install</a></td>
    <td>&nbsp;</td>
  </tr>
  <tr> 
    <td bgcolor="#C7B9A4"><a href="http://www.gamershell.com" target="_blank">Gamershell</a></td>
    <td bgcolor="#C7B9A4"><a href="http://www.gamershell.com/download_1864.shtml">Win Install</a></td>
    <td bgcolor="#C7B9A4"><a href="http://www.gamershell.com/download_1863.shtml">Zip Install</a></td>
    <td bgcolor="#C7B9A4">&nbsp;</td>
  </tr>
  <tr>
    <td><a href="http://dh3.doggus.com" target="_blank">Clan Doggus</a></td>
    <td><a href="http://dh3.doggus.com/~adar/ReactionQuake3-v3.0-Full.zip">Zip Install</a></td>
    <td>&nbsp;</td>
    <td>&nbsp;</td>
  </tr>
  <tr> 
    <td bgcolor="#C7B9A4"><a href="http://www.jogos.iol.pt" target="_blank">IOL</a></td>
    <td bgcolor="#C7B9A4"><a href="http://www.jogos.iol.pt/downloads/ReactionQuake3-v3.0-Full.zip">Zip Install</a></td>
    <td bgcolor="#C7B9A4">&nbsp;</td>
    <td bgcolor="#C7B9A4">&nbsp;</td>
  </tr>
  <tr>
    <td><a href="http://www.extreme-players.de" target="_blank">eXtreme-players</a></td>
    <td><a href="http://www.extreme-players.de/showfiles.asp?ID=5614">Win Install</a></td>
    <td><a href="http://www.extreme-players.de/showfiles.asp?ID=5615">Zip Install</a></td>
    <td><a href="http://www.extreme-players.de/showfiles.asp?ID=5616">Mac Install</a></td>
  </tr>
  <tr> 
    <td bgcolor="#C7B9A4"><a href="http://www.gamiix.com" target="_blank">Gamiix</a></td>
    <td bgcolor="#C7B9A4"><a href="http://www.gamiix.com/files/ReactionQuake3-v3.0-Full.exe">Win Install</a></td>
    <td bgcolor="#C7B9A4"><a href="http://www.gamiix.com/files/ReactionQuake3-v3.0-Full.zip">Zip Install</a></td>
    <td bgcolor="#C7B9A4">&nbsp;</td>
  </tr>
  <tr>
    <td><a href="http://www.fileplanet.com" target="_blank">FilePlanet</a></td>
    <td><a href="http://www.fileplanet.com/files/110000/113137.shtml">Win Install</a></td>
    <td><a href="http://www.fileplanet.com/files/80000/83710.shtml">Zip Install</a></td>
    <td>&nbsp;</td>
  </tr>
  <tr bgcolor="#C7B9A4"> 
    <td><a href="http://www.ozfiles.net" target="_blank">Ozfiles</a></td>
    <td><a href="http://www.ozfiles.net/pafiledb.php?action=file&id=678">Win Install</a></td>
    <td><a href="http://www.ozfiles.net/pafiledb.php?action=file&id=679">Zip Install</a></td>
    <td><a href="http://www.ozfiles.net/pafiledb.php?action=file&id=680">Mac Install</a></td>
  </tr>
  <tr> 
    <td><a href="http://www.computergames.ro" target="_blank">Computergames</a></td>
    <td><a href="http://www.computergames.ro/download.php?optiune=show_download&did=1221">Win Install</a></td>
    <td>&nbsp;</td>
    <td>&nbsp;</td>
  </tr>
</table>
<br>
Get the Reaction Quake 3 v3.2<b> Full and Update installers here</b>! 
<table width="100%"   cellpadding="0" cellspacing="2">
  <tr bgcolor="#C7B9A4"> 
    <td><a href="http://www.reactionquake3.com" target="_blank">RQ3</a></td>
    <td align="center"><a href="ftp://ftp.rq3.com/pub/RQ3/ReactionQuake3-v3.2-Full.zip">Zip Install</a></td>
    <td align="center"><a href="ftp://ftp.rq3.com/pub/RQ3/ReactionQuake3-v3.2-Update.zip">Update 
      Zip Installer</a></td>
  </tr></table>
<br>
<b>Reaction Quake 3 v3.1</b><br>
Get the Reaction Quake 3 v3.1 Full and Update installers here! 
<table width="100%" cellpadding="0" cellspacing="2">
  <tr bgcolor="#C7B9A4"> 
    <td width="25%"><a href="http://www.reactionquake3.com" target="_blank">RQ3</a></td>
    <td width="14%" align="center"><a href="ftp://ftp.rq3.com/pub/RQ3/ReactionQuake3-v3.1-Full.zip">Zip Install</a></td>
    <td width="26%" align="center"><a href="ftp://ftp.rq3.com/pub/RQ3/ReactionQuake3-v3.1-Update.zip">Update Zip Install</a></td>
    <td width="35%" align="center"><a href="ftp://ftp.rq3.com/pub/RQ3/ReactionQuake3-v3.1-Update.exe">Update Win Install</a></td>
  </tr>
  <tr>
    <td><a href="http://www.planetquake3.net" target="_blank">PlanetQuake3</a></td>
    <td align="center"><a href="http://www.planetquake3.net/download.php?op=viewdownloaddetails&lid=1599">Zip Install</a></td>
    <td align="center"><a href="http://www.planetquake3.net/download.php?op=viewdownloaddetails&lid=1598">Update Zip Install</a></td>
    <td align="center"><a href="http://www.planetquake3.net/download.php?op=viewdownloaddetails&lid=1597">Update Win Install</a></td>
  </tr>
  <tr bgcolor="#C7B9A4"> 
    <td><a href="http:/www.extreme-players.de" target="_blank">Extreme-players</a></td>
    <td align="center"><a href="http://www.extreme-players.de/showfiles.asp?ID=5644">Zip Install</a></td>
    <td align="center"><a href="http://www.extreme-players.de/showfiles.asp?ID=5643">Update 
      Zip Install</a></td>
    <td align="center"><a href="http://www.extreme-players.de/showfiles.asp?ID=5642">Update 
      Win Install</a></td>
  </tr></table>
<br>
<b>Reaction Quake 3 v3.0</b><br>
Reaction Quake 3 v3.0 Full Installers only. MUST install into 'rq3' folder, as the 'reaction' folder is now obsolete. 
<table width="100%" cellpadding="0" cellspacing="2">
  <tr> 
    <td bgcolor="#C7B9A4"><a href="http://www.reactionquake3.com" target="_blank">RQ3</a></td>
    <td align="center" bgcolor="#C7B9A4"><a href="ftp://ftp.rq3.com/pub/RQ3/ReactionQuake3-v3.0-Full.exe">Win Install</a></td>
    <td align="center" bgcolor="#C7B9A4"><a href="ftp://ftp.rq3.com/pub/RQ3/ReactionQuake3-v3.0-Full.bin">Mac Install</a></td>
    <td align="center" bgcolor="#C7B9A4"><a href="ftp://ftp.rq3.com/pub/RQ3/ReactionQuake3-v3.0-Full.zip">Zip Install</a></td>
  </tr>
  <tr>
    <td><a href="http://www.planetquake3.net" target="_blank">PlanetQuake3</a></td>
    <td align="center"><a href="http://planetquake3.net/download.php?op=viewdownloaddetails&lid=1573">Win Install</a></td>
    <td align="center"><a href="http://planetquake3.net/download.php?op=viewdownloaddetails&lid=1572">Zip Install</a></td>
    <td align="center">&nbsp;</td>
  </tr>
  <tr> 
    <td bgcolor="#C7B9A4"><a href="http://static.hugi.is" target="_blank">Hugi</a></td>
    <td align="center" bgcolor="#C7B9A4"><a href="http://static.hugi.is/games/quake3/RQ3/ReactionQuake3-v3.0-Full.exe">Win Install</a></td>
    <td align="center" bgcolor="#C7B9A4"><a href="http://static.hugi.is/games/quake3/RQ3/ReactionQuake3-v3.0-Full.zip">Zip Install</a></td>
    <td align="center" bgcolor="#C7B9A4">&nbsp;</td>
  </tr>
  <tr>
    <td><a href="http://www.modportal.net" target="_blank">Modportal</a></td>
    <td align="center"><a href="http://files.modportal.net/games/quake3/mods/rq3/ReactionQuake3-v3.0-Full.exe">Win Install</a></td>
    <td align="center"><a href="http://files.modportal.net/games/quake3/mods/rq3/ReactionQuake3-v3.0-Full.zip">Zip Install</a></td>
    <td align="center">&nbsp;</td>
  </tr>
  <tr>
    <td bgcolor="#C7B9A4"><a href="http://www.gamershell.com" target="_blank">Gamershell</a></td>
    <td align="center" bgcolor="#C7B9A4"><a href="http://www.gamershell.com/download_1864.shtml">Win Install</a></td>
    <td align="center" bgcolor="#C7B9A4"><a href="http://www.gamershell.com/download_1863.shtml">Zip Install</a></td>
    <td align="center" bgcolor="#C7B9A4">&nbsp;</td>
  </tr>
  <tr>
    <td><a href="http://dh3.doggus.com" target="_blank">Clan Doggus</a></td>
    <td align="center"><a href="http://dh3.doggus.com/~adar/ReactionQuake3-v3.0-Full.zip">Zip Install</a></td>
    <td align="center">&nbsp;</td>
    <td align="center">&nbsp;</td>
  </tr>
  <tr bgcolor="#C7B9A4"> 
    <td><a href="http://www.jogos.iol.pt" target="_blank">IOL</a></td>
    <td align="center"><a href="http://www.jogos.iol.pt/downloads/ReactionQuake3-v3.0-Full.zip">Zip Install</a></td>
    <td align="center">&nbsp;</td>
    <td align="center">&nbsp;</td>
  </tr>
  <tr>
    <td><a href="http://www.extreme-players.de" target="_blank">eXtreme-players</a></td>
    <td align="center"><a href="http://www.extreme-players.de/showfiles.asp?ID=5614">Win Install</a></td>
    <td align="center"><a href="http://www.extreme-players.de/showfiles.asp?ID=5615">Zip Install</a></td>
    <td align="center"><a href="http://www.extreme-players.de/showfiles.asp?ID=5616">Mac Install</a></td>
  </tr>
  <tr bgcolor="#C7B9A4"> 
    <td><a href="http://www.gamiix.com" target="_blank">Gamiix</a></td>
    <td align="center"><a href="http://www.gamiix.com/files/ReactionQuake3-v3.0-Full.exe">Win Install</a></td>
    <td align="center"><a href="http://www.gamiix.com/files/ReactionQuake3-v3.0-Full.zip">Zip Install</a></td>
    <td align="center">&nbsp;</td>
  </tr>
  <tr>
    <td><a href="http://www.fileplanet.com" target="_blank">FilePlanet</a></td>
    <td align="center"><a href="http://www.fileplanet.com/files/110000/113137.shtml">Win Install</a></td>
    <td align="center"><a href="http://www.fileplanet.com/files/80000/83710.shtml">Zip Install</a></td>
    <td align="center">&nbsp;</td>
  </tr>
  <tr bgcolor="#C7B9A4"> 
    <td><a href="http://www.ozfiles.net" target="_blank">Ozfiles</a></td>
    <td align="center"><a href="http://www.ozfiles.net/pafiledb.php?action=file&id=678">Win Install</a></td>
    <td align="center"><a href="http://www.ozfiles.net/pafiledb.php?action=file&id=679">Zip Install</a></td>
    <td align="center"><a href="http://www.ozfiles.net/pafiledb.php?action=file&id=680">Mac Install</a></td>
  </tr>
  <tr>
    <td><a href="http://www.computergames.ro" target="_blank">Computergames</a></td>
    <td align="center"><a href="http://www.computergames.ro/download.php?optiune=show_download&did=1221">Win Install</a></td>
    <td align="center">&nbsp;</td>
    <td align="center">&nbsp;</td></tr></table>
<p class="q3bg3">
<b>Reaction Quake 3 v3.0 Trailer</b><br>
The trailer for v3.0 displaying the new maps and models along with the new replacements for weapons and items. Requires DivX 5.03<br><br>
<a href="http://www.rq3.com" target="_blank">RQ3</a><br>
AVI/DivX: <a href="http://screenshots.rq3.com/trailer/rq3-v3-trailer-high.avi">High Res Trailer</a><br>
AVI/DivX: <a href="http://screenshots.rq3.com/trailer/rq3-v3-trailer-low.avi">Low Res Trailer</a><a name="5"></a>Reaction Quake 3 Beta 2.0 Trailers<br><br>
These are the AVI Teasers that were released just prior to Beta 2.0.<a href="http://www.reactionquake3.com" target="_blank">RQ3</a><br>AVI: <a href="http://www.reactionquake3.com/b2trailer-high.avi">Beta 2.0 High Res Trailer</a><br>AVI: <a href="http://www.reactionquake3.com/b2trailer-low.avi">Beta 2.0 Low Res Trailer</a></p></ul><h1 id="817" name="817" class="book-h4">SkyRoadz - Total Conversion</h1><ul><center><h3>SkyRoadz - The Quake Tribute</h3>Courtesy of the <a href="http://www.skyroadz.tk">Urban Terror website</a></center><br><br>
<p class="q3bg3"><img src="/images/skyroadz.jpg" hspace="5" align="left"><a href="http://www.skyroadz.tk/">Official 
  Site</a> - A remake of the classic Skyroads by Bluemoon Interactive, a game begging 
  for a multi player update. With this in mind Motion Badger have created a 3D 
  skyroads update, using the powerful Quake3 game engine and a total conversion 
  mod. SkyRoadz is the final year project for 5 computing students, a remake of 
  the classic old game Skyroads by Bluemoon </p>
<h3>Downloads</h3>
<p class="q3bg1"><a href="http://gus.gscit.monash.edu.au/projects/mtnbdger/downloads/dl?FileID=6" target="_blank">SkyRoadz 
  Beta 1 - 19Mb</a></p>
</ul><h1 id="888" name="888" class="book-h4">Threewave CTF</h1><ul><center><h3>Threewave CTF</h3>info provided by the Threewave website</center>
<p class="q3bg1"><a href="http://www.threewave.com">ThreeWave</a> is a bundle of different gametype modifications that enhance the play in quake III by introducing new styles, new weapons, maps and more. Many servers have threewave maps in rotation and it's a definate download for enthusiasts. Capture the flag is the most exciting team play mode of Quake 3 and carries on the tradition of ThreeWave CTF. Quake 3 is the best platform yet for Capture the Flag, and offers the the best mix of graphics, weapons, physics, and game rules. The lack of grapple and addition of bounce-pads bring the game down to earth and ensure that the action will be a true Quake experience and foster team co-ordination for defense and attacks.<br><div class="q3bg3">The basic premise is unchanged: enter the enemy base, grab their flag then take it back to your base and  touch your own flag. If your flag is not there, you must get it back, or wait for your team-mates to return it. However, the enemy team will be hunting you at the same time.</div></p><!-- break -->
<br><center>The following are links to information and files related to ThreeWave.<br><br>
<a href="http://www.threewave.com/quake3/manual/1.html">Threewave CaptureStrike Mod Manual</a><br>
<a href="http://www.threewave.com/quake3/manual/2.html">Threewave Classic CTF Mod Manual</a><br>
<a href="http://www.threewave.com/quake3/manual/3.html">Threewave One Flag CTF Mod Manual</a><br>
<a href="http://www.threewave.com/quake3/manual/4.html">Threewave Lithium Style DM Mod Manual</a><br>
<a href="http://www.threewave.com/quake3/manual/5.html">Threewave Arena Mod Manual</a><br>
<a href="http://www.threewave.com/quake3/manual/6.html">Threewave Portal Mod Manual</a><br>
<a href="http://www.threewave.com/quake3/manual/7.html">Dollarsign Macros Mod Manual</a><br>
<a href="http://www.threewave.com/quake3/manual/8.html">Console Variables Mod Manual</a><br>
<a href="http://www.threewave.com/quake3/manual/9.html">Portal Server Administration FAQ</a><br>
<a href="http://www.threewave.com/quake3/manual/10.html">Credits and Readme</a></center>
<h3>Files</h3>
<p class="q3bg1b"><b>All In One</b><br>
Threewave Quake 3 CTF 1.6 <a href="http://www.threewave.com/quake3/16mirrors.html">Full Installer download</a><br><br>
<b>Patches</b><br>
Threewave Quake 3 CTF 1.6 <a href="http://www.threewave.com/quake3/16patchmirrors.html">Patch download</a> (1.5 to 1.6)<br>
Threewave Quake 3 CTF 1.5 <a href="http://www.threewave.com/quake3/15patchmirrors.html">Patch download</a> (1.2 to 1.5)<br>
Threewave Quake 3 CTF 1.2 <a href="http://www.threewave.com/quake3/12patchmirrors.html">Patch download</a> (1.0 to 1.2)</p>
</ul><h1 id="704" name="704" class="book-h4">Urban Terror - Total Conversion</h1><ul><center><h3>Urban Terror</h3>Courtesy of the <a href="http://www.urbanterror.net">Urban Terror website</a></center><br><br><p class="q3bg3"><img src="/images/urbanterror.jpg" hspace="10" align="left"><a href="http://www.urbanterror.net">Official Site</a> A realism based "total conversion mod" for Quake III Arena. It's a completely free add-on to id Software's Quake III Arena. Where Quake Meets Reality. Imagine this: You're creeping through a deserted city late at night, ducking behind walls, slinking from shadow to shadow. Somewhere someone in this city has a sniper rifle, and their scope is zoomed, looking for you. You've tossed away your SPAS12 assault shotgun, useless since it ran out of shells, and now you're armed only with your trusty .50 Desert Eagle pistol. Was that footsteps you heard up there, near that open window? Dare you stick your head up into the light to take a look? Better creep around the back way, silent as possible and ambush that sniper from behind. You may only get one shot... </p><p class="q3bg3">This is a possible scenario from Urban Terror, a realism based, total conversion mod for Quake 3 Arena. What that means is that Urban Terror is a game based on Quake 3 that replaces the weapons, maps, models and game play, that simulates conventional combat situations. Think of it as a online game of skirmish (paintball) - only better! <br><br>A number features are being added which make Urban Terror quite a different game to Quake 3. Some of these features include: <br><br>Realistic weapons based on conventional firearms with physics modelled from the real thing: they recoil, spread and behave in a way that simulates the real thing. <br><br>Conventional equipment - laser sights, kevlar vests, night vision goggles, to name only a few <br><br>Maps - real world maps with new textures that will take you out of the Quake 3 Arena and into places that are familiar territory, like city streets, the docks, desert, an abbey, oilrig, and more. <br><br>Player models - new male and female models with a variety of original skins and heads, from specials agents and military troops to special ops.. <br><br>Locational damage - you will be able to target different regions of your opponent's body. If you only want to slow them down, aim for the legs: if you want to go for the kill, aim high... <br><br>Bleeding - once you get hit, you start bleeding, loosing health until you bandage or bleed to death. The more you are hit, the faster you bleed. <br><br>Enhanced falling damage - don't try jumping off a three story building unless there's no other way out, you will feel it. <br><br>All new graphics - redesigned heads up display, user interface and game menus. <br><br>Balanced game play and scoring system - in order to make the mod as enjoyable as possible, weapons are balanced, so the only thing that determines who wins a round is a players skill. We want to reward players with a fair and accurate scoring system. <br><br>New game modes - including team survivor, team deatch match and free for all or take on opposing forces in CTF, Capture & Hold, Follow the Leader, or Bomb/Defuse.</p>
<h3>Urban Terror 3.7</h3>
<p class="q3bg1">US - FSK405.org (Full Zip)<br>
<a href="http://www.fsk405.org/q3ut3/UrbanTerror3.7-FULL.zip" target="blank">UrbanTerror37.zip</a> - NL - Univ Twente NL (Full Zip)<br>
<a href="ftp://ftp.snt.utwente.nl/pub/games/urbanterror" target="blank">UrbanTerror37.zip</a> - US - Planetquake3.net<br>
<a href="http://planetquake3.net/download.php?op=viewdownloaddetails&lid=2092" target="blank">UrbanTerror37.zip</a> - US - Fileplanet.com<br>
<a href="http://www.fileplanet.com/dl.aspx?/planetquake/siliconice/urbanterror37.zip" target="blank">UrbanTerror37.zip</a> - US - FSK405.org<br>
<a href="http://www.fsk405.org/q3ut3/UrbanTerror37.zip" target="blank">UrbanTerror37.zip</a> - US - Gameservers.net<br>
<a href="http://www.fsk405.org/q3ut3/UrbanTerror37.zip" target="blank">UrbanTerror37.zip</a> - SI - Slofaca.net<br>
<a href="http://outlands.slofaca.net/files/UrbanTerror37.zip" target="blank">UrbanTerror37.zip</a> - SI - Outlands.Quaddown.org<br>
<a href="http://outlands.quaddown.org/files/UrbanTerror37.zip" target="blank">UrbanTerror37.zip</a> - SE - FROServers.com<br>
<a href="http://www.froservers.com" target="blank">UrbanTerror37.zip</a> - NL - Univ Twente NL<br>
<a href="ftp://ftp.snt.utwente.nl/pub/games/urbanterror" target="blank">UrbanTerror37.zip</a> - NL - Gameservers.net<br>
<a href="http://q3ut.gameservers.net/overview_downloads.php?dir_ID=11200" target="blank">UrbanTerror37.zip</a> - AU - Games.Bigpond.com<br>
<a href="http://games.bigpond.com/pc/resources/files/details/html/12729" target="blank">UrbanTerror37.zip</a> - AU - Ozforcesfiles.com<br></p>
<h3>Urban Terror 3.6</h3>
<p class="q3bg1">US - Planetquake3.net<br>
<a href="http://planetquake3.net/download.php?op=viewdownloaddetails&lid=2061" target="blank">UrbanTerror36.zip</a> - US - Fileplanet.com<br>
<a href="http://www.fileplanet.com/dl.aspx?/planetquake/siliconice/urbanterror36.zip" target="blank">UrbanTerror36.zip</a> - US - NoLeafClover.net<br>
<a href="http://www.noleafclover.net/UrbanTerror36.zip" target="blank">UrbanTerror36.zip</a> - SE - Crypt54<br>
<a href="http://irc.c54.se/~neko/UrT" target="blank">UrbanTerror36.zip</a> - EU - Clanbase.com<br>
<a href="http://www.clanbase.com/miscdl.php?did=1031" target="blank">UrbanTerror36.zip</a> - SI - Slofaca.net<br>
<a href="http://outlands.slofaca.net/files/UrbanTerror36.zip" target="blank">UrbanTerror36.zip</a> - SE - FRO Servers<br>
<a href="http://www.froservers.com" target="blank">UrbanTerror36.zip</a> - SE - Urbanterror.tk<br>
<a href="http://backhed.se/urbanterror.html" target="blank">UrbanTerror36.zip</a> - SE - Crypt54<br>
<a href="http://irc.c54.se/~neko/UrT" target="blank">UrbanTerror36.zip</a> - NL - Univ Twente NL<br></p>
<h3>Urban Terror 3.5</h3>
<p class="q3bg1">US - Planetquake3.net<br>
<a href="http://planetquake3.net/download.php?op=viewdownloaddetails&lid=2059" target="blank">UrbanTerror35.zip Full</a> - US - Clan NUA<br>
<a href="http://www.clan-nua.com/~mods/Urban.Terror/UrbanTerror3.5-FULL.zip">UrbanTerror35.zip Full</a> - US - FSK405.com<br>
<a href="http://www.fsk405.org/q3ut3/UrbanTerror3.5-FULL.zip" target="blank">UrbanTerror35.zip Full</a> - NL - Univ Twente NL<br>
<a href="ftp://ftp.snt.utwente.nl/pub/games/urbanterror/UrbanTerror35-FULL.zip" target="blank">UrbanTerror35.zip Full</a> - DE - Extreme-players.de<br>
<a href="http://www.extreme-players.de/download.php?id=6775" target="blank">UrbanTerror35.zip Full</a> - AU - GameArena.com.au<br>
<a href="http://games.bigpond.com/pc/resources/files/details/html/11645" target="blank">UrbanTerror35.zip Full</a> - AU - AusGamers.com<br>
<a href="http://www.ausgamers.com/files/details/html/11645" target="blank">UrbanTerror35.zip Full</a> - US - Planetquake3.net<br>
<a href="http://planetquake3.net/download.php?op=viewdownloaddetails&lid=2058" target="blank">UrbanTerror35 Upgrade</a> - US - Fileplanet.com<br>
<a href="http://www.fileplanet.com/dl.aspx?/planetquake/siliconice/urbanterror35.zip">UrbanTerror35 Upgrade</a> - US - AGiantBlackDude.com<br>
<a href="http://www.againtblackdude.com/q3ut3/UrbanTerror35.zip" target="blank">UrbanTerror35 Upgrade</a> - US - FSK405.org<br>
<a href="http://www.fsk405.org/q3ut3/UrbanTerror35.zip" target="blank">UrbanTerror35 Upgrade</a> - US - Clan NUA<br>
<a href="http://www.clan-nua.com/~mods/Urban.Terror/UrbanTerror35.zip" target="blank">UrbanTerror35 Upgrade</a> - BR - UrbanTerrorBrasil.com<br>
<a href="http://www.urbanterrorbrasil.com.br/downloads/UrbanTerror35.zip" target="blank">UrbanTerror35 Upgrade</a> - DE - UrbanBase.net<br>
<a href="http://www.urbanbase.net/content/release/UrbanTerror35.zip" target="blank">UrbanTerror35 Upgrade</a> - DE - Extreme-players.de<br>
<a href="http://www.extreme-players.de/download.php?id=6774" target="blank">UrbanTerror35 Upgrade</a> - AU - GameArena.com.au<br>
<a href="http://games.bigpond.com/pc/resources/files/details/html/11644" target="blank">UrbanTerror35 Upgrade</a> - AU - AusGamers.com<br>
<a href="http://www.ausgamers.com/files/details/html/11644" target="blank">UrbanTerror35 Upgrade</a> - EU - Clanbase.com<br>
<a href="ftp://www.clanbase.com/pub/UrbanTerror35.zip" target="blank">UrbanTerror35 Upgrade</a> - SE - Crypt54<br>
<a href="http://irc.c54.se/~neko/UrT" target="blank">UrbanTerror35 Upgrade</a> - SE - Urbanterror.tk<br>
<a href="http://backhed.se/urbanterror.html" target="blank">UrbanTerror35 Upgrade</a> - SE - FRO Servers<br>
<a href="http://www.froservers.com" target="blank">UrbanTerror35 Upgrade</a> - SI - Outlands.Quaddown.org<br>
<a href="http://outlands.quaddown.org/files/UrbanTerror35.zip" target="blank">UrbanTerror35 Upgrade</a> - NL - Univ Twente NL<br>
<a href="ftp://ftp.snt.utwente.nl/pub/games/urbanterror/patches/UrbanTerror35.zip" target="blank">UrbanTerror35 Upgrade</a> - US - Dead-Gods.com<br>
<a href="http://www.dead-gods.com/sid/UrbanTerror35.zip" target="blank">UrbanTerror35 Upgrade</a> - US - NoLeafClover.net<br>
<a href="http://www.noleafclover.net/UrbanTerror35.zip" target="blank">UrbanTerror35 Upgrade</a> - CA - UrbanTerror.ca<br></p></ul><h1 id="682" name="682" class="book-h2">Quake III Game Data</h1><ul><p class="q3bg2">This section houses all non editing related data pertaining to Quake III Arena. This includes Tier Character breakdowns, Weapons, Items, Medals, Maps and other infomation about the game which is not directly related to editing.</p></ul><h1 id="607" name="607" class="book-h3">Awards - Rewards - Medals</h1><ul><p class="body_title2">Quake III Arena Medals & Awards</p>
<div class="q3bg1">As you frag your way through opponent after opponent, you may hear the occasional "excellent" or "impressive" echoing around you. These accolades are accompanied by medals - symbols that will appear over your head to show off your mad skillz to everyone on the map. Your earned medals are displayed at the end of the game and tallied up. Here's a guide to the different medals you can earn.<br><br>

<h3>Accuracy:</h3>
<p class="q3bg2"><img src="/images/hit-ratio.jpg" class="imglb"><img src="/images/quake-III-media/medals/medal_accuracy.jpg" class="imgrb">Kind of like a sharp shooter medal, this is awarded when your percentage of hits-to-shots is more than 50%.</p>

<h3>Excellent:</h3>
<p class="q3bg2"><img src="/images/quake-III-media/medals/medal_excellent.jpg" class="imgrb">If you make two frags within two seconds, you'll receive this medal and a resounding "excellent" by the announcer. It's very gratifying and helps to prod you to furthur prowess by racing your ass off trying to find smeone else to frag!</p>

<h3>Frags:</h3>
<p class="q3bg2"><img src="/images/quake-III-media/medals/medal_frags.jpg" class="imgrb">You'll see the special frags medal if you're talented enough to get to a frag count of 100. This usually only happens when you're surrounded by a mix of good players and noob fodder between you and your major competition you tend to rack up the frags.</p>

<h3>Gauntlet:</h3>
<p class="q3bg2"><img src="/images/quake-III-media/medals/medal_gauntlet.jpg" class="imgrb">Since it's difficult to actually frag someone with the gauntlet, you'll receive this medal if you humiliate someone by doing just that. The gauntlet's useful for defensive corners and windows/doors. When in q3ctf1, one finds themselves racking a few guantlet frags each round.</p>

<h3>Impressive:</h3>
<p class="q3bg2"><img src="/images/quake-III-media/medals/medal_impressive.jpg" class="imgrb">Everyone knows that the railgun requires the most skill. That's why this medal is awarded for making two consecutive hits with it. Anyone punchin out multiple hits with the rail while surruonded by good competition is worthy of reward.</p>

<h3>Perfect:</h3>
<p class="q3bg2"><img src="/images/quake-III-media/medals/medal_victory.jpg" class="imgrb">You'll receive this medal if you've managed the almost-impossible task of winning an arena without getting killed once yourself. Best of luck, you need it. Whetther online or off, you've got to be talented to be getting one of these medals.</p></div></ul><h1 id="858" name="858" class="book-h3">Configuring the q3config.cfg</h1><ul><h3>Configuring the Q3CONFIG.CFG</h3>
<p class="q3bg3">There is no better place on the web for you to learn about the q3config file than at <a href="http://www.maxxblade.co.uk" target="blank">Maxx Blade's Javascripts</a>. The <a href="http://www.maxxblade.co.uk/q3config/index.htm" target="blank">Q3A Config V1.2</a> is a tool that allows you to paste your config into it and then customize it completely across ten categorical and desciptive option pages.</p>
<p class="q3bg1">NOTE - As things progress this page will grow so check back here for updates.</p>
<h3>Binding a screenshotjpeg</h3>
<p class="q3bg3">Make a copy of the q3config.cfg and rename it q3config.cfgbk. Open up the q3config.cfg using wordpad(notepad delimits line breaks differently), scroll down until you find the area between keys where the one you wish to bind fits alphabetically. Ensure that it is not already bound. Bind the key (the = ) by pasting the following in.</p>
<blockquote>bind = "cg_drawcrosshair 0;cg_drawstatus 0;cg_drawTimer 0;wait;wait;wait;wait;wait;screenshotjpeg;wait;cg_drawcrosshair 4;cg_drawstatus 1;cg_drawtimer 1"</blockquote>
<p class="q3bg3">This turns off the various items related to HUD then waits to ensure they've shut off. Then takes a jpeg format screenshot, waits to ensure it's been taken, then turns everything back on again. All by pressing the equal sign key, or f12 or whatever you bind yours to.</p></ul><h1 id="861" name="861" class="book-h3">Console</h1><ul><h3>Quake III Console</h3>
Coming soon...</ul><h1 id="860" name="860" class="book-h3">Power Ups</h1><ul><h3>Power Up Items</h3>
Coming soon..</ul><h1 id="812" name="812" class="book-h3">Tiers (Game Stages)</h1><ul><h3>Tier Data:</h3></ul><h1 id="683" name="683" class="book-h4">Q3 Tier Characters Info</h1><ul><b>Tier 0:</b><br>
<blockquote><small><b>q3dm0</b> - Introduction<br>
  - bot: Crash<br>
  The introduction bot to the arena ethernal. A low-opponent , good to train an 
  unexperienced player.</small></blockquote>

<div align="center"><img src="images/quake-III-media/characters/tier1/tier1_characters_medium.jpg"></div>
<b>Tier 1:</b><br>
<blockquote><img src="images/quake-III-media/characters/tier1/tier1_groupshot_medium.jpg" align="left" hspace="5"><small><b>q3dm1</b> - Arena Gate<br>
- bot: Ranger<br>
Reactive. That's wrack: no more no less. The first real bot you encounter and at nightmare level he's one of the fastest and precisest of the whole game. Incredible as he hits you with the first rocket, making you fly over the arena, and as he explodes you on the fly with the second (rocket of course...).<br>
<b>q3dm2</b> - House of Pain<br>
- bot: Phobos<br>
The Second bot of the tier 1: Surprisingly, Phobos got good tactic skills and also good aiming skills so beware, especially when he get the haste.<br>
<b>q3dm3</b> - Arena of Death<br>
- bots: Mynx, Orbb<br>
Mynx is the superfashion model that get lots of kickass in the second map of the tier 2. Absolutely deadly with the shotgun (hits ever onto face) but lack of tatics and skill with other weapons.  Orbb, another strong and unusual bot. Hard to beat, ever jumping and all-weapon-ranged bot, Orbb can easily became your nightmare : i never win against him at nightmare level in his own map...<br>
<b>q3tourney1</b> - Powerstation 0218<br>
- bot: Sarge<br>
The hero starring in the Id intro of the game. A medium bot with a predilection for the rocket launcher, and cuban cigars...</small></blockquote><br>
<div align="center"><img src="images/quake-III-media/characters/tier2/tier2_characters_medium.jpg"></div>
<b>Tier 2:</b><br>
<blockquote><img src="images/quake-III-media/characters/tier2/tier2_groupshot_medium.jpg" align="left" hspace="5"><small><b>q3dm4</b> - The Place of Many Deaths<br>
- bots: Orbb, Bitterman, Grunt<br>
Orbb, another strong and unusual bot. Hard to beat, ever jumping and all-weapon-ranged bot, Orbb can easily became your nightmare : i never win against him at nightmare level in his own map... Bitterman: This silly bot probably is the transposition in the game of one of the programmers team.  Don't allow him to get a railgun or you will get a lot of shit....  Grunt  is what you can say "my worst dream after death"  The strongest bot of the second tier and one of angriest opponent of the whole game.<br>
<b>q3dm5</b> - The Forgotten Place<br>
- bots: Hossman, Daemia<br>
Hossman: Like Lucy one of the fattiest guys of the arena ethernal: not a blaze for speed but good with some weapons and great when he says "haa haa, haa haa..." Daemia: One of my favourites: a all-purposes bot, with excellent skills in aiming and combat.Can frag you as she wish...<br>
<b>q3dm6</b> - The Camping Grounds<br>
- bots: Orbb, Hossman, Daemia, Bitterman, Grunt<br>
Daemia: One of my favourites: a all-purposes bot, with excellent skills in aiming and combat.Can frag you as she wish...  Hossman: Like Lucy one of the fattiest guys of the arena ethernal: not a blaze for speed but good with some weapons and great when he says "haa haa, haa haa..." Orbb, another strong and unusual bot. Hard to beat, ever jumping and all-weapon-ranged bot, Orbb can easily became your nightmare : i never win against him at nightmare level in his own map... Bitterman: This silly bot probably is the transposition in the game of one of the programmers team.  Don't allow him to get a railgun or you will get a lot of shit....  Grunt  is what you can say "my worst dream after death"  The strongest bot of the second tier and one of angriest opponent of the whole game.<br>
<b>q3tourney2</b> - The Proving Grounds<br>
- bot: Hunter<br>
One of the better bots of the whole game, but not the best of course. Anyway don't allow her to get the   lightning gun cos' she becomes almost unstoppable...</small></blockquote><br>
<div align="center"><img src="images/quake-III-media/characters/tier3/tier3_characters_medium.jpg"></div>
<b>Tier 3:</b><br>
<blockquote><img src="images/quake-III-media/characters/tier3/tier3_groupshot_medium.jpg" align="left" hspace="5"><small><b>q3dm7</b> - Temple of Retribution<br>
- bots: Daemia, Wrack, Grunt, Slash<br>
Daemia: One of my favourites: a all-purposes bot, with excellent skills in aiming and combat.Can frag you as she wish... Wrack: The brother of ranger for speed  less smart, more bastard, have fun... Grunt  is what you can say "my worst dream after death"  The strongest bot of the second tier and one of angriest opponent of the whole game. Slash: Along with hunter the coolest cheek of the game, with extra boots-jetpacks and great reversed jumps. Not impressive but really expressive.<br>
<b>q3dm8</b> - Brimestone Abby<br>
- bots: Gorre, Bitterman, Slash, Angel<br>
The gorre spirit for killing isnt in doubt...Not the same thing we can say for his real skill to accomplish that.. A medium-low bot with few strong points...  Bitterman: This silly bot probably is the transposition in the game of one of the programmers team.  Don't allow him to get a railgun or you will get a lot of shit....   Slash: Along with hunter the coolest cheek of the game, with extra boots-jetpacks and great reversed jumps. Not impressive but really expressive. Angel : A fat-mechanical bitch... Not one of better bots, easy to hit , and not much skilled in the aiming.
<b>q3dm9</b> - Hero's Keep<br>
- bots: Angel, Gorre, Wrack, Slash<br>
Angel : A fat-mechanical bitch... Not one of better bots, easy to hit , and not much skilled in the aiming. The gorre spirit for killing isnt in doubt...Not the same thing we can say for his real skill to accomplish that.. A medium-low bot with few strong points...  Slash: Along with hunter the coolest cheek of the game, with extra boots-jetpacks and great reversed jumps. Not impressive but really expressive.  Wrack: The brother of ranger for speed  less smart, more bastard, have fun... 
<b>q3tourney3</b> - Hell's Gate<br>
- bot: Klesk<br>
Another great idea for a inhuman bot: klesk is jumpy opponent with good skills of aiming (especially with railgun) and average avoiding skills. Awesome as he scream...</small></blockquote><br>
<div align="center"><img src="images/quake-III-media/characters/tier4/tier4_characters_medium.jpg"></div>
<b>Tier 4:</b><br>
<blockquote><img src="images/quake-III-media/characters/tier4/tier4_groupshot_medium.jpg" align="left" hspace="5"><small><b>q3dm10</b> - The Nameless Place<br>
- bots: Angel, TankJr, Wrack<br>
<b>q3dm11</b> - Deva Station<br>
- bots: Lucy, Biker, Patriot, TankJr<br>
<b>q3dm12</b> - The Dredwerkz<br>
- bots: Slash, Gorre, Lucy, Biker, Patriot, Wrack<br>
<b>q3tourney4</b> - Vertical Vengeance<br>
- bot: Anarki</small></blockquote><br>
<div align="center"><img src="images/quake-III-media/characters/tier5/tier5_characters_medium.jpg"></div>
<b>Tier 5:</b><br>
<blockquote><img src="images/quake-III-media/characters/tier5/tier5_groupshot_medium.jpg" align="left" hspace="5"><small><b>q3dm13</b> - Lost World<br>
- bots: Visor, Razor, Stripe<br>
<b>q3dm14</b> - Grim Dungeons<br>
- bots: Visor, Razor, Keel, Stripe<br>
<b>q3dm15</b> - Demon Keep<br>
- bots: Razor, Keel, Stripe<br>
<b>q3tourney5</b> - Fatal Instinct<br>
- bot: Uriel</small></blockquote><br>
<div align="center"><img src="images/quake-III-media/characters/tier6/tier6_characters_medium.jpg"></div>
<b>Tier 6:</b><br>
<blockquote><img src="images/quake-III-media/characters/tier6/tier6_groupshot_medium.jpg" align="left" hspace="5"><small><b>q3dm16</b> - The Bouncy Map<br>
- bots: Cadavre, Bones, Doom<br>
<b>q3dm17</b> - The Longest Yard<br>
- bots: Major, Sorlag, Doom<br>
<b>q3dm18</b> - Space Chamber<br>
- bots: Major, Sorlag, Cadavre, Bones, Keel<br>
<b>q3dm19</b> - Apocalypse Void<br>
- bots: Sorlag, Doom, Cadavre</small></blockquote><br>
<div align="center"><img src="images/quake-III-media/characters/tier7/tier7_xaero_small.jpg"></div>
<b>Tier 7:</b><br>
<blockquote><img src="images/quake-III-media/characters/tier7/xaero.jpg" align="left" hspace="5"><small><b>q3tourney6</b> - The Very End of You<br>
- bot: Xaero</small></blockquote><br>
</ul><h1 id="803" name="803" class="book-h4">Q3 Tier Map Info</h1><ul><h3>Tier Maps from Vanilla Q3</h3>
<p class="q3bg3">The following is information about the various tier maps included with Quake III Arena. This area is difided into a section for each tier.</p></ul><h1 id="804" name="804" class="book-h5">Tier 0 - Introduction</h1><ul><h3>Tier 0</h3>
<p class="q3bg1"><img src="/images/quake-III-media/maps/q3dm0.jpg" hspace="10" align="left"><b>q3dm0 - Introduction</b>: A training level, containing a small room with a portal, connecting to a slightly larger area with a plasma gun on one end and a shotgun behind doors in a central area. This map is very small and not designed for anything but training.</p>
<p class="q3bg2"><b>Opponents</b>: Crash</p>
<p class="q3bg2"><b>Armor</b>: Armor Shards, Yellow Armor</p>
<p class="q3bg2"><b>Health</b>: SH, MH, LH</p>
<p class="q3bg2"><b>Weapons</b>: SG, MG, PG</p>
<p class="q3bg2"><b>Powerups</b>: None</p></ul><h1 id="805" name="805" class="book-h5">Tier 1 - Getting Started</h1><ul><h3>Tier 1 Maps</h3>
<p class="q3bg1"><img src="/images/quake-III-media/maps/q3dm1.jpg" hspace="10" align="left"><b>q3dm1 - Arena Gate</b>: One of the maps in the official Quake III demo, this is the first map in the single-player ladder. At one end is a small courtyard with a RL in the center; at the other, an indoor area with a PG and red armor. There's a health placed at a key entrance to the courtyard -- players have to go through this area to get outside, so keep an eye on this junction from the RL and you should easily be able to control the level in a one-on-one match. </p>
<p class="q3bg2"><b>Opponents</b>: Ranger</p>
<p class="q3bg2"><b>Armor</b>: Armor Shards, Red Armor</p>
<p class="q3bg2"><b>Health</b>: SH, LH</p>
<p class="q3bg2"><b>Weapons</b>: SG, MG, RL, PG</p>
<p class="q3bg2"><b>Powerups</b>: None</p>
<p class="q3bg1"><img src="/images/quake-III-media/maps/q3dm2.jpg" hspace="10" align="left"><b>q3dm2 - House of Pain</b>: This map is basically a loop, with a watery lower alley running through the middle. There's a main outside area with a PG, and a room through the left archway with a RL. The right archway leads to a haste powerup that regenerates at long intervals, and a red armor can be found directly below it in the water. 
Most players tend to congregate by the RL and the PG, so arming yourself quickly and keeping an eye on these areas (without standing in the middle of either) will help get your frag count up.</p>
<p class="q3bg2"><b>Opponents</b>: Phobos</p>
<p class="q3bg2"><b>Armor</b>: Armor Shards, Yellow Armor, Red Armor</p>
<p class="q3bg2"><b>Health</b>: SH, LH</p>
<p class="q3bg2"><b>Weapons</b>: SG, MG, RL, PG</p>
<p class="q3bg2"><b>Powerups</b>: Haste</p>
<p class="q3bg1"><img src="/images/quake-III-media/maps/q3dm3.jpg" hspace="10" align="left"><b>q3dm3 - Arena of Death</b>: This map is also a simple loop, with one path running around the full perimeter, and a second path running three three quarters of the way around the lower perimeter. One corner of the map features a rocket laucnher and PG spawning alternatively at the top of short staircase, while a grenade laucnher can be found in the opposite darkened corner. There is also a two-level central area, with a red armor on the upper level. 

As you might expect, players tend to gather around the RL and PG, making this an extremely dangerous area to be running around in. In a free-for-all with more than three or four players, the best bet is to clear the area out with the GL before heading in. You'll need to get past this area in order to get the red armor, so once on the upper level, try and control it for as long as possible.</p>
<p class="q3bg2"><b>Opponents</b>: Mynx, Orbb</p>
<p class="q3bg2"><b>Armor</b>: Armor Shards, Red Armor</p>
<p class="q3bg2"><b>Health</b>: SH, LH</p>
<p class="q3bg2"><b>Weapons</b>: SG, GL, RL, PG</p>
<p class="q3bg2"><b>Powerups</b>: None</p>
<p class="q3bg1"><img src="/images/quake-III-media/maps/q3tourney1.jpg" hspace="10" align="left"><b>q3tourney1 - Power Station 0218</b>: An extremely simple futuristic-themed map, this 1-on-1 arena is laid out as four rooms in a loop, with a fifth room connected at the end. This last room is basically a dead end, but contains the only RL in the level. Quad damage and regenerations powerups also spawn alternatively, so without any other key weapons to speak of, these are the two areas you'll want to control.</p>
<p class="q3bg2"><b>Opponents</b>: Sarge</p>
<p class="q3bg2"><b>Armor</b>: Yellow Armor</p>
<p class="q3bg2"><b>Health</b>: SH, LH</p>
<p class="q3bg2"><b>Weapons</b>: SG, MG, RL</p>
<p class="q3bg2"><b>Powerups</b>: Quad Damage, Regeneration</p></ul><h1 id="806" name="806" class="book-h5">Tier 2</h1><ul><h3>Tier 2 Maps</h3>
<p class="q3bg1"><img src="/images/quake-III-media/maps/q3dm4.jpg" hspace="10" align="left">q3dm4 - Place of Many Deaths: The main level of this indoor map consists of three main rows and columns of hallways connected in a symmetrical pattern. Two staircases lead to a rocket launcher, which overlooks the quad damage respawns point below. The other end of the map features a plasma gun next to a portal, which will teleport you back to the center of the map; directly below this point is a red armor at the very bottom of the map.<br><br>The general strategy here -- stay high. Staying on the main level in a crowded game is a crapshoot; while the rocket launcher platform is easily defended and overlooks the quad damage point. Even if someone grabs the quad before you, it should not be hard to frag him with a few rockets before he gets away.</p>
<p class="q3bg2">Opponents: Orbb, Bitterman, Grunt <br>Armor: Heavy Armor Health: Yellow Health, Gold Health <br>Weapons: Shotgun, Machine Gun, Rocket Launcher, Plasma Gun<br>Powerups: Quad Damage</p>
<p class="q3bg1"><img src="/images/quake-III-media/maps/q3dm5.jpg" hspace="10" align="left">q3dm5 - The Forgotten Place: This castle-themed level consists of five main areas - two rooms at each end connected by a larger central area. It appears simple enough, but the many paths connecting the rooms and vertical architecture can confuse you in a hurry. A rocket launcher can be found in a cubby near the center of the level, and a plasma gun and shotgun at each far end. A red armor can also be found on a walkway above the central area.<br><br>The rocket launcher is a strong choice for this level -- the hallway directly above it narrows so you can drop down and grab it when no one's looking. If you're really daring (and have enough armor), you can also rocket jump out in case anyone is camping that area, which happens often in crowded games. Whatever you do, steer clear of the shotgun end of the map -- there's nothing of any real use there and you'll only end up wasting time while other players grab the more powerful weapons.</p>
<p class="q3bg2">Opponents: Hossman, Daemia<br>Armor: Armor Shards, Combat Armor, Heavy Armor<br>Health: Yellow Health, Gold Health<br>Weapons: Shotgun, Machine Gun, Rocket Launcher, Plasma Gun<br>Powerups: None</p>
<p class="q3bg1"><img src="/images/quake-III-media/maps/q3dm6.jpg" hspace="10" align="left">q3dm6 - The Camping Grounds: One of the most popular Q3 maps, The Camping Grounds is a large level with an assortment of jump pads and extremely high architecture. There are two key areas you'll want to control: a central area with the quad damage at the bottom, and the rocket launcher up high (accessible via jump pad). The second key area is a set of towers which contain a variety of powerups, including the megahealth, ammo, a transporter, and finally a red armor.<br><br>The real key to this level is learning your way around. Health is scattered throughout the level, so even when hurt, a skilled player can usually lose an attacker long enough to heal up. Many players tend to go for the rocket launcher and then head to the right for the red armor. Be careful when going for either -- players tend to camp both jump pads, and you're a sitting duck when you get to the top.</p>
<p class="q3bg2">Opponents: Daemia, Orbb, Bitterman, Hossman, Grunt<br>Armor: Combat Armor, Heavy Armor<br>Health: Green Health, Yellow Health, Gold Health<br>Weapons: Shotgun, Machine Gun, Grenade Launcher, Rocket Launcher, Rail Gun, Plasma Gun<br>Powerups: Mega Health, Quad Damage, Teleporter</p>
<p class="q3bg1"><img src="/images/quake-III-media/maps/q3tourney2.jpg" hspace="10" align="left">q3tourney2 - The Proving Grounds: One of the maps included in the Q3demo, The Proving Grounds consists of two main areas. The first is a large room split into upper and lower levels, with a rocket launcher below and yellow armor above, connected by jump pads. The second area is much smaller, containing a lightning gun, a yellow armor, and a very treacherous walkway over a fiery bottomless pit. The two areas are all connected by a series of walkways, and also via teleporter, so it's extremely easy to get to any point on the map in a hurry.<br><br>In a 1-on-1 match, the key is to control the armor. You can basically hear where your opponent is at any time by listening for the teleporter, jump pads and armor sounds; with so many entrances to each area, it's nearly impossible to hide. Unless you're extremely skilled with the lightning gun, you'll find it extremely hard to frag a fully-armored opponent. In a free-for-all, you're on your own -- if you're good, you can rip thorugh plenty of players with the lightning gun. Steer clear of the rocket launcher pit -- there's usually too much happening there to stay alive for long.</p>
<p class="q3bg2">Opponents: Hunter<br>Armor: Armor Shards, Combat Armor<br>Health: Yellow Health, Gold Health<br>Weapons: Shotgun, Machine Gun, Rocket Launcher, Lightning Gun<br>Powerups: None</p></ul><h1 id="807" name="807" class="book-h5">Tier 3</h1><ul><h3>Tier 3 Maps</h3>
<p class="q3bg1"><img src="/images/quake-III-media/maps/q3dm7.jpg" hspace="10" align="left">q3dm7 - Temple of Retribution: The first map in the original Q3test, Temple of Retribution is a decent-sized map that features a few key areas. There are five rooms connected in a chain -- two outdoors on each end -- and two more rooms on sublevels below. Many of the main rooms also have side connections to each other, so it's pretty easy to get from one place to another as long as you don't drop below.<br><br>The largest room contains a railgun on small walkway platform, and a quad damage. If you drop down, you'll find a yellow armor, a megahealth and a teleporter that will send you to the plasma gun room. The other two key points of the level each contain rocket launchers -- one of them is outside and is connected to almost every other room on the map, the other contains a teleporter and a button that opens a doorway to a lower room with the red armor.<br><br>Once again, armor is a key to doing well on this level. With so much of an emphasis on the rocket launcher, armor will allow you to outlast your opponents more times than not. Players tend to give away where they're heading a lot on this map; try and keep yourself in open areas (lots of rockets cause plenty of splash damage when you're up against a wall) and you'll be able to rack up quite a few frags. If you can manage to get a plasma gun and quad damage at the same time, you can rip off a massive amount of frags in a short period of time.</p>
<p class="q3bg2">Opponents: Daemia, Wrack, Grunt, Slash<br>Armor: Armor Shards , Combat Armor, Heavy Armor<br>Health: Green Health, Yellow Health, Gold Health<br>Weapons: Shotgun, Machine Gun, Rocket Launcher, Rail Gun, Plasma Gun<br>Powerups: Mega Health, Quad Damage, Teleporter</p>
<p class="q3bg1"><img src="/images/quake-III-media/maps/q3dm8.jpg" hspace="10" align="left">q3dm8 - Brimstone Abbey: There are three main areas to this level, connected by a series of jump pads and hallways: at one end, a small outdoor pool containing red armor; in the center, a large cathedral-like room with a plasma gun, and a bounce pad leading to a quad/invisibilty platform; at the other end, an upper area containing a rocket launcher accessible by jump pads.<br><br>One thing you want to avoid in this level is the water. The railgun sits on a platform directly above, and you'll be a sitting duck for any campers in the area. the rocket launcher area is relatively easy to get to, and you should constantly be listening to hear if anyone has grabbed the invisibilty rune, which can be quite nasty if you're unaware anyone has it. Try and grab as much armor as you can, and never assume you're alone...unless you're invisible.</p>
<p class="q3bg2">Opponents: Gorre, Bitterman, Angel, Slash<br>Armor: Armor Shards, Combat Armor, Heavy Armor<br>Health: Green Health, Yellow Health, Gold Health<br>Weapons: Shotgun, Machine Gun, Grenade Launcher, Rocket Launcher, Rail Gun, Plasma Gun<br>Powerups: Mega Health, Quad Damage, Invisibility</p>
<p class="q3bg1"><img src="/images/quake-III-media/maps/q3dm9.jpg" hspace="10" align="left">q3dm9 - Hero's Keep: Another popular Q3 map, Hero's Keep is a jump pad-filled level which you'll want to be careful to keep your balance on -- it's not uncommon to join a server and find the majority of players with negative scores. The main reason: at each end of the level are key areas only accessible via jump pad.<br><br>At one end of the level is a rocket launcher platform way, out on it's own. Leaving the platform on a crowded server can be tricky -- players heading to and from the platform often smack together in midair, causing both to drop to their death. Above this area is a megahealth, which can be reached via a treacherous jump pad hard to use in the heat of battle. Surrounding this area are two hallways containing armor and plasma guns. <br><br>At the other end of the level is a second large room with a railgun platform area at the far end. The ledge can be reached directly by jump pad, or indirectly by another jump pad located at the entrance to the area -- drop down into the hole and you'll be bounced, Sonic-the-Hedgehog-style, up to a platform in front of the railgun with a red armor.<br><br>Because of the acceleration pads, it's hard to use the railgun in many places on this map. Your best bet is to use the rocket launcher and plasma guns, and try to keep on solid ground as much as possible. It's easy to get caught up in all the jump pads and lose 5 or 6 frags per game, which can often mean the difference between winning and losing.</p>
<p class="q3bg2">Opponents: Angel, Gorre, Wrack, Slash<br>Armor: Combat Armor, Heavy Armor<br>Health: Green Health, Yellow Health, Gold Health<br>Weapons: Shotgun, Machine Gun, Rocket Launcher, Rail Gun,Plasma Gun<br>Powerups: Mega Health</p>
<p class="q3bg1"><img src="/images/quake-III-media/maps/q3tourney3.jpg" hspace="10" align="left">q3tourney3 - Hell's Gate: This 1-on-1 arena is a great tournament level -- it's basically two castles facing each other over a lava pit, with five ramps and paths leading from one side to the other. One castle contains the rocket launcher and two plasma guns, while the other side contains red armor and a railgun. The center path of the map contains a respawing battlesuit, which can be a huge advantage -- or bait, depending on how you look at it. <br><br>The key to this level is to always know where your opponent is. The level is farily tiny, so it shouldn't be too hard. Locate your enemy, grab a weapon, and never let him out of your sight. The battle suit and armor can be key here, so don't let your opponent control them if you can help it.</p>
<p class="q3bg2">Opponents: Klesk<br>Armor: Armor Shards, Combat Armor, Heavy Armor<br>Health: Gold Health<br>Weapons: Machine Gun, Grenade Launcher, Rocket Launcher, Rail Gun, Plasma Gun<br>Powerups: Battle Suit</p></ul><h1 id="808" name="808" class="book-h5">Tier 4</h1><ul><h3>Tier 4 Maps</h3>
<p class="q3bg1"><img src="/images/quake-III-media/maps/q3dm10.jpg" hspace="10" align="left">q3dm10 - The Nameless Place: This medium-sized map contains at its center an interesting regeneration chamber. This glowing blue cylinder of light will replenish both your health and armor at approximately 10 points per second as long as you stand there. Unfortunately, this makes you a sitting duck, especially when considering the rocket launcher sits in direct view of this area.<br><br>The map has a variety of staircases leading to an upper level, with a red armor to the left, and a lightning gun to the right. The very back contains a powerup spawning point, which will at different times produce the quad damage, regeneration and invisibility powerups.<br><br>The regeneration chamber/rocket launcher area tends to be one of the most crowded spots on the map, so try to keep an eye on it without becoming a target yourself. The plasma gun is a good tool to clear this area out with, especially if you can grab the quad or invisibility first.</p>
<p class="q3bg2">Opponents: Wrack, Tank Jr., Angel<br>Armor: Armor Shards, Combat Armor, Heavy Armor<br>Health: Green Health, Yellow Health, Gold Health<br>Weapons: Gauntlet, Machine Gun, Rocket Launcher, Plasma Gun, Lightning Gun<br>Powerups: Quad Damage, Invisibility, Regeneration</p>
<p class="q3bg1"><img src="/images/quake-III-media/maps/q3dm11.jpg" hspace="10" align="left">q3dm11 - Deva Station: One of the most complicated levels in Quake III, Deva Station features a plethora of indoor and outdoor areas, open spaces, tight hallways -- just about everything but the BFG. the rocket launcher can be found in a green-tinted room at one end of the level, while another room with the quad damage and haste powerup can be found at the other end. <br><br>The quad damage is locked away in a room that can only accessed by a semi-hidden basement teleporter, but that's only half the battle. If you grab the quad, alarms will go off and turrets on the wall will begin to flood both the quad and haste rooms with grenades. Your best bet is to get out of the room as quickly as possible after grabbing the quad.<br><br>The rocket launcher room is a key one on this map, as it also contains the red armor, is next to the medkit, and is located near the portal to the quad damage room. You can usually find unsuspecting players roaming the hallways, and the rocket launcher's splash damage makes the weapon doubly effective here.</p>
<p class="q3bg2">Opponents: TankJr., Patriot, Biker, Lucy<br>Armor: Armor Shards, Combat Armor, Heavy Armor<br>Health: Yellow Health, Gold Health<br>Weapons: Gauntlet, Shotgun, Machine Gun, Grenade Launcher, Rocket Launcher, Lightning Gun, Plasma Gun<br>Powerups: Mega Health, Quad Damage, Medkit, Haste</p>
<p class="q3bg1"><img src="/images/quake-III-media/maps/q3dm12.jpg" hspace="10" align="left">q3dm12 - The Dredwerkz: Another popular Q3 map, "The Dredwerks" is fairly large and loaded with just about everything Q3 has to offer. In the center is a large open area with a water-filled tunnel leading downward. A variety of bounce pads, walkways, and platforms surround the area, making it one of the key points of the map.<br><br>Also on this map is the first appearance of the BFG10K, which has changed some from Q2. No longer a slow-charging device, this BFG shoots out huge -- and fast-moving -- blobs of energy that can rip just about anyone to shreds in a hurry. The BFG is located in an underwater room directly over the regeneration powerup respawn point. You can also portal into the room from a teleporter located on the perimeter of the map, and a second teleporter inside the BFG room will send you to a yellow armor ledge high above the central area.<br><br>The key to this map is to control the central area -- players generally congregate by the rocket launcher -- and there's no better way to do this than with the BFG. Never use the water if you can help it; learn how to teleport to the BFG room, and then out to the central area, and you should be able to pick players off rather easily. There's lots of armor on the map, so keep your supply as high as possible to protect from other BFG weenies. :)</p>
<p class="q3bg2">Opponents: Wrack, Gorre, Wrack, Slash, Biker, Lucy<br>Armor: Armor Shards, Combat Armor, Heavy Armor<br>Health: Yellow Health, Gold Health<br>Weapons: Gauntlet, Shotgun, Machine Gun, Grenade Launcher, Rocket Launcher, Lightning Gun, Rail Gun, Plasma Gun, BFG-10K<br>Powerups: Mega Health, Quad Damage, Regeneration, Teleporter</p>
<p class="q3bg1"><img src="/images/quake-III-media/maps/q3tourney4.jpg" hspace="10" align="left">q3tourney4 - Vertical Vengeance: This map has gotten rave reviews as both a cool-looking and highly strategic 1-on-1 map. Basically a smallish square level three stories high, the outer perimter of "Vertical Vengeance" features walkways accessible by bounce pads placed around the map. A central tower/room acts as a sort of hub to the level, allowing players to quickly move from one side of the level to another without having to run all the way around.<br><br>There's no really dominant weapon on this map -- the rocket launcher and railgun can easily counter each other, and the shotgun is also an effective weapon here. Your best bet is to stay high, control the red armor and keep tabs on your opponent's location at all times. If you need health, you can usually find a good amount in the ground floor center room as well as by the rocket launcher, but don't hang out long at either location if you can help it. Be sure to make use of the slits in the upper walkways to drop down if you're having trouble jumping from the top platform to the second.</p>
<p class="q3bg2">Opponents: Anarki<br>Armor: Armor Shards, Heavy Armor<br>Health: Green Health, Yellow Health<br>Weapons: Gauntlet, Shotgun, Machine Gun, Rocket Launcher, Rail Gun, Plasma Gun<br>Powerups: Mega Health</p></ul><h1 id="809" name="809" class="book-h5">Tier 5</h1><ul><h3>Tier 5 Maps</h3>
<p class="q3bg1"><img src="/images/quake-III-media/maps/q3dm13.jpg" hspace="10" align="left">q3dm13 - Lost World: Most of the action in this dungeon-themed level revolves around a central open area with the rocket launcher. The quad damage spawns here as well, accessible by dropping off one of the walkways.<br><br>An extensive downstiars area features an assortment of other weapons, armor, and ammo. Bounce pads and a teleporter can also be found down here, but most of it is centered around getting players back upstairs. A grenade launcher and medkit in the upstairs area can help provide quite a few frags.</p>
<p class="q3bg2">Opponents: Stripe, Razor, Visor<br>Armor: Armor Shards, Combat Armor, Heavy Armor<br>Health: Green Health, Yellow Health, Gold Health<br>Weapons: Gauntlet, Shotgun, Machine Gun, Grenade Launcher, Rocket Launcher, Lightning Gun<br>Powerups: Quad Damage, Medkit</p>
<p class="q3bg1"><img src="/images/quake-III-media/maps/q3dm14.jpg" hspace="10" align="left">q3dm14 - Grim Dungeons: Another huge dungeon-themed level, this map features both vast outdoor architecture as well as a complicated underground network of hallways. A few courtyards outside contain the rocket launcher, quad damage and red armor, while the highlight of the underground area is the BFG, all alone on a treacherous platform.<br><br>While most players try to access the BFG via the dangerous moving platform (watched over by a railgun perch, no less), there is an alternate opening right next to the teleporter powerup. Grab the teleporter, drop down, grab the BFG, and teleport out -- if nothing else, this will prevent unneccessary suicides caused by enemies shooting you on the BFG platform.<br><br>The most concentrated action in this level seems to take place in the downstairs hallways, filled with players either trying to get to the BFG or back to the surface. Don't head down there unless you're pretty well armed and protected; once you're ready, head in and lay down the smack.</p>
<p class="q3bg2">Opponents: Stripe, Visor, Razor, Keel<br>Armor: Armor Shards, Combat Armor, Heavy Armor<br>Health: Yellow Health, Gold Health<br>Weapons: Gauntlet, Shotgun, Machine Gun, Rocket Launcher, Lightning Gun, Rail Gun, Plasma Gun, BFG-10K<br>Powerups: Mega Health, Quad Damage, Teleporter</p>
<p class="q3bg1"><img src="/images/quake-III-media/maps/q3dm15.jpg" hspace="10" align="left">q3dm15 - Demon Keep: Advanced players will have a field day on this map, with its hard-to-reach BFG outside, and quad damage underground. The rocket launcher is located in a central room, with jump pads leading to the rear of the map, and bounce pads leading just about everywhere else.<br><br>The BFG may look pretty unreachable way up in the sky, but it's pretty easy to get to. Grab the rocket launcher, run outside across the bounce pad (you don't have to jump to it; your running momentum will carry you to it), and position yourself in front of the airborne acceleration pad. A well-timed rocket jump will drop you onto the acceleration pad and through the air, grabbing the BFG along the way and dropping you on the ledge with the red armor.<br><br>From here, you can pretty drop down and terrorize everyone. You'll doubly effective if you have the battle suit, which protects you from splash damage and lava, enabling you to run into the partially hidden BFG ammo room outside (to the left of the main platform).</p>
<p class="q3bg2">Opponents: Stripe, Razor, Keel<br>Armor: Armor Shards, Combat Armor, Heavy Armor<br>Health: Yellow Health, Gold Health<br>Weapons: Gauntlet, Shotgun, Machine Gun, Grenade Launcher, Rocket Launcher, Lightning Gun, Rail Gun, Plasma Gun, BFG-10K<br>Powerups: Mega Health, Quad Damage, Battle Suit, Teleporter</p>
<p class="q3bg1"><img src="/images/quake-III-media/maps/q3tourney5.jpg" hspace="10" align="left">q3tourney5 - Fatal Instinct: The main feature of this fairly simple map is the fog which permeates the level. It isn't dangerous, but makes it a bit hard to see more than a few feet in front of you. Fortunately, that's not a problem, as most players usually head to the center of the map at some point to grab the rocket launcher.<br><br>The perimeter of the level features assorted weapons, ammo and armor, and a staircase and walkway running above the perimeter concludes at a quad damage, which can be quite lethal when paired with the plasma gun. Keep track of your opponents at all times and don't let them know where you are if you can help it.</p>
<p class="q3bg2">Opponents: Uriel<br>Armor: Armor Shards, Heavy Armor<br>Health: Gold Health<br>Weapons: Gauntlet, Shotgun, Machine Gun, Rocket Launcher, Plasma Gun<br>Powerups: Quad Damage</p></ul><h1 id="810" name="810" class="book-h5">Tier 6</h1><ul><h3>Tier 6 Maps</h3>
<p class="q3bg1"><img src="/images/quake-III-media/maps/q3dm16.jpg" hspace="10" align="left">q3dm16 - Bouncy Map: This medium-sized space-themed map consists basically of an upper and lower level, connected by no fewer than 9 bounce pads. At the very top of the level is a railgun -- perfect for picking off airborne players. A rocket launcher is located on the upper level, and is a frequent hangout for enemies.<br><br>One mistake players make on this level is to try and hit enemies while airborne; this is very hard to do unless you're fairly silled with the railgun. A good strategy is to get the plasma gun or rocket launcher and make the downstairs turf your own, where you'll get much clearer shots at enemies. You can also defend the railgun platform, which is hard to hit with the rocket launcher, but it's usually not long before players come charging up the ramp after you. If nothing else, head for the rocket launcher area -- you'll usually find some targets running around there.</p>
<p class="q3bg2">Opponents: Cadavre, Bones, Doom<br>Armor: Armor Shards, Combat Armor, Heavy Armor<br>Health: Yellow Health, Gold Health<br>Weapons: Gauntlet, Shotgun, Machine Gun, Rocket Launcher, Rail Gun, Plasma Gun<br>Powerups: None</p>
<p class="q3bg1"><img src="/images/quake-III-media/maps/q3dm17.jpg" hspace="10" align="left">q3dm17 - The Longest Yard: A favorite of players since the original Q3test was released, this platform-in-space features 12 bounce pads and lots of space to plummet through. Far off is a distance is a railgun platform, and high above the main area is a quad damage platform, with a teleporter back down to the center platform.<br><br>Pages could be written about strategies for this map, but the main keys to doing well: getting familiar with the bounce pads, using the railgun effectively, and being able to predict where players are heading. Bouncing players are basically sitting ducks for a good railer, and it's usually easy to leave rockets waiting for a player when you see them making a beeling for a particular item or bounce pad. Railgunners in particular can dominate this map, as there's really nowhere to hide.<br><br>If all else fails, the shotgun can be an extremely effective weapon on this map, especially against airborne players. Keep yourself well-armored -- and on solid ground -- and you should do OK.</p>
<p class="q3bg2">Opponents: Major, Sorlag, Doom<br>Armor: Armor Shards, Combat Armor, Heavy Armor<br>Health: Yellow Health, Gold Health<br>Weapons: Gauntlet, Shotgun, Machine Gun, Rocket Launcher, Rail Gun<br>Powerups: Mega Health, Quad Damage</p>
<p class="q3bg1"><img src="/images/quake-III-media/maps/q3dm18.jpg" hspace="10" align="left">q3dm18 - Space Chamber: A tight, towering map, this level is basically a large loop with a quad damage hovering at one end and a teleport powerup at the other. Acceleration pads symmetrically flanking both sides allow players to get from one side to the other quickly, with rocket launchers to grab in the air as you fly across. The center of the level is also open, with lots of lower areas to run through.<br><br>The most straighforward strategy: stay high, and don't fall off the map! It's easy to fall of the many ledges in the heat of battle, so try and get a rocket launcher and armor, and find players in open spaces in possible -- lots of tight turns and corridors can mean huge damage even from a shotgun if you run smack dab into someone. If you manage to grab a teleport powerup, hold on to it in case you fall off a ledge -- instead of falling to your certain death, you can save yourself a point and teleport to safety.</p>
<p class="q3bg2">Opponents: Major, Sorlag, Cadavre, Bones, Keel<br>Armor: Combat Armor, Heavy Armor<br>Health: Green Health, Yellow Health, Gold Health<br>Weapons: Gauntlet, Shotgun, Machine Gun, Rocket Launcher, Rail Gun<br>Powerups: Quad Damage, Teleporter</p>
<p class="q3bg1"><img src="/images/quake-III-media/maps/q3dm19.jpg" hspace="10" align="left">q3dm19 - Apocalypse Void: One of the most disorienting levels in Quake III, this map features a set of moving platforms set at varying heights, and are easy as anything to fall off of. A quad damage is set on an isolated platform far away, and you can usually find someone camping there. Grab a railgun, zoom in, blast anyone who might be hanging out there.<br><br>Once again, hanging on the to the teleporter is good insurance if you find yourself plummeting to your death, and the flight powerup combined with the railgun can cause major havoc -- just don't be caught out in space when it runs out! </p>
<p class="q3bg2">Opponents: Sorlag, Cadavre, Doom<br>Armor: Combat Armor, Heavy Armor<br>Health: Yellow Health, Gold Health<br>Weapons: Gauntlet, Shotgun, Machine Gun, Rocket Launcher, Rail Gun, Plasma<br>Powerups: Quad Damage, Teleporter</p></ul><h1 id="811" name="811" class="book-h5">Tier 7 - The Very End of You</h1><ul><h3>Tier 7 Maps</h3>
<p class="q3bg1"><img src="/images/quake-III-media/maps/q3tourney6.jpg" hspace="10" align="left"><b>q3tourney6 - The Very End of You</b>: The last map in Quake III Arena, consists of two identical platforms hovering in space, accessible via accelpads. Another platform high above contains BFG, another area, accessible by moving platform, contains megahealth and a teleporter.<br><br>The BFG platform has a catch: a large circular target overhead, that, when hit, crushes anyone standing at BFG. If you have the railgun, fire a shot at the switch every 10 seconds or so, the platform will stay closed for a few secs, causing others to smack into it and fall to their death.</p>
<p class="q3bg2"><b>Opponents</b>: Xaero</p>
<p class="q3bg2"><b>Armor</b>: Red Armor</p>
<p class="q3bg2"><b>Health</b>: SH, LH</p>
<p class="q3bg2"><b>Weapons</b>: Gauntlet, MG, RL, RG, BFG</p>
<p class="q3bg2"><b>Powerups</b>: MH, TP</p></ul><h1 id="685" name="685" class="book-h3">Weapons/Ammo</h1><ul><h3 class="body_title2">Quake III Arena Weapons Guide</h3> - Erik Max Francis.<br><br><br><br> <b>Gauntlet</b> 
<blockquote class="q3bg1"><img src="/images/quake-III-media/weapons/gauntlet.jpg" align="right" hspace="12">The gauntlet is an extreme short-range weapon, used for physically slashing your enemies. All players start with a gauntlet and cannot use it; it does not require ammunition, and there are no gauntlets to be found lying around in the arenas. It takes two or three good slashes to kill an unarmored opponent (preferably one who's not moving around a great deal). <br><br>When you do manage to frag someone with the gauntlet, you get a gauntlet medal (accompanied by the "Humiliation!" voiceover). You automatically switch to this weapon when you're out of ammunition for all your other weapons. <br><br>The shotgun is far more devastating at close range; in short, the gauntlet is a weapon of embarrassment. It is particularly effective against inexperienced players who don't yet know that they shouldn't stand still while engaging their opponents. Don't use the gauntlet unless your intent is only to humiliate, not frag.</blockquote>
<b>Machine Gun</b> 
<blockquote class="q3bg1"><img src="/images/quake-III-media/weapons/ammo_bullets.gif" align="left" hspace="12"><img src="/images/quake-III-media/weapons/machinegun.jpg" align="right" hspace="12">The machine gun is the standard issue weapon which all players start with. The 
machine gun takes bullets (pictured left). One advantage to the machine gun is that its bullets travel (essentially) instantaneously; they do not have 
to travel to the target at some definite speed like, say, the plasma gun. <br><br>However, the machine gun has built-in inaccuracy: Even when holding perfectly still, your hits will end up within a small circle around your crosshair. At extreme range, the machine gun is not very useful because of this; even if your target is holding perfectly still and your aim is dead on, many of your shots will miss. The machine gun has a high rate of fire, but each bullet does not do much damage. <br><br>The machine gun is best use for close quarters combat, when you have no other more appropriate weapons handy. Use the machine gun at short to medium range only when you have no more appropriate weapons available to you. If your machine gun is outmatched by your opponent's weapon, retreat.</blockquote>
<b>Shotgun</b> 
<blockquote class="q3bg1"><img src="/images/quake-III-media/weapons/ammo_shells.gif" align="left" hspace="12"> 
<img src="/images/quake-III-media/weapons/shotgun.jpg" align="right" hspace="12">The shotgun fires a spread of what amount to the machine gun's bullets, although it takes shells (pictured left), which are different from the machine gun's bullets. Like the machine gun, the shotgun's fire travels instantaneously. The spread of the blast is quite significant, so at extreme range the blast will cover a wide area, but since it fires many bullets at once one or two are likely to hit their mark, causing minor damage. At close range the shotgun can be devastating, since the spread is low enough that in close quarters combat most of the bullets will hit their target. <br><br>Its disadvantage is that it requires a fair amount of time to reload, so although you can deal out some serious damage, your opponent with a weapon that can cycle more quickly may have the upper hand. <br><br>Use the shotgun at close range for extreme damage. At medium range it is somewhat more effective than a machine gun at inflicting incremental damage.</blockquote>
<b>Plasma Gun</b> 
<blockquote class="q3bg1"><img src="/images/quake-III-media/weapons/ammo_plasma.gif" align="left" hspace="12"><img src="/images/quake-III-media/weapons/plasmagun.jpg" align="right" hspace="12">The plasma gun is a fairly effective weapon which fires fast-moving bolts of blue plasma (pictured left). The plasma bolts have a small area effect, or "splash," which allows them to cause damage not only to what they hit but to what is near them. This unfortunately means, as with other splash weapons, you can injure yourself with the plasma gun if you, say, fire it into a wall that you're standing against. <br><br>The plasma is an all-around good weapon for short through long ranges. Learn to use the plasma gun, it should be part of your standard arsenal in the arena.</blockquote>
<b>Lightning Gun</b> 
<blockquote class="q3bg1"><img src="/images/quake-III-media/weapons/ammo_lightning.gif" align="left" hspace="12"><img src="/images/quake-III-media/weapons/lightninggun.jpg" align="right" hspace="12">The lightning gun is an effective weapon which fires an instantaneous and continuous burst of lightning (pictured left) in a straight line in the direction it is fired, out to a fairly long range. It does moderate damage; one must play the lightning beam on the target for a while to do some serious damage. <br><br>Furthermore, since hitting one's target requires steady aim, effective use of the lightning gun is restricted to players with low pings (< 100 ms); for higher pings it simply is too difficult to keep the weapon trained on the target. <br><br>The lightning gun emits a buzz when it is wielded. The lightning gun can be effective in some situations; some prefer it to, say, the plasma gun. If you have a low ping, consider it as an alternative.</blockquote>
<b>Grenade Launcher</b> 
<blockquote class="q3bg1"><img src="/images/quake-III-media/weapons/ammo_grenades.gif" align="left" hspace="12"><img src="/images/quake-III-media/weapons/grenadelauncher.jpg" align="right" hspace="12">The grenade launcher fires grenades (pictured left), which are timed explosives which detonate with a splash similar to a rocket's only after a few seconds. <br><br>Grenades will detonate early, however, when impacting a player or any arena object which responds to gunfire, such as a door. <br><br>Firing the grenade launcher with the intent of actually hitting something can be tricky; the grenades fire at an upward angle automatically to compensate for gravity, so using one to hit an opponent who is even standing still requires a little practice. <br><br>Grenades, however, are excellent for making a combat area more precarious; firing a few grenades in a doorway is a good way to guarantee trouble for anyone walking through. When totally outgunned, firing grenades can make the battlefield a death trap, even after your opponent has fragged you; it's cheap, but effective. Use grenades for suppressive fire, covering your line of retreat, or laying-in-wait ambushes. <br><br>Don't bother using the grenade launcher as an actual weapon in a combat situation, unless you have no other good alternatives available.</blockquote>
<b>Rocket Launcher</b> 
<blockquote class="q3bg1"><img src="/images/quake-III-media/weapons/ammo_rockets.gif" align="left" hspace="12"><img src="/images/quake-III-media/weapons/rocketlauncher.jpg" align="right" hspace="12">Ah, the rocket launcher. Repeat after me: "This is my rocket launcher. There are many like it, but this one is mine." Since the days of Doom and the first incarnation of Quake, the rocket launcher has been the mainstay of the deathmatch player. <br><br>In Quake III Arena rockets move quickly (unlike in Quake II where they were comparatively slow and thus less effective for deathmatch play). Rockets (pictured left) have a fairly large splash effect and do severe damage when landing a direct hit. <br><br>At close to long ranges, rockets are most effective; at extreme ranges they do not travel fast enough to pose a threat, except when used as suppressive fire. As with other weapons, rockets impart momentum to their target, so not only can hitting an enemy with a rocket or rocket splash knock him backwards, but can use it on oneself by firing at the ground and simultaneously jumping to jump extra high, or "rocketjump." The rocket launcher will be the preeminent weapon in your arsenal; use it with pride.</blockquote>
<b>Rail Gun</b> 
<blockquote class="q3bg1"><img src="/images/quake-III-media/weapons/ammo_slugs.gif" align="left" hspace="12"><img src="/images/quake-III-media/weapons/railgun.jpg" align="right" hspace="12">The railgun fires instantaneous and extremely powerful slugs (pictured left) in a straight line in the direction of fire until it hits an obstacle; the railgun is unique amongst arena weapons in that the blast can punch through multiple players); however, it has a fairly long cycle time.<br><br>However, hitting a target requires deadly accuracy, and so to use it effectively one must have a fairly low ping, or a relatively stationary (i.e., inexperienced) target. Two hits with a railgun to an unarmored opponent are lethal. The zoom key can be quite useful here for a target at extreme range. The railgun emits a quiet hum while held, as if begging for victims. People proficient with the railgun are usually referred to as "railers," which is a compliment among railers and an insult among their victims. <br><br>The railgun is a devastating weapon in the hands of a skilled player. Try to at least gain some proficiency with it, if you have a low ping.</blockquote>
<b>BFG</b> 
<blockquote class="q3bg1"><img src="/images/quake-III-media/weapons/ammo_bfg.gif" align="left" hspace="12"><img src="/images/quake-III-media/weapons/bfg.jpg" align="right" hspace="12">The BFG (an acronym dating back to Doom, which is fairly self-evident) is the most devastating in the arena, unlike previous incarnations of the BFG in Doom and Quake II, where it was an awkward weapon that was only effective in certain situations (large rooms full of monsters/victims). <br><br>In addition to having a fast cycle rate, it does extreme damage with a direct hit and has a large and powerful splash; one direct hit with a BFG on an unarmored victim is lethal.<br><br> Its one drawback is that its ammunition (pictured left) is fairly hard to come by, and in the few arenas in which it appears (only five:<small>Q3DM12, Q3DM14, Q3DM15, Q3CTF4, and Q3TOURNEY6</small>) it can be difficult to get without peril to oneself (a vulnerable camping room in Q3DM12, a precarious walk across a moving platform in Q3DM14, a rocketjump onto a bounce pad in Q3DM15, a jump off a bounce pad onto a moving platform in Q3CTF4, and an acceleration/bounce pad combo onto a collapsable platform in Q3TOURNEY6). <br><br>Many players despise the BFG, as they consider it a weapon included simply so that newbies can rack up some frags. However, it is a standard Quake III Arena weapon and is not to be trifled with; the standard bots have some unpleasant things to say about the BFG and its users, so the guys at id Software knew full well what they were doing. <br><br>Fortunately, the BFG appears in so few arenas that it is easily avoidable. The key to using the BFG is to conserve ammunition, since it is relatively scarce. Fire enough shots to dispatch your opponent and no more. If you don't like the BFG, avoid BFG arenas or play server mods that remove the BFG.</blockquote></ul><h1 id="859" name="859" class="book-h4">Weapon Jumping</h1><ul><h3>Coming soon..</h3></ul><h1 id="774" name="774" class="book-h2">Quake III Media Editing Tools</h1><ul><h3>Media Creation</h3>
<p class="q3bg1"><b>Quake III Arena is a vast game</b>.. Many functions are preformed throughout the course of its creation including modeling, animating, 2d art  &amp; animation creation, sound editing, coding/programming, level editing, shader scripting and more.<br><br>
In this area you'll find linkage to Quake III related editing applications and other useful tools you'll use to make media for Q3. Don't be shy, this is a 
walk in the park.<br><br>
Be sure to view the readmes included with very application you download, install the smart way. The documentation supplied with these apps. are always the best location to learn whatever you'll need to get around. Pay close attention to things like hotkey lists and shortcuts. Every app is different, some like Wings3d will allow you to set any command to whatever key you want.<br><br>
The forums for these applications is listed in each ones box. IF you need help or if you find a link broken contact on of the admins via private message or visit <a href="http://forums.gamedesign.net/viewforum.php?f=40">the General Discussion forum</a>. We'll fix it if it's broken.</p><!--break--></ul><h1 id="903" name="903" class="book-h3">Gensurf - Terrain Mesh Generator</h1><ul><h3>GenSurf - Terrain Generator</h3>
<p class="q3bg1b"><b>Author</b>: David Hyde</p>
<p class="q3bg1b"><a href="http://tarot.telefragged.com/gensurf/downloads.htm">Downloads Page</a><br><a href="http://tarot.telefragged.com/gensurf/">Gensurf Documentation</a><br><a href="http://tarot.telefragged.com/gensurf/">Official Site</a><br><br>
GenSurf produces a .map file consisting of triangular brushes arranged in a uniform grid. There are several advantages to using uniform-sized triangles rather than randomly-placed triangles:<br><br><!--break-->Less brush fragmentation in Q2-engine games than an equivalently complex random arrangement (though the latest version can also produce non-rectangular meshes with the decimation feature). <br><br>Allows you to take advantage of hint brushes with the detail property to eliminate most, if not all, brush fragmentation.<br><br>GenSurf-generated maps contain integer values for all brush coordinates (GenSurf uses integer coordinates by design - it doesn't simply round off floating point values to the nearest integer). This ensures compatibility with the widest variety of map editors, but much more importantly it minimizes the likelihood of roundoff errors causing gaps and/or overlaps between brushes.<br><br>GenSurf has several methods of generating surfaces. You may choose between canned trigonometric functions or a fractal surface, then lock specific vertices at a given value and specify the range away from that vertex that other vertices are effected. You can also import a bitmap image representing contour values. If you own Microsoft Excel 5.0, the latest version of GenSurf allows you to describe a surface with a mathematical function.<br><br>With the executable version you can use the "add skybox" option and append one surface to another, building a complete, ready-to-compile outdoor area with ground surface and surrounding cliff walls without opening a map editor.</p></ul><h1 id="896" name="896" class="book-h3">GMAX & Tempest Q3 GamePack</h1><ul><h3>GMax 3D Modeller and Tempest Q3 Game Pack</h3>
<p class="q3bg1b"><b>Author</b>: Discreet Software</p>
<p class="q3bg1b"><a href="http://www.turbosquid.com/gmax">Download Page</a><br><a href="http://www4.discreet.com/gmax/gmax.php?id=906">FAQ's</a><br><a href="http://www4.discreet.com/gmax">Official Site</a><br><a href="http://www4.discreet.com/gmax/gmax.php?id=907">Tempest Quake III Tutorial</a><br><br>
gmax®  is a free 3D modeling and animation tool based on Discreet's award-winning 3ds max® software. Built for gamers to create their own in-game content for gmax ready games, a gamer can produce everything from characters and vehicles to landscapes and props. Not only do you get to customize your games, you also learn 3D design within a professional-level tool. <br><br>Intended to be a fully capable 3D level editing, modeling, animation, and texture mapping tool, gmax ships with a full suite of professional 3D content and animation features. Discreet approved game developers can publish gmax game packs, which customize the downloadable version of gmax into a fully featured level editor for supported game titles.</p>
</ul><h1 id="907" name="907" class="book-h3">ICE - Item Configuration Editor</h1><ul><h3>ICE  - Item Configuration Editor</h3>
<p class="q3bg1b"><b>Author</b>: Janus, MTE,. JaB, Blakjack, Pusher, Terak</p>
<p class="q3bg1b"><a href="http://www.fileplanet.com/dl.aspx?/planetquake/spitfire/ice-beta1-2.zip">Download Beta1 Revision2</a><br><a href="http://www.planetquake.com/spitfire/ice/manual/manual.htm">Manual</a><br><a href="http://www.planetquake.com/spitfire/ice.htm">Official Site</a><br><br>ICE is a Quake 3 mod that lets the player change the layout of items and other entities in maps. Originally an acronym for Item Configuration Editor, we just call it ICE now that entities other than items are supported.<br><br>ICE introduces a new gametype, the editor, in which players can add, remove, and move around map items to their satisfaction. These new item layouts can be saved to file and then loaded along with existing maps in the actual game. It can be used to give tired maps a new spark, test item layouts in new maps, or enable other mods with different entities to use vanilla maps without recompiling them.</p></ul><h1 id="908" name="908" class="book-h3">MapProp - Shell Ext for Win Explorer</h1><ul><h3>MapProp - Extension for Win Explorer</h3>
<p class="q3bg1b"><b>Author</b>: Bert Peers</p>
<p class="q3bg1b"><a href="http://www.bpeers.com/software/mapprop/mapprop-2-0-msi.zip">Auto Install Download Version 2</a><br><a href="http://www.bpeers.com/software/mapprop/mapprop-2-0.zip">Manual Install Download Version 2</a><br><a href="http://www.bpeers.com/software/mapprop">Official Site</a><br><br>
MapProp is a Shell Extension for the windows File Explorer. When installed, the Properties... dialog you get for .map files will have a new tab labeled "Preview". On it, you can see a top down view of the map without having to compile it or load it in a level viewer. Tesselating and rendering still takes a while, but overall it is probably a time saver. To look comprehensible, any map element that has "common" anywhere in the texturename, is hidden. Version 2.0 now also features Thumbnail / Webcontent-preview support, quake3 icons for .map files, and experimental Doom3 support.</p></ul><h1 id="890" name="890" class="book-h3">PakScape v0.11 PK3 Explorer</h1><ul><h3>PakScape v0.11 PK3 Navigator</h3>
<p class="q3bg1b"><b>Author</b>: Peter 'Riv' Engstr&ouml;m</p>
<p class="q3bg1b"><a href="http://dl.fileplanet.com/dl/dl.asp?maldavria/pakscape/pakscape-011.zip">Download Via GameSpy</a><br><br>
PakScape is a PAK/PK3/VOL explorer/creator. Since PK3 files are really ZIP files it can also be used as a ZIP explorer/creator. The PAK file formats supported are the formats used by games based on the Quake and Quake2 engines, including (but not limited to) Quake, Quake2, Half-Life, Soldier of Fortune and Daikatana. The VOL file format supported is the format used by the Starsiege and Starsiege Tribes games- and only the uncompressed kind.</p>
<!-- break -->
<p class="q3bg1"><b>Features</b><br>* Multiple Document Interface<br>* Explorer-like UI<br>
* Drag &amp; drop (including to and from Explorer)<br>
* Import/export files and directories</p>
<p class="q3bg1"><b>Bugs/Limitations</b><br>
* When moving objects (files and directories) all of the original objects will be deleted unless you cancel the operation in a   'Confirm Replace' dialog. Answering 'No' will only result in that the destination file is not overwritten- the file to be moved will still be deleted!<br>
* File type descriptions may be wrong for non-registered types unless you have used the file open/save dialog. I have no idea why.<br>
* If you decide to view a document (i.e. either double-click the document or choose 'Open' from the context menu) that is registered to open with PakScape the temporary file created will not be deleted when PakScape closes.</p>
<p class="q3bg1"><b>Technical Information</b><br>
Maximum files in a PAK file: 4096<br>Maximum path in a PAK file:  55 bytes<br>
Maximum files in a PK3 file: 65535<br>Maximum path in a PK3 file:  65535 bytes</p>
<p class="q3bg1"><b>Recommended System</b><br>* 686 300MHz<br>* 32MB free memory</p>
<p class="q3bg1"><b>Minimum System</b><br>* 586 200MHz<br>* 8MB free memory</p>
<p class="q3bg1"><b>Tips and Tricks</b><br>
If you don't have a lot of free memory save the archive directly after you've added a few files. If you don't have a fast processor use normal compression when saving zip/pk3 archives. Maximum compression is a lot slower and normally doesn't compress a whole lot more than normal compression.</p></ul><h1 id="894" name="894" class="book-h3">Particle Studio</h1><ul><h3>Particle Studio</h3>
<p class="q3bg1b"><b>Author</b>: The Freebrief Team</p>
<p class="q3bg1b"><a href="http://www.planetmedalofhonor.com/freebrief/q3a/ps/download/">Download Page</a><br><a href="http://www.planetmedalofhonor.com/freebrief/q3a/ps/book-manual/">Manual</a><br><a href="http://www.planetmedalofhonor.com/freebrief/q3a/ps/">Official Site</a><br><br>
Particle Studio is a freeware tool for Quake III Arena. It allows mappers to create particle systems. Some examples of effects possible with Particle studio are steam, fires, sparks and bubbles. Particle Studio automates an otherwise tedious task. It creates shader and prefab files, and all you have to do is to insert it in your map. That's easy! you'll like it! Quake 3 Arena has no support for ‘real’ particle systems. This program emulates them by using shader FX. Therefore the particle systems created by this tool lack many cool features. Things you can't do include curved paths, collision detection on particles and changing the color of the particles (you can change the brightness and opacity though).</p>
</ul><h1 id="891" name="891" class="book-h3">Pk3Man Q3Radiant Plugin</h1><ul><h3>Pk3Man PK3 Explorer Plugin</h3>
<p class="q3bg1b"><b>Author</b>: Mike 'mickey' Jackman and TTimo</p>
<p class="q3bg1b"><a href="http://download.sourceforge.net/pk3man/pk3man_beta3.zip">New Beta 3 Release</a><br><a href="https://sourceforge.net/projects/pk3man">PK3MAN Project Page</a><br><a href="http://pk3man.sourceforge.net">Official Site</a><br><br>
Pk3Man is a simple Plugin for Q3Radiant 199+ to enable the manipulation and browsing of PK3 files from within Q3Radiant. Its my no means a replacement for apps such as WinZip but it is tailored more to the creation of PK3's for the distribution of Quake3 maps and Mods.</p>
<!-- break --></ul><h1 id="800" name="800" class="book-h3">Q3ASE Shader Maker GUI</h1><ul><h3>Q3ASE</h3>
<p class="q3bg3"><img src="/images/q3ase.jpg" width="96" height="96" hspace="10" align="left"><a href="http://www.bpeers.com/software/q3ase" target="_blank">Official 
  Site</a> - Textures in Quake3:Arena are no longer a simple texture combined with a lightmap, but are fully scripted entities which can be used to control practically every option OpenGL exposes when it comes to texture positioning, transformation, blending and whatnot. To facilitate the creation and editing of such scripts, this tool will parse a script
and present it as a Windows GUI which is easier to understand and navigate than the bare C-like text files.</p>
<UL>
<LI><a href="http://www.bpeers.com/software/q3ase/#background">About Q3ASE</A></LI>
<LI><a href="http://www.bpeers.com/software/q3ase/#doc">Documentation</A></LI>
<LI><a href="http://www.bpeers.com/software/q3ase/#releases">Releases <B>(download)</B></A></LI>
<LI><a href="http://www.bpeers.com/software/q3ase/#credits">Credits</A></LI>
<LI><a href="http://www.bpeers.com/software/q3ase/#links">Links</A></LI>
</UL></p>
</ul><h1 id="797" name="797" class="book-h3">Q3Build - GUI Compiler Front End</h1><ul><h3>Q3Build</h3>
<p class="q3bg3"><img src="/images/q3build.jpg" align="left" hspace="10"><a href="http://q3build.sagnor.com/" target="_blank">Official 
  Site</a> - Q3 Build is a compiler front end for helping you compile your Quake 
  III Arena maps. Its a GUI that writes and executes a batch file and can launch 
  Quake3. Program written by Sagnor and Azrknight. This documentation by raYGunn. 
  Development has pretty much come to a grinding halt on any versions for q3build 
  as I've pretty much had taken a big step away from gaming and designing over 
  the last couple of years. Who knows though maybe someday I'll pick back up on 
  it. Anyways thats all for now. </p>
<p class="q3bg1b">For Q3A and GTKRadiant<br>
  <a href="http://q3build.sagnor.com/get_file.asp?FileID=1" target="_blank">GTKBuild</a> 
  <small>v2.0 Full install</small><br>
  <a href="http://q3build.sagnor.com/get_file.asp?FileID=2" target="_blank">GTKBuild</a> 
  <small>v2.0 Update Minimum files (zipped, Requires VB6 runtimes)</small><br>
  <br>
  For Q3A and Q3Radiant<br>
  <a href="http://q3build.sagnor.com/get_file.asp?FileID=3">Q3Build</a><small> v1.4 Full 
  install </small><br>
  <a href="http://q3build.sagnor.com/get_file.asp?FileID=4">Q3Build</a><small> v1.4 Update 
  Minimum files (zipped, Requires VB6 runtimes)</small><br>
  <br>
  <a href="http://q3build.sagnor.com/readme.txt" target="_blank">readme</a> - 
  <a href="http://q3build.sagnor.com/tool_options.txt" target="_blank">tool_options.txt</a> 
  - <a href="http://www.microsoft.com/downloads/release.asp?releaseid=12704" target="_blank">updated 
  ms runtimes</a></p>
</ul><h1 id="798" name="798" class="book-h3">Q3MAP2 BSP Compiler</h1><ul><h3>Q3Map2</h3>
<p class="q3bg3"><img src="/images/q3map2.jpg" width="96" height="96" hspace="10" align="left"><a href="http://shaderlab.com" target="_blank">Official 
  Site</a> - Q3Map2 is a BSP compiler for Quake 3 engined games. It currently 
  fully supports Quake 3 Arena/Team Arena, Return to Castle Wolfenstien, Star 
  Trek Elite Force, and has partial support for Jedi Knight II and Soldier of 
  Fortune 2.<br>
  <br>
It is designed to replace the Q3Map.exe that comes with QERadiant, GtkRadiant
and GMAX Tempest. However, there are significant enhancements that require
a little twiddling to use, such as faster lighting and enhanced surface
production.</p>
<p class="q3bg1b">Download: <a href="http://shaderlab.com/q3map2/2.5/q3map_2.5.16_win32_x86.zip" target="_blank">Win32 
  x86</a> - <a href="http://shaderlab.com/q3map2/2.5/q3map_2.5.16_linux_x86.tar.gz" target="_blank">Linux 
  x86</a> - <a href="http://shaderlab.com/q3map2/2.3/q3map_2.3.36_darwin_ppc.tar.gz" target="_blank">Darwin/OS 
  X PPC (2.3.36)</a> <br>
  <a href="http://shaderlab.com/q3map2/shader_manual" target="_blank">Q3MAP2 Shader 
  Manual</a> - Obsidian and ydnar <br>
  <a href="http://splashdamage.com" target="_blank">Official Q3MAP2 Forum</a> 
  - Splash Damage<br>
  <a href="http://en.wikibooks.org/wiki/Q3Map2" target="_blank">Q3MAP2 Compiler 
  Wiki</a> - Community<br>
  <a href="http://shaderlab.com/q3map2/2.5/readme.txt" target="_blank">Q3MAP2 
  readme</a></p>
</ul><h1 id="577" name="577" class="book-h4">Compiling</h1><ul><h3>Compiling with Q3MAP2 for Quake 3</h3>
<p class="q3bg1"><b>The first thing you should know</b> about compiling a map into a bsp for quake III arena is that theres another application involved. It's called Q3MAP2 by ydnar. It's a cmd window program that's run using either a command line, a batch file, a GUI or through the bsp menu in GTKRadiant.</p>
<center>- Places of Note -</center>
<p class="q3bg2"><a href="http://www.splashdamage.com/index.php?name=pnPHPbb2&file=viewforum&f=8">SplashDamage - Official Q3Map2 Forum</a><br>
<a href="http://shaderlab.com">Official Q3Map2 Download Location</a> -Shaderlab<br>
<a href="http://en.wikibooks.org/wiki/Q3Map2">Q3MAP2 Compiler Wiki</a><br>
<a href="http://www.shaderlab.com/q3map2/shader_manual">Q3MAP2 Shader Manual</a></p>
<p class="q3bg1"><b>If you're a beginner,</b> there's a few things you should now, before you start. This are important information as it will help keep you from askin silly questions later on. Turning a .map file into a .bsp file for use in Quake III Arena involves two to four stages. The BSP, VIS, LIGHT, and BSPC or BSP2AAS.<br><br>The following sections will break each of these stages down in depth and give you a better grasp of compiling for Quake III. Please be sure to read them carefully, and check the urls above for additional information before posting questions in the <a href="http://forums.gamedesign.net/viewforum.php?f=15&sid=fb58bca8604292b6fa98513d94211d5b">Rust Q3W Forum</a></p>
</ul><h1 id="696" name="696" class="book-h5">The BSP Compile Stage</h1><ul><center>BSP info by William 'SmallPileofGibs' Joseph<br>
edited and added to by skinmaster<br><br>
The Q3 compile process has four stages: BSP, VIS, LIGHT, BSPC.</center><br><br><p class="q3bg2">Stage 1. "BSP" (q3map mapname.map)<br>
mapname.bsp is the format that compiled Q3 levels are stored as. The important part of this process is the actual creation of the BSP Tree from the brushes of a map.</p>
<h3>What does the BSP stage do?</h3>
<p class="q3bg1">The player-navigable space inside the World is split into convex volumes bounded by planes. These convex volumes are called Leaf Nodes. The Leaf Nodes are stored in a binary tree called a BSP Tree.<br><br>Note: The "player-navigable space" inside the World means: everywhere in the game World that isn't a brush which is both solid and structural. The area the player can navigate around in the World using noclip, without passing through a Solid structural Brush. All World Brushes are Solid and structural unless they have a different content property set.<br><br>Non-structural content properties are detail, playerclip, trans. Non-Solid properties are water, lava, nonsolid Detail brushes are set by surfaceparm detail, or by making the brush detail in Radiant (viewing detail brushes is toggled by ctrl+d, viewing structural ctrl+shift+d). Some of the common/ shaders are structural, but not visible, including: common/caulk, common/hint, common/nodrawnonsolid, common/areaportal. The rest are either non-structural, are only used on Entities, or are not commonly used in maps.</p>
<h3>How and why is the BSP created?</h3>
<p class="q3bg2">A map is a 3-dimensional volume of space extending +/- 4096 units from the origin in X Y and Z, containing smaller solid convex volumes bounded by planes (structural brushes). The goal is to use the fewest splits possible to split the space of the map into convex volumes, each of which do not contain any structural brushes.
A simple cube room is a convex volume bounded by six planes. Convex volumes are important for visibility, because it is simple and fast to determine whether two convex volumes can see one another.<br><br>These convex volumes are stored as Leaf Nodes in a binary tree, making it easy to determine which Leaf Node the viewpoint or objects (entities, tris, patches) are in. This is called a Binary Space Partitioning Tree, or BSP Tree.<br><br>A BSP tree is produced using a recursive operation. A recursive operation is one that causes itself to repeat within itself. The operation is performed on a Volume, starting with the entire map as a single Volume: If the Volume contains structural Brushes... Then split the volume along the Plane of the Face of one structural Brush. Continue to the first child Volume produced and repeat the operation.<br><br>Else, if the Volume does not contain structural Brushes, it contains no Planes for splitting, and a Leaf Node is created for the volume. Then return to the next child Volume up the tree and repeat the operation. If there is no child Volume, end the operation.<br><br>Note: Each split-plane does not always divide the volume exactly in half. Axial split-planes are chosen before non-axial split-planes.<br><br>The split-plane which cuts through the maximum number of brushes is chosen. It is important to split the tree roughly in half each time in order that each Leaf Node is roughly the same distance from the tree's root, balancing the branches of the tree.</p>
<h3>How can I control the BSP splits?</h3>
(a way to use detail and Hint brushes)<br><br>
<p class="q3bg2">ALL structural brush face-planes, Including completely hidden or nodraw faces, are possible candidates to split the BSP and create extra Leaf Nodes. Leaf Nodes are currently NEVER merged, even if the result of the merge would be a new convex leaf. The ideal situation is to have all structural brush faces axial and perpendicular to the grid lines every 128 units. Any more complex brushes can be made detail, and all hidden structural or detail Brush faces can be made nodraw as well, by applying the common/caulk shader. The effect is similar to using Bezier Patch surfaces, which also do not block vis or have any other visible faces than the front surface.<br><br>Hint Brushes are structural, trans, and nonsolid. This means they are totally invisible in a compiled Quake 3 level, but their Face-Planes are used to split the BSP like other structural Brush Face. A large Axial Hint brush face will be an ideal candidate to be used for a BSP Split. Adding Hints with Axial faces (perpendicular to the 128-unit grid lines) aligned with other Axial Planes from structural Brush faces, minimises the number of extra split-Planes and Leaf Nodes.<br><br>Basing a map on the 128-unit grid allows you to hugely simplify the visibility process. If the leaf nodes are all 128-unit cubes, its very easy for the designer to predict whether one area can see into another, and place simple axial hint brushes to reduce visibility with minimal increase in vis pre-processing time. As Detail brushes and bezier patch surfaces do not affect the shape of nodes they can be used to build up complex architecture in front of simple axial structural nodraw brushes</p>
<h3>What is a leak?</h3>
<p class="q3bg1">A quake3 map is a hollow space made up from a number of convex volumes (Leaf Nodes) contained within a solid outer hull. The Leaf Nodes "outside" the map are discarded (pruned =) after the BSP Tree is created. There is a "leak" if you cannot separate the Entities on the inside from the "void" outside the radiant grid. If there is a leak q3map generates a detailed error message (seen if you use q3map -v) and records the path of the leak to the Pointfile "mapname.lin". Usually a leak will be displayed in Radiant as a path from the origin of an entity to a Leaf Node touching the area outside the radiant grid without passing through a solid brush.</p>
<h3>What is the .prt file?</h3>
<p class="q3bg2">The Leaf Nodes remaining in the BSP Tree after the outside Leaf Nodes are removed are bounded either by other nodes or by structural brush faces. A Portal is created for every face of a Leaf Node that is bounded by another Leaf Node. Each Portal is like a window from one node looking outwards into another. The Portal information is not needed in the BSP, but it is essential to VIS, so it is stored in the portal file "mapname.prt". </p>
<h3>How are the brushes/patches turned into triangles?</h3>
<p class="q3bg1">All faces that are "outside" the map (facing the void) are discarded. Hidden areas of brush-faces are discarded. The remaining area of a brush-face must always be a convex polygon, so if only an area in the middle of the face is hidden then no part of the face will be discarded. If two areas separated by a wall are sharing the same brush for a floor, the floor Face will not be split and will be shared between the two rooms.<br><br>
Note: Part of a face is considered hidden if it is covered completely by a brush flush/overlapping with it. Hidden areas are discarded ONLY if they are part of a structural brush-face. Faces hidden on detail brushes are NOT discarded.<br><br>Every remaining face is divided into a separate Triangle Strip to minimise the number of Vertices needed. In order to avoid cracks where T-junctions occur between edges and vertices, edges are split when they touch another triangle vertex. If a vertex lies on an edge that cannot be split, creating a T-junction, there will be a tiny crack in the hull of the map (along the bar of the "T"), known as "sparklies" when something brighter is drawn behind the crack and shows through. <br><br>Bezier Patch Surfaces are treated as a collection of points during the BSP compile, and are turned into triangles when the map is loaded.<br><br>Note: Edges of Brush faces touching a green Patch control-point will be split to avoid a t-junction, creating a vertex.<br><br>Texture coordinates are generated for each vertex. Texture coordinates are two values U and V (UV Coordinates) which specify the location of the vertex on the texture image. These coordinates are normalized decimal values (values between 0 and 1), so the image size in pixels will not affect the shape or size that it appears to be in Q3. Note: each brush-face or patch-surface is a separate mesh with its own vertices, enabling it to have different set of Texture Coordinates and Shader properties.</ul><h1 id="697" name="697" class="book-h5">The BSP Compile Switch List</h1><ul><h3>The BSP Compile Switches</h3>
<p><i>This information is drawn from the Q3MAP2 WIKI</i></p>
.-<strong>custinfoparms</strong><br>
Enables custom surfaceparms for game mods without the need to recompile Q3Map2 itself.<br><br>Custom surfaceparms are stored in custinfoparms.txt, in the "scripts" directory. Custom surfaceparms follow the format: <br>
<p class="q3bg2">{ <br>
surfaceparmName 0x0000 //whatever bitflag is used by your mod for said surfaceparm <br>
}</p><br>
-<strong>debuginset</strong><br>
Enables debugging of surface triangle insetting. //I'm totally not sure what this is? <br><br>

-<strong>debugportals</strong><br>
Draws the portals into the bsp as translucent polygons. Omit -vis and -light for best -debugportals results. <br><br>

-<strong>debugsurfaces</strong><br>
Colors every surface a different color (very trippy). Omit -vis and -light for best -debugsurfaces results. <br><br>

-<strong>fakemap</strong><br>
Creates a new .map file with a blank worldspawn entity and all the world brushes from your original .map file. //Don't know much about this one. <br><br>

-<strong>flares</strong><br>
Used in Raven games to generate coronas on light sources. //Another one that I've never been able to get working. <br><br>

-<strong>flat</strong><br>
Forces all texture coordinates for a given surface to the pixel that best fits the average color of the assigned texture. <br><br>

-<strong>fulldetail</strong><br>
Will cause all detail brushes to be handled as if they were structural. <br><br>

-<strong>leaktest</strong><br>
Will cause Q3Map2 to abort compile if a leak is encountered. <br><br>

-<strong>meta</strong><br>
At one time, there was a clear definition as to what, exactly, the -meta switch did. Now, it has become the "magic" switch that is required for most of Q3Map2's advanced features. Always -meta, and always -v. <br><br>

-<strong>mi</strong> (N)<br>
Sets the maximum per-surface index count to N. <br><br>

-<strong>mv</strong> (N)<br>
Sets the maximum per-surface vertex count to N.<br><br>

-<strong>nocurves</strong><br>
Will not compile patch meshes into the .bsp.<br><br>

-<strong>nodetail</strong><br>
Will not compile detail brushes into the .bsp. <br><br>

-<strong>nofog</strong><br>
Will not compile fog brushes into the .bsp. <br><br>

-<strong>nohint</strong><br>
Will not compile hint brushes into the .bsp. <br><br>

-<strong>nosubdivide</strong><br>
Visible surfaces will not be split. TessSize is ignored. <br><br>

-<strong>notjunc</strong><br>
Will not fix T-Junctions (can cause sparklies and LOD cracks). <br><br>

-<strong>nowater</strong><br>
Will not compile liquid brushes into .bsp. <br><br>

-<strong>np</strong> (shadeangle (1 through 179))<br>
Forces all planar shaders to become nonplanar with the shadeangle specified. <br><br>

-<strong>onlyents</strong><br>
Only changes the entities in the compiled .bsp. Needs a compiled .bsp (as well as a .map) to act as a file-filter. <br><br>

-<strong>patchmeta</strong><br>
Creates meta surfaces from patch meshes. This "bakes" a set LOD into patches in your .bsp. <br><br>

-<strong>samplesize</strong> (N)<br>
Writes the prescribed samplesize argument to the .srf surface file. The .srf file (and thus -samplesize) affects the -light phase of compile. A lower -samplesize value produces more sharply defined lightmaps. The default samplesize is 16; a samplesize value of 4 produces a very high quality compile, suitable to call "final." A samplesize value of 1 would be total overkill, resulting in epochal compile times and immensely bloated .bsp filesize. <br><br>

-<strong>skyfix</strong><br>
Enables fix for buggy ATI GL_CLAMP behavior. Always use this. <br><br>

-<strong>snap</strong><br>
Enables axial bevel plane snapping to reduce clipped model plane count (use with care). <br><br>

-<strong>texrange</strong> (N)<br>
Limits per-surface texel count to N. <br><br>

-<strong>v</strong><br>
Enables verbose mode for the bsp phase. Always use this. <br><br>

-<strong>verboseentities</strong><br>
Outputs more information about compiling entity sub-models into the .bsp.</ul><h1 id="702" name="702" class="book-h5">The BSPC or BSP2AAS Compile Stage</h1><ul><center>BSPC/BSP2AAS info by William 'SmallPileofGibs' Joseph<br>
edited and added to by skinmaster<br><br>
The Q3 compile process has four stages: BSP, VIS, LIGHT, BSPC.</center><br><br><p class="q3bg2">Stage 4. "BSPC" (bspc -bsp2aas mapname.bsp)<br><br>
This stage uses the bspc tool, and generates an Area file mapname.aas. The Area file is used by bots to navigate the map. BSPC is a separate process from the other compile stages, and and it has no effect on and ignores any information created in those stages. BSPC requires only a mapname.bsp which does not leak.</p>

<h3>How does BSPC interpret the map?</h3>
<p class="q3bg1">BSPC uses the Brush Face information in the mapname.bsp to make a list of Faces which clip the bots. Bezier Patches are tessellated into into planar Faces called "curve brushes" and are then treated the same as other Brush Faces. Face content properties which clip bots include: structural (all brushes or curves are structural by default), detail, Trans, playerclip. All Faces which clip the player are considered solid to bots, so they are all treated identically as "solid" and any other content property is forgotten.</p>
<h3>What is the "Brush CSG" stage of BSPC?</h3>
<p class="q3bg1">During this stage unnecessary Brushes are discarded. If any Brush is completely contained within another Brush it will be discarded, by CSG-Subtracting the container brush from the contained brush. The more brushes BSPC ignores the better - use large simple clip brushes to completely contain any complex architecture made from multiple brushes.</p>
<h3>How is the area file created?</h3>
<p class="q3bg1">BSPC splits the bot-navigable space in the map up into convex volumes called Areas, in a process similar to q3map BSP. Each Area must be convex, like the Leaf Nodes in a BSP Tree. BSPC also tries to minimise the number of Areas by merging any two Areas where the result is another convex Area. BSPC stores the Areas in groups called Clusters, in the Area file "mapname.aas". A Cluster is a group of connected Areas, separated from other Clusters by Solid walls or Clusterportals. Without Clusterportals, most maps will have a single large Cluster of Areas.
You can see the Cluster/area info in bspc.log after creating the area file.</p>
<p class="q3bg2">Note: Bot-navigable space in a map is anywhere on the inside that isn't a solid player-clipping brush. Solid player-clipping brush content properties include: solid(default for all brushes unless nonsolid), playerclip. </p>
<h3>How do Bots use the area file?</h3>
<p class="q3bg1">Bots use the Areas in the Area file to navigate between Entities in the map. At any point in time they have to be thinking about all the areas in whichever Cluster they are in. If there are a large number of areas in that Cluster, the bots' cpu usage will be noticeably larger while they are in it. More than 1000 areas in the Cluster gives a very noticable performance hit - below 500 is much better, and the smaller the number of areas in the largest Cluster the better. </p>
<h3>How do I make Clusterportals?</h3>
<p class="q3bg1">Clusterportal Brushes are used to control the way BSPC creates Clusters, by adding potential Clusterportals for BSPC to consider.<br><br>Clusterportal Brushes should not be confused with Areaportal Brushes as there are a few important differences in their use. Clusterportal Brushes should be thin axial brushes, up to 32 units thick. For a Clusterportal brush to be accepted by BSPC as a ClusterPortal it must have two opposite faces touching two separate Clusters. It must be placed in a doorway or a horizontal passage where bots can freely walk through it rather than falling through vertically. The two opposite faces should be identical in shape and size, and the other four faces should be against solid brushes or clip brushes.</p>
<p class="q3bg2">Note: In the same way as Areaportals, Clusterportals must be used to entirely separate parts of the map from each other. If a bot can reach area 2 from area 1 (via any other areas) without passing through a Clusterportal, both areas are connected and will be part of the same Cluster.</p></ul><h1 id="700" name="700" class="book-h5">The LIGHT Compile Stage</h1><ul><center>LIGHT info by William 'SmallPileofGibs' Joseph<br>
edited and added to by skinmaster<br><br>
The Q3 compile process has four stages: BSP, VIS, LIGHT, BSPC.</center><br><br><p class="q3bg2">Stage 3. "LIGHT" (q3map -light mapname.bsp)<br><br>
This is the lighting stage, where lightmaps are generated for every world surface in the map. It has no effect on bsp, hints, vis or r_speeds.</p>

<h3>How do lightmaps work?</h3>
<p class="q3bg1">The Q3map -light algorithm creates a lightmap pixel for every 16 game world units on a brush, and every 20 units on a patch, stored in 128*128 pages.<br><br>The lightmaps are 24bit RGB, and are blended with the textures by multiplying the lightmap RGB values with the RGB values of the texture (see the Shader Manual: blendfunc filter).</p>
<h3>How are lightmaps generated?</h3>
<p class="q3bg1">All lightmap pixels start pure black (RGB 0 0 0). A straight line is traced from the centre of each lightmap pixel towards the origin of each point light source. The distance between the pixel and the light source decides the brightness the light adds to the RGB values of that pixel. If the line is blocked by any visible non-transparent brush, the light source does not have any effect on the lightmap pixel.<br><br>The time taken by the LIGHT stage is proportional the number of lightmap pixels multiplied by the number of point light sources.</p>
<h3>What about surface lights?</h3>
<p class="q3bg1">Surface lights are subdivided using the q3map_lightsubdivide value (default 64), creating a point light source on the surface every 64 units. These are used in the light calculations in the same way as other point light sources.</p>
<h3>What does -extra do?</h3>
<p class="q3bg1">Using the -extra option a straight line is traced from four extra points on each lightmap pixel in addition to the original one. The average of the result is taken, which helps to smooth out jagged shadows. Unfortunately it also makes -light take five times as long.</ul><h1 id="701" name="701" class="book-h5">The LIGHT Compile Switch List</h1><ul><h3>The LIGHT Compile Switches</h3>
<p><i>This information is drawn from the Q3MAP2 WIKI</i></p>
-<strong>areascale</strong> (N.N)<br>
Scales up area (shader) lights by the prescribed factor. Q3Map2 -light -areaScale 0.25 will result in area lights that are only 25% as bright as those in a .bsp compiled with -light -areaScale 1.0. <br><br>
-<strong>approx</strong> (N)<br>
Approximates lightmaps within a byte tolerance of N. Q3Map2 -light -approx forces simple surfaces without much shadow detail to be vertex lit, thus saving lightmaps. The range is from 0-255, 0 being default (no approximation). <br><br>
-<strong>border</strong><br>
Creates a debugging border around each lightmap. <br><br>
-<strong>bounce</strong> (N)<br>
Enables Q3Map2 radiosity, calculating radiosity light through N bounces. <br><br>
-<strong>bouncegrid</strong><br>
Allows bounced light to affect the lightgrid. <br><br>
-<strong>bouncescale</strong> (N.N)<br>
Scales up radiosity lights by the prescribed factor. <br><br>
-<strong>cheap</strong><br>
Stops Q3Map2 from calculating light on a sample after it exceeds (255, 255, 255). This may produce odd artifacts on maps with lots of saturated colored lighting. Also, do not use cheap with radiosity if you want to preserve all the emitted light. <br><br>
-<strong>cheapgrid</strong><br>
Stops Q3Map2 from calculating light on a sample after it exceeds (255, 255, 255), but only for the lightgrid. <br><br>
-<strong>compensate</strong> (N.N)<br>
Scales back lightmap values to adjust for overbrighting when -gamma is used. For Quake III: Arena, a good compensate value is 4, though some experimentation may be needed to find an aesthetic that suits your particular map. <br><br>
-<strong>cpma</strong><br>
Enables brand spanking new asstastic vertexilicious cpma-styled lighting. Use of this switch leads to much pie. <br><br>
-<strong>dark</strong><br>
Enables darkening of lightmaps at brush/lightmap seams. Sort of like a half-assed occlusion pass, ends up looking a bit Unreal 1-ish. Very subtle. <br><br>
-<strong>debug</strong><br>
Enables lightmap debugging. <br><br>
-<strong>debugaxis</strong><br>
Colors lightmaps based on their projection axis. <br><br>
-<strong>debugcluster</strong><br>
Colors lightmaps based on the PVS cluster the luxel falls into. <br><br>
-<strong>debugorigin</strong><br>
Colors lightmaps based on the luxel origin relative to the raw lightmap's bounding box. <br><br>
-<strong>debugunused</strong><br>
Colors unused luxels hot pink. <br><br>
-<strong>dump</strong><br>
Dumps radiosity lights into numbered prefabs. <br><br>
-<strong>fast</strong><br>
Enables light envelopes for area (shader) lights. This includes radiosity lights. Results in a much quicker -light compiles, but darkens all enveloped light sources considerably—this can be compensated for easily by raising your surfacelight values.  Do not be confused by the "fast" nomenclature... -fast is perfectly suitable for "final" compiles. <br><br>
-<strong>fastbounce</strong><br>
Enables -fast style calculations, but only for radiosity lights. <br><br>
-<strong>faster</strong><br>
Enables -faster light calculation.<br><br>
-<strong>fastgrid</strong><br>
Enables -fast style calculations, but only for the lightgrid. <br><br>
-<strong>filter</strong><br>
Applies a gaussian blur to lightmaps, smoothing out shadows. Sounds good in theory, but -filter doesn't play nice with a lot of the more interesting effects... don't use it. Use -samples instead. <br><br>
-<strong>gamma</strong> (N.N)<br>
Creates a more realistic color ramp between "light" and "dark." Good values are in the 1.4-2.2 range. Games that use r_overBrightBits and r_mapOverBrightBits (Quake III: Arena, most notably) will need those cvars disabled unless -compensate is used accordingly. <br><br>
-<strong>lightmapsize</strong> (N)<br>
Limits the lightmap size. <br><br>
-<strong>lomem</strong><br>
Trades increased compile time for decreased memory usage. If you are getting safe_malloc errors (or just running out of RAM), try this switch. <br><br>
-<strong>nocollapse</strong><br>
Disables collapsing of identical lightmaps. This switch is required for Q3Map2 lightstyles. <br><br>
-<strong>nogrid</strong><br>
Disables calculation of the lightgrid. <br><br>
-<strong>normalmap</strong><br>
Colors lightmaps based on the facings of their vertex normals. <br><br>
-<strong>nosurf</strong><br>
Disables the surface tracing of detail brushes and patch meshes for shadow casting. <br><br>
-<strong>notrace</strong><br>
No light tracing is performed. As a result, no shadows will be cast. <br><br>
-<strong>novertex</strong><br>
Disables the calculation of vertex lighting. <br><br>
-<strong>patchshadows</strong><br>
Enables the casting of shadows by patch meshes. <br><br>
-<strong>pointscale</strong> (N.N)<br>
Scales up point (entity) lights by the prescribed factor. <br><br>
-<strong>samples</strong> (N)<br>
Enables intelligent antialiasing of shadow edges in lightmaps. A value of 2 both looks good and compiles quickly, while a value of 3 looks great but compiles somewhat more slowly. <br><br>
-<strong>scale</strong> (N.N)<br>
Scales up all light sources by the precribed factor. <br><br>
-<strong>sky</strong> (N.N)<br>
Scales up all sun/sky light sources by the prescribed factor. In this new era of -gamma -compensate, -sky 3 can allow "old style" sky shaders to be used without manually rewriting them. <br><br>
-<strong>sunonly</strong><br>
Computes sun/sky light only, no other light sources. <br><br>
-<strong>super</strong> (N)<br>
Enables arbitrarily ordered grid supersampling of lightmaps. This is much, much, much slower than -samples, by the way. <br><br>
-<strong>thresh</strong> (N.N)<br>
Sets the recursive triangle subdivision threshhold. The range is 0.0-1.0. //I don't know much about -thresh. <br><br>
-<strong>v</strong><br>
Enables verbose mode. Always use this. </ul><h1 id="698" name="698" class="book-h5">The VIS Compile Stage</h1><ul><center>VIS info by William 'SmallPileofGibs' Joseph<br>
edited and added to by skinmaster<br><br>
The Q3 compile process has four stages: BSP, VIS, LIGHT, BSPC.</center><br><br>
<p class="q3bg2">Stage 2. "VIS" (q3map -vis mapname.bsp) bsp_fullvis<br><br>
VIS is short for Visibility. The relevant part of this process is the creation of the PVS Table for the Portals in the map.
As the player's viewpoint moves around a FULLY vis'ed bsp different areas become visible or hidden, depending on which area the viewpoint is in.</p>
<h3>How is the PVS created? </h3>
<p class="q3bg2">Every Portal in the portal file is checked against every other Portal for visibility. Portal 1 is visible to Portal 2 if a straight line of sight can be drawn between any part of Portal 1 and Portal 2 without passing through a solid structural brush. Every Portal then gets a list of the other Portals that can be seen from it. This information is the Potentially Visible Set and is stored in the PVS Table. </p>
<h3>What does -vis -fast do? </h3>
<p class="q3bg2">Otherwise know as "bsp_fastvis", using the -vis -fast option does not create a PVS, leaving every Portal visible to every other Portal.</p>
<h3>How do Portals affect visibility?</h3>
<p class="q3bg2">Every Leaf Node has one or more Portals (unless there is only one node in the BSP tree). If a Portal belonging to Node 1 can see a Portal belonging to Node 2, Node 1 is visible to Node 2. When the player Viewpoint is anywhere in Node 1, every object in Node 2 is drawn. When the player Viewpoint is in Leaf Node x, every object in every other Leaf Node visible from x will be drawn.<br><br>Objects include Brush Faces, Bezier Patches, Entities. One object can be in more than one Leaf Node at the same time. A Brush Face is drawn when any part of the face is touching a visible Leaf Node. A Bezier patch is drawn when any of its control points are touching a visible Leaf Node.
An entity is drawn when any part of its bounding box is touching a visible Leaf Node.<br><br>
To summarise: Effectively, solid structural brushes block visibility between the contents of Leaf Nodes. Curves, detail brushes and Entities do not block visibility. Visibility between two areas will only be blocked when both areas are completely hidden from each other. Generally, the more Leaf Nodes visible from the Leaf containing the Viewpoint, the more objects will be drawn. The aim when optimising for visibility, is to have the smallest number of other Leaf Nodes visible from any one Leaf Node.<br><br>More of the map will be drawn if the BSP has a small number of large leaf Nodes, or an innefficient arrangement of Leaf Nodes. You can reduce the number of Leaf Nodes created by reducing the number of unique structural Planes in the map, by making all unnecessary structural Face-Planes into detail Brushes. You can control visibility by placing Hints to create the Leaf Nodes and their Portals exactly where you want them to be, splitting the space into more Leaf Nodes only in areas where they are needed.</p>
<h3>How can I make VIS more efficient?</h3>
<p class="q3bg2">The time -vis takes is roughly proportional to the number of Portals in the map. The number of portals is displayed when you start VIS, as "numportals xxxx". The visdatasize is the size the PVS table takes up in the mapname.bsp file - this is limited to around 2MB.<br><br>A lot of Leaf Nodes means a lot of Portals. A lot of Portals means a long vis time. The number of Leaf Nodes depends entirely on the complexity of the BSP.  Solution: detail brushes - Making a brush detail will stop it from affecting the BSP Tree, reducing the number of Leaf Nodes formed.
To make any brush a detail brush, select it and press ctrl+m or Selection > Make detail. Toggle viewing of detail brushes with ctrl+D or use the View > Show menu.<br><br>The drawback of wide use of detail is that over-simplifying the Leaf Nodes can hurt your visibility efficiency (see visibility summary). Solution: HINT brushes - A Hint brush (common/hint) will be invisible in Q3, but is structural, so it will affect the BSP Tree and create more Leaf Nodes. This gives you a lot of control over WHERE the Leaf Nodes are created. Placing a hint brush in an area of open space will force creation of a Leaf Node within the area of that hint brush. Hints can also intersect with other structural solid brushes or Hints, creating multiple Leaf Nodes or isolating groups of Leaf Nodes. Hint brushes use a shader which makes the brushes nonsolid and nodraw, called common/hint.<br><br>Hints are best used to make large axial cuts along planes shared by other structural brushes, to maximise the amount of area hidden by each vis-blocking structural brush, by minimising the number and size of the Leaf Nodes visible. <br><br>Intelligent use of detail and Hint brushes in combination can reduce vis time and r_speeds in almost any map. However the map must be designed from the start with this in mind. Redoing an inneffiently made map is a lot of work. <br><br>Note: Making a brush detail will stop it from blocking visibility, so don't make your vis-blocking walls into detail brushes.</ul><h1 id="699" name="699" class="book-h5">The VIS Compile Switch List</h1><ul><h3>The VIS Compile Switches</h3>
<p><i>This information is drawn from the Q3MAP2 WIKI</i></p>
-<strong>fast</strong><br>
Only calculates rough visibility data. Quick and dirty, not actually useful for VIS purposes. <br><br>

-<strong>hint</strong><br>
Will merge the bsp leaves (except for hint portals) before calculating the visiblity list. <br><br>

-<strong>merge</strong><br>
Will merge the bsp leaves before calculating the visibility list. <br><br>

-<strong>nopassage</strong><br>
Disables the passage visiblity algorithm. Passage VIS is a bit faster and tighter than the old algorithm. <br><br>

-<strong>nosort</strong><br>
Disables the sorting of portals by complexity. Sorting speeds up visiblity calculations. <br><br>

-<strong>passageonly</strong><br>
Will use the passage visibility algorithm only. <br><br>

-<strong>nohint</strong><br>
Omits hint brushes from visibility calculations. <br><br>

-<strong>saveprt</strong><br>
Disables the automatic deletion of the .prt portal file after VIS finishes.<br><br>
-<strong>v</strong><br>
Enables verbose mode. Always use this. </ul><h1 id="906" name="906" class="book-h3">Q3ME - Quake 3 Map Explorer</h1><ul><h3>Q3ME - Map Explorer</h3>
<p class="q3bg1b"><b>Author</b>: Lanzelot</p>
<p class="q3bg1b"><a href="http://www.planetquake.com/hro/webs/files.htm">Download Thanks to HR0</a><br>No Official Site<br><br>
Part of the fun of making maps to Quake III Arena (Q3A) is that the technical aspect of level editing is as smooth as possible. Q3Map Explorer (Q3ME) was built for making it as easy as possible to compile the map file, but still enable advanced mappers the freedom to edit the command lines generated by the program. This program helps you to compile your map, but you still need to understand the compiler process to optimize your map.</p></ul><h1 id="796" name="796" class="book-h3">QERadiant/GTKRadiant Level Editor</h1><ul><h4>Q3Radiant/GTKRadiant Map Editor</h4><p class="q3bg3"><img src="/images/qeradiant.jpg" align="left" hspace="10" alt="QERadiant GTKRadiant Radiant" title="QERadiant GTKRadiant Radiant"><a href="http://www.qeradiant.com">Official Site</a>
-  The latest: (GtkRadiant 1.5.0 beta - build 08-17) this was on August 18th 01:29:25 PM 2004. I personally haven't needed to update my editor from 1.4 but i'm certain the new version is coming along nicely. Here is some useful links for QERadiant related stuff. GTKRadiant is the preferred application for editing Quake III maps. If you're interested in learning mapping, GTKRadiant is the place to start. Be certain however that you have a full install of Quake III Arena on your system and have <a href="/book/view/680">patched Q3</a> up to the version that suits you. <a href="/book/view/602">1.32</a> is the most up-to-date patch and <a href="/book/view/680">OFX Q3Switcher</a> will let you skip Quake III versions at a click if you want to move back and forth between servers with different protocols.</p>
<p class="q3bg1">USEFUL INFO - Any GtkRadiant release has a major and minor number. In GtkRadiant 1.2.9.. the major version is 2 and the minor is 9 (1 is there.. just to complicate things).<br><br>The major version is incremented only when important new features are added to GTKRadiant. It means that the first releases for a new editor major will be beta testing versions, until everything is settled and we declare it 'stable'. You can have several install-ations with different major version working independently on your computer. This allows to have the stable release, and the test version at the same time. <br><br>The minor version is incremented at each new release. In many cases the package is an update over your current installation. You should always be using the latest minor for the current editor major that you have, as those are bringing in bug fixes and small functionality tweaks. <br><br>The difference between a full package and an update: Since we release new versions often, we want to keep the downloads small, so we provide &lt;major&gt;.&lt;minor&gt;-update packages, which require that you have a working installation with the given major already. You can locate updates for your current version easily by using the 'Check for updates' in the Files menu, or by sing the update selector.</p>
<table width="100%" border="0" cellspacing="0" cellpadding="0"><tr><td width="50%" class="q3bg1b"> - <a href="http://www.qeradiant.com/?data=dlselect">Download 
Selector</a><br>- <a href="http://www.qeradiant.com/?data=news">QERadiant News</a><br>-  <a href="http://www.qeradiant.com/?data=news/archives">Archived News</a><br>- <a href="http://www.qeradiant.com/?data=files">Public Files</a><br>- <a href="http://www.qeradiant.com/?data=editors/q3r">Q3Radiant Misc. Info</a><br>- <a href="http://www.qeradiant.com/wikifaq/">Radiant Editing FAQ</a></td><td width="50%" class="q3bg1b">- <a href="http://www.qeradiant.com/?data=editors/gtk">GtkRadiant Main Page</a><br>- <a href="http://www.qeradiant.com/?data=editors/gtk">GTKRadiant</a><br>- <a href="http://www.qeradiant.com/?data=dlupdate">GTKRadiant Update check</a><br>- <a href="http://www.qeradiant.com/manual/">Users Manual</a><br>- <a href="http://www.qeradiant.com/?data=games/quake3">Editing Info For Quake III</a><br>- <a href="http://www.qeradiant.com/?data=bugreport">Submit Editor Bugs</a></td></tr></table></ul><h1 id="760" name="760" class="book-h4">Entities (Function)</h1><ul><h2>Function Entities</h3>
<p class="q3bg1b">The "brush" is the basic building block of Quake engine. A single brush or a linked grouping of brushes can be turned into a brush entity. Brush entities include the mover/moving func entities, push and teleport triggers, and func_statics.<br><br>
Be sure to visit <a href="http://www.qeradiant.com/manual/Q3Rad_Manual/ch08/pg8_1.htm#entitywin">this page of the Radiant editor manual</a> in order to better understand working with entities. After learning the ins and outs of working with Quake III entities, return here and learn more about each entity.</p></ul><h1 id="761" name="761" class="book-h5">func_bobbing</h1><ul><h3>func_bobbing</h3>
<p class="q3bg1b">Bobbing is a solid entity that oscillates back and forth or up and down in a linear motion. By default, it will have an amount of displacement in either direction equal to the dimension of the brush in the axis in which it's bobbing. Entity bobs on the Z axis (up-down) by default. It can also emit sound if the "noise" key is set. Will crush the player when blocked.</p><!--break-->
<h3>Bobbing Entity Keys</h3>
<p class="q3bg2"><b>speed</b> : amount of time in seconds for one complete oscillation cycle (default 4).</p>
<p class="q3bg2"><b>height</b> : sets the amount of travel of the oscillation movement (default 32).</p>
<p class="q3bg2"><b>phase</b> : sets the start offset of the oscillation cycle. Values must be 0 > phase < 1. Any integer phase value is the same as no offset (default 0).</p>
<p class="q3bg2"><b>noise</b> : path/name of .wav file to play. Use looping sounds only (eg. sound/world/drone6.wav - See Notes).</p>
<p class="q3bg2"><b>model2</b> : path/name of model to include (eg: models/mapobjects/jets/jets01.md3).</p>
<p class="q3bg2"><b>origin</b> : alternate method of setting XYZ origin of sound and .md3 model included with entity (See Notes).</p>
<p class="q3bg2"><b>light</b> : constantLight radius of .md3 model included with entity. Has no effect on the entity's brushes (default 0).</p>
<p class="q3bg2"><b>color</b> : constantLight color of .md3 model included with entity. Has no effect on the entity's brushes (default 1 1 1).</p>
<p class="q3bg2"><b>notfree</b> : when set to 1, entity will not spawn in "Free for all" and "Tournament" modes.</p>
<p class="q3bg2"><b>notteam</b> : when set to 1, entity will not spawn in "Teamplay" and "CTF" modes.</p>
<p class="q3bg2"><b>notsingle</b> : when set to 1, entity will not spawn in Single Player mode (bot play mode).</p>
<h3>Bobbing Q3MAP2 keys</h3>
<p class="q3bg2"><b>_targetname</b> : Used to attach a misc_model entity to this entity.</p>
<p class="q3bg2"><b>_lightmapscale</b> : Floating point value scaling the resolution of lightmaps on brushes/patches in this entity (default 1.0).</p>
<p class="q3bg2"><b>_cs OR _castshadows</b> : Allows per-entity control over shadow casting. Defaults to 0 on entities, 1 on world. 0 = no shadow casting. 1 = cast shadows on world. > 1 = cast shadows on entities with _rs (or _receiveshadows) with the corresponding value, AND world. Negative values imply same, but DO NOT cast shadows on world.</p>
<p class="q3bg2"><b>_rs OR _receiveshadows</b> : Allows per-entity control over shadow reception. Defaults to 1 on everything (world shadows). 0 = receives NO shadows. > 1 = receive shadows only from corresponding keyed entities (see above) and world. < 1 = receive shadows ONLY from corresponding keyed entities.</p>
<p class="q3bg2"><b>_celshader</b> : Sets the cel shader used for this geometry. Note: omit the "textures/" prefix.</p>
<h3>Bobbing Q3MAP2 Terrain Keys</h3>
<p class="q3bg2"><b>_indexmap OR alphamap</b> : Path/name for the art file used to guide the mapping of textures on the terrain surface.</p>
<p class="q3bg2"><b>_layers OR layers</b> : Integer value is the number unique root shaders that will be use on the terrain.</p>
<p class="q3bg2"><b>_shader OR shader </b>: Path to the metashader used to assign textures to the terrain entity. Note: Omit the "textures/" prefix.</p>
<h3>Bobbing Spawnflags</h3>
<p class="q3bg2"><b>X_AXIS</b> : entity will bob along the X axis.</p>
<p class="q3bg2"><b>Y_AXIS</b> : entity will bob along the Y axis.</p>
<h3>Bobbing Notes</h3>
<p class=q3bg1b>In order for the sound to be emitted from the entity, it is recommended to include a brush with an origin shader at its center, otherwise the sound will not follow the entity as it moves. Setting the origin key is simply an alternate method to using an origin brush. When using the model2 key, the origin point of the model will correspond to the origin point defined by either the origin brush or the origin coordinate value.<br><br>Target this entity with a misc_model to have the model attached to the entity (set the model's "target" key to the same value as this entity's "targetname").</p></ul><h1 id="762" name="762" class="book-h5">func_button</h1><ul><h3>func_button</h3>
<p class="q3bg1b">When a button is touched by a player, it moves in the direction set by the "angle" key, triggers all its targets, stays pressed by an amount of time set by the "wait" key, then returns to it's original position where it can be operated again. </p><!--break-->
<h3>Button Entity Keys</h3>
<p class="q3bg2"><b>angle</b> : determines the direction in which the button will move (up = -1, down = -2).</p>
<p class="q3bg2"><b>target</b> : all entities with a matching targetname will be triggered.</p>
<p class="q3bg2"><b>speed</b> : speed of button's displacement (default 40).</p>
<p class="q3bg2"><b>wait</b> : number of seconds button stays pressed (default 1, -1 = return immediately).</p>
<p class="q3bg2"><b>lip</b> : lip remaining at end of move (default 4 units).</p>
<p class="q3bg2"><b>health</b> : (default 0) if set to any non-zero value, the button must take damage (any amount) to activate.</p>
<p class="q3bg2"><b>light</b> : constantLight radius of .md3 model included with entity. Has no effect on the entity's brushes (default 0).</p>
<p class="q3bg2"><b>color</b> : constantLight color of .md3 model included with entity. Has no effect on the entity's brushes (default 1 1 1). 
<p class="q3bg2"><b>model2</b> : path/name of model to include (eg: models/mapobjects/pipe/pipe02.md3).</p>
<p class="q3bg2"><b>origin</b> : alternate method of setting XYZ origin of .md3 model included with entity (See Notes).</p>
<p class="q3bg2"><b>notfree</b> : when set to 1, entity will not spawn in "Free for all" and "Tournament" modes.</p>
<p class="q3bg2"><b>notteam</b> : when set to 1, entity will not spawn in "Teamplay" and "CTF" modes.</p>
<p class="q3bg2"><b>notsingle</b> : when set to 1, entity will not spawn in Single Player mode (bot play mode).</p>
<h3>Button Q3MAP2 Keys</h3>
<p class="q3bg2"><b>_targetname</b> : Used to attach a misc_model entity to this entity.</p>
<p class="q3bg2"><b>_lightmapscale</b> : Floating point value scaling the resolution of lightmaps on brushes/patches in this entity (default 1.0).</p>
<p class="q3bg2"><b>_cs OR _castshadows</b> : Allows per-entity control over shadow casting. Defaults to 0 on entities, 1 on world. 0 = no shadow casting. 1 = cast shadows on world. > 1 = cast shadows on entities with _rs (or _receiveshadows) with the corresponding value, AND world. Negative values imply same, but DO NOT cast shadows on world.</p>
<p class="q3bg2"><b>_rs OR _receiveshadows</b> : Allows per-entity control over shadow reception. Defaults to 1 on everything (world shadows). 0 = receives NO shadows. > 1 = receive shadows only from corresponding keyed entities (see above) and world. < 1 = receive shadows ONLY from corresponding keyed entities.</p>
<p class="q3bg2"><b>_celshader</b> : Sets the cel shader used for this geometry. Note: omit the "textures/" prefix. </p>
<h3>Button Q3MAP2 Terrain Keys</h3>
<p class="q3bg2"><b>_indexmap OR alphamap</b> : Path/name for the art file used to guide the mapping of textures on the terrain surface. </p>
<p class="q3bg2"><b>_layers OR layers</b> : Integer value is the number unique root shaders that will be use on the terrain. </p>
<p class="q3bg2"><b>_shader OR shader</b> : Path to the metashader used to assign textures to the terrain entity. Note: Omit the "textures/" prefix. </p>
<h3>Button Notes</h3>
<p class="q3bg1b">Setting the origin key is simply an alternate method to using an origin brush. When using the model2 key, the origin point of the model will correspond to the origin point defined by either the origin brush or the origin coordinate value.  Target this entity with a misc_model to have the model attached to the entity (set the model's "target" key to the same value as this entity's "targetname").</p></ul><h1 id="763" name="763" class="book-h5">func_door</h1><ul><h3>func_door</h3>
<p class="q3bg1b">Normal sliding door entities. By default, the door entity will activate when player walks close to it or when damage is inflicted to it. Doors can be used in many ways in Q3, not specifically for a "door", they can be used to make traps, popup effects and other very useful things us mappers love so much.</p><!--break-->
<h3>Door Entity Keys</h3>
<p class="q3bg2"><b>angle</b> : determines the opening direction of door (up = -1, down = -2).</p>
<p class="q3bg2"><b>speed</b> : determines how fast the door moves (default 100).</p>
<p class="q3bg2"><b>wait</b> : number of seconds before door returns (default 2, -1 = return immediately).</p>
<p class="q3bg2"><b>lip</b> : lip remaining at end of move (default 8).</p>
<p class="q3bg2"><b>targetname</b> : if set, a func_button or trigger is required to activate the door.</p>
<p class="q3bg2"><b>health</b> : (default 0) if set to any non-zero value, the button must take damage (any amount) to activate.</p>
<p class="q3bg2"><b>dmg</b> : damage to inflict on player when he blocks operation of door (default 4). Door will reverse direction when blocked unless CRUSHER spawnflag is set.</p>
<p class="q3bg2"><b>team</b>: assign the same team name to multiple doors that should operate together (see Notes).</p>
<p class="q3bg2"><b>light</b> : constantLight radius of .md3 model included with entity. Has no effect on the entity's brushes (default 0).</p>
<p class="q3bg2"><b>color</b> : constantLight color of .md3 model included with entity. Has no effect on the entity's brushes (default 1 1 1).</p>
<p class="q3bg2"><b>model2</b> : path/name of model to include (eg: models/mapobjects/pipe/pipe02.md3).</p>
<p class="q3bg2"><b>origin</b> : alternate method of setting XYZ origin of .md3 model included with entity (See Notes).</p>
<p class="q3bg2"><b>notfree</b> : when set to 1, entity will not spawn in "Free for all" and "Tournament" modes.</p>
<p class="q3bg2"><b>notteam</b> : when set to 1, entity will not spawn in "Teamplay" and "CTF" modes.</p>
<p class="q3bg2"><b>notsingle</b> : when set to 1, entity will not spawn in Single Player mode (bot play mode).</p>
<h3>Door Q3MAP2 Keys</h3>
<p class="q3bg2"><b>_targetname</b> : Used to attach a misc_model entity to this entity.</p>
<p class="q3bg2"><b>_lightmapscale</b> : Floating point value scaling the resolution of lightmaps on brushes/patches in this entity (default 1.0).</p>
<p class="q3bg2"><b>_cs OR _castshadows</b> : Allows per-entity control over shadow casting. Defaults to 0 on entities, 1 on world. 0 = no shadow casting. 1 = cast shadows on world. > 1 = cast shadows on entities with _rs (or _receiveshadows) with the corresponding value, AND world. Negative values imply same, but DO NOT cast shadows on world.</p>
<p class="q3bg2"><b>_rs OR _receiveshadows</b> : Allows per-entity control over shadow reception. Defaults to 1 on everything (world shadows). 0 = receives NO shadows. > 1 = receive shadows only from corresponding keyed entities (see above) and world. < 1 = receive shadows ONLY from corresponding keyed entities.</p>
<p class="q3bg2"><b>_celshader</b> : Sets the cel shader used for this geometry. Note: omit the "textures/" prefix.</p>
<h3>Door Q3MAP2 Terrain Keys</h3>
<p class="q3bg2"><b>_indexmap OR alphamap</b> : Path/name for the art file used to guide the mapping of textures on the terrain surface.</p>
<p class="q3bg2"><b>_layers OR layers</b> : Integer value is the number unique root shaders that will be use on the terrain.</p>
<p class="q3bg2"><b>_shader OR shader</b> : Path to the metashader used to assign textures to the terrain entity. Note: Omit the "textures/" prefix.</p>
<h3>Door Spawnflags</h3>
<p class="q3bg2"><b>START_OPEN</b> : the door will spawn in the open state and operate in reverse.</p>
<p class="q3bg2"><b>CRUSHER</b> : door will not reverse direction when blocked and will keep damaging player until he dies or gets out of the way.</p>
<h3>Door Notes</h3>
<p class="q3bg1b">Unlike in Quake 2, doors that touch are NOT automatically teamed. If you want doors to operate together, you have to team them manually by assigning the same team name to all of them. Setting the origin key is simply an alternate method to using an origin brush. When using the model2 key, the origin point of the model will correspond to the origin point defined by either the origin brush or the origin coordinate value. Target this entity with a misc_model to have the model attached to the entity (set the model's "target" key to the same value as this entity's "targetname").</p></ul><h1 id="764" name="764" class="book-h5">func_group</h1><ul><h3>func_group</h3>
<p class="q3bg1b">This is not an entity as such. It is strictly an editor utility to group world brushes and patches together for convenience (selecting, moving, copying, etc). You cannot group entities with this.<br><br>Grouping is also useful for light casting more detailed lightmaps or lightstyles on specific groups of brushes and/or patches.</p><!--break-->
<h3>Group Q3MAP2 Keys</h3>
<p class="q3bg2"><b>_lightmapscale</b> : Floating point value scaling the resolution of lightmaps on brushes/patches in this entity (default 1.0).</p>
<p class="q3bg2"><b>_cs OR _castshadows</b> : Allows per-entity control over shadow casting. Defaults to 0 on entities, 1 on world. 0 = no shadow casting. 1 = cast shadows on world. > 1 = cast shadows on entities with _rs (or _receiveshadows) with the corresponding value, AND world. Negative values imply same, but DO NOT cast shadows on world.</p>
<p class="q3bg2"><b>_rs OR _receiveshadows</b> : Allows per-entity control over shadow reception. Defaults to 1 on everything (world shadows). 0 = receives NO shadows. > 1 = receive shadows only from corresponding keyed entities (see above) and world. < 1 = receive shadows ONLY from corresponding keyed entities.</p>
<p class="q3bg2"><b>_celshader</b> : Sets the cel shader used for this geometry. Note: omit the "textures/" prefix.</p>
<h3>Group Q3MAP2 Terrain Keys</h3>
<p class="q3bg2"><b>_indexmap OR alphamap</b> : Path/name for the art file used to guide the mapping of textures on the terrain surface.</p>
<p class="q3bg2"><b>_layers OR layers</b> : Integer value is the number unique root shaders that will be use on the terrain.</p>
<p class="q3bg2"><b>_shader OR shader</b> : Path to the metashader used to assign textures to the terrain entity. Note: Omit the "textures/" prefix.</p>
<h3>Group Notes</h3>
<p class="q3bg1b">The TAB key can be used to flip through the component pieces of a selected func_group entity, isolating individual components. To make a func_group into a terrain entity, refer to the Terrain Construction documentation.</p></ul><h1 id="765" name="765" class="book-h5">func_pendulim</h1><ul><h3>func_pendulim</h3>
<p class="q3bg1b">Solid entity that creates a pendulum back and forth rotation movement. Rotates on the X axis by default. Pendulum frequency is a physical constant based on the length of the beam and gravity. Blocking the pendulum instantly kills a player.</p><!--break-->
<h3>Pendulim Keys</h3>
<p class="q3bg2"><b>angle</b> : angle offset of axis of rotation from default X axis (default 0).</p>
<p class="q3bg2"><b>speed</b> : angle of swing arc in either direction from initial position (default 30).</p>
<p class="q3bg2"><b>phase</b> : sets the start offset of the swinging cycle. Values must be 0 < phase < 1. Any integer phase value is the same as no offset (default 0).</p>
<p class="q3bg2"><b>noise</b> : path/name of .wav file to play. Use looping sounds only (eg. sound/world/drone6.wav).</p>
<p class="q3bg2"><b>model2</b> : path/name of model to include (eg: models/mapobjects/jets/jets01.md3).</p>
<p class="q3bg2"><b>origin</b> : alternate method of setting XYZ origin of entity's rotation axis and .md3 model included with entity (default "0 0 0" - See Notes).</p>
<p class="q3bg2"><b>light</b> : constantLight radius of .md3 model included with entity. Has no effect on the entity's brushes (default 0).</p>
<p class="q3bg2"><b>color</b> : constantLight color of .md3 model included with entity. Has no effect on the entity's brushes (default 1 1 1).</p>
<p class="q3bg2"><b>notfree</b> : when set to 1, entity will not spawn in "Free for all" and "Tournament" modes.</p>
<p class="q3bg2"><b>notteam</b> : when set to 1, entity will not spawn in "Teamplay" and "CTF" modes.</p>
<p class="q3bg2"><b>notsingle</b> : when set to 1, entity will not spawn in Single Player mode (bot play mode).</p>
<h3>Pendulim Q3MAP2 Keys</h3>
<p class="q3bg2"><b>_targetname</b> : Used to attach a misc_model entity to this entity.</p>
<p class="q3bg2"><b>_lightmapscale</b> : Floating point value scaling the resolution of lightmaps on brushes/patches in this entity (default 1.0).</p>
<p class="q3bg2"><b>_cs OR _castshadows</b> : Allows per-entity control over shadow casting. Defaults to 0 on entities, 1 on world. 0 = no shadow casting. 1 = cast shadows on world. > 1 = cast shadows on entities with _rs (or _receiveshadows) with the corresponding value, AND world. Negative values imply same, but DO NOT cast shadows on world.</p>
<p class="q3bg2"><b>_rs OR _receiveshadows</b> : Allows per-entity control over shadow reception. Defaults to 1 on everything (world shadows). 0 = receives NO shadows. > 1 = receive shadows only from corresponding keyed entities (see above) and world. < 1 = receive shadows ONLY from corresponding keyed entities.</p>
<p class="q3bg2"><b>_celshader</b> : Sets the cel shader used for this geometry. Note: omit the "textures/" prefix.</p>
<h3>Pendulim Q3MAP2 Terrain Keys</h3>
<p class="q3bg2"><b>_indexmap OR alphamap</b> : Path/name for the art file used to guide the mapping of textures on the terrain surface.</p>
<p class="q3bg2"><b>_layers OR layers</b> : Integer value is the number unique root shaders that will be use on the terrain.</p>
<p class="q3bg2"><b>_shader OR shader</b> : Path to the metashader used to assign textures to the terrain entity. Note: Omit the "textures/" prefix.</p>
<h3>Pendulim Notes</h3>
<p class="q3bg1b">You need to have an origin brush as part of this entity. The center of that brush will be the point through which the rotation axis passes. Setting the origin key is simply an alternate method to using an origin brush. Pendulum will rotate along the X axis by default. Very crude operation: pendulum cannot rotate along Z axis, the speed of swing (frequency) is not adjustable. When using the model2 key, the origin point of the model will correspond to the origin point defined by either the origin brush or the origin coordinate value. Target this entity with a misc_model to have the model attached to the entity (set the model's "target" key to the same value as this entity's "targetname").</p></ul><h1 id="766" name="766" class="book-h5">func_plat</h1><ul><h3>func_plat</h3>
<p class="q3bg1b">Rising platform the player can ride to reach higher places. Plats must always be drawn in the raised position, so they will operate and be lighted correctly but they spawn in the lowered position. The plat will stay in the raised position until the player steps off. There are no proper sounds for this entity, only beep noises. It will spawn in the game and work properly but it sounds silly (see Notes).</p><!--break-->
<h3>Plat Entity Keys</h3>
<p class="q3bg2"><b>speed</b> : determines how fast the plat moves (default 150).</p>
<p class="q3bg2"><b>lip</b> : lip remaining at end of move (default 16). Has no effect if "height" is set.</p>
<p class="q3bg2"><b>height</b> : if set, this will determine the total amount of vertical travel of the plat.</p>
<p class="q3bg2"><b>dmg</b> : damage to inflict on player when he blocks operation of plat (default 4). Plat will reverse direction when blocked.</p>
<p class="q3bg2"><b>targetname</b> : if set, the trigger that points to this will raise the plat each time it fires. The plat raises and comes back down a second later if no player is on it.</p>
<p class="q3bg2"><b>light</b> : constantLight radius of .md3 model included with entity. Has no effect on the entity's brushes (default 0).</p>
<p class="q3bg2"><b>color</b> : constantLight color of .md3 model included with entity. Has no effect on the entity's brushes (default 1 1 1). 
<p class="q3bg2"><b>model2</b> : path/name of model to include (eg: models/mapobjects/pipe/pipe02.md3).</p>
<p class="q3bg2"><b>origin</b> : alternate method of setting XYZ origin of .md3 model included with entity (See Notes).</p>
<p class="q3bg2"><b>notfree</b> : when set to 1, entity will not spawn in "Free for all" and "Tournament" modes.</p>
<p class="q3bg2"><b>notteam</b> : when set to 1, entity will not spawn in "Teamplay" and "CTF" modes.</p>
<p class="q3bg2"><b>notsingle</b> : when set to 1, entity will not spawn in Single Player mode (bot play mode).</p>
<h3>Plat Q3MAP2 Keys</h3>
<p class="q3bg2"><b>_targetname</b> : Used to attach a misc_model entity to this entity.</p>
<p class="q3bg2"><b>_lightmapscale</b> : Floating point value scaling the resolution of lightmaps on brushes/patches in this entity (default 1.0).</p>
<p class="q3bg2"><b>_cs OR _castshadows</b> : Allows per-entity control over shadow casting. Defaults to 0 on entities, 1 on world. 0 = no shadow casting. 1 = cast shadows on world. > 1 = cast shadows on entities with _rs (or _receiveshadows) with the corresponding value, AND world. Negative values imply same, but DO NOT cast shadows on world.</p>
<p class="q3bg2"><b>_rs OR _receiveshadows</b> : Allows per-entity control over shadow reception. Defaults to 1 on everything (world shadows). 0 = receives NO shadows. > 1 = receive shadows only from corresponding keyed entities (see above) and world. < 1 = receive shadows ONLY from corresponding keyed entities.</p>
<p class="q3bg2"><b>_celshader</b> : Sets the cel shader used for this geometry. Note: omit the "textures/" prefix.</p>
<h3>Plat Q3MAP2 Terrain Keys</h3>
<p class="q3bg2"><b>_indexmap OR alphamap</b> : Path/name for the art file used to guide the mapping of textures on the terrain surface.</p>
<p class="q3bg2"><b>_layers OR layers</b> : Integer value is the number unique root shaders that will be use on the terrain.</p>
<p class="q3bg2"><b>_shader OR shader</b> : Path to the metashader used to assign textures to the terrain entity. Note: Omit the "textures/" prefix.</p>
<h3>Plat Notes</h3>
<p class="q3bg1b">By default, the total amount of vertical travel of a platform is implicitly determined by the overall vertical size of the brushes of which it's made minus the lip value. But if the "height" key is used, then the total amount of vertical travel of the plat will be exactly that value regardless of the shape and size of the plat and regardless of the value of the "lip" key. Using the "height" key is the best method for any kind of platforms and the only possible one for thin plats which need to travel vertical distances many times their own thickness. Setting the origin key is simply an alternate method to using an origin brush. When using the model2 key, the origin point of the model will correspond to the origin point defined by either the origin brush or the origin coordinate value.<br><br>There is a way to make plats play proper sounds. Just create a sound\movers\plats folder under baseq3 and put 2 sounds named pt1_strt.wav and pt1_end.wav in it. Those can be the renamed sounds from the Q2 plats or renamed copies of the sound\movers\doors sounds you can extract from your pak0.pk3 file or new custom sounds if you're up to it. Thanks to Fragzilla for the tip. Target this entity with a misc_model to have the model attached to the entity (set the model's "target" key to the same value as this entity's "targetname").</p></ul><h1 id="767" name="767" class="book-h5">func_rotating</h1><ul><h3>func_rotating</h3>
<p class="q3bg1b">Solid entity that rotates continuously. Rotates on the Z axis by default and requires an origin brush. It will always start on in the game and is not targetable.  A funny thing is that weapon and item entites are capable of "sticking" to a rotating object, sometimes even if it flips upsidedown.</p><!--break-->
<h3>Rotating Entity Keys</h3>
<p class="q3bg2"><b>speed</b> : determines how fast entity rotates (default 100).</p>
<p class="q3bg2"><b>noise</b> : path/name of .wav file to play. Use looping sounds only (eg. sound/world/drone6.wav).</p>
<p class="q3bg2"><b>model2</b> : path/name of model to include (eg: models/mapobjects/bitch/fembotbig.md3).</p>
<p class="q3bg2"><b>origin</b> : alternate method of setting XYZ origin of entity's rotation axis and .md3 model included with entity (default "0 0 0" - See Notes).</p>
<p class="q3bg2"><b>light</b> : constantLight radius of .md3 model included with entity. Has no effect on the entity's brushes (default 0).</p>
<p class="q3bg2"><b>color</b> : constantLight color of .md3 model included with entity. Has no effect on the entity's brushes (default 1 1 1).</p>
<p class="q3bg2"><b>notfree</b> : when set to 1, entity will not spawn in "Free for all" and "Tournament" modes.</p>
<p class="q3bg2"><b>notteam</b> : when set to 1, entity will not spawn in "Teamplay" and "CTF" modes.</p>
<p class="q3bg2"><b>notsingle</b> : when set to 1, entity will not spawn in Single Player mode (bot play mode).</p>
<h3>Rotating Q3MAP2 Keys</h3>
<p class="q3bg2"><b>_targetname</b> : Used to attach a misc_model entity to this entity.</p>
<p class="q3bg2"><b>_lightmapscale</b> : Floating point value scaling the resolution of lightmaps on brushes/patches in this entity (default 1.0).</p>
<p class="q3bg2"><b>_cs OR _castshadows</b> : Allows per-entity control over shadow casting. Defaults to 0 on entities, 1 on world. 0 = no shadow casting. 1 = cast shadows on world. > 1 = cast shadows on entities with _rs (or _receiveshadows) with the corresponding value, AND world. Negative values imply same, but DO NOT cast shadows on world.</p>
<p class="q3bg2"><b>_rs OR _receiveshadows</b> : Allows per-entity control over shadow reception. Defaults to 1 on everything (world shadows). 0 = receives NO shadows. > 1 = receive shadows only from corresponding keyed entities (see above) and world. < 1 = receive shadows ONLY from corresponding keyed entities.</p>
<p class="q3bg2"><b>_celshader</b> : Sets the cel shader used for this geometry. Note: omit the "textures/" prefix.</p>
<h3>Rotating Q3MAP2 Terrain Keys</h3>
<p class="q3bg2"><b>_indexmap OR alphamap</b> : Path/name for the art file used to guide the mapping of textures on the terrain surface.</p>
<p class="q3bg2"><b>_layers OR layers</b> : Integer value is the number unique root shaders that will be use on the terrain.</p>
<p class="q3bg2"><b>_shader OR shader</b> : Path to the metashader used to assign textures to the terrain entity. Note: Omit the "textures/" prefix.</p>
<h3>Rotating SpawnFlags</h3>
<p class="q3bg2"><b>X_AXIS</b> : entity will rotate along the X axis.</p>
<p class="q3bg2"><b>Y_AXIS</b> : entity will rotate along the Y axis.</p>
<h3>Rotating Notes</h3>
<p class="q3bg1b">You need to have an origin brush as part of this entity. The center of that brush will be the point through which the rotation axis passes. Setting the origin key is simply an alternate method to using an origin brush. It will rotate along the Z axis by default. You can check either the X_AXIS or Y_AXIS box to change that. When using the model2 key, the origin point of the model will correspond to the origin point defined by either the origin brush or the origin coordinate value.  Target this entity with a misc_model to have the model attached to the entity (set the model's "target" key to the same value as this entity's "targetname").</p></ul><h1 id="768" name="768" class="book-h5">func_static</h1><ul><h3>func_static</h3>
<p class="q3bg1b">Static non-solid visible or invisible brush or multiple brushes bspmodel. Can be used for conditional walls and models.</p><!--break-->
<h3>Static Entity Keys</h3>
<p class="q3bg2"><b>model2</b> : path/name of model to include (eg: models/mapobjects/bitch/fembotbig.md3).</p>
<p class="q3bg2"><b>origin</b> : alternate method of setting XYZ origin of .md3 model included with entity (See Notes).</p>
<p class="q3bg2"><b>light</b> : constantLight radius of .md3 model included with entity. Has no effect on the entity's brushes (default 0).</p>
<p class="q3bg2"><b>color</b> : constantLight color of .md3 model included with entity. Has no effect on the entity's brushes (default 1 1 1).</p>
<p class="q3bg2"><b>targetname</b> : NOT SUPPORTED BY RENDERER - if set, a func_button or trigger can make entity disappear from the game (See Notes).</p>
<p class="q3bg2"><b>notfree</b> : when set to 1, entity will not spawn in "Free for all" and "Tournament" modes.</p>
<p class="q3bg2"><b>notteam</b> : when set to 1, entity will not spawn in "Teamplay" and "CTF" modes.</p>
<p class="q3bg2"><b>notsingle</b> : when set to 1, entity will not spawn in Single Player mode (bot play mode).</p>
<h3>Static Q3MAP2 Keys</h3>
<p class="q3bg2"><b>_targetname</b> : Used to attach a misc_model entity to this entity.</p>
<p class="q3bg2"><b>_lightmapscale</b> : Floating point value scaling the resolution of lightmaps on brushes/patches in this entity (default 1.0).</p>
<p class="q3bg2"><b>_cs OR _castshadows</b> : Allows per-entity control over shadow casting. Defaults to 0 on entities, 1 on world. 0 = no shadow casting. 1 = cast shadows on world. > 1 = cast shadows on entities with _rs (or _receiveshadows) with the corresponding value, AND world. Negative values imply same, but DO NOT cast shadows on world.</p>
<p class="q3bg2"><b>_rs OR _receiveshadows</b> : Allows per-entity control over shadow reception. Defaults to 1 on everything (world shadows). 0 = receives NO shadows. > 1 = receive shadows only from corresponding keyed entities (see above) and world. < 1 = receive shadows ONLY from corresponding keyed entities.</p>
<p class="q3bg2"><b>_celshader</b> : Sets the cel shader used for this geometry. Note: omit the "textures/" prefix.</p>
<h3>Static Q3MAP2 Terrain Keys</h3>
<p class="q3bg2"><b>_indexmap OR alphamap</b> : Path/name for the art file used to guide the mapping of textures on the terrain surface.</p>
<p class="q3bg2"><b>_layers OR layers</b> : Integer value is the number unique root shaders that will be use on the terrain.</p>
<p class="q3bg2"><b>_shader OR shader</b> : Path to the metashader used to assign textures to the terrain entity. Note: Omit the "textures/" prefix.</p>
<h3>Static Notes</h3>
<p class="q3bg1b">When using the model2 key, the origin point of the model will correspond to the origin point defined by either the origin brush or the origin coordinate value. If a model is included with a targeted func_static, the brush(es) of the entity will be removed from the game but the .md3 model won't: it will automatically be moved to the (0 0 0) world origin so you should NOT include an .md3 model to a targeted func_static.<br><br>Because the map has only a single bot navigation file, func_static's cannot be used to make significant changes in game play flow between differing game types. Target this entity with a misc_model to have the model attached to the entity (set the model's "target" key to the same value as this entity's "targetname").</p></ul><h1 id="769" name="769" class="book-h5">func_timer</h1><ul><h3>func_timer</h3>
<p class="q3bg1b">Time delay trigger that will continuously fire its targets after a preset time delay. The time delay can also be randomized. When triggered, the timer will toggle on/off.</p><!--break-->
<h3>Timer Entity Keys</h3>
<p class="q3bg2"><b>wait</b> : delay in seconds between each triggering of its targets (default 1).</p>
<p class="q3bg2"><b>random</b> : random time variance in seconds added or subtracted from "wait" delay (default 0 - see Notes).</p>
<p class="q3bg2"><b>target</b> : this points to the entities to trigger.</p>
<p class="q3bg2"><b>targetname</b> : a func_button or trigger that points to this will toggle the timer on/off when activated.</p>
<p class="q3bg2"><b>notfree</b> : when set to 1, entity will not spawn in "Free for all" and "Tournament" modes.</p>
<p class="q3bg2"><b>notteam</b> : when set to 1, entity will not spawn in "Teamplay" and "CTF" modes.</p>
<p class="q3bg2"><b>notsingle</b> : when set to 1, entity will not spawn in Single Player mode (bot play mode).</p>
<h3>Timer Spawnflags</h3>
<p class="q3bg2"><b>START_ON</b> : timer will start on in the game and continuously fire its targets.</p>
<h3>Timer Notes</h3>
<p class="q3bg1b">When the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).</p></ul><h1 id="770" name="770" class="book-h5">func_train</h1><ul><h3>func_train</h3>
<p class="q3bg1b">Trains are moving solids that follow a string of path_corner entities. Trains in Q3A are very basic, they also require an origin brush (see Notes).</p><!--break-->
<h3>Train Entity keys</h3>
<p class="q3bg2"><b>speed</b> : speed of displacement of train (default 100 or overridden by speed value of path).</p>
<p class="q3bg2"><b>target</b> : this points to the first path_corner of the path which is also the spawn location of the train's origin.</p>
<p class="q3bg2"><b>model2</b> : path/name of model to include (eg: models/mapobjects/pipe/pipe02.md3).</p>
<p class="q3bg2"><b>origin</b> : alternate method of setting XYZ origin of the train's brush(es) and .md3 model included with entity (See Notes).</p>
<p class="q3bg2"><b>light</b> : constantLight radius of .md3 model included with entity. Has no effect on the entity's brushes (default 0).</p>
<p class="q3bg2"><b>color</b> : constantLight color of .md3 model included with entity. Has no effect on the entity's brushes (default 1 1 1).</p>
<p class="q3bg2"><b>notfree</b> : when set to 1, entity will not spawn in "Free for all" and "Tournament" modes.</p>
<p class="q3bg2"><b>notteam</b> : when set to 1, entity will not spawn in "Teamplay" and "CTF" modes.</p>
<p class="q3bg2"><b>notsingle</b> : when set to 1, entity will not spawn in Single Player mode (bot play mode).</p>
<h3>Train Q3MAP2 Keys</h3>
<p class="q3bg2"><b>_targetname</b> : Used to attach a misc_model entity to this entity.</p>
<p class="q3bg2"><b>_lightmapscale</b> : Floating point value scaling the resolution of lightmaps on brushes/patches in this entity (default 1.0).</p>
<p class="q3bg2"><b>_cs OR _castshadows</b> : Allows per-entity control over shadow casting. Defaults to 0 on entities, 1 on world. 0 = no shadow casting. 1 = cast shadows on world. > 1 = cast shadows on entities with _rs (or _receiveshadows) with the corresponding value, AND world. Negative values imply same, but DO NOT cast shadows on world.</p>
<p class="q3bg2"><b>_rs OR _receiveshadows</b> : Allows per-entity control over shadow reception. Defaults to 1 on everything (world shadows). 0 = receives NO shadows. > 1 = receive shadows only from corresponding keyed entities (see above) and world. < 1 = receive shadows ONLY from corresponding keyed entities.</p>
<p class="q3bg2"><b>_celshader</b> : Sets the cel shader used for this geometry. Note: omit the "textures/" prefix.</p>
<h3>Train Q3MAP2 Terrain Keys</h3>
<p class="q3bg2"><b>_indexmap OR alphamap</b> : Path/name for the art file used to guide the mapping of textures on the terrain surface.</p>
<p class="q3bg2"><b>_layers OR layers</b> : Integer value is the number unique root shaders that will be use on the terrain.</p>
<p class="q3bg2"><b>_shader OR shader</b> : Path to the metashader used to assign textures to the terrain entity. Note: Omit the "textures/" prefix.</p>
<h3>Train Notes</h3>
<p class="q3bg1b">1. Trains always start on in the game.<br>
2. Trains do not damage the played when blocked.<br>
3. Trains cannot emit sound.<br>
4. Trains are not triggerable or toggle-able.<br>
5. Trains cannot be block-stopped just by getting in their way, the player must be wedged between the train and another obstacle to block it. <br><br>Setting the origin key is simply an alternate method to using an origin brush. When using the model2 key, the origin point of the model will correspond to the origin point defined by either the origin brush or the origin coordinate value. Target this entity with a misc_model to have the model attached to the entity (set the model's "target" key to the same value as this entity's "targetname").</p></ul><h1 id="863" name="863" class="book-h4">Entities (Holdable)</h1><ul><h3>Holdable Entities</h3>
Coming soon...</ul><h1 id="862" name="862" class="book-h4">Entities (Info)</h1><ul><h3>Info Entities</h3>
Coming soon...</ul><h1 id="864" name="864" class="book-h4">Entities (Item)</h1><ul><h3>Item Entities</h3>
Coming soon...</ul><h1 id="868" name="868" class="book-h4">Entities (Path and Shooter)</h1><ul><h3>Path and Shooter Entities</h3>
Coming soon...</ul><h1 id="866" name="866" class="book-h4">Entities (Target)</h1><ul><h3>Target Entities</h3>
Coming soon...</ul><h1 id="865" name="865" class="book-h4">Entities (Team)</h1><ul><h3>Team Entities</h3>
Coming soon...</ul><h1 id="867" name="867" class="book-h4">Entities (Trigger)</h1><ul><h3>Trigger Entities</h3>
Coming soon...</ul><h1 id="840" name="840" class="book-h4">Entities (Weapon & Ammo)</h1><ul><h2>Weapon And Ammo Entities</h3>
<p class="q3bg1b">Weapon Entities have few parameters you can set. Most mappers will seldom alter the properties of a weapon entity. These entities can be found in the menu available upon right clicking in a profile (non camera) window.<br><br>
Be sure to visit <a href="/book/view/685">this page in the quake III general info handbook</a> in order to better understand the weapons and ammo. After learning the ins and outs of working with Quake III entities, return here and learn more about each entity.</p></ul><h1 id="845" name="845" class="book-h5">weapon_bfg</h1><ul><h3>weapon_bfg</h3>
<p class="q3bg1b">Big Freaking Gun. <br>
<!--break-->
</p>
<h3>weapon_bfg Entity Keys</h3>
<p class="q3bg2"><b>wait</b> : time in seconds before item respawns after being picked up (default 5, -1 = never respawn).</p>
<p class="q3bg2"><b>random</b> : random time variance in seconds added or subtracted from &quot;wait&quot; delay (default 0 - see Notes).</p>
<p class="q3bg2"><b>count</b>: sets the amount of ammo given to the player when weapon is picked up (default 20).</p>
<p class="q3bg2"><b>team</b> : set this to team items. Teamed items will respawn randomly after team master is picked up (see Notes).</p>
<p class="q3bg2"><b>target</b> : picking up the item will trigger the entity this points to.</p>
<p class="q3bg2"><b>targetname</b> : a target_give entity can point to this for respawn freebies.</p>
<p class="q3bg2"><b>notfree</b> : when set to 1, entity will not spawn in &quot;Free for all&quot; and &quot;Tournament&quot; modes.</p>
<p class="q3bg2"><b>notteam</b> : when set to 1, entity will not spawn in &quot;Teamplay&quot; and &quot;CTF&quot; modes.</p>
<p class="q3bg2"><b>notsingle</b> : when set to 1, entity will not spawn in Single Player mode (bot play mode).</p>
<p class="q3bg2"><b>notbot</b> : used to make an item invisible for bot attraction.</p>
<h3>weapon_bfg Spawnflags</h3>
<p class="q3bg2"><b>SUSPENDED</b> : item will spawn where it was placed 
in map and won't drop to the floor.</p>
<h3>weapon_bfg Notes</h3>
<p class=q3bg1b>The amount of time it takes for an item in the team to respawn 
is determined by the &quot;wait&quot; value of the item that was picked up previously. 
So if one of the items in the team has it's &quot;wait&quot; key set to -1 (never 
respawn), the random respawning cycle of the teamed items will stop after that 
item is picked up. <br>
<br>
When the random key is set, its value is used to calculate a minimum and a maximum 
delay. The final time delay will be a random value anywhere between the minimum 
and maximum values: (min delay = wait - random) (max delay = wait + random). <br>
----- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY ----- <br>
model=&quot;models/weapons2/bfg/bfg.md3&quot;</p>
</ul><h1 id="846" name="846" class="book-h5">weapon_gauntlet</h1><ul><h3>weapon_gauntlet</h3>
<p class="q3bg1b">Hand worn armament with spinning blade and light effects. This entity is not needed in the game but it is possible to place a gauntlet if so desired.<br>
<!--break-->
</p>
<h3>weapon_gauntlet Entity Keys</h3>
<p class="q3bg2"><b>wait</b> : time in seconds before item respawns after being picked up (default 5, -1 = never respawn).</p>
<p class="q3bg2"><b>random</b> : random time variance in seconds added or subtracted from &quot;wait&quot; delay (default 0 - see Notes).</p>
<p class="q3bg2"><b>count</b>: sets the amount of ammo given to the player when weapon is picked up (default 20).</p>
<p class="q3bg2"><b>team</b> : set this to team items. Teamed items will respawn randomly after team master is picked up (see Notes).</p>
<p class="q3bg2"><b>target</b> : picking up the item will trigger the entity this points to.</p>
<p class="q3bg2"><b>targetname</b> : a target_give entity can point to this for respawn freebies.</p>
<p class="q3bg2"><b>notfree</b> : when set to 1, entity will not spawn in &quot;Free for all&quot; and &quot;Tournament&quot; modes.</p>
<p class="q3bg2"><b>notteam</b> : when set to 1, entity will not spawn in &quot;Teamplay&quot; and &quot;CTF&quot; modes.</p>
<p class="q3bg2"><b>notsingle</b> : when set to 1, entity will not spawn in Single Player mode (bot play mode).</p>
<p class="q3bg2"><b>notbot</b> : used to make an item invisible for bot attraction.</p>
<h3>weapon_gauntlet Spawnflags</h3>
<p class="q3bg2"><b>SUSPENDED</b> : item will spawn where it was placed 
in map and won't drop to the floor.</p>
<h3>weapon_gauntlet Notes</h3>
<p class=q3bg1b>The amount of time it takes for an item in the team to respawn 
is determined by the &quot;wait&quot; value of the item that was picked up previously. 
So if one of the items in the team has it's &quot;wait&quot; key set to -1 (never 
respawn), the random respawning cycle of the teamed items will stop after that 
item is picked up. <br>
<br>
When the random key is set, its value is used to calculate a minimum and a maximum 
delay. The final time delay will be a random value anywhere between the minimum 
and maximum values: (min delay = wait - random) (max delay = wait + random). <br>
----- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY ----- <br>
model=&quot;models/weapons2/gauntlet/gauntlet.md3&quot;</p>
</ul><h1 id="847" name="847" class="book-h5">weapon_grapplinghook</h1><ul><h3>weapon_grapplinghook</h3>
<p class="q3bg1b">Grappling Hook. Spawns in the game and works but is unskinned.  This is mainly to support the grapple mod.<br>
<!--break-->
</p>
<h3>weapon_grapplinghook Entity Keys</h3>
<p class="q3bg2"><b>wait</b> : time in seconds before item respawns after being picked up (default 5, -1 = never respawn).</p>
<p class="q3bg2"><b>random</b> : random time variance in seconds added or subtracted from &quot;wait&quot; delay (default 0 - see Notes).</p>
<p class="q3bg2"><b>count</b>: sets the amount of ammo given to the player when weapon is picked up (default 20).</p>
<p class="q3bg2"><b>team</b> : set this to team items. Teamed items will respawn randomly after team master is picked up (see Notes).</p>
<p class="q3bg2"><b>target</b> : picking up the item will trigger the entity this points to.</p>
<p class="q3bg2"><b>targetname</b> : a target_give entity can point to this for respawn freebies.</p>
<p class="q3bg2"><b>notfree</b> : when set to 1, entity will not spawn in &quot;Free for all&quot; and &quot;Tournament&quot; modes.</p>
<p class="q3bg2"><b>notteam</b> : when set to 1, entity will not spawn in &quot;Teamplay&quot; and &quot;CTF&quot; modes.</p>
<p class="q3bg2"><b>notsingle</b> : when set to 1, entity will not spawn in Single Player mode (bot play mode).</p>
<p class="q3bg2"><b>notbot</b> : used to make an item invisible for bot attraction.</p>
<h3>weapon_grapplinghook Spawnflags</h3>
<p class="q3bg2"><b>SUSPENDED</b> : item will spawn where it was placed 
in map and won't drop to the floor.</p>
<h3>weapon_grapplinghook Notes</h3>
<p class=q3bg1b>The amount of time it takes for an item in the team to respawn 
is determined by the &quot;wait&quot; value of the item that was picked up previously. 
So if one of the items in the team has it's &quot;wait&quot; key set to -1 (never 
respawn), the random respawning cycle of the teamed items will stop after that 
item is picked up. <br>
<br>
When the random key is set, its value is used to calculate a minimum and a maximum 
delay. The final time delay will be a random value anywhere between the minimum 
and maximum values: (min delay = wait - random) (max delay = wait + random). <br>
----- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY ----- <br>
model=&quot;models/weapons2/grapple/grapple.md3&quot;</p></ul><h1 id="848" name="848" class="book-h5">weapon_grenadelauncher</h1><ul><h3>weapon_grenadelauncher</h3>
<p class="q3bg1b">Grenade Launcher.<br>
<!--break-->
</p>
<h3>weapon_grenadelauncher Entity Keys</h3>
<p class="q3bg2"><b>wait</b> : time in seconds before item respawns after being picked up (default 5, -1 = never respawn).</p>
<p class="q3bg2"><b>random</b> : random time variance in seconds added or subtracted from &quot;wait&quot; delay (default 0 - see Notes).</p>
<p class="q3bg2"><b>count</b>: sets the amount of ammo given to the player when weapon is picked up (default 20).</p>
<p class="q3bg2"><b>team</b> : set this to team items. Teamed items will respawn randomly after team master is picked up (see Notes).</p>
<p class="q3bg2"><b>target</b> : picking up the item will trigger the entity this points to.</p>
<p class="q3bg2"><b>targetname</b> : a target_give entity can point to this for respawn freebies.</p>
<p class="q3bg2"><b>notfree</b> : when set to 1, entity will not spawn in &quot;Free for all&quot; and &quot;Tournament&quot; modes.</p>
<p class="q3bg2"><b>notteam</b> : when set to 1, entity will not spawn in &quot;Teamplay&quot; and &quot;CTF&quot; modes.</p>
<p class="q3bg2"><b>notsingle</b> : when set to 1, entity will not spawn in Single Player mode (bot play mode).</p>
<p class="q3bg2"><b>notbot</b> : used to make an item invisible for bot attraction.</p>
<h3>weapon_grenadelauncher Spawnflags</h3>
<p class="q3bg2"><b>SUSPENDED</b> : item will spawn where it was placed 
in map and won't drop to the floor.</p>
<h3>weapon_grenadelauncher Notes</h3>
<p class=q3bg1b>The amount of time it takes for an item in the team to respawn 
is determined by the &quot;wait&quot; value of the item that was picked up previously. 
So if one of the items in the team has it's &quot;wait&quot; key set to -1 (never 
respawn), the random respawning cycle of the teamed items will stop after that 
item is picked up. <br>
<br>
When the random key is set, its value is used to calculate a minimum and a maximum 
delay. The final time delay will be a random value anywhere between the minimum 
and maximum values: (min delay = wait - random) (max delay = wait + random). <br>
----- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY ----- <br>
model=&quot;models/weapons2/grapple/grenadel.md3&quot;</p></ul><h1 id="849" name="849" class="book-h5">weapon_lightning</h1><ul><h3>weapon_lightning</h3>
<p class="q3bg1b">Lightening Gun.<br>
<!--break-->
</p>
<h3>weapon_lightning Entity Keys</h3>
<p class="q3bg2"><b>wait</b> : time in seconds before item respawns after being picked up (default 5, -1 = never respawn).</p>
<p class="q3bg2"><b>random</b> : random time variance in seconds added or subtracted from &quot;wait&quot; delay (default 0 - see Notes).</p>
<p class="q3bg2"><b>count</b>: sets the amount of ammo given to the player when weapon is picked up (default 20).</p>
<p class="q3bg2"><b>team</b> : set this to team items. Teamed items will respawn randomly after team master is picked up (see Notes).</p>
<p class="q3bg2"><b>target</b> : picking up the item will trigger the entity this points to.</p>
<p class="q3bg2"><b>targetname</b> : a target_give entity can point to this for respawn freebies.</p>
<p class="q3bg2"><b>notfree</b> : when set to 1, entity will not spawn in &quot;Free for all&quot; and &quot;Tournament&quot; modes.</p>
<p class="q3bg2"><b>notteam</b> : when set to 1, entity will not spawn in &quot;Teamplay&quot; and &quot;CTF&quot; modes.</p>
<p class="q3bg2"><b>notsingle</b> : when set to 1, entity will not spawn in Single Player mode (bot play mode).</p>
<p class="q3bg2"><b>notbot</b> : used to make an item invisible for bot attraction.</p>
<h3>weapon_lightning Spawnflags</h3>
<p class="q3bg2"><b>SUSPENDED</b> : item will spawn where it was placed 
in map and won't drop to the floor.</p>
<h3>weapon_lightning Notes</h3>
<p class=q3bg1b>The amount of time it takes for an item in the team to respawn 
is determined by the &quot;wait&quot; value of the item that was picked up previously. 
So if one of the items in the team has it's &quot;wait&quot; key set to -1 (never 
respawn), the random respawning cycle of the teamed items will stop after that 
item is picked up. <br>
<br>
When the random key is set, its value is used to calculate a minimum and a maximum 
delay. The final time delay will be a random value anywhere between the minimum 
and maximum values: (min delay = wait - random) (max delay = wait + random). <br>
----- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY ----- <br>
model=&quot;models/weapons2/grapple/lightning.md3&quot;</p></ul><h1 id="850" name="850" class="book-h5">weapon_machinegun</h1><ul><h3>weapon_machinegun</h3>
<p class="q3bg1b">Machine Gun.<br>
<!--break-->
</p>
<h3>weapon_machinegun Entity Keys</h3>
<p class="q3bg2"><b>wait</b> : time in seconds before item respawns after being picked up (default 5, -1 = never respawn).</p>
<p class="q3bg2"><b>random</b> : random time variance in seconds added or subtracted from &quot;wait&quot; delay (default 0 - see Notes).</p>
<p class="q3bg2"><b>count</b>: sets the amount of ammo given to the player when weapon is picked up (default 20).</p>
<p class="q3bg2"><b>team</b> : set this to team items. Teamed items will respawn randomly after team master is picked up (see Notes).</p>
<p class="q3bg2"><b>target</b> : picking up the item will trigger the entity this points to.</p>
<p class="q3bg2"><b>targetname</b> : a target_give entity can point to this for respawn freebies.</p>
<p class="q3bg2"><b>notfree</b> : when set to 1, entity will not spawn in &quot;Free for all&quot; and &quot;Tournament&quot; modes.</p>
<p class="q3bg2"><b>notteam</b> : when set to 1, entity will not spawn in &quot;Teamplay&quot; and &quot;CTF&quot; modes.</p>
<p class="q3bg2"><b>notsingle</b> : when set to 1, entity will not spawn in Single Player mode (bot play mode).</p>
<p class="q3bg2"><b>notbot</b> : used to make an item invisible for bot attraction.</p>
<h3>weapon_machinegun Spawnflags</h3>
<p class="q3bg2"><b>SUSPENDED</b> : item will spawn where it was placed 
in map and won't drop to the floor.</p>
<h3>weapon_machinegun Notes</h3>
<p class=q3bg1b>The amount of time it takes for an item in the team to respawn 
is determined by the &quot;wait&quot; value of the item that was picked up previously. 
So if one of the items in the team has it's &quot;wait&quot; key set to -1 (never 
respawn), the random respawning cycle of the teamed items will stop after that 
item is picked up. <br>
<br>
When the random key is set, its value is used to calculate a minimum and a maximum 
delay. The final time delay will be a random value anywhere between the minimum 
and maximum values: (min delay = wait - random) (max delay = wait + random). <br>
----- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY ----- <br>
model=&quot;models/weapons2/grapple/machinegun.md3&quot;</p></ul><h1 id="851" name="851" class="book-h5">weapon_plasmagun</h1><ul><h3>weapon_plasmagun</h3>
<p class="q3bg1b">Plasma Gun.<br>
<!--break-->
</p>
<h3>weapon_plasmagun Entity Keys</h3>
<p class="q3bg2"><b>wait</b> : time in seconds before item respawns after being picked up (default 5, -1 = never respawn).</p>
<p class="q3bg2"><b>random</b> : random time variance in seconds added or subtracted from &quot;wait&quot; delay (default 0 - see Notes).</p>
<p class="q3bg2"><b>count</b>: sets the amount of ammo given to the player when weapon is picked up (default 20).</p>
<p class="q3bg2"><b>team</b> : set this to team items. Teamed items will respawn randomly after team master is picked up (see Notes).</p>
<p class="q3bg2"><b>target</b> : picking up the item will trigger the entity this points to.</p>
<p class="q3bg2"><b>targetname</b> : a target_give entity can point to this for respawn freebies.</p>
<p class="q3bg2"><b>notfree</b> : when set to 1, entity will not spawn in &quot;Free for all&quot; and &quot;Tournament&quot; modes.</p>
<p class="q3bg2"><b>notteam</b> : when set to 1, entity will not spawn in &quot;Teamplay&quot; and &quot;CTF&quot; modes.</p>
<p class="q3bg2"><b>notsingle</b> : when set to 1, entity will not spawn in Single Player mode (bot play mode).</p>
<p class="q3bg2"><b>notbot</b> : used to make an item invisible for bot attraction.</p>
<h3>weapon_plasmagun Spawnflags</h3>
<p class="q3bg2"><b>SUSPENDED</b> : item will spawn where it was placed 
in map and won't drop to the floor.</p>
<h3>weapon_plasmagun Notes</h3>
<p class=q3bg1b>The amount of time it takes for an item in the team to respawn 
is determined by the &quot;wait&quot; value of the item that was picked up previously. 
So if one of the items in the team has it's &quot;wait&quot; key set to -1 (never 
respawn), the random respawning cycle of the teamed items will stop after that 
item is picked up. <br>
<br>
When the random key is set, its value is used to calculate a minimum and a maximum 
delay. The final time delay will be a random value anywhere between the minimum 
and maximum values: (min delay = wait - random) (max delay = wait + random). <br>
----- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY ----- <br>
model=&quot;models/weapons2/grapple/plasma.md3&quot;</p></ul><h1 id="852" name="852" class="book-h5">weapon_railgun</h1><ul><h3>weapon_railgun</h3>
<p class="q3bg1b">Rail Gun.<br>
<!--break-->
</p>
<h3>weapon_railgun Entity Keys</h3>
<p class="q3bg2"><b>wait</b> : time in seconds before item respawns after being picked up (default 5, -1 = never respawn).</p>
<p class="q3bg2"><b>random</b> : random time variance in seconds added or subtracted from &quot;wait&quot; delay (default 0 - see Notes).</p>
<p class="q3bg2"><b>count</b>: sets the amount of ammo given to the player when weapon is picked up (default 20).</p>
<p class="q3bg2"><b>team</b> : set this to team items. Teamed items will respawn randomly after team master is picked up (see Notes).</p>
<p class="q3bg2"><b>target</b> : picking up the item will trigger the entity this points to.</p>
<p class="q3bg2"><b>targetname</b> : a target_give entity can point to this for respawn freebies.</p>
<p class="q3bg2"><b>notfree</b> : when set to 1, entity will not spawn in &quot;Free for all&quot; and &quot;Tournament&quot; modes.</p>
<p class="q3bg2"><b>notteam</b> : when set to 1, entity will not spawn in &quot;Teamplay&quot; and &quot;CTF&quot; modes.</p>
<p class="q3bg2"><b>notsingle</b> : when set to 1, entity will not spawn in Single Player mode (bot play mode).</p>
<p class="q3bg2"><b>notbot</b> : used to make an item invisible for bot attraction.</p>
<h3>weapon_railgun Spawnflags</h3>
<p class="q3bg2"><b>SUSPENDED</b> : item will spawn where it was placed 
in map and won't drop to the floor.</p>
<h3>weapon_railgun Notes</h3>
<p class=q3bg1b>The amount of time it takes for an item in the team to respawn 
is determined by the &quot;wait&quot; value of the item that was picked up previously. 
So if one of the items in the team has it's &quot;wait&quot; key set to -1 (never 
respawn), the random respawning cycle of the teamed items will stop after that 
item is picked up. <br>
<br>
When the random key is set, its value is used to calculate a minimum and a maximum 
delay. The final time delay will be a random value anywhere between the minimum 
and maximum values: (min delay = wait - random) (max delay = wait + random). <br>
----- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY ----- <br>
model=&quot;models/weapons2/grapple/railgun.md3&quot;</p></ul><h1 id="853" name="853" class="book-h5">weapon_rocketlauncher</h1><ul><h3>weapon_rocketlauncher</h3>
<p class="q3bg1b">Rocket Launcher.<br>
<!--break-->
</p>
<h3>weapon_rocketlauncher Entity Keys</h3>
<p class="q3bg2"><b>wait</b> : time in seconds before item respawns after being picked up (default 5, -1 = never respawn).</p>
<p class="q3bg2"><b>random</b> : random time variance in seconds added or subtracted from &quot;wait&quot; delay (default 0 - see Notes).</p>
<p class="q3bg2"><b>count</b>: sets the amount of ammo given to the player when weapon is picked up (default 20).</p>
<p class="q3bg2"><b>team</b> : set this to team items. Teamed items will respawn randomly after team master is picked up (see Notes).</p>
<p class="q3bg2"><b>target</b> : picking up the item will trigger the entity this points to.</p>
<p class="q3bg2"><b>targetname</b> : a target_give entity can point to this for respawn freebies.</p>
<p class="q3bg2"><b>notfree</b> : when set to 1, entity will not spawn in &quot;Free for all&quot; and &quot;Tournament&quot; modes.</p>
<p class="q3bg2"><b>notteam</b> : when set to 1, entity will not spawn in &quot;Teamplay&quot; and &quot;CTF&quot; modes.</p>
<p class="q3bg2"><b>notsingle</b> : when set to 1, entity will not spawn in Single Player mode (bot play mode).</p>
<p class="q3bg2"><b>notbot</b> : used to make an item invisible for bot attraction.</p>
<h3>weapon_rocketlauncher Spawnflags</h3>
<p class="q3bg2"><b>SUSPENDED</b> : item will spawn where it was placed 
in map and won't drop to the floor.</p>
<h3>weapon_rocketlauncher Notes</h3>
<p class=q3bg1b>The amount of time it takes for an item in the team to respawn 
is determined by the &quot;wait&quot; value of the item that was picked up previously. 
So if one of the items in the team has it's &quot;wait&quot; key set to -1 (never 
respawn), the random respawning cycle of the teamed items will stop after that 
item is picked up. <br>
<br>
When the random key is set, its value is used to calculate a minimum and a maximum 
delay. The final time delay will be a random value anywhere between the minimum 
and maximum values: (min delay = wait - random) (max delay = wait + random). <br>
----- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY ----- <br>
model=&quot;models/weapons2/rocketl/rocketl.md3&quot;</p>
</ul><h1 id="854" name="854" class="book-h5">weapon_shotgun</h1><ul><h3>weapon_shotgun</h3>
<p class="q3bg1b">Shotgun.<br>
<!--break-->
</p>
<h3>weapon_shotgun Entity Keys</h3>
<p class="q3bg2"><b>wait</b> : time in seconds before item respawns after being picked up (default 5, -1 = never respawn).</p>
<p class="q3bg2"><b>random</b> : random time variance in seconds added or subtracted from &quot;wait&quot; delay (default 0 - see Notes).</p>
<p class="q3bg2"><b>count</b>: sets the amount of ammo given to the player when weapon is picked up (default 20).</p>
<p class="q3bg2"><b>team</b> : set this to team items. Teamed items will respawn randomly after team master is picked up (see Notes).</p>
<p class="q3bg2"><b>target</b> : picking up the item will trigger the entity this points to.</p>
<p class="q3bg2"><b>targetname</b> : a target_give entity can point to this for respawn freebies.</p>
<p class="q3bg2"><b>notfree</b> : when set to 1, entity will not spawn in &quot;Free for all&quot; and &quot;Tournament&quot; modes.</p>
<p class="q3bg2"><b>notteam</b> : when set to 1, entity will not spawn in &quot;Teamplay&quot; and &quot;CTF&quot; modes.</p>
<p class="q3bg2"><b>notsingle</b> : when set to 1, entity will not spawn in Single Player mode (bot play mode).</p>
<p class="q3bg2"><b>notbot</b> : used to make an item invisible for bot attraction.</p>
<h3>weapon_shotgun Spawnflags</h3>
<p class="q3bg2"><b>SUSPENDED</b> : item will spawn where it was placed 
in map and won't drop to the floor.</p>
<h3>weapon_shotgun Notes</h3>
<p class=q3bg1b>The amount of time it takes for an item in the team to respawn 
is determined by the &quot;wait&quot; value of the item that was picked up previously. 
So if one of the items in the team has it's &quot;wait&quot; key set to -1 (never 
respawn), the random respawning cycle of the teamed items will stop after that 
item is picked up. <br>
<br>
When the random key is set, its value is used to calculate a minimum and a maximum 
delay. The final time delay will be a random value anywhere between the minimum 
and maximum values: (min delay = wait - random) (max delay = wait + random). <br>
----- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY ----- <br>
model=&quot;models/weapons2/shotgun/shotgun.md3&quot;</p></ul><h1 id="576" name="576" class="book-h4">GTKRadiant Tutorials (Level Editing)</h1><ul><p class="q3bg1">Quake III Arena Tutorials<br><br>
Here you'll find an assorted and growing collection of tutorials for Quake III Arena and the editro GTKradiant or QERadiant. These tutorials cover modelling, texturing, entities, advanced entities, sounds and much more.<br><br>
If you have a tutorial you'd like to submit to the collection, or if you have suggestions for revisions to existing tutorials, jump into the <a href="http://forums.gamedesign.net/viewforum.php?f=15">Quake III Arena Game Design Forums!</a></p></ul><h1 id="570" name="570" class="book-h5">Making a mirror</h1><ul><!-- tutorial1 - converted 25/08/04 from q3lab.telefragged.com -->
<h3>Quake III: Arena</h3>
<blockquote>
	<font class="title">
		Making a mirror -
		<a href="mailto:jon80@home.se">Jon Eriksson</a>
	</font>
</blockquote>
<br><br>	
					
 <p>Please note: this resource among other resources here at rust are no longer 
	updated and maintained by the original author any more. If you need to contact
	someone in regards to this, please contact the moderators of the Quake III Arena 
	Forum on the RUST website.

<p><hr width=75% color=black noshade><p>
<br>
<p>First I thought I should make a tutorial how the Curved faces works, but I changed my mind, and made this Mirror tutorial instead. I made this choice basically because the curved faces is tricky to understand, and I think I will make a tutorial about it in Tutorial #5 or #6. So, how do you make a mirror? Just read the stuff below. First, the mirror has one bad thing with it, it will not reflect light, but you wouldn't see it if you don't think about it =). Here comes the tutorial. </p>

<p>Let's open our map, the map I have added upon since tutorial 1. I want to place a mirror at one of the sides in the room where I have my lamp (from tutorial #3). First, do as we always do, load a texture, but this time, you have to load the "common" textures, because that's where the mirror is located. Choose the left of the "Mirror" textures, and make a new object, it might look like this:</p>
<br>
<center>
<img src="./content/quake3/tutorials/tutorial4/mirrortextur.jpg"><br>
</center>
<br>
<p>Now, many of you think you're done, but it's not that simple =). </p>
<ul>
<p><li><i>Now, we're done with the new cube, so push ESC to deselect it. Now we need to put a new entity in front of the mirror. Press your right mouse button in any of the views (except for the 3dview) until you get the small menu, popping up where the mouse cursor is.</i></p>

<p><li><i>Go down on that menu, and choose "misc", and then "misc_portal_surface". A new entity will be shown, place the new entity in front of the mirror. (the entity must be closer than 64 units from the mirror texture). </i></p>
</ul>
<br>

<p>If you compile your map, the mirror will work, but act really strange. It wouldn't work from all angles, and that's because the mirror can only have 1 viewable surface. This mean that we have to cover all surfaces except the one we want as a mirror. I will do this by adding new boxes, that I put around the mirror. So it looks like this: </p>
<br>
<center>
<img src="./content/quake3/tutorials/tutorial4/done.jpg"><br>
</center>
<br>
<p>Now you can compile your map, and you got yourself a nice mirror =). One thing to know is that if you use mirrors, the clients FPS will be completely killed! But I agree that it is a nice effect. Another note is that
the mirror will not effect lights.</p></ul><h1 id="667" name="667" class="book-h5">Making a Spiral Stairway</h1><ul><!-- tutorial1 - converted 25/08/04 from q3lab.telefragged.com -->
<h3>Quake III: Arena</h3>
<blockquote>
	<font class="title">
		Making a Spiral Stairway -
		<a href="mailto:jon80@home.se">Jon Eriksson</a>
	</font>
</blockquote>
<br><br>	

<p>I was asked how to make a wall around a spiral stairway, and since I wasn't able to explain it without pictures (thats definitely hard :) I wrote this tutorial. Enjoy :)</p>
					
<p><hr width=75% color=black noshade><p>
   
<p><b>STEP 1:</b> Lets say weve got a map like this. You should be able to recognize that the wall around the stair consists of brushes. brushes? yeah right. and im gonna tell u how to replace them with a curved patch (that sounds better, looks better and even IS better ;)</p>

<center><img src="content/quake3/tutorials/tutorial28/joe1.jpg"></center>

<p><b>STEP 2:</b> Now delete those ugly boxes and put in a brush into an empty space. Why? Its less chaotic as you will see in the next step.</p>

<center><img src="content/quake3/tutorials/tutorial28/joe2.jpg"></center>

<p><b>STEP 3:</b> We need a patch not a brush, right? Now select "Curve|Simple Patch Mesh". 3x3? no thats not enough...Choose 3x9 and confirm.</p>

<center><img src="content/quake3/tutorials/tutorial28/joe3.jpg"></center>

<p><b>STEP 4:</b> Put the curve onto the place where the wall is gonna begin. You must be absolutely sure that *all* vectors of the patch mesh lay on the grid, or else you cannot edit it.</p>

<p>Now...lets go to the texturing: First make something like this :</p>

<center><img src="content/quake3/tutorials/tutorial28/joe4.jpg"></center>

<p><b>STEP 5:</b> Now press [V] to enter the vector edit mode. build something like this but make **absolute** sure that the vectors are on the grid b4 u start!</p>

<p>You will notice the white mark in this pic. I think its easier for you not to put the starting points of the patch at the same place as the ending points as you will have to seperate them again and thats kinda tricky.</p>

<center><img src="content/quake3/tutorials/tutorial28/joe5.jpg"></center>

<p><b>STEP 6:</b> Now its easy... goto the top view and select 3 points (in the topview u only see a single 1 of course!) and pull them down in one of the other 2D views. Now take another 3 till uve done all of them.</p>

<p>In this pic you see the curved brush as ive done it :] Its not finished yet (just a draft for this tut). but you can align your vectors a bit better (stay on the grid!) and make the wall higher so that it fits this stair.</p>

<center><img src="content/quake3/tutorials/tutorial28/joe6.jpg"></center>

<p>Have fun making spiral stairways =)</p>

</ul><h1 id="665" name="665" class="book-h5">Making Complex Doors</h1><ul><!-- tutorial1 - converted 25/08/04 from q3lab.telefragged.com -->
<h3>Quake III: Arena</h3>
<blockquote>
	<font class="title">
		Making Complex Doors-
		<a href="mailto:jon80@home.se">Jon Eriksson</a>
	</font>
</blockquote>
<br><br>	
					
<p>Now it's time to try to get more out of the func_door! Maybe you have tried to make two door halves, that should open at the same time, and haven't got it work? Then this is the tutorial for you! Read on...</p>

<p><hr width=75% color=black noshade><p>
<br>

<p><b>STEP 1:</b> Make the door.<p> 

<p>Do this by simply add some objects with a nice texture. Maybe you have it look like this:</p>

<center><img src="content/quake3/tutorials/tutorial30/editor1.jpg"></center>

<p>Okay, as you can see I have two door halves.</p>

<p><b>STEP 2:</b> Make the door A "func_door".<p>
 
<p>Now I select one of them, and make it to a "func_door" by pushing the right-mouse-button. I set the Angle of the door (The direction it should open). <i>Note: that each halves should have different angles (first door half + 180 degrees = second door half).</i></p> 

<p><b>STEP 3:</b> Compile the MAP.<p>

<p>Compiling the map will let you see what you have just created, and it is good mapping practise to examine you map -in the game- at regular intervals. <i>Note: that the two door halves will not open at the same time, when you're in game. To get the two door halves to open at the same time, we have to add some more stuff to it.</i></p>

<p><b>STEP 4:</b> Synchronize the doors.<p>

<p>Now we want the doors to be syncronized. Now add a new box about 8 units infront of the door, and apply the "common/nodraw" texture on it. It should now look like this:</p>

<center><img src="content/quake3/tutorials/tutorial30/editor2.jpg"></center>

<p><b>STEP 5:</b> Apply the "trigger_multiple".<p>

<p>Now, apply the "trigger_multiple" on this box. The Trigger_multiple is an entity that will trigger it's targets when you walk-on/touch it. We use the multiple_trigger, also because that it should be possible to open the door many times =). Do this by:</p> 

<list><p>1. Now select one the door halfs, and push "N". Write in the "Key" area "targetname", and then in the value "door1" (push Enter).</p> 

<p>2. Now select the other door half (deselect the first door), and do the same here "targetname" .. "door1". </p>

<p>3. Now, deselect the door half, and select the "trigger_multiple" box that we just created. Push "N", and type in the Key area "Target" and the value "door1". 

<p>4. Now, try to run the map. If you have done this right, the door half should open at the same time when you walk close up to them. <i>Note: that you have to add a brush like this on the other side of the doors too, otherwise you will only be able to open the doors from one way. (You can also make the "Trigger_multiple" object big, so you use the same object on both sides of the door, this will also prevent the door to hurt you when you stand right in the middle of them).</i></p></list>

<p><hr width=75% color=black noshade><p>

<p>Hope this will help some. Note that you can ofcourse use however many door parts as you want. You can make many VERY cool doors with the "trigger_multiple" and the "func_train". Maybe i should do a tutorial on that too?</p>
</ul><h1 id="666" name="666" class="book-h5">Making Custom Textures</h1><ul><!-- tutorial1 - converted 25/08/04 from q3lab.telefragged.com -->
<h3>Quake III: Arena</h3>
<blockquote>
	<font class="title">
		Making Custom Textures -
		<a href="mailto:jon80@home.se">Jon Eriksson</a>
	</font>
</blockquote>
<br><br>	
					
 <p>If you have ever wanted to make and used custom textures for Quake III with Q3radiant, this tutorial will help you. Read on.</p>

<p><hr width=75% color=black noshade><p>

<p>First you need a program that can handle TGA pictures, there's a free program called <a href="http://home.telefragged.com/wally/">Wally</a>, that you can use, but i rather use Photoshop or Paint Shop Pro. Make a Texture, maby it looks like this:</p>

<center><img src="content/quake3/tutorials/tutorial29/pic1.jpg"></center>

<p>Save this texture/picture as a 24bit (or 32bit, depends on what quality you want on it, and also note that the 32bit picture is bigger than the 24bit picture, so use 24bit pictures more often to save on memory in the game.</p>

<p>Now we want the picture to work in Q3radiant. This is very easy. Put the texture in the <b>"quake3dir/baseq3/textures/newtextures"</b><p> 

<p><b>For example:</b> Now load Q3radiant, and push "Textures". Woah, there it is! A new line with the "Newtextures".<p>

<center><img src="content/quake3/tutorials/tutorial29/pic2.jpg"></center>

<p>Yes it is that easy!</p>

<p><i>Note: that the name in Q3radiant is the same as the one in the folder. Now you can use your new texture as much as you want. Don't forgett to include it in the .pk3 file when you give away the maps using the new textures =)</p>
</ul><h1 id="598" name="598" class="book-h5">Making Doors</h1><ul><!-- tutorial1 - converted 25/08/04 from q3lab.telefragged.com -->
<h3>Quake III: Arena</h3>
<blockquote>
	<font class="title">
		Making Doors -
		<a href="mailto:jon80@home.se">Jon Eriksson</a>
	</font>
</blockquote>
<br><br>	
					
 <p>Please note: this resource among other resources here at rust are no longer 
	updated and maintained by the original author any more. If you need to contact
	someone in regards to this, please contact the moderators of the Quake III Arena 
	Forum on the RUST website.

<p><hr width=75% color=black noshade><p>
<br>

<B><U>Making a door</B></U><br>

<p>It's easier than you may think to make a door. I have two rooms, a small corridor between them, and I want a door right in the corridor.</p>

<p>First, load a nice texture for a door. There is nice Wall textures for a door, but there is also specific textures for doors. I will load the Gothic_door textures, for my map. Most of the Door textures are hard to make a good door with, so I will take a more Wall-like texture.</p>

<p>Once I've chosen a texture I make a new box, and this is the box that will be my door, so I form the box so it fits the corridor. To make it even more complicated, I want a door that is 2 parts, one left part, and one right part. The right part should move right, and the left should move left when the door opens. Actually, it's pretty easy =). </p>

<p>The thing is that those doors are actually two doors. One door moves left, and the other right. This makes an illusion that it's one door that moves apart when you run thru it. </p>

<p>Okay, the texture is set, and everything is set to go. Let's select the door (or one half of the door). Now, push the right mousebutton, so the menu appears. Choose "func", and then "func_door". This will set the box to be a door. Push "n" to bring up the "entity list", and here you can enter a few new keys, with values, but we want a simple door, so we don't have to change anything (the keys is listed in the text in the Entety window). </p>

<p>The only thing we have to do here is to push one of the direction buttons. The "Direction buttons" are the buttons that are located in the lower left in the entity window. It says "135", "90", "45" ... This tells the game what direction the door should move to get opened. If you don't know for sure, look in the Top view (upper left in the Q3radiant window). For my door, i had to push the "270" button to get my door right. Now, that door is finished. If you only have one door, you're done. But if you have a two parted door, you have to select the other door-half, and makes the same step as with the first one, except that the direction should be the opposite. That makes my other door half to be in the direction of "90". Now, this is how my door looks like:</p>
<br>
<center>
<img src="./content/quake3/tutorials/tutorial5/door.jpg"><br>
</center>
<br>
<p>I've written a tutoruial about more complexed doors in another tutorial.</p></ul><h1 id="597" name="597" class="book-h5">Making Jumppads</h1><ul><!-- tutorial1 - converted 25/08/04 from q3lab.telefragged.com -->
<h3>Quake III: Arena</h3>
<blockquote>
	<font class="title">
		Making Jumppads -
		<a href="mailto:jon80@home.se">Jon Eriksson</a>
	</font>
</blockquote>
<br><br>	
					
 <p>Please note: this resource among other resources here at rust are no longer 
	updated and maintained by the original author any more. If you need to contact
	someone in regards to this, please contact the moderators of the Quake III Arena 
	Forum on the RUST website.

<p><hr width=75% color=black noshade><p>
<br>
<B><U>Jump pads</b></u><br>

<p>Let's start with how to make a Jump pad. We'll start by making a room that looks something like this (I have finally used the Gothic textures here =):</p>
<br>
<center>
<img src="./content/quake3/tutorials/tutorial5/jumpstart.jpg"><br>
</center>
<br>
<p>If you don't have time to make a room, or just don't understand, download the room (It's the same room as from the screenshot, open up the room, and continue to read =). </p>

<p>Now, we need a new block with the Jump pad in the floor. Open the Textures menu, and choose "sfx". When the loading is finished, push "T" and open up the Textures window. If you scroll in the Textures window you will see that there are many jumppad-textures. This is because the texture should match your floor texture, choose the one that seems to have the same floor texture as in your map. </p>

<p>Then make a new box that is 128x128 units large (and maybe 8 units high). Place the new box with the jumppad texture at the same level as the floor and push the "CSG Subtract" button, as we did when we made a corridor. Now, push "S", and fix the texture so it's located at the right position. Now it might look like this:</p>
<br>
<center>
<img src="./content/quake3/tutorials/tutorial5/padplace.jpg"><br>
</center>
<br>
<p>Okay, now you can deselect the pad, with ESC. Now load a new texture. Load the "Common" textures. Now choose the very small texture called "trigger", it's tricky to find, but it should look like this:</p>
<br>
<center>
<img src="./content/quake3/tutorials/tutorial5/trig.jpg"><br>
</center>
<br>
<p>Now, make a new cube, that is the same size as the pad (128x128 units), but make it 16 units high. Place this new cube right on top of the Jumppad cube. It should look like this if you've done it right:</p>
<br>
<center>
<img src="./content/quake3/tutorials/tutorial5/trigger.jpg"><br>
</center>
<br>
<p>Now push right mouse button, then a small menu will be visible. Go down to "Trigger", and then Choose "Trigger_push". The box with the "trigger" texture will now be a "Trigger_push". </p>

<p>Push ESC to unselect it. <br>

<p>Then click the right mouse button again, go down to "Target", and choose "Target_position". </p>

<p>Push "n" to bring up the Entity window. In the "Key" box, type "targetname". The "Targetname" means the name of the entity, now enter a name for this entity in the value box. I choose the name "jump1", then I just enter "jump1" in the value box, and push <Enter>. It should look like this:</p>
<br>
<center>
<img src="./content/quake3/tutorials/tutorial5/position.jpg"><br>
</center>
<br>
<p>(Ignore the Origin, that's the position of the entity). This entity (the target_position) tells the "trigger box" what direction, and how high the jump should be. It tells the trigger box this, by it's position. But, not yet. First we need to "bind" the "trigger box" to the "target_position" entity. That's why we put a targetname on the entity, because now, you push ESC to unselsect the target_position entity, and select the box with the "trigger" texture. </p>

<p>Once you've selected it, push "N", to bring up the entity list. Now, simply type in the "Key" box "target" and in the value "jump1" (if you had the targetname "testjump1" on the entity, then you simply put the value "testjump1" here). Now, there should be a line from the trigger-box, to the entity This line simply shows the direction of the jump, and the player will reaches the highest point where the "trigger_position" is. To get the player up to the right place, simply move around the "trigger_position" entity Hope you can get it work now. If not, give me a note.</p>
</ul><h1 id="571" name="571" class="book-h5">Making Stairs</h1><ul><!-- tutorial1 - converted 25/08/04 from q3lab.telefragged.com -->
<h3>Quake III: Arena</h3>
<blockquote>
	<font class="title">
		Making Jumppads, Doors and Stairs -
		<a href="mailto:jon80@home.se">Jon Eriksson</a>
	</font>
</blockquote>
<br><br>	
					
 <p>Please note: this resource among other resources here at rust are no longer 
	updated and maintained by the original author any more. If you need to contact
	someone in regards to this, please contact the moderators of the Quake III Arena 
	Forum on the RUST website.

<p><hr width=75% color=black noshade><p>
<br>

<B><U>Stairs</B></U><br>

<p>Since Quake3Arena doesn't support Ladders, we have to make stairs or Jumppads. I'm going to show how to make very easy stairs. We have our map, as before. It should look something like this:</p>
<br>
<center>
<img src="./content/quake3/tutorials/tutorial5/jumpstart.jpg"><br>
</center>
<br>
<p>Now we want to reach the upper level, by making a stair. The first thing I do is to select the floor texture by pushing the middle mouse button on the floor in the 3D view. Then I make a new box that is 128 units long, 16 units wide, and 8 units tall. I copy this new box, by pushing <Ctrl> + C, and then paste a copy of it by pressing <Ctrl> + V (the new copy will be on the same place as the original one, so I move it a little bit. After doing this twice, so I have three boxes, my stairs have started (you don't follow what I mean, do you =), probably not), It should look like this now :</p>
<br>
<center>
<img src="./content/quake3/tutorials/tutorial5/stairstart.jpg"><br>
</center>
<br>
<p>Now, lets continue, by making more steps. Copy the objects till you reach the floor. It should look like this when you have done this :</p>
<br>
<center>
<img src="./content/quake3/tutorials/tutorial5/stairdone.jpg"><br>
</center>
<br>
<p>Tada, the first really basic stairs are done. Now you can change the texture on the top of each step to make it look really good, place two boxes on the side of the stair and so on. If you didn't get what I meant, give me a note.</p>
</ul><h1 id="835" name="835" class="book-h5">Patches 101</h1><ul><link href="themes/rusted/http://assets.aq2world.com/archive/websites/www.gamedesign.net/themes/rusted/rusted.css" rel="stylesheet" type="text/css"> 
<h3 align="center">GTKRadiant Patches 101 for Rusties</h3>
<h5 align="center">Greg (skinmaster) Crockatt</h5>
<center><img src="/content/quake3/tutorials/gtk-patches-101/gtkradiant-patches.jpg" border="5"></center>
<p align="left" class="rustbg4">(<a href="/content/quake3/tutorials/gtk-patches-101/patches-101.zip">MAP FILE HERE</a>) 
  For this tutorial I'll be dealing only with the menu items show in the above 
  image. Thicken and cap are useful in their own ways but are not dealt with here 
  as my methods don't apply them often.</p>
<!--break-->
<p align="left" class="rustbg1">1st you should understand the concept of rows 
  and columns. A row runs horizontally on a patch, even if the orientation of 
  the patch changes a row will always stay a row based on its initial location. 
  A column runs vertically and will also always be a column based on its original 
  location. There's a means to convert rows to columns, reversing the control 
  orientation on a patch but it's unpredictable..<br><br>
<small class="r">NOTE - Using bobtoolz merge patches and split patches(pictured above) can somehow 
  force a row/column orientation change depending on if you've inverted one of 
  the merged patches and which direction the inversion was done on. It's often 
  best to make both sides seperately and distinguish betweeen them for future 
  use, texture application can be really screwed up if you merge a flipped patch 
  with its parent.</small>
<p align="left" class="rustbg1">Second you should know that every square or rectangle 
  surface on a patch will generate 2 triangles, 5 edges, 4 verts. The more faces 
  on a patch surface, the more edges and verts the engine must calculate and thus 
  you must be certain to optimize all your patch shapes down to their least row/column 
  counts.<br>
<center><img src="/content/quake3/tutorials/gtk-patches-101/gtkradiant-tris.jpg" border="5"></center>
<p align="left" class="rustbg1">Lets just start with something like a bent arch for use is a corridor or some such area..</p><br>

<p align="left" class="rustbg3">1. Make a brush and convert it into an endcap and make it like so.. #1 is top view, then a side insert to show height. 2 and 3 are top view also.<br>
<center><img src="/content/quake3/tutorials/gtk-patches-101/gtkradiant-1-2-3.jpg" border="5"></center>
<p align="left" class="rustbg3">2. Copy the endcap and rotate it z once, then  use the patch menu to delete the last two columns.<br>3. Duplicate and flip-x and put the dupe on the left side. You'll arrive at 3 (pictured above)</p><br>

<p align="left" class="rustbg3">4. Duplicate the three patches at once and place it above the originals. (the pics below are all grid 6)<br><br>5. Hit v to enter vertex editing mode while the patches are selected. 
Be sure you are editing all 3 patches at once.<br>
<center><img src="/content/quake3/tutorials/gtk-patches-101/gtkradiant-4-8.jpg" border="5"></center>
<p align="left" class="rustbg3">6. Drag a selection area around the top row of verts and select them. Hit the rotate x button on the toolbar (pictured above) and the verts will end up where 6 shows them to be.<br><br>
7. Drag the verts all together to the position show above, the top of our arch.<br><br>
8. Drag the remaining row verts to their right angle center points. Just hit v twice to turn off vertex editing and turn it back on, then drag a new selection box around the verts on all three patches at once.</p><br>

<p align="left" class="rustbg3">9. Deselect everything, select all the patches at once, duplicate 
and flip-y and move to the other side.<br>
<center><img src="/content/quake3/tutorials/gtk-patches-101/gtkradiant-9.jpg" border="5"></center></p>
<p align="left" class="rustbg4">Now that we've got our basic arch, lets see how we can improve it. This will involve working on one side, deleting the unedited side and replacing it with an updated mirror. I'm going to double arch it.</p>
<p align="left" class="rustbg3">10. Hide the right half, select the top three patches and insert two rows. This will create new vertexes which will of course.. be off the grid. Select all the verts and hit ctrl-g, this will snap them to the grid, then align them the following way.<br>
<center><img src="/content/quake3/tutorials/gtk-patches-101/gtkradiant-10-11.jpg" border="5"></center>
<p align="left" class="rustbg3">11. Delete the first two rows, this is where we can see that our earlier duplication and flip-x of out half endcap led to the inversion of its first and last rows. So we end up with most of what we need anyway.. we'll just compensate for it and work with what we've got.</p><br>
<p align="left" class="rustbg3">12. Duplicate and flip the pieces you need to fill in the holes, then vert edit the top two patches so that they are risen up a bit like so, keeping the right angle position of the middle verts. This ensures better texture application.<br>
<center><img src="/content/quake3/tutorials/gtk-patches-101/gtkradiant-12-13.jpg" border="5"></center>
<p align="left" class="rustbg3">13. Make a brush where i've made it and convert it to a 3x3 simple 
patch mesh.</p><br>
<p align="left" class="rustbg3">14. Move the bottom left vert right one square, then select all the bottom verts.<br><br>
15. Change to front view and move those three verts to the center, one unit left.<br>
<center><img src="/content/quake3/tutorials/gtk-patches-101/gtkradiant-14-16.jpg" border="5"></center>
<p align="left" class="rustbg3">16. Change back to side view and move the left middle vert down to the location of the previous left bottom one.</p><br>
<p align="left" class="rustbg3">17. Move the top left vert down to the bottom.<br><br>
18. Move the top middle vert over to the 90 degree point.<br>
<center><img src="/content/quake3/tutorials/gtk-patches-101/gtkradiant-17-19.jpg" border="5"></center>
<p align="left" class="rustbg3">19. Move the two remaining middle verts down to the bottom, you'll notice in camera view that because we move the other bottom verts to the side, we've created a nice bend on the bottom of this.</p><br>
<p align="left" class="rustbg3">20. Duplicate everything that needs it until you get the following geometry.<br>
<center><img src="/content/quake3/tutorials/gtk-patches-101/gtkradiant-20.jpg" border="5"></center><br>
<p align="left" class="rustbg3">21. The floor could be one brush but i want to trim the frame and this les me save on the overlap. Using three brushes in this manner give us no more or less tris, but it does remove a smll bit of overdraw that we'd get using only one brush. Using patches to avoid overlap completely is possible but it creates more tris than this method.<br>
<center><img src="/content/quake3/tutorials/gtk-patches-101/gtkradiant-21.jpg" border="5"></center><br>
<p align="left" class="rustbg3">22. Making the walls seam up to this door frame is less a problem than you might think, it's going to involve 2 simple patch meshes to do it, but they must meet the same point on the wall. That where the ceiling joins   it, so in order to do this properly, you must first decide how much more wall exists above the frame if any.<br>
<center><img src="/content/quake3/tutorials/gtk-patches-101/gtkradiant-22.jpg" border="5"></center><br><br>
<p align="left" class="rustbg3">23. Next you make a fan like so. Then insert it into the proper place described in the next image. <br><br>
<center><img src="/content/quake3/tutorials/gtk-patches-101/fan.gif"><br>
<br>
<p align="left" class="rustbg3">24. Duplicate the fan, move the associated vertexes to fit it into the remaining hole.<br>
<center><img src="/content/quake3/tutorials/gtk-patches-101/gtkradiant-23-24.jpg" border="5"></center><br>
<p align="left" class="rustbg1">You ought to have something like this now.. I've been making both 
sides of the door at once, since I'm working with the pieces.<br>
<center><img src="/content/quake3/tutorials/gtk-patches-101/gtkradiant-door.jpg" border="5"></center><br>
<p align="left" class="rustbg3">25. This and the next step are merely to fill in the structural holes left by this type of modelling. Press ctrl-p to hide patches and fill in the three selected brushes in #25.<br>
<center><img src="/content/quake3/tutorials/gtk-patches-101/gtkradiant-25-26.jpg" border="5"></center>
<p align="left" class="rustbg3">26. To make the doorframe allow less visibility through it, I've taken steps in 26 to narrow it as close to the confines of its patches as possible. I did this procedure with patches visible, I've hidden them in this illustration so brushwork is clear.</p><br>
<p align="left" class="rustbg3">27. This step is just to show that the patches are moldable still 
if you grab them in the right places you wont create gaps. This step changes the look of the doorframe on one side only.<br>
<center><img src="/content/quake3/tutorials/gtk-patches-101/gtkradiant-27.jpg" border="5"></center><br>
<p align="left" class="rustbg3">28. I now make the surrounding geometry a little more complex. 
This has overlapping brushes for a very good reason. The larger brushes would have a large piece of overlap on the back side if I textured that face, so I leave it caulked and place another caulked brush in the correct areas with texture where the other brush has caulk. This uses two brushes to texture one volume, and does so at a savings.<br>
<center><img src="/content/quake3/tutorials/gtk-patches-101/gtkradiant-28.jpg" border="5"></center><br>
<p align="left" class="rustbg3">29. Lets make a couple of posts now for these patches that stick out. We'll make a top and a base (from cylinders) since they can be textured seperately, and we'll redisperse the columns of both so that we have the lowest possible number of tris.
<center><img src="/content/quake3/tutorials/gtk-patches-101/gtkradiant-29.jpg" border="5"></center>
<p align="left" class="rustbg3">Optimize. Finally we add AND insert two rows and two columns before redispersing them to get this geometry. You can see the difference between the optimized left patchwork and unoptimized right.
<center><img src="/content/quake3/tutorials/gtk-patches-101/gtkradiant-optimize.jpg" border="5"></center>
<p align="left" class="rustbg3">Here's how it looks after optimization and some random texturing..
<center><img src="/content/quake3/tutorials/gtk-patches-101/final.jpg" border="5"></center></ul><h1 id="101" name="101" class="book-h5">Perfect Arch Tutorial - Part 1</h1><ul><!-- q3Arch_1.html - converted 27/08/01 from old rust documents -->

<h3>Quake III: Arena</h3>
<blockquote class="title">Perfect Arch Tutorial - Part 1 <script language="JavaScript" type="text/javascript"> <!--
document.write('<a href="&#32;&#109;&#97;&#105;&#108;&#116;&#111;&#58;&#116;&#97;&#116;&#116;&#111;&#111;&#64;&#101;&#110;&#116;&#101;&#114;&#97;&#99;&#116;&#46;&#99;&#111;&#109">tattoo</a>');
// --> </script></blockquote>
 <p>Please note: this resource among other resources here at the new rust are no longer updated and maintained by the original author any more. If you need to contactsomeone in regards to this, please contact the moderators of the Quake III Arena Forum on the RUST website.
<hr width=75% color=black noshade>
<h3>Part One</h3>
This tutorial will demonstrate the procedures that need be taken to make a perfect a arch. Ok, first you'll need to be in the <font color="#ff6600">XY TOP</font> view in the editor.<br><br>
Now make a brush and size it to the length of the arch you want. I went <font color="#ff6600">312 x 64.</font>
<br><br>
Go to the <font color="#ff6600">Curve</font> menu and select <font color="#ff6600">More Cylinders/Square Cylinder</font>.
<br><br>
<div align=center><img src="/content/quake3/tutorials/arch/q3Arch_PIC01.jpg"></div> Next, <b>WITHOUT</b> 
unselecting the Square Cylinder, change to the <font color="#ff6600">YZ SIDE</font> 
view so you can see the rows of the Cylinder. <br>
<br>
You'll notice that there are <font color="#ff6600">6 Rows</font> from top to bottom.
<br><br>
You'll want to add another set of Rows to this Square Cylinder - You'll see why in a minute.
<br><br>
Now go to the <font color="#ff6600">Curve</font> menu again and select <font color="#ff6600">Insert/Insert (2) Rows</font>.
<br><br>
<div align=center><img src="/content/quake3/tutorials/arch/q3Arch_PIC02.jpg"></div>
<br><br>
A little explanation of Rows &amp; Columns is that <i>Rows</i> go the length of the brush and <i>Columns</i> go around the brush, so you'll have <font color="#ff6600">6 Rows</font> and <font color="#ff6600">24 Columns</font> in a default Square Cylinder. You'll see here that there are now <font color="#ff6600">12 Rows</font> now.
<br><br>
Again, without deselecting the Square Cylinder,	go to the <font color="#ff6600">Curve</font> menu and select <font color="#ff6600">Matrix/Re-disperse/Rows</font>.<br><br>
<div align=center><img src="/content/quake3/tutorials/arch/q3Arch_PIC03.jpg"></div>
<br><br>
This is what the Square Cylinder looks like after you select the <font color="#ff6600">Matrix/Re-disperse/Rows</font> from the <font color="#ff6600">Curve</font> menu.
<br><br>
This makes the Square Cylinder have the proper shape when bending.
<br><br>
Now save your map so you don't lose any of this. I've messed up many of these and had to start all over again.
<br><br>
<div align=center><img src="/content/quake3/tutorials/arch/q3Arch_PIC04.jpg"></div>
<br><br>
What I do is after I get this far, before trying to bend it, I'll make a copy of the Square Cylinder so I don't have to redo it all again.<br>
After you get this down, though, you won't have to be so worried about messing up.  Now, stretch the Square Cylinder to make it longer.
<br><br>
Figure out about how long you'll be needing it to make the curve.<br>It doesn't matter a whole lot what length it is right now, it's just easier to use this way.
<br><br>
You can resize it to the correct size later.
<br><br>
Now, from the Button Bar, with the Square Cylinder still highlighted,  select the <font color="#ff6600">Patch Bend Mode</font> button. <font color="Red">The Red Arrow</font>.<br>
After selecting it the Information window will pop up. This tells you what to do.
<br><br>
<div align=center><img src="/content/quake3/tutorials/arch/q3Arch_PIC05.jpg"></div><br><br>
Ok, this is where this gets tricky. Bare with me. This is where you will choose what point the Square Cylinder is bent from. I circled the <font color="#ff6600">Bend Axis</font> dots, this is where the Square Cylinder bends.
<br><br>
You use the Tab button on your keyboard to cycle thru the available <font color="#ff6600">Bend Axis</font>. When you get to the point where you want to bend it from, hit enter to select that point.
<br><br>
You shouldn't have to 'Tab' thru them. The first point should look like the picture with the <font color="#ff6600">Bend Axis</font> at the correct point. If they are not like the picture, 'Tab' thru and get them at the first point that looks like the picture.
<br><br>
When you get the <font color="#ff6600">Bend Axis</font> at the point in the picture, hit enter 'Only once', then change back to the <font color="#ff6600">XY TOP</font> view.Now you should see a blue dot as one of the Bend Axis points.<br>
the picture to the left of the top two shows what you should be looking at.
<br><br>
This blue dot is the another bending point for the Square Cylinder.
<br><br>
From here, you'll use the 'Tab' button again to move the blue dot around to the center dot of the side that will be bent. The picture to the right of the top two shows how it should look.
<br><br>
Now switch to the <font color="#ff6600">XZ FRONT</font> view and change the grid to <font color="#ff6600">Grid1</font>.<br>
Take your mouse and bend the Square Cylinder until the end of it is perfectly squared with the grid lines. This is VERY important.<br>
You'll probably have to zoom in to see this. I have to any ways.
<br><br>
The bottom picture shows what it should look like.
<br><br>
Now, save your work!!
<br><br>
<div align=center><img src="/content/quake3/tutorials/arch/q3Arch_PIC06a.jpg">&nbsp;<img src="/content/quake3/tutorials/arch/q3Arch_PIC06b.jpg"></div><br><br>
<div align=center><img src="/content/quake3/tutorials/arch/q3Arch_PIC06c.jpg"></div><br><br>
Next, hit ESCAPE to unselect the Square Cylinder.<br>
We'll have to go thru the steps to select the Bend Axis again.
<br><br>
Hit the Bend Axis button again and 'Tab' to the next point in the SquareCylinder. The top picture shows what you should be looking at. Hit enter, only once, to lock it in and move the blue dot around again to the same point as in the previous bend.
<br><br>
<div align=center><img src="/content/quake3/tutorials/arch/q3Arch_PIC07.jpg"></div>
<br><br>
<div align=center><img src="/content/quake3/tutorials/arch/q3Arch_PIC08.jpg"></div>
<br><br>
Make certain that your grid is set to <font color="#ff6600">Grid1</font> again.
<br><br>
Now bend this other end until the end of it is perfectly squared with the grid lines. Again this is 'VERY' important.
<br><br>
Your Square Cylinder should look like the bottom picture. Both ends of the Square Cylinder should be perfectly in line on 'ONE' grid line. If it is not, you've done something wrong and will have to correct it before proceeding.<br><br>
Right now, your Square Cylinder should be an arch. Upside down, but this is ok for now. If everything is correct, we can proceed after you save your work, of coarse.
<br><br>
Now on to <a href="/book/view/102">Part Two</a>!
<!-- eof @ 203 --></ul><h1 id="102" name="102" class="book-h5">Perfect Arch Tutorial - Part 2</h1><ul><!-- q3Arch_1.html - converted 27/08/01 from old rust documents -->

<h3>Quake III: Arena</h3>
<blockquote class="title">Perfect Arch Tutorial - Part 2 - <script language="JavaScript" type="text/javascript"> <!--
document.write('<a href="&#32;&#109;&#97;&#105;&#108;&#116;&#111;&#58;&#116;&#97;&#116;&#116;&#111;&#111;&#64;&#101;&#110;&#116;&#101;&#114;&#97;&#99;&#116;&#46;&#99;&#111;&#109">tattoo</a>');
// --> </script></blockquote>

Please note: this resource among other resources here at the new rust are no longer 
	updated and maintained by the original author any more. If you need to contact
	someone in regards to this, please contact the moderators of the Quake III Arena 
	Forum on the RUST website.

<hr width=75% color=black noshade>

 This tutorial will demonstrate the procedures that need be taken to make a perfect a arch. Ok, now, you'll probably want to turn your arch around the proper way. You don't have to right now. It's just the way I've done it. The way it looks now would work, but it's not the way to go if you want perfection.
<br><br>
<div align="center"><img src="/content/quake3/tutorials/arch2/q3Arch_PIC09.jpg"></div>
<br><br>
You'll notice from the picture that the shape of this isn't correct. The 
			ends and the very top are are not sized correctly with the grid. It 
			doesn't hit both sides of the major grid to make a 64 unit square. It's 
			more like 58 or 59. And in between that it is squeezed a little. This is
			what we're going to fix.
<br><br>
From here, we're going to drag the vertices to get the correct shape.
<br><br>
First you'll need to resize this to a descent grid size. I like to use 
			<font color="#FF6600">Grid16</font>, but you may use what ya like. You'll 
			want to resize it to the size you want it to be when finished. The only
			important thing here is that only the 
			<font color="#FF6600">outer edges</font> of this should be hitting the 
			major grid. This makes it easier on you to get it to where it needs to be 
			with the way I do this. You'll find out later on what I mean by this as 
			you make more of these. Also, I don't know if this is the way the guys at 
			ID Software does their arches, it's just the way I found to do it to look 
			correct.

			Ok, from here, you'll need to make an <font color="#FF6600">End cap</font>. 
			I use the End cap because it the correct shape already and does not need
			to be reshaped. It is the standard shape of all the curves in Quake III 
			Arena.
<br><br>
First draw another brush, any size, and go to the 
			<font color="#FF6600">Curve</font> menu and select
			<font color="#FF6600">End cap</font>. Now turn it and position it by your 
			arch to look like the picture.
<br><br>
<div align="center"><img src="/content/quake3/tutorials/arch2/q3Arch_PIC10.jpg"></div>
<br><br>
From this you can see where the 
			imperfections are. Make CERTAIN that the End cap is positioned correctly 
			on the major grid lines, as shown. After you've done that, unselect the 
			<font color="#FF6600">End cap</font> and select the arch. you may have to 
			move these around a little so you can select each one when you like. By 
			that, I mean, the <font color="Yellow">End cap</font> should be in front 
			of the arch.
<br><br>
After you have everything in position and the arch selected, go to the 
			<font color="#FF6600">Selection</font> menu and select 
			<font color="#FF6600">Drag/Drag Vertices</font>.
<br><br>
<div align="center"><img src="/content/quake3/tutorials/arch2/q3Arch_PIC11.jpg"></div>
<br><br>
Here you should see the <font color="#FF6600">Vertices</font> around the 
			arch. These are what we move to reposition the arch so it is the correct 
			shape. Now, this can get a little tricky too. First, save your work. You 
			don't have to unselect anything to so.
<br><br>
<div align="center"><img src="/content/quake3/tutorials/arch2/q3Arch_PIC12.jpg"></div>
<br><br>
First you'll need to set your grid again to <font color="#FF6600">Grid1</font> 
			and zoom in to see the grid lines. Now, go to the bottom left end of the arch 
			and position your mouse over the right <font color="#FF6600">Vertice</font>.
<br><br>
<div align="center"><img src="/content/quake3/tutorials/arch2/q3Arch_PIC13.jpg"></div>
<br><br>
Now press and hold the left button and drag the corner right 
			<font color="#FF6600">Vertice</font> to the right so that the corners of 
			both the arch and the <font color="#FF6600">End cap</font> are perfectly 
			in line.
<br><br>
One thing you'll have to be careful about is if you click on a 
			<font color="#FF6600">Vertice</font> and let off and go right back to it 
			and drag it again, you'll notice that there are more 
			<font color="#FF6600">Vertices</font> under the one and/or ones you moved. 
			This can get aggravating. Not to worry though. Just hit escape and move 
			the <font color="#FF6600">Vertice</font> back to where ya started.
<br><br>
There are 5 <font color="#FF6600">Vertices</font> that need to be moved 
			for the bottom. Then 5 for the top and 5 for the middle. There are 15 
			<font color="#FF6600">Vertices</font> all together that need to be 
			moved.
<br><br>
Ok, now go onto the middle bottom <font color="#FF6600">Vertice</font>.
<br><br>
<div align="center"><img src="/content/quake3/tutorials/arch2/q3Arch_PIC14.jpg"></div>
<br><br>
Now align that to the very top of the 
			<font color="#FF6600">End cap</font>. Now go on to the right end of the 
			arch.
<br><br>
<div align="center"><img src="/content/quake3/tutorials/arch2/q3Arch_PIC15.jpg"></div>
<br><br>
Align this one up with the corners. Now just move up to the 
			<font color="#FF6600">Vertice</font> between the right end and the middle 
			one.
<br><br>
<div align="center"><img src="/content/quake3/tutorials/arch2/q3Arch_PIC16.jpg"></div>
<br><br>
This one is a little tricky. The <font color="#FF6600">Vertice</font> 
			isn't at the corner or where the lines meet but up into the arch a 
			little. You can see it in the picture. Just move it down and to the left
			and align the line of both the Arch and the 
			<font color="#FF6600">End cap</font>. Now one more at the other end.
<br><br>
<div align="center"><img src="/content/quake3/tutorials/arch2/q3Arch_PIC17.jpg"></div>
<br><br>
Same as the last. Line it up the same way. Now zoom out and the next picture is what it should look like all lined up.
<br><br>
<div align="center"><img src="/content/quake3/tutorials/arch2/q3Arch_PIC18.jpg"></div>
<br><br>
This is the way it looks with the correct shape at the bottom.
<br><br>
<div align="center"><img src="/content/quake3/tutorials/arch2/q3Arch_PIC19.jpg" width="450"></div>
<br><br>
Now save your work and we'll move onto the top <font color="#FF6600">Vertices</font>.<br>
Which is <a href="/book/view/103">Part Three</a></ul><h1 id="103" name="103" class="book-h5">Perfect Arch Tutorial - Part 3</h1><ul><!-- q3Arch_1.html - converted 27/08/01 from old rust documents -->
<h3>Quake III: Arena</h3>
<blockquote class="title">Perfect Arch Tutorial Part 3 - 
<script language="JavaScript" type="text/javascript"> <!--
document.write('<a href="&#32;&#109;&#97;&#105;&#108;&#116;&#111;&#58;&#116;&#97;&#116;&#116;&#111;&#111;&#64;&#101;&#110;&#116;&#101;&#114;&#97;&#99;&#116;&#46;&#99;&#111;&#109">tattoo</a>');
// --> </script></blockquote>
Please note: this resource among other resources here at the new rust are no longer updated and maintained by the original author any more. If you need to contactsomeone in regards to this, please contact the moderators of the Quake III Arena Forum on the RUST website.
<hr width=75% color=black noshade>
<h3>Part Three</h3>
 This tutorial will demonstrate the procedures that need be taken to make a perfect a arch. Ok, this should be easy for you now and I probably don't need to write the rest of this but I'm going to just for the people that might need it.
<br><br>
What you need to do here is unselect the Arch and select the <font color="#ff6600">End&nbsp;cap</font>. You'll need to resize it to the outer edges of the Arch and you'll see how the top of the Arch is out of shape. After you resize it, you'll have to reposition the <font color="#ff6600">End&nbsp;cap</font> so that you can select the Arch. Now select the Arch again and we'll start.
<br><br>
<div align="center"><img src="/content/quake3/tutorials/arch3/q3Arch_PIC20.jpg"></div>
<br><br>
As you can see here there are only two <font color="#ff6600">Vertices</font> that need moving. The two corners and middle are already in line. Now go to the <font color="#ff6600">Selection</font> menu and select <font color="#ff6600">Drag/Drag&nbsp;Vertices</font>. The top left <font color="#ff6600">Vertice</font> is the one that we'll be moving.
<br><br>
<div align="center"><img src="/content/quake3/tutorials/arch3/q3Arch_PIC21.jpg"></div>
<br><br>
After you have selected <font color="#ff6600">Drag/Drag&nbsp;Vertices</font>, change your Grid again to <font color="#ff6600">Grid1</font> and zoom in and move the <font color="#ff6600">Vertice</font> to the upper left corner as shown in the picture.
<br><br>
Now for the right side.
<br><br>
<div align="center"><img src="/content/quake3/tutorials/arch3/q3Arch_PIC22.jpg" ></div>
<br><br>
Here, you'll do the same thing as the left side. After this one isaligned, unselect it and zoom out and you'll how it looks all lined upped as in the next picture.
<br><br>
<div align="center"><img src="/content/quake3/tutorials/arch3/q3Arch_PIC23.jpg" ></div>
<br><br>
Don't forget to save your work.
<br><br>
Now there's only one more thing to do. That's resize the <font color="#ff6600">End&nbsp;cap</font> so that it is aligned with the center of the arch like in the next picture.
<br><br>
<div align="center"><img src="/content/quake3/tutorials/arch3/q3Arch_PIC24.jpg" ></div>
<br><br>
You really can't see if it is out of line or not and probably wouldn't even matter but if you zoom in and look closer like in the next picture, you'll see that it isn't correct.
<br><br>
<div align="center"><img src="/content/quake3/tutorials/arch3/q3Arch_PIC25.jpg" ></div>
<br><br>
Here you'll see that it 'is' off a little. This probably wouldn't make adifference, but, just for the correct alignment I'm going to go ahead andalign this too.
<br><br>
<div align="center"><img src="/content/quake3/tutorials/arch3/q3Arch_PIC26.jpg" ></div>
<br><br>
The <font color="Red">red circle</font> is the <font color="#ff6600">Vertice</font> we will be moving.
<br><br>
<div align="center"><img src="/content/quake3/tutorials/arch3/q3Arch_PIC27.jpg" ></div>
<br><br>
This is where it ended up and is aligned. Now go to the right side and move that one.
<br><br>
<div align="center"><img src="/content/quake3/tutorials/arch3/q3Arch_PIC28.jpg" ></div>
<br><br>
This is where this one is aligned. Now we'll check the middle to see if it needs to be aligned.
<br><br>
<div align="center"><img src="/content/quake3/tutorials/arch3/q3Arch_PIC29.jpg" ></div>
<br><br>
This needed to be aligned as well. Now we'll go to the left end and align that one.
<br><br>
<div align="center"><img src="/content/quake3/tutorials/arch3/q3Arch_PIC30.jpg" ></div>
<br><br>
This one needed aligning. Now go to the right end.
<br><br>
<div align="center"><img src="/content/quake3/tutorials/arch3/q3Arch_PIC31.jpg"></div>
<br><br>
This needed aligning as well. Ok, now zoom out and you'll see how it looks.
<br><br>
<div align="center"><img src="/content/quake3/tutorials/arch3/q3Arch_PIC32.jpg"></div>
<br><br>
Here is the finished arch. I've taken and made three <font color="#ff6600">End&nbsp;caps</font> and put them in, as you can seeof coarse just so you would see how it looks all lined up.
<br><br>
And there ya have it,<br> 
<font color=#6699CC><b>'The&nbsp;Perfect&nbsp;Arch'</b></font>.
<br><br>
<div align="center"><img src="/content/quake3/tutorials/arch3/q3Arch_PIC33.jpg"></div>
<br><br>
Well, that was my good deed for today. I sure hope this helps someone out. I don't want anyone to think that I'm a Q3Radient guru or anything. This is just something I figured out since it's release and wanted to share what I have learned with everyone else that is wanting to make	killer maps for Quake III Arena. I might write another tutorial on other things as I learn them. Just right now, I need to concentrate on the making of my own map.
<br><br>
All the credit I can give for my knowledge 	would be to raYGunn and the rest of the crew at <a href="http://www.gamedesign.net/">RUST</a>.<br> 
They are who I turn to when in need of an answer. Thanks guys...
<br><br>
<script language="JavaScript" type="text/javascript"> <!--
document.write('<a href="&#32;&#109;&#97;&#105;&#108;&#116;&#111;&#58;&#116;&#97;&#116;&#116;&#111;&#111;&#64;&#101;&#110;&#116;&#101;&#114;&#97;&#99;&#116;&#46;&#99;&#111;&#109">tattoo</a>');
// --> </script><br><br>
[Ed. Note: Example map can be found <a href="/content/quake3/tutorials/arch3/Perfect_arch.map">here</a>.]</ul><h1 id="664" name="664" class="book-h5">Prefabricated Prefabs in GTKradiant</h1><ul><h3>Prefabs? Easy.</h3><p class="q3bg3"><b>What's a prefab?</b><br>Answer: It's a collection of brushes and patches that together make some sort of prefabricated object that's something you'd like to use over and over throughout an area in the creation phase of a current and/or future map. A prefab can be a column, an arch, a room, a cabin, a sign, virtually anything.</p><!--break-->
<p class="q3bg3"><b>How do prefabs work?</b><br>Answer: There's two ways to make a prefab:<br><br><i>1.</i> Select the associated brushes and patches, and save them as a map file in a folder like baseq3/prefabs.<br>
<i>2.</i>Or you can possibly (depending on your version) export the selected brushes as .pfb files which is basically the same thing.<br><br>Once you're ready to use the prefab, just import it and place it, then dupe and re-use throughout.</p><span class="r">Pretty simple huh? - skinmaster</span></ul><h1 id="898" name="898" class="book-h4">Tutorials (Modelling)</h1><ul><h3>Modelling Tutorials for Quake III</h3>
<p class="q3bg3">This section covers everything from creating new player models, bots and level objects to creating skins, uv texturemapping and creating md3s. Review each section carefully and if you have any questions refer to the <a href="http://forums.gamedesign.net/viewforum.php?f=15">Quake III Arena</a> forum.</p></ul><h1 id="899" name="899" class="book-h5">Putting New Models in Quake III Arena</h1><ul><h3>Putting new Character Models into Quake III</h3>
<p class="q3bg1">Based on original notes by Paul Steed / Edited by Paul Jaquays / Edited 12/22/99 by ps (QERadiant.com thanks John Hutton for re-formating <a href="http://www.qeradiant.com/manual/Model_Manual/model_manual.htm">this manual</a> into a more web friendly version)</p>
<p class="q3bg3">The purpose of this document is to explain how to set up a model for Quake 3 Arena, create the necessary animation and conversion files, and then export it into the MD3 format required by the game. It is intended to be informative only and not a tutorial on building or animating models.<br><br>The player models for Quake III Arena were built using the commercial modeling software, 3D Studio Max R2.5 (3ds Max) by Kinetix. These models were then animated using Physique and Biped, components of a plugin for 3dsMax called Character Studio (also by Kinetix). The following instructions assume that you will model and animate with 3dsMax and Character Studio.<br><br><a href="http://www.qeradiant.com/manual/Model_Manual/model_manual.htm">This manual</a> includes the following sections:<br><br>Setting up the Files<br>Building and Naming the Mesh<br>Texturing<br>Set Up for Animation<br>Animation<br>Setting up Tags<br>Level of Detail<br>Exporting<br>Animation Config File<br>The Conversion Process<br></p>
<p class="q3bg1b"><a href="http://www.qeradiant.com/manual/Model_Manual/model_manual.htm">Click here to visit this Manual page at QERadiant.com</a></p></ul><h1 id="563" name="563" class="book-h4">Tutorials (Shader and Scripting)</h1><ul><p class="q3bg1">Quake III Arena Shader Tutorials<br><br>
Here you'll find an assorted and growing collection of tutorials for Quake III Arena and the editro GTKradiant or QERadiant. These tutorials cover, texturing, scripting, texture creation, advanced scripting, and much more.<br><br>
If you have a tutorial you'd like to submit to the collection, or if you have suggestions for revisions to existing tutorials, jump into the <a href="http://forums.gamedesign.net/viewforum.php?f=15">Quake III Arena Game Design Forums!</a></p></ul><h1 id="578" name="578" class="book-h5">Alpha Channels and Transparencies</h1><ul><p class="q3bg3"><b>There are 2 methods</b> to make transparencies in Quake 
III. <br><br>
One alpha method works with normal optimized jpgs and one with 24 bit TGAs. The one 
that works with jpgs needs either a 100% black background or a 100% white background 
in order to work(depending on scripting). The one that works with TGAs needs a 
proper 8 bit alpha channel saved in the tga. This involves for some older photoshop 
users a <a href="http://www.adobe.com/support/techdocs/327530.html">plug-in</a> thats available from Adobe. 
(Some older versions have a faulty tga exporter and do not include the alpha channel 
upon export).<br>
<br>
In order to decide what type of alpha you will need, just figure out the difference 
between how the two work. If you want something thats solid, but has the cookie 
cutout edges to it, you'll want to go the TGA route.. If you want a fuzzy flare 
or beams of dusty sunlight.. the jpg is the path to take.. If you're making a 
jump pad you will often combine both tga and jpg in order to achieve an overall 
layered effect.</p>
<h4 align="center">JPG Examples</h4>
<p class="q3bg1b"><small>a)<img src="/content/quake3/tutorials/alphas/blue_flare.jpg"> 
b)<img src="/content/quake3/tutorials/alphas/laserfx.jpg"> 
c)<img src="/content/quake3/tutorials/alphas/light-vert-trim-1.jpg"> 
d)<img src="/content/quake3/tutorials/alphas/light-vert-trim-2.jpg"> 
e)<img src="/content/quake3/tutorials/alphas/red-laser.jpg"><br><br>
a) A 128x128 black bg jpg image of a blue lense flare.<br>
b) A 64x256 black bg up/down scrolling modulating static field blend stage image.<br>
c) A 64x256 black bg up scrolling light/blend stage image.<br>
d) A 64x256 black bg up scrolling light/blend stage image.<br>
e) A 64x256 white bg up/down scrolling modulating energy field blend stage image.</small></p>
<p class="q3bg1">An example jpg script for a light fixture beam/flare sprite.. This is a simple square shaped black background jpg image with an air brushed type of flare effect on it. You can make anything you like and substitute in tcmod effects so that it grows and shrinks or rotates.. <a href="/book/view/798">See the</a> Q3MAP2 Shader manual for info about tcmod..<br><br>//NOTE - comments are preceeded by two forward slashes in Quake III shader files (*.shader) which can be edited by associating .shader with notepad or by using a shader GUI like Q3Ase.</p>
<h4>Example JPG Script</h4>
<pre>textures/foldername/shadername <span class="r">//Shader name</span>
{ <span class="r">//script opening tag</span>
surfaceparm nolightmap <span class="r">//Don't light it</span>
surfaceparm nomarks <span class="r">//Don't let bullets mark it</span>
surfaceparm trans <span class="r">//It's See through</span>
surfaceparm nonsolid <span class="r">//It's not solid</span>
cull disable <span class="r">//It's going to be seen from both sides</span>
deformVertexes autosprite <span class="r">//It's going to always face the player</span>
qer_trans .5 <span class="r">//In the editor it's semi transparent</span>
{ <span class="r">//script mid-opening tag</span>
clampmap textures/ecel/flare.tga 
<span class="r">//This clamps the pixels to the face for rotating</span>
blendFunc add <span class="r">//Adds the value of the sprite pixels</span>
} <span class="r">//script mid-closing tag</span>
} <span class="r">//script closing tag</span></pre>
<p class="q3bg1">An example of a side scrolling 24 bit TGA image of mist with 
an 8 bit alpha channel to define the mist edges. Removing the tcmod information 
will stop the mist from moving.. this could be people or cars or anything really 
moving along at a nice smooth pace..<br><br>
Get the TGA <a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/content/quake3/tutorials/alphas/mist.zip">here</a></p>
<h4>Example TGA Script</h4>
<pre>textures/leafland/mist <span class="r">//Shader name</span>
{
surfaceparm nomarks
surfaceparm nonsolid
surfaceparm trans
qer_trans 0.5
qer_nocarve <span class="r">//Exclude this from cutting during compile</span>
cull disable
 {
 map textures/leafland/mist.tga
 tcMod scale 1 4 <span class="r">//1 high and 4 wide</span>
 tcMod scroll 0 .07 <span class="r">//moving left slowly</span>
 blendFunc blend <span class="r">//um.. this ought to be different.. like,</span>
<span class="r">//GL_SRC_ALPHA GL_ONE_MINUS_SRC_ALPHA</span>
<span class="r">//also see shaderlabs shader manual for info on blending</span>
 rgbGen vertex <span class="r">//Lights itself</span>
 }
}</pre></ul><h1 id="564" name="564" class="book-h5">Basic Shaders - Part 1</h1><ul><!-- by old Q3Lab Tutorial -->
<h3>Basic Shaders - Part 1<br><span class="tinytext">Created by Alvar Jansson</span></h3>
<h4>Preface:</h4>
<p>This tutorial tries to resolve the meaning of "shader" and also create some simple ones ourselves. Unfortunately, shaders are a *very* complex subject, one that isn't easily explained in half a minute.<br><br>
You should download the Official <a href="http://www.heppler.com/shader/">Quake 3 Shader Manual</a>, or you will go nuts, when you don't understand something! You should also get the cool program <a href="http://www.jgsoft.com/">Editpad</a>, this is because q3radiant has a routine for editing shaders, based on the use of Editpad.</p>
<hr>
<h4>Basic Shader Concepts</h4>
<b>1: What is a shader?</b><br><br>
<p>A shader is a script, that tells the q3 engine, how to treat the surface. A shader may not only change the way a surface looks, but as well as the actual shape of it, (like water waves). The shader also affects how the surface behaves in the game (if it is non-solid, or a water surface).</p>
<b>2: How do I use shaders?</b><br><br>
<p>You have probably used shaders allready, you see, most of the "textures" in q3 radiant are actually shaders. You can tell the difference by looking at the thumbnail in the texture window, all shaders have a white border. It is not necessarily the texture that shows in the editor, that you will see in the game.</p>
<b>3: How do I make my own?</b><br><br>
<p>This is not as hard as you might think. First, you make a new shaderfile in the baseq3\scripts path, it should have the extension .shader, you may want to call it the same name as your level, like if you made some cool blood shaders for use in your splat.map, you could call your file splat.shader, for this tutorial, create tut.shader. Now, we have to make an entry in the file shaderlist.txt. This is to make q3radiant load our shaders, type tut in the end of the file. To see our shaders in the textures menu, we also have to make a new folder under the textures folder, call it the same as your shaderfile (baseq3\textures\tut\). If you now (re)open q3radiant, you will see a new entry in the textures menu called tut, for now, it is empty.</p>
<hr>
<h4>Make Your first Shader</h4>
<p>We are now set up to make our first shader! We will start out by adjusting the strength of a light emitting texture. (This a good place to point out the fact that neither the Surf flags nor the Content flags in the Surface inspector have ANY effect in quake 3, they are ONLY for quake2 editing! The surface inspector is only good for sizing/moving textures in q3 editing)</p>
<p>Let's get started! make a small room, make two lamp brushes and apply the base_light/baslt4_1_2k shader to the bottom face (and of course a non-light texture to the other faces). </p>
<center><img src="content/quake3/tutorials/shadertut1/editor1.jpg"></center>
<p>(As you see you can run q3 in a window, at the same time as q3radiant, I doubt this will work without a sturdy amount of ram (like 128 mb)) So, what if we want the light a little dimmer on one of the lamps? Well, then we have to make a shader of our own! Open the texture window (textures in use) and shift click on the light texture. If Editpad is correctly installed, it will now open, browsing down to the beginning of the shader. Now select the whole shader (as you probably have guessed, the shader consists of the declaration, and all the indented text, including the brackets). Copy the selected text, now open tut.shader (your empty shader script which we created earlier) and paste the text, we should now be here:</p>
<center><img src="content/quake3/tutorials/shadertut1/editor2.jpg"></center>
<p>First, to avoid conflicts, rename the shader. This is done by changing the line:</p>
<blockquote>textures/base_light/baslt4_1_2k<br>to<br>textures/tut/mylight_2k</blockquote>
<p>Now save the shader script choose textures|shaders|Load all (reload) from the q3radiant menu to reload the shaders. You should now see your shader if you load the texture set textures|tut. Apply your shader to one of the lamps, and bsp the map. The map should look the same. And now for the actual change! Enter the shader script and change the line:</p>
<blockquote>q3map_surfacelight 2000<br>to<br>q3map_surfacelight 500</blockquote>
<p>This will cut the ammount of light emitted by the surface in half. To reflect the change, rename your shader to mylight_500. Reload the shaders, and apply your new shader (q3radiant will think that your old shader is still there, I suppose this is a bug, and the old shader will disappear next time you restart q3radiant). Bsp the map, you will now clearly see that the left lamp, which we edited has a dimmer light.</p>
<center><img src="content/quake3/tutorials/shadertut1/editor3.jpg"></center>
<p>So, how do they get that fancy colored light then? This one is not as straight forward... If you study the .pk3 files, you can see that the light textures also have a blend texture. (This is a picture of the light emitting parts of the light, for example, the blend file for baslt4_1.tga is baslt4_1.blend.tga /*baslt4_1.tga baslt4_1.blend.tga */) In quake 3, the blend texture is drawn fullbright, using the formula: blendfunc GL_ONE GL_ONE This texture is also drawn last, so that it covers the other textures. When rendering the lightmap, q3map uses the average of all the pixels in the texture. For our light, this means gray, with a little brown, but if we want a blue light? Well, if we take a look at the shader textures/gothic_light/ironcrosslt2_2000 It contains the line</p>
<blockquote>q3map_lightimage textures/gothic_light/ironcrosslt2.blend.tga</blockquote>
<center><img src="content/quake3/tutorials/shadertut1/baslt4_1.jpg"></center>
<p>This makes q3map use the specified texture, instead of the default. This was made, because the designer wanted a more yellow light than the original texture would give. Now we want to make a cool blue light! Then we need a blue lightimage. I saved you the trouble. download the tga by pressing the picture.(right-click|save target as)</p>
<blockquote><b>DO THE FOLLOWING:</b><br><br>
- Place it in your baseq3\textures\tut folder.<br><br> 
- Copy the entire shader script nd paste it below, so that you have two identical shaders.<br><br>
- Rename the new one to mylight_500_blue<br><br> 
- Now inert the line q3map_lightimage 
textures/tut/baslt4_1.blueblend.tga just above the q3map_surfacelight line.<br><br> 
- Change the map textures/base_light/baslt4_1.blend.tga line in the final shader stage to map textures/tut/baslt4_1.blueblend.tga this will give the texure a blue look too.</blockquote>
<center><img src="content/quake3/tutorials/shadertut1/editor4.jpg"></center>
<p>Now that you have a some sort of clue of what shader editing is all about, we are going to do something that a lot of people have asked about, which is changing the look of fog.</p>
<blockquote><b>DO THE FOLLOWING:</b><br><br>
- Create a pit where the fog will reside, and make a big brush that covers the pit, remember that only one side of the brush should be visible, the fog may be bigger than the space that it should fill, the brushes inside it will show up correctly.<br><br>
- Shift-click the shader, (that one didn't work for me, if it just steps to the end of the sfx.shader, use the find function to search for fog_intel, or use the go to line function and type in 5020). Copy the fog_intel shader and paste it to your own tut.shader.<br><br> 
- Rename the shader to textures/tut/fog_yellow1 Reload the shaders in q3radiant and apply your yellow_fog1 to the fog brush. Bsp, and you will hopefully see the yellow smog.</blockquote>
<center><img src="content/quake3/tutorials/shadertut1/editor5.jpg"></center>
<p>But, we would like a green smog instead, so we have to modify the shader. The fog's appearance is controlled by a function called fogparms.</p>
<p>fogparms ( .75 .38 0 ) 800 means ( r g b ) distance-to-opaque The r, g and b values are the same as for lights, they range from 0 to 1 and thereby controls the color of the fog. Distance-to-opaque is the distance, in game units, from the player, to the point where the fog stops being transparent.</p>
<p>So lets make that fog <i>green</i>! Copy the shader and paste another copy of it below, name it fog_green1 Very well, a nice poisionus color is ( 0 0.7 0.2 ). (don't forget the spaces inside the paranteces, your fog will just be a gray grid without them).</p>
<center><img src="content/quake3/tutorials/shadertut1/editor6.jpg"></center>
<p>As you experiment with colors, a good thing to notice is that the shaders stand free of the bsp, if you want to experiment with different settings, well, except the q3map parameters (duh..), You don't have to re-bsp your map, just save the shader file, and restart your map (nom \map_restart won't work... use the \map command).</p>
<p>But, you have seen that flashy hellfog with moving textures on it, well, let's take a look at it!</p>
<p>Snatch the hellfog shader from the sfx.shader and paste it to our file, rename it tut/myhellfog make a cosy little hellfog pit so that we can study it a little closer. As you see, it emits light, because the surfacelight parameter. There is also two texture passes, they both apply the same texture, though one of them is flipped, this makes for a darker texture, as well as a little more complexity. The tga texture is white, so we are free to create a nice blue strange hellfog, by changing the color to ( 0 0.1 0.4 ). But... even if I re-bsp the emitted light is red! Now this is a little problem, that we could easily fix by making a 16*16 (or whatever) tga file filled with blue, and specify it as q3map_lightimage, but today I am lazy so I specify our good old baslt4_1.blueblend.tga which is blue by nature. So, add the line q3map_lightimage textures/tut/baslt4_1.blueblend.tga </p>
<center><img src="content/quake3/tutorials/shadertut1/ingame1.jpg"></center>
<p>Goodluck and I hope you have learned something new!</p></ul><h1 id="575" name="575" class="book-h5">Basic Shaders - Part 2</h1><ul><!-- by old Q3Lab Tutorial -->
<h3>Basic Shaders - Part 2<br><span class="tinytext">Created by Alvar Jansson</span></h3>
<h5>Preface:</h5><p>This time we're going to make a Space map. Before we begin I want to say that we will not use the already used space texture. This time we will make our own texture, shader ... and space! If you don't want make a space texture, just move down to step 3 in this tutorial.</p>
<hr>
<h4>Step 1:</h4>
<p>We first begin with making a new texture that we will use as a "space sky". I will use my Photoshop to make this texture, and i make it 256x256 pixels big. Now you can make it black only, or maby add some white spots that should looks like stars. My one looks like this:</p>
<center><img src="content/quake3/tutorials/shadertut2/sky.jpg" width="250"><br></center>
<p>As you can see i try to make it very dark. I do this because of the Quake3Arena engine will make all textures much more brighter. I will place this texture under the "baseq3/textures/tutorial" directory. Now, we have a texture. Should we load up the Q3radiant now? Nope, q3radiant checks for shaders that it uses for "compiling" the map. Therefor we need to make a shader for this new "sky".</p>
<hr>
<h4>Step 2:</h4>
<p>Why do we need shaders for this texture? Well, first of all we don't want the guns to do impacts on it. To do this, we need to use shaders. I will try to explain each line below.<p>
<div class="r"><pre>
textures/tutorial/sky
{
//*********************
//***Space map shader***
//*********************
surfaceparm nomarks
surfaceparm noimpact
{
map textures/tutorial/sky.tga 
}
}</pre></div>
<p>Like that, now. Note that the lines with // infront of it is comments, and will not have any effect of the shader. Copy the code above, and place in a new file called &quot;my.shader&quot; under baseq3/scripts.</p>
<p>Also add a new line &quot;my&quot; in the shaderlist.txt too.</p><h5>What does all this do?</h5>
<p>The first line &quot;textures/tutorial/sky&quot; is a quick note what texture you're using. The &quot;surfaceparm&quot; lines tells Quake3Arena what surface parameters that will be used. The first one changes so there's nomarks, and the other one makes the guns make noimpact. Now we just have to move on to the fun part, making the map itself =).</p>
<hr>
<h4>Step 3:</h4>
<p>Now we have a new texture, we have the shader for this new texture. What we need is a map. Let's load up Q3radiant.</p>
<p>This part is very easy. Simply make your map, and then place a new very big room around the map, with the new "space sky" texture on it.</p><h5>Note:</b> You have to place lights to get the level bright. But, if you have made a space map looking like Q3DM17, then the hole level should have the same light. Easy to do!</p> 
<p>Select one of the boxes on the map (not entities, the other map objects). Push "N" to bring up the Entity list. It should now say that you have selected the "worldspawn" entity. Enter a new Key called: "ambient", and give it the value of how much light the map should have. Then Enter a new key, and name it "_color", 
enter a value for it "&lt;R&gt; &lt;G&gt; &lt;B&gt;" Where &lt;R&gt;=Red, &lt;G&gt;=Green and &lt;B&gt;=Blue.</p> 
<p>This is the value of what color the light should have. You should add a value between 0 and 1. To get a white color, simply enter "1 1 1".</p>
<p>That's about it! Hope you get your new space-maps working as you want it!</p></ul><h1 id="546" name="546" class="book-h5">Falling leaves!</h1><ul><!-- by Jon Eriksson -->
<h3>Falling Leaves<br><span class="tinytext">by Jon Eriksson</span></h3>
<p>This is a nice effect that Quake 3 Arena allows you to have, Falling leaves.<p> 
<hr>
<p>First, you need a texture that looks something like this:<p> 
<center><img src="content/quake3/tutorials/shadertut4/picture1.jpg"></center>
<p>Now select the "leaves", and save it. I saved mine as mytextures/le.tga. Now, over to the Scripting part.</p>
<p>Open notepad and type this:</p>
<pre>textures/mytextres/leav
{
    qer_editorimage textures/mytextures/le.tga
    surfaceparm nonsolid
    surfaceparm trans
    cull none
    deformVertexes wave 30 sin 0 10 0 .2
    nopicmip
    {
        map textures/mytextures/le.tga
        tcMod scale 2 2
        blendFunc GL_ONE GL_ZERO
        alphaFunc GE128
        depthWrite
        rgbGen identity
        tcmod scroll 0 .25
    }
    {
        map $lightmap
        rgbGen identity
        blendFunc GL_DST_COLOR GL_ZERO
        depthFunc equal
    }
}</pre>
<p>Now save it under your baseq3/scripts directory. I saved mine as "my.shader", remember to call it *.shader. Load up Qeradiant, and apply the texture "mytextures/leav" to an object, and compile.</p></ul><h1 id="905" name="905" class="book-h3">Quake Toolkit</h1><ul><h3>Quake Toolkit</h3>
<p class="q3bg1b"><b>Author</b>: Eraser, r3tina &amp; Sithlord</p>
<p class="q3bg1b"><a href="http://www.fileplanet.com/dl.aspx?/planetquake/eoc/qtoolkit_157.exe">Download V1.57</a><br><a href="http://planetquake3.net/download.php?op=viewdownloaddetails&lid=1949">Download V1.56</a><br><a href="http://www.planetquake.com/eoc/qtoolkit">Official Site</a><br><br>
The Quake ToolKit utility is a simple, but very effective and multifunctional utility designed to give Q3A players, mappers and server administrators easy access to very useful tools. The ToolKit is basically a collection of small tools.<br><br>
Features:<br><br>
Tool for easy .arena file creating<br>
Shell for Q3Map and Q3Map2. Allows you to configure the compiler and compile maps through a graphical interface.<br>
Easy to use tool to create new bots<br>
Random Team Generator. Randomly Generates two teams from a list of players<br>
Wizard for easy compiling of RoQ video files<br>
Server Configuration. Basic server setup utility. Great for setting up lan games.<br>
Quake 3 player profile manager.<br>
Customizable Skins<br>
Easy access to all tools and Q3Radiant through taskbar trayicon<br>
Now with support for RTCW</p></ul><h1 id="900" name="900" class="book-h3">Quark - Level Editor</h1><ul><h3>Quark - Quake Army Knife</h3>
<p class="q3bg1b"><b>Author</b>: Armin Rigo</p>
<p class="q3bg1b"><a href="http://dynamic.gamespy.com/~quark/download.php3">Downloads Page</a><br><a href="http://www.planetquake.com/quark/infobase">Quark Information Base</a><br><a href="http://dynamic.gamespy.com/~quark">Official Site</a><br><br>
Quake Army Knife (QuArK) is a multi-purpose tool for the games using engines similar to or based on the Quake engine by id software. QuArK has the ability to directly edit maps, and to a limited extent, models, and can import, export and convert sounds, textures and various other game assets. It is also able to modify .pak and .pk3 files, as well as importing compiled BSP's in order to study the entities as well as add/change/delete entities from these files. No other game editing tool available has the ability to do all of these things. QuArK is completely different from the desktop publishing program Quark.</p>
<!--break-->
<p class="q3bg1b">One difference between QuArK and many other editors is a consistent emphasis on an easy-to-use and intuitive interface, with extensive flyover hints and other forms of in-program documentation. No need to remember 50 combinations of hot keys to produce a map. Initial configuration is simply a matter of filling in fields indicating where the games you're editing and their compiling tools are located, and when you start the map editor for the first time, you're presented with a basic map than you can run by hitting the 'GO'  button.<br><br>There has also been extensive development of tools such as 'duplicators' and 'shape builders' to help in creating complex patterns such as stairs, arches and other sophisticated architecture. If you know you need a row of pillars but can't make up your mind about what texture to use on them, you can use a duplicator, and changing the texture on the original will automatically update the copies.<br><br>A final difference is that QuArK is as far as we know the only GPL (Gnu Public License) game editor that is being actively developed, and is easy to extend to accomodate a wide range of different games. The GPL means, among other things, that the QuArK developers can't impose any restrictions at all on what you do with it, unlike editors supported by games companies, which can't be used for games produced by other companies. So if you are an aspiring game-developer you can adapt QuArK for your own project, without having to reveal editor source until you release the editing tools for your game (actually you don't even have to do that, though we would certainly hope that you would).</p></ul><h1 id="901" name="901" class="book-h3">Quest - Level Editor</h1><ul><h3>Quest - a 3d map editor </h3>
<p class="q3bg1b"><b>Author</b>: Alexander Malmberg</p>
<p class="q3bg1b"><a href="http://quest-ed.sourceforge.net/dl/index.html">Downloads Page</a><br><a href="http://quest-ed.sourceforge.net/doc/index.html">Quest Documentation</a><br><a href="http://quest-ed.sourceforge.net">Official Site</a><br><br>
Quest is an editor for the games Quake and Quake 2, by id software. It also supports other games using their engines, like Hexen 2. Quest was originally written by Chris Carollo and Trey Harrison back in '96, and after they stopped working on it, I (Alexander Malmberg) continued working on it. </p>
<!-- break --></ul><h1 id="892" name="892" class="book-h3">SC3K Map Editor (Terrain)</h1><ul><h3>SC3K Map Editor</h3>
<p class="q3bg1b"><b>Author</b>: Tenermerx Software and Terence Martin</p>
<p class="q3bg1b"><a href="http://www.tenermerx.com/sc3maped/download.html">New Version 1.2 Release</a><br><a href="http://www.tenermerx.com/sc3maped/fractal.zip">Fractal Plug-In for 1.0 or 1.1 only</a><br><a href="http://www.tenermerx.com/sc3maped">Official Site</a><br><br>
SC3K Map Editor is the fastest and most accurate terrain editor currently available for SimCity 3000. It gives you the finest possible control over modifications to your terrain.<!-- break -->
<br><br>
<b>With SC3K Map Editor you can: </b><br>
Edit in 3D - Use an interface very similar to that given by SimCity 3000 so that you can see exactly what your terrain will look like as you create it. <br><br>
Rearrange, resize and remove the editing windows - Make your layout suit your purposes and techniques. <br><br>
<b>SC3K Map Editor offers a wide range of tools for editing your personal terrain:</b><br>
The magic wand will select all contiguous points of the same height, so that it is easy to select flat plains. <br><br>
A gradient tool allows unlimited possibilities for mountains and valleys. <br><br>
A highlight tool to mark out patterns on the terrain before you make them. </p>
</ul><h1 id="917" name="917" class="book-h3">ScapeMaker Landscape Generator Viewer</h1><ul><h3>ScapeMaker</h3>
<p class="q3bg1b"><b>Authors</b>: Dirk Plate & Matthias Buchetics</p>
<p class="q3bg1b"><a href="http://www.heikoplate.de/dP-Software/zips/ScapeMakerSetup_1_3.exe">New Version 1.3 Release</a><br>
<p class="q3bg1b"><a href="http://www.heikoplate.de/dP-Software/zips/ScapeMakerSetup_1_2.exe">Version 1.2 Release</a><br>
<a href="http://stud4.tuwien.ac.at/~e0225149/ScapeMakerSetup_1_1.exe">Version 1.1 Release</a><br>
<a href="http://www.dplate.de/scapemaker">Official Site</a><br><br>
<b>ScapeMaker is a landscape-generation-tool</b> for Windows. Adjusting simple parameters, you define how your landscape looks and ScapeMaker creates a appropriate height-profile, surfacetextures etc. for you. Then you may freely move throughout your 3d-landscape and take screenshots.<br><br> <!-- break -->
<b>ScapeMaker consists of</b> an extensive Topology-Generator which generates heightmaps which can be used in other apps such as Quake III Arena via GTKRadiant. The Topology-Generator simulates different types of ground and erosion caused by water. By specifically adjusting the simulation parameters all kinds of landscapes can be generated.<br><br>
The <b>Texture-Generator</b> creates surface-maps that match the topology to simulate e.g. grass, rock or snow. The surface-texture is generated from free choose-able presets.<br><br>
To give more varied form to landscapes, it's </b>possible to place 3d-objects</b> (eg. trees) around <b>with the Object-Generator</b>. This functions according to the Topology-settings (gradient and height) and the chosen density, or manually.<br><br>
The <b>clouds-generator</b> creates random cumulus and cirrus clouds whose appearance can be defined with many settings. For a realistic movement of the clouds, they don't move statically over the sky but change their shapes constantly.<br><br>The <b>3D-mode</b> is the highlight of ScapeMaker. With a powerful 3D-Engine, the own landscape is presented. In the sea, the sky is reflected and clouds pass realistically over the landscape & you can roam through your world and take screenshots from any angle. Some special effects uses newer technologies (Vertex- and Pixelshader), check requirements, visit the <a href="http://www.matthias-buchetics.com/cgi-bin/ikonboard/ikonboard.cgi">forum</a>.</p>
</ul><h1 id="895" name="895" class="book-h3">Terragen</h1><ul><h3>Terragen</h3>
<p class="q3bg1b"><b>Author</b>: Planetside Software</p>
<p class="q3bg1b"><a href="http://www.planetside.co.uk/terragen/download.shtml">Download Page</a><br><a href="http://www.planetside.co.uk/terragen/guide/">Manual</a><br><a href="http://www.planetside.co.uk/terragen">Official Site</a><br><br>
Terragen is a scenery generator, created with the goal of generating photorealistic landscape images and animations. It is available for Windows and the Mac OS. At this stage in its development, Terragen is free for personal, noncommercial use.<br><br>Although Terragen is a continually evolving work-in-progress, it is already capable of near-photorealistic results for professional landscape visualisation, special effects, art and recreation. Terragen has been used in a variety of commercial applications including film, television and music videos, games and multimedia, books, magazines and print advertisements. For just a small selection of projects Terragen has been used in, please visit the commercial use page.<br><br>Despite the fact that Terragen can be used for professional landscape visualisation projects, it is accessible and easy to get started with. You could be rendering your first landscape image in as little as 15 minutes after installation.<br><br>You can view a gallery of images created by Terragen users here.<br><br>Terragen has a native user interface, using facilities provided by the operating system of the respective platform, as opposed to the custom user interfaces used by many similar applications. This means Terragen can follow the usage conventions of each platform as closely as possible, which ensures that it looks and feels just like the other applications you use and means there is no learning curve with respect to the basic operation of Terragen. Here are some screenshots of Terragen on different platforms. Click to see larger images in a new window.</p></ul><h1 id="902" name="902" class="book-h3">Tread - Level Editor</h1><ul><h3>Tread 3D </h3>
<p class="q3bg1b"><b>Author</b>: Alexander Malmberg &amp;  Joe Riedel + Nicholas Randal</p>
<p class="q3bg1b"><a href="http://www.planetquake.com/tread">Downloads Page</a><br><a href="http://www.planetquake.com/tread">Tread Documentation</a><br><a href="http://www.planetquake.com/tread">Official Site</a><br><br>
 to focus on the major lackings of our last version, and fix all the problems. Tread3D2 has been rewritten from scratch. Not a single line of 1.12 lives on in this version.<br><br>Speed A lot of hindrance came from 1.12's inherent lack of support for hardware acceleration. Part of this was remedied by visgroups, however, this often proved to be inadequate. Tread3D2's rendering engine has been completely reengineered to be more flexible, and way faster. On an AMD K6/2 450 with a diamond Viper V770 (or 550) Tread3D2 is wicked fast. You can pan a thousand brushes in the 3D view without a hiccup. An entire Quake2 level will move in real-time at about 2-5 f.p.s. That may not sounds impressive, but trust me, it is. Often a designer works with much smaller subsets of a level, but sometimes you need to see the whole thing, and Tread3D2 makes it possible. As far as the flat views go, don't even try to slow those suckers down, you just ain't gonna do it<br><br><!-- break -->Ease of Use with Power for the Pros Nick Randal's partnership in Tread3D2 has taken editing to the next level with user interface. If only he'd been able to work on 1.12 when it was still in its infancy. Nick's thrown new controls and functionality into the interface this time around. You'll sit back and say: "This is how it should have been the first time." All colors can be customized to your liking. If you hate the way a hot spot looks, then change it. Fully bindable action and mode keys are still here. A debug window sports the ability to show what's going on inside Tread3D2. This will be useful for plugin designers. Nick has also come up with a new editing paradigm: anchors. Points in your map that can be centered on by a simple click of the mouse. You can also expand and collapse views with the press of a key.<br><br>Eye Candy One of the biggest new eye candy features of Tread3D2 is a ZombieLight Plugin. Tread3D2 will precompute the lighting in your level in literally seconds and show you what it will look like in the game. Currently this supports has only been tested with Quake2 and HalfLife. It's fast! Tread3D2 can compile the lighting for base1 of Quake2 in under 20 seconds on an AMD K/6 450 machine. With this feature the full source code is also included. That conveniently leads me to the next topic.<br><br>Fully Extendable with Plugins Tread3D2 can be extended to do anything an end user wishes it to with a fully integrated plugin system. Users can code new texture loading, model importing features, just about anything their hearts desire. Full source code to five plugins is included to get you off on the right foot. Two of them are used in Tread3D2 as major features: the leaktrace and ZombieLight ( Lighting preview).<br><br>Currently Tread3D2 provides the following plugins source code:<br><br>
Leaktrace<br>
ZombieLight (Lighting preview)<br>
Quake2 Pak Reader (Reads the Quake2(tm) pak file format)<br>
Quake Map (Read and write maps of Quake type)<br>
Shapes Plugin for Arches, Cones and Cylinders</p>
</ul><h1 id="1034" name="1034" class="book-h1">Staff Resume's</h1><ul><h3> Website and Forum Staff Resume's</h3>
<ul>
<li><a href="/node/714">Andy</a></li>
<li><a href="/node/785">Entium</a></li>
<li><a href="/node/716">G.A.R.D.</a></li>
<li><a href="/node/782">Jherax</a></li>
<li><a href="/node/786">KaMiKrAe-Z</a></li>
<li><a href="/node/787">Knightmare</a></li>
<li><a href="/node/790">Muad'dib</a></li>
<li><a href="/node/788">Mazemaster</a></li>
<li><a href="/node/720">Method</a></li>
<li><a href="/node/789">Miniwood</a></li>
<li><a href="/node/791">Neur0</a></li>
<li><a href="/node/721">Oirfid</a></li>
<li><a href="/node/783">Olpainless</a></li>
<li><a href="/node/792">Peeves</a></li>
<li><a href="/node/723">Pepper</a></li>
<li><a href="/node/793">RaVenous</a></li>
<li><a href="/node/725">skinmaster</a></li>
<li><a href="/node/794">Taylor</a></li>
<li><a href="/node/784">Tycho</a></li>
<li><a href="/node/1036">Yesukai</a></li>
<li><a href="/node/795">Wolv</a></li>
</ul></ul><h1 id="921" name="921" class="book-h1">Half-Life</h1><ul><!-- by Gard 2004 -->
<CENTER>
<IMG SRC="http://www.gamedesign.net/content/half-life/hl1logo1.png">
<H2>Half-Life
<BR>
<SPAN CLASS="tinytext">An FPS game by <A HREF="http://www.valvesoftware.com">Valve Software</A></SPAN></H2>
</CENTER>
<p class="hlbg1">The Half-Life sections covers the tutorials, Entity descriptions, Frequently Asked Questions (FAQ) stored on the RUST web pages. Further contribution is greatly welcomed.<br><br>If you have any immediate questions check out the <a href="http://forums.gamedesign.net/viewforum.php?f=9">RUST Half-life Forums</a> for fast feedback on any Half-Life Questions, Chat, Gossip ... etc. What these guys don't know isn't worth knowing.</p>
<!--break-->
</ul><h1 id="34" name="34" class="book-h2">FAQ</h1><ul><!--
Submitted by Andy Nov 04
Updated  Feb 2005 - Validated at W3C, XHTML1.0 Transitional
-->
<h1>
Half-Life Frequently Asked Questions:
</h1>
<p>
If you have decided to get into Half-Life editing then you are going to need some basic info.<br />
</p><!--break-->
<p>
<span style="font-style: italic; font-weight: bold">Half-Life Level Design</span><br />
The game is about six years old (at the time of writing this..Feb 05) and there are more capable engines around to achieve a great 3D FPS adventure, so why bother with Half-life?<br />
That is a question you will have to answer, but I can assure you that with a little work, the results can be worth it.<br />
Half-Life first shipped with a copy of the level editor WorldCraft. This was enhanced over the years and the name changed to Hammer with the last release being a beta version 3.5 (which has never been finalised).<br />
Hammer and Qeradient are two popular level editors available. Both were equally supported by a community of dedicated designers, so the choice is up to you.<br />
</p>
<p>
Due to the age of the engine and the number of editors that support it, it would be pointless (difficult) to list every know issue that surrounds level design in Half-Life. What we will attemp to do is give a general overview of some of the options available and links to sites that will provide the answers.<br />
</p>
<p>
One of the best links for all HL related programs is:
</p>
<blockquote>
<a href="http://www.slackiller.com/hlprograms.htm">Slackiller.com</a> 
</blockquote>
<p>
Almost everything you need to design and create your own levels can be found there.
</p>
<p>
Once you have your editor of choice, follow the setup instructions. <br />
<span style="font-style: italic">&quot;The majority of problems encountered are directly related to incorrect editor setup.&quot;</span>
</p>
<p>
If you do have difficulties, then the best site for answers is:
</p>
<blockquote>
<a href="http://www.slackiller.com/tommy14/errors.htm">Tommy14</a> Error resource.
</blockquote>
<p>
Book mark this page...
</p>
<!--Unfinished--></ul><h1 id="36" name="36" class="book-h2">Updates</h1><ul>Latest Upgrades for Halflife</ul><h1 id="37" name="37" class="book-h3">Half-Life Version 1.1.1.0 Patch</h1><ul><h3>Half-Life Version 1.1.1.0 Patch</h3>
<blockquote>The latest Halflife updates can be found at <a href="http://www.planethalflife.com/half-life/files">Planet Halflife</a>.<br />
Alternately, a websearch will provide other sites that carry the patch. The following is a list of the latest fixes.</blockquote>
<h3>README</b> [6.12.02]</h3>
<h4>Changes/Additions: </h4>
<p><small>- Ricochet included in this release.<br>
- Added logging of the anti-cheat system catching and kicking detected cheats.<br>
- Added logging of "kick" commands.<br>
- Added logging of "banid" commands.<br>
- Changed error message if clients try to download missing resources to be more helpful.<br>
- Changed 'exec' command now only works on .cfg and .rc files.<br>
- Changed 'exec' command no longer allows ".." or "\\" or ":" in the filename.<br>
- Added new debug message for mod makers if a packet couldn't be parsed correctly. 
- Linux: hlds_run now does auto-restart by default (to disable: define "-norestart" on the command line) <br>
- Linux: hlds_run uses "exec" when you define the "-norestart" option.<br>
- Linux: Added -pingboost command line parameter. Currently supports three different methods ('-pingboost 1', '-pingboost 2', and 'pingboost 3'). These may not work well (or at all) on some OS environments.<br>
- Linux: Added "-debug" flag to hlds_run to automatically run gdb and pull out  useful info.</small></p>
<h4>New CVARS:</h4>
<p><small>- Added "serverversion", can be set to '1108' to view/re-record old demos.<br>
- Added "sv_logbans" to turn the logging of player bans on and off. Default is 0 (off).</small></p>
<h4>Bug Fixes:</h4>
<p><small>- incorrect WonID logging.<br>
-  sv_allowdownload being required to be set to 1 for clients to connect to secure servers<br>
-  'bad address type' fatal error on servers that attempt to run in secure mode but have no DNS resolution<br>
-  DropClient messages for Steam clients who were banned or have a duplicate Steam ID to properly show the SteamID of the client<br>
-  HLTV reporting wrong spectator numbers if connection to server was pending<br>
-  "multicast 1" not working if it was issued before HLTV connected to game server<br>
-  relay proxies reporting wrong spectator/slots numbers in multiplayer/LAN menu<br>
-  DMC powerup bug where the invisibility ring would make people glow red.<br>
-  rcon bug in HLTV.<br>
-  delay being reset to default value during changelevel.<br>
-  a problem with propagating HLTV banners.<br>
-  client freeze on exit.<br>
-  framerate problem on some ATI video cards.<br>
-  MaxPing filter not being saved correctly.<br>
-  sky box bug.<br>
-  TFC spy disguise menu bug.<br>
-  DMC view model animation bug.<br>
-  bug using "exec " on large files (e.g. banned.cfg).<br>
- Linux:  server using 64 MB more memory than it needed to. <br>
- Linux:  'undefined symbol: __strtouq_internal' on some Linux systems.<br>
- Linux:  segmentation fault on some Linux systems when attempting to run in secure mode.</small></p></ul><h1 id="929" name="929" class="book-h2">Half-Life 1 Mod List</h1><ul><h1>Modification by play type:</h1>
<p>Feel free to add a comment to suggest your favorite Half-Life modification to be included in these listings</p>
<!--break-->
</ul><h1 id="885" name="885" class="book-h3">Single Player Mod List</h1><ul><!--
Submitted by Andy Please DO NOT change this layout Suggestions are Welcome
Updated XHTML FEB 05 Andy
-->
<h1>Singleplayer Mods:</h1>
<p>
These Mods are Single Player, some might have a Multiplayer function but that is not the main feature of the Mod.</p>
<p>
This Section is being worked, if you want your favorite Mod added to the list put the discription and a link to the website in a comment, it will be added quikly.
</p>
<!--break-->
<p>&nbsp;</p>
<h1> ETC2</h1>
<p>Its made by the author of Dust I &amp; II; It looks great, and plays even better.<br />
<span style="font-weight: bold"><a href="http://home.att.net/~firebinder/hl/reviews1.htm">Review</a> | <a href="http://www.planethalflife.com/davej/">Visit Website</a> | &nbsp;<a href="http://www.fileplanet.com/dl/dl.asp?/planethalflife/davej/djetc2.exe">Download</a></span></p><br />
<p>&nbsp;</p>
<h1>Poke646</h1>
<p>Its not Half-Life. Everything is different, textures, weapons. etc. (apart from a few monsters) You HAVE to play thin one.<br />
<span style="font-weight: bold"><a href="http://tenfourmaps.telefragged.com/php/review.php?gameid=hl&amp;levid=poke646">Review</a> | <a href="http://www.poke646.com/">Visit Website</a> | <a href="ftp://ftp.ngi.it/Games/Half-Life/Mods/Poke646/poke646.exe">Download</a></span></p><br />
<p>&nbsp;</p>
<h1>USS Darkstar</h1>
<p>Why? Because it's a great map pack - something like System Shock2 (set aboard a space ship) great atmosphere and stuff :)<br />
<span style="font-weight: bold"><a href="http://tenfourmaps.telefragged.com/php/review.php?gameid=hl&amp;levid=ds">Review</a> | <a href="www.planethalflife.com/manke/">Visit Website</a> | <a href="http://www.roko.goe.net/ftp/spielkram/halflife/single/darkstar.zip">Download</a></span></p><br />
<p>&nbsp;</p>
<h1>Someplace Else</h1>
<p>How Xen SHOULD have been.. Very much like the Alien movies - scary.<br />
<span style="font-weight: bold"><a href="http://tenfourmaps.telefragged.com/php/review.php?gameid=hl&amp;levid=spe">Review</a> | <a href="http://www.compsoc.man.ac.uk/~afoster/parallax/someplace-else.html">Visit Website</a> | <a href="http://www.users.zetnet.co.uk/asylum/someplace-else.zip">Download</a></span></p><br />
<p>&nbsp;</p>
<h1>Smart Decoy</h1>
<p>It's a great map :P and its set on the bottom of the ocean.. sort of.<br />
<span style="font-weight: bold"><a href="http://www.mrbunwah.co.uk/reviews/hl_reviews/hl_review_08.html">Review</a> | <a href="http://tenfourmaps.telefragged.com/php/review.php?gameid=hl&amp;levid=smdec">More Reviews</a> | <a href="http://www.3ddownloads.com/?file_id=136228">Download</a></span></p><br />
<p>&nbsp;</p>
<h1>Deliverance</h1>
<p>Don't let the fact that you have to guide 2 scientists to safety from start to finish (while keeping them both alive at all costs) put you off this mod. Great combat and design all round.<br />
<span style="font-weight: bold"><a href="http://tenfourmaps.telefragged.com/php/review.php?gameid=hl&amp;levid=deliver">Review</a> | <a href="http://www.blackbagops.com/halflife/index.shtml">Visit Website</a> | <a href="http://www.blackbagops.com/files/deliverance.exe">Download</a></span></p><br />
<p>&nbsp;</p>
<h1>Mission Of Mercy</h1>
<p>You get to play with the aliens, against grunts - pity the aliens don't feature too much.. but its still a great mod.<br />
<span style="font-weight: bold"><a href="http://tenfourmaps.telefragged.com/php/review.php?gameid=hl&amp;levid=mom">Review</a> | <a href="http://www.planethalflife.com/3dconstruction/">Visit Website</a> | <a href="ftp://ftp.magres.net/pub/games/Half-Life/maps/msn_mercy/mom.zip">Download</a></span></p><br />
<p>&nbsp;</p>
<h1>Issues</h1>
<p>Kol's map is in it :) err.. it's a great mod! With lots of gameplay and lots of different maps to play through.<br />
<span style="font-weight: bold"><a href="http://tenfourmaps.telefragged.com/php/review.php?gameid=hl&amp;levid=Issues">Review</a> |<a href="http://users.bigpond.com/andy_howard/web/ghtml/8.html">More Reviews</a> | <a href="http://issues.command-center.org/">Visit Website</a> <br /> <a href="http://www.fileplanet.com/files/130000/138776.shtml">Download</a></span></p><br />
<p>&nbsp;</p>
<h1>They Hunger Trilogy</h1>
<p>ZOMBIES! Brrraaains! Need I say more? If you like horror than you'll love this.<br />
<span style="font-weight: bold"><a href="http://www.hangar16.com/Features/Reviews/manke.htm">Review</a> | <a href="http:// www.planethalflife.com/manke/">Visit Website</a> | <a href="http://www.fileplanet.com/index.asp?section=0&amp;submit.x=47&amp;submit.y=20&amp;file=60777">Download</a></span></p><br />
<p>&nbsp;</p>
<h1>Wanted!</h1>
<p>Great Big western style map pack - it's the only one I know of that takes you to the wild west - the novelty is great!<br />
<span style="font-weight: bold"><a href="http://www.hangar16.com/Features/Reviews/wantedhl_revu.htm">Review</a> | <a href=" http://www.maverickdev.com">Visit Website</a> | <a href="http://www.maverickdev.com/wantedhl/downloads.html">Download</a></span></p><br />
<p>&nbsp;</p>
<h1>Edge Of Darkness</h1>
<p>Thoroughly enjoyable map pack. The premise of thwarting g-man may be old, but it doesen't take anything away from the mod quality.<br />
<span style="font-weight: bold"><a href="http://www.videogamereview.com/PCGames/PRD_82359_3764crx.aspx#reviews">Review</a> | <a href="http://www.cyber-rat.com/main.html">Visit Website</a> | <a href="http://www.fileplanet.com/files/40000/45326.shtml">Download</a></span></p><br />
<p>&nbsp;</p>
<h1>Redemption:</h1>
<p>No I won't say it - ok I will, you get to play in a theme park, half-park, come on, that's reason enough to go and play it!<br />
<span style="font-weight: bold"><a href="http://www.maverickdev.com/redemption/redemreviews.shtml">Review</a> | <a href="http://www.maverickdev.com">Visit Website</a> | <a href="http://www.3ddownloads.com/?directory=/telefragged/maverickdev/">Download</a></span></p><br /> 
<p>&nbsp;</p>
<h1>Half-Life: Uplink</h1>
<p>The Map pack that got me (kol) half-hooked and mapping. Lets hope you enjoy it as much as I did the first time I played it.<br />
<span style="font-weight: bold"><a href="http://www.hangar16.com/Features/Reviews/uplink_revu.htm">Review</a> | <a href="http://www.3ddownloads.com/?file_id=136523">Visit Website</a> | <a href="http://www.fileplanet.com/files/0/7482.shtml">Download</a></span></p><br /> 
<p>&nbsp;</p>
<h1>Azure Sheep:</h1>
<p>Odd name, Big mod, Great Gameplay! Its very much like Blueshift, and it really is very good.<br />
<span style="font-weight: bold"><a href="http://halflife.multiplayer.it/azuresheep/reviews.asp">Review</a> | <a href="http://www.halflifeitalia.com/azuresheep/">Visit Website</a> | <a href="http://halflife.multiplayer.it/azuresheep/downloads.asp">Download</a></span></p><br /> 
<p>&nbsp;</p>
<h1>Minimicus</h1>
<p>Odd name, Small Mod 5 map HL Mod developed and produced by 1 person.. Hey, that is a feat in itself.<br />
<span style="font-weight: bold"><a href="http://www.users.bigpond.com/andy_howard/web/ghtml/5.html">Review</a> | <a href="http://members.cox.net/slayera/">Visit Website</a> | <a href="http://members.cox.net/slayera/">Download</a></span> <br /> <span style="font-weight: bold"><a href="http://www.snarkpit.com/maps.php?map=745">SnarkPit Review</a></span></p><br />
<p>&nbsp;</p>
<h1>Timefall</h1>
<p>Small Mod for HL developed and produced by 1 person.. This must be catching? Enjoyable gameplay.<br />
<span style="font-weight: bold"><a href="http://users.bigpond.com/andy_howard/web/ghtml/7.html">Review</a> | <a href="http://www.freewebs.com/tlaxmaps/">Visit Website</a> | <a href="http://www.freewebs.com/tlaxmaps/">Download</a></span> <br /> <span style="font-weight: bold"><a href="http://leveldesign.nu/modules.php?name=Recensioner&amp;rop=showcontent&amp;id=51">Leveldesign.nu Review</a></span></p>
<p>&nbsp;</p>
<h1>Our Thanks go to:</h1>
<p>
&nbsp;&nbsp;&nbsp;<span style="font-weight: bold"><a href="http://tenfourmaps.telefragged.com">TenFour Maps</a></span><br />
&nbsp;&nbsp;&nbsp;<span style="font-weight: bold"><a href="http://half-life.t-k.ru/">City 17.RU</a></span><br />
&nbsp;&nbsp;&nbsp;<span style="font-weight: bold"><a href="http://www.hangar16.com/">Hanger16</a></span>
<p>&nbsp;</p>
For having the resources to help us collect these entries</p><br />
<!--EOF@83--></ul><h1 id="884" name="884" class="book-h3">MultiPlayer Mod's</h1><ul><!--
Submitted by Andy DO NOT change the layout Suggestions welcome
XHTML Transitional FEB 05 - Andy
--> 
<h1>Multiplayer Mod's</h1>
<p>
To play these Mods on-line you may need the <a href="www.steampowered.com">Steam multiplayer system</a>:
</p>
<!--break--><br />
<p>&nbsp;</p>
<h1>Counter-Strike</h1>
<p>One of the most popular Mods ever. Fight as a terrorist, plant bombs, stop the hostage rescue or play as a counter-terrorist and rescue the hostage, protect the VIP and stop them planting that bomb!.</p>
<p><span style="font-weight: bold"><a href="http://www.cdmag.com/articles/031/069/halflife-co-r.html">Review</a> | <a href="http://www.counter-strike.net/">Visit Website</a> | <a href="http://www.planethalflife.com/cs/">Download</a></span></p><br />
<p>&nbsp;</p>
<h1>Team Fortress Classic</h1>
<p>The ever popular Quake mod has come to Half-Life!!<br />
Choose from 9 classes, each with there own ability's. Work together as a team to capture the enemy's flag. Getting Fragged isn't a problem with TFC, the player keeps respawning until round end.</p>
<p><span style="font-weight: bold"><a href="http://www.gamenationtv.com/reviews/fortress.shtml">Review</a> | <a href="http://tf.valve-erc.com/">Visit Website</a> | <a href="http://www.planethalflife.com/tfc/">Download</a></span></p><br />
<p>&nbsp;</p>
<h1>Day of Defeat</h1>
<p>World War II has come to Half-Life.<br />
Play as the Allies or the Axis, and pick from several classes to fight the enemy. One shot/one kill action all the way. </p>
<p><span style="font-weight: bold"><a href="http://www.the-laser.com/dayofdefeat.htm">Review</a> | <a href="http://www.dayofdefeat.com/">Visit Website</a> | <a href="http://www.dayofdefeat.com/downloads.html">Download</a></span></p><br />
<p>&nbsp;</p>
<h1>Natural Selection</h1>
<p>Fight as a Human under the lead of a commander against the Aliens, or evolve as an Alien into a deadly creature.</p>
<p><span style="font-weight: bold"><a href="http://www.gamefaqs.com/computer/doswin/review/34764.html">Review</a> | <a href="http://www.natural-selection.org/">Visit Website</a> | <a href="http://downloads.ugo.com/details.php/id/3407/">Download</a></span></p><br />
<p>&nbsp;</p>
<h1>The Specialists</h1>
<p>Use the special stunts and powerups to crush your enemy's in this adreline packed Deathmatch Mod.</p>
<p><span style="font-weight: bold"><a href="http://www.modnmod.com/mods/The_Specialists/reviews.php">Review</a> | <a href="http://www.specialistsmod.net/">Visit Website</a> | <a href="http://www.specialistsmod.net/download/">Download</a></span></p><br />
<p>&nbsp;</p>
<h1>Half-Life Rally</h1>
<p>Hop into a shiny new rally car and challenge your oppponents.<br />
Hl-rally features amazing cars and maps!!</p>
<p><span style="font-weight: bold"><a href="http://www.gamershell.com/news/12549.html">Review</a> | <a href="http://www.hlrally.net/">Visit Website</a> | <a href="http://www.hlrally.net/files.php">Download</a></span></p><br />
<p>&nbsp;</p>
<h1>The Trenches</h1>
<p>This Mod takes you back to the horror of the First World War.<br />
Play as the Allies or as the Axis.</p>
<p><span style="font-weight: bold"><a href="http://www.thetrenches.net/index.php?page=about">Review</a> | <a href="http://www.thetrenches.net/">Visit Website</a> | <a href="http://www.thetrenches.net/index.php?page=downloads">Download</a></span></p><br />
<p>&nbsp;</p>
<h1>Hostile Intent</h1>
<p>NATO forces are fighting against TANGO forces in different locations all over the world. This mod is for the &quot;thinking&quot; players.<br /> It is <span style="font-weight: bold">not</span> Counter-Strike. Visit the site for more amazing details. A Total Conversion Modification for Half-Life</p>
<p><span style="font-weight: bold"><a href="http://www.hostileintent.org/site/about/">Review</a> | <a href="http://www.hostileintent.org/">Visit Website</a> | <a href="http://www.hostileintent.org/site/downloads/">Download</a></span></p><br />
<!--EOF@46--></ul><h1 id="33" name="33" class="book-h2">Entity Properties</h1><ul><h1>Description of Half-Life Entities.</h1>
<p>
Jump straight to the <a href="../node/33#guide">Entity Guide</a>
<p>
All information sourced from: 
</p>
<p>
Half-Life game definition file (.fgd) version 3.0.0.1 for Worldcraft 3.3 and above, and Half-Life 1.0.0.9 and above updated by Chris Bokitch autolycus@valvesoftware.com<br />
http://www.valve-erc.com/ <br />
- <span style="color: #ff0000">apr 15 2003 - 3.1.0.0</span><br />
- updated with studio() references to enable model display in 3D view
</p>
<br />
<hr />
<br />
<h1>
Download: Half-Life FGD
</h1>
<p align="center">
Download: <a href="http://collective.valve-erc.com/data/docs/1050662008-07225900/files/halflife_fgd_02.zip"> Half-Life FGD 3.1.0.0 </a>
</p>
<br />
<hr />
<br />
<h1>
Special Entity Names
</h1>
<p>
As of Half-Life version 1.0.0.9, there are a few special names that can be given to entities, that will activate those entities in specific circumstances. They are: 
</p>
<blockquote>
game_playerdie
game_playerkill
game_playerjoin
game_playerspawn
game_playerleave 
</blockquote>
<p>
For example, an entity with a name (targetname) of game_playerdie will be triggered whenever a player dies (and will be triggered by that player).
</p>
<br />
<hr />
<br />
<h1>
<a name="guide">Entity guide</a>
</h1>
<!--EOF@45--></ul><h1 id="953" name="953" class="book-h3">Ammo</h1><ul><!-- 
Submitted by Andy Nov  2004 
Updated XHTML FEB 05 Andy
-->
<h1><a name="Top">Half-Life Ammo Entities</a></h1>
<!-- Start description -->
<ul>
<li><a href="../node/953#ammo_357">Ammo_357</a></li>
<li><a href="../node/953#ammo_9mmAR">Ammo_9mmAR</a></li>
<li><a href="../node/953#ammo_9mmbox">Ammo_9mmbox</a></li>
<li><a href="../node/953#ammo_9mmclip">Ammo_9mmclip</a></li>
<li><a href="../node/953#ammo_ARgrenades">Ammo_ARgrenades</a></li>
<li><a href="../node/953#ammo_buckshot">Ammo_buckshot</a></li>
<li><a href="../node/953#ammo_crossbow">Ammo_crossbow</a></li>
<li><a href="../node/953#ammo_gaussclip">Ammo_gaussclip</a></li>
<li><a href="../node/953#ammo_rpgclip">Ammo_rpgclip</a></li>
<li><a href="../node/953#weaponbox">Weaponbox</a></li>
</ul>
<hr />
<!--break-->
<h1><a name="ammo_357">ammo_357</a></h1>
<p>Spawns ammo for the .357 Magnum.</p>
<center><img src="../content/half-life/entimgs/amm/ammo_357.jpg" width="300" height="170" alt="357" title="357" /></center>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - Provide a name to use as a trigger for this entity. </p>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">Target</span> -  When the entity is activated or picked up, the Target named here is triggered.</p>
<p><span style="font-weight: bold">Delay before trigger</span> - Usually the time in seconds before an entity should trigger its target (after being triggered itself).</p>
<p><span style="font-weight: bold">KillTarget</span> - When If you pick the ammo up or use it's name (trigger it), the entity named here will be removed from the game completely.</p>
<h3>Flag Properties</h3>
<blockquote>
<span style="color: #ff0000">(2084) Not in Deathmatch</span> - If this flag is set on, the entity will not appear in deathmatch games.
</blockquote>
<h3>Related Entities</h3>
<p><a href="../node/962#weapon_357">Weapon_357</a></p>
<p align="center"><a href="../node/953#Top">Top</a></p>
<br />
<hr />
<!--Next entity-->	 
<h1 ><a name="ammo_9mmAR">ammo_9mmAR</a></h1>
<p>Spawns ammo for the 9mmAR.</p>
<center><img src="../content/half-life/entimgs/amm/ammo_9mmAR.jpg" width="300" height="170" alt="9mmAR" title="9mmAR" /></center>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - Provide a name to use as a trigger for this entity. </p>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">Target</span> -  When the entity is activated, the Target named here is triggered.</p>
<p><span style="font-weight: bold">Delay before trigger</span> - Usually the time in seconds before an entity should trigger its target (after being triggered itself).</p>
<p><span style="font-weight: bold">KillTarget</span> - When If you pick the ammo up or use it's name (trigger it), the entity named here will be removed from the game completely.</p>
<h3>Flag Properties</h3>
<blockquote>
<span style="color: #ff0000">(2084) Not in Deathmatch</span> - If this flag is set on, the entity will not appear in deathmatch games.
</blockquote>
<h3>Related Entities</h3>
<p><a href="../node/962#weapon9mmAR">Weapon_9mmAR</a></p>
<p align="center"><a href="../node/953#Top">Top</a></p>
<br />
<hr />
<!--Next entity-->	 
<h1 ><a name="ammo_9mmbox">ammo_9mmbox</a></h1>
<p>Spawns a large (200) amount of 9mm ammo in a box.</p>
<center><img src="../content/half-life/entimgs/amm/ammo_9mmbox.jpg" width="300" height="170" alt="9mm box" title="9mm Box" /></center>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - Provide a name to use as a trigger for this entity. </p>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">Target</span> -  When the entity is activated, the Target named here is triggered.</p>
<p><span style="font-weight: bold">Delay before trigger</span> - Usually the time in seconds before an entity should trigger its target (after being triggered itself).</p>
<p><span style="font-weight: bold">KillTarget</span> - When If you pick the ammo up or use it's name (trigger it), the entity named here will be removed from the game completely.</p>
<h3>Flag Properties</h3>
<blockquote>
<span style="color: #ff0000">(2084) Not in Deathmatch</span> - If this flag is set on, the entity will not appear in deathmatch games.<br />
</blockquote>
<h3>Related Entities</h3>
<p><a href="../node/962#weapon_9mmhandgun">Weapon_9mmhandgun</a></p>
<p align="center"><a href="../node/953#Top">Top</a></p>
<br />
<hr />
<!--Next entity-->	 
<h1 ><a name="ammo_9mmclip">ammo_9mmclip</a></h1>
<p>Spawns an ammo clip for the 9mm Pistol.</p>
<center><img src="../content/half-life/entimgs/amm/ammo_9mmclip.jpg" width="300" height="170" alt="9mm clip" title="9mm Clip" /></center>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - Provide a name to use as a trigger for this entity. </p>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">Target</span> -  When the entity is activated, the Target named here is triggered.</p>
<p><span style="font-weight: bold">Delay before trigger</span> - Usually the time in seconds before an entity should trigger its target (after being triggered itself).</p>
<p><span style="font-weight: bold">KillTarget</span> - When If you pick the ammo up or use it's name (trigger it), the entity named here will be removed from the game completely.</p>
<h3>Flag Properties</h3>
<blockquote>
<span style="color: #ff0000">(2084) Not in Deathmatch</span> - If this flag is set on, the entity will not appear in deathmatch games.<br />
</blockquote>
<h3>Related Entities</h3>
<p><a href="../node/962#weapon_9mmhandgun">Weapon_9mmhandgun</a></p>
<p align="center"><a href="../node/953#Top">Top</a></p> 
<br />
<hr />
<!--Next entity-->	 
<h1 >	<a name="ammo_ARgrenades">ammo_ARgrenades</a></h1>
<p>Spawns grenades for the Secondary fire mode of the 9mm AR.</p>
<center><img src="../content/half-life/entimgs/amm/ammo_ARgrenades.jpg" width="300" height="170" alt="AR Grenades" title="AR Grenades" /></center>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - Provide a name to use as a trigger for this entity. </p>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">Target</span> -  When the entity is activated, the Target named here is triggered.</p>
<p><span style="font-weight: bold">Delay before trigger</span> - Usually the time in seconds before an entity should trigger its target (after being triggered itself).</p>
<p><span style="font-weight: bold">KillTarget</span> - When If you pick the ammo up or use it's name (trigger it), the entity named here will be removed from the game completely.</p>
<h3>Flag Properties</h3>
<blockquote>
<span style="color: #ff0000">(2084) Not in Deathmatch</span> - If this flag is set on, the entity will not appear in deathmatch games.<br />
</blockquote>
<h3>Related Entities</h3>
<p><a href="../node/962#weapon_9mmAR">Weapon_9mmAR</a></p>
<p align="center"><a href="../node/953#Top">Top</a></p>
<br />
<hr />
<!--Next entity-->	 
<h1 ><a name="ammo_buckshot">ammo_buckshot</a></h1>
<p>Spawns ammo for the shotgun.</p>
<center><img src="../content/half-life/entimgs/amm/ammo_buckshot.jpg" width="300" height="170" alt="Buckshot" title="Buckshot" /></center>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - Provide a name to use as a trigger for this entity. </p>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">Target</span> -  When the entity is activated, the Target named here is triggered.</p>
<p><span style="font-weight: bold">Delay before trigger</span> - Usually the time in seconds before an entity should trigger its target (after being triggered itself).</p>
<p><span style="font-weight: bold">KillTarget</span> - When If you pick the ammo up or use it's name (trigger it), the entity named here will be removed from the game completely.</p>
<h3>Flag Properties</h3>
<blockquote>
<span style="color: #ff0000">(2084) Not in Deathmatch</span> - If this flag is set on, the entity will not appear in deathmatch games.<br />
</blockquote>
<h3>Related Entities</h3>
<p><a href="../node/962#weapon_shotgun">Weapon_shotgun</a></p>
<p align="center"><a href="../node/953#Top">Top</a></p>
<br />
<hr />
<!--Next entity-->	 
<h1 >	<a name="ammo_crossbow">ammo_crossbow</a></h1>
<p>Spawns ammo for the Crossbow.</p>
<center><img src="../content/half-life/entimgs/amm/ammo_crossbow.jpg" width="300" height="170" alt="Crossbow" title="Crossbow" /></center>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - Provide a name to use as a trigger for this entity. </p>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">Target</span> -  When the entity is activated, the Target named here is triggered.</p>
<p><span style="font-weight: bold">Delay before trigger</span> - Usually the time in seconds before an entity should trigger its target (after being triggered itself).</p>
<p><span style="font-weight: bold">KillTarget</span> - When If you pick the ammo up or use it's name (trigger it), the entity named here will be removed from the game completely.</p>
<h3>Flag Properties</h3>
<blockquote>
<span style="color: #ff0000">(2084) Not in Deathmatch</span> - If this flag is set on, the entity will not appear in deathmatch games.<br />
</blockquote>
<h3>Related Entities</h3>
<p><a href="../node/962#weapon_crossbow">Weapon_crossbow</a></p>
<p align="center"><a href="../node/953#Top">Top</a></p>
<br />
<hr />
<!--Next entity-->	 
<h1 ><a name="ammo_gaussclip">ammo_gaussclip</a></h1>
<p>Spawns ammo for the Gauss and Egon weapons.</p>
<center><img src="../content/half-life/entimgs/amm/ammo_gaussclip.jpg" width="300" height="170" alt="Gauss clip" title="Gauss clip" /></center>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - Provide a name to use as a trigger for this entity. </p>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">Target</span> -  When the entity is activated, the Target named here is triggered.</p>
<p><span style="font-weight: bold">Delay before trigger</span> - Usually the time in seconds before an entity should trigger its target (after being triggered itself).</p>
<p><span style="font-weight: bold">KillTarget</span> - When If you pick the ammo up or use it's name (trigger it), the entity named here will be removed from the game completely.</p>
<h3>Flag Properties</h3>
<blockquote>
<span style="color: #ff0000">(2084) Not in Deathmatch</span> - If this flag is set on, the entity will not appear in deathmatch games.<br />
</blockquote>
<h3>Related Entities</h3>
<p><a href="../node/962#weapon_egon">Weapon_egon</a><br />
<a href="../node/962#weapon_gauss">Weapon_gauss</a></p>
<p align="center"><a href="../node/953#Top">Top</a></p>
<br />
<hr />
<!--Next Entity--> 
<h1 ><a name="ammo_rpgclip">ammo_rpgclip</a></h1>
<p>Spawns ammo for the RPG (Rocket Propelled Grenade).</p>
<center><img src="../content/half-life/entimgs/amm/ammo_rpgclip.jpg" width="300" height="170" alt="RPG clip" title="RPG Clip" /></center>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - Provide a name to use as a trigger for this entity. </p>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">Target</span> -  When the entity is activated, the Target named here is triggered.</p>
<p><span style="font-weight: bold">Delay before trigger</span> - Usually the time in seconds before an entity should trigger its target (after being triggered itself).</p>
<p><span style="font-weight: bold">KillTarget</span> - When If you pick the ammo up or use it's name (trigger it), the entity named here will be removed from the game completely.</p>
<h3>Flag Properties</h3>
<blockquote>
<span style="color: #ff0000">(2084) Not in Deathmatch</span> - If this flag is set on, the entity will not appear in deathmatch games.
</blockquote>
<h3>Related Entities</h3>
<p><a href="../node/962#weapon_rpg">Weapon_rpg</a></p>
<p align="center"><a href="../node/953#Top">Top</a></p>
<br />
<hr />
<!--Next entity-->	 
<h1 ><a name="weaponbox">Weaponbox</a></h1>
<p>Creates a canister full of specific ammo.</p>
<center><img src="../content/half-life/entimgs/amm/weaponbox.jpg" width="300" height="170" alt="Weapon box" title="Weapon box" /></center>
<p><span style="font-weight: bold">Notes:</span></p>
<p> To stock the weaponbox, turn SmartEdit off, click Add, and type <span style="font-weight: bold">one</span> of the values below as the Key:</p>
<pre>
    357
    9mm
    ARgrenades
    bolts
    buckshot
    Hand Grenade
    rockets
    Satchel Charge
    Trip Mine
    uranium 
</pre>
<p>The amount of ammo you want to add to the box, goes in Value. I believe there are limits, but haven't tested it</p>
<p align="center"><a href="../node/953#Top">Top</a></p><hr />
<br />
<p align="center">Next Entity Guide <a href="../node/954"> Env Entities</a></p>
<br />
<!--EOF@215-->		</ul><h1 id="954" name="954" class="book-h3">Env</h1><ul><!-- 
Submitted by Andy 08 Nov 2004 
Updated validated XHTML FEB 05 - Andy
-->
<h1><a name="Top">Half-Life Env Entities</a></h1>
Originally written for <a href="http://www.twhl.co.za/">TWHL</a>
<!--Start Description-->
<ul><li><a href="../node/954#env_beam">Env_beam</a></li>
<li><a href="../node/954#env_beverage">Env_beverage</a></li>
<li><a href="../node/954#env_blood">Env_blood</a></li>
<li><a href="../node/954#env_bubbles">Env_bubbles</a></li>
<li><a href="../node/954#env_explosion">Env_explosion</a></li>
<li><a href="../node/954#env_fade">Env_fade</a></li>
<li><a href="../node/954#env_funnel">Env_funnel</a></li>
<li><a href="../node/954#env_global">Env_global</a></li>
<li><a href="../node/954#env_glow">Env_glow</a></li>
<li><a href="../node/954#env_laser">Env_laser</a></li>
<li><a href="../node/954#env_message">Env_message</a></li>
<li><a href="../node/954#env_render">Env_render</a></li>
<li><a href="../node/954#env_shake">Env_shake</a></li>
<li><a href="../node/954#env_shooter">Env_shooter</a></li>
<li><a href="../node/954#env_sound">Env_sound</a></li>
<li><a href="../node/954#env_spark">Env_spark</a></li>
<li><a href="../node/954#env_sprite">Env_sprite</a></li>
</ul><br />
<hr />
<!--Next Entity-->
<h1><a name="env_beam">env_beam</a></h1>
<p>Creates a laser or 'beam' effect between two points. </p>
<!--break-->
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - The Name of the entity.</p>
<p><span style="font-weight: bold">Start Entity</span> -  The name of the entity at which the beam will begin.</p>
<p><span style="font-weight: bold">Ending Entity</span> - The name of the entity at which the beam will end.</p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows: </p>
<pre>
0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade) </pre>
<p><span style="font-weight: bold">Brightness</span> - The value of the Render Mode, between 0 and 255. &quot;Solid&quot; mode simply needs a non-0 value to work, while in other modes translucency is controlled by this value.</p>
<p><span style="font-weight: bold"> Beam Color</span> - An RGB value that controls the colour of the object rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names. </p>
<p><span style="font-weight: bold">Radius</span> - Noise radius or the amount of &quot;radial static movement&quot; in the beam.</p>
<p><span style="font-weight: bold">Life</span> - Time for beam to stay on, in seconds. <span style="color: #ff0000">0</span> is infinite.</p> 
<p><span style="font-weight: bold">Width of beam </span> - Width of beam in (pixels*0.1). Range: 0 - 255.</p>
<p><span style="font-weight: bold">Amount of noise</span> - &quot;Static&quot; or beam movement. Range: 0 - 255.</p>
<p><span style="font-weight: bold">Sprite Name</span> - Name of sprite to use as beam's texture.</p>
<p><span style="font-weight: bold">Texture Scroll Rate</span> - How fast the texture should scroll along the beam. Range: 0 -1 00.</p>
<p><span style="font-weight: bold">Frames per 10 seconds</span> - Framerate for sprite texture animation. (<span style="color: #ff0000">0</span> is none)</p>
<p><span style="font-weight: bold">Starting Frame</span> - Sprite animation frame at which to begin.</p>
<p><span style="font-weight: bold">Strike again time</span> - How long to wait after the beam has turned itself off before it should start again, in 10ths of a second. Range: 0 - 255.</p>
<p><span style="font-weight: bold">Damage / second</span> - Damage done to monsters or the player when beam hits them.</p>
<h3>Flags</h3>
<blockquote>
<span style="color: #ff0000">(1) Start On</span> - Entity will start on (or active). This usually only has effect if the entity is given a name (most entities that aren't given names start on anyway), or has its Toggle flag set on.<br />
<span style="color: #ff0000">(2) Toggle</span> - With this flag set on, an entity can be turned on and off, either by the player, or by being triggered.<br />
<span style="color: #ff0000">(4) Random Strike</span> - The beam will strike at randon points along a defined path.<br />
<span style="color: #ff0000">(8) Ring</span> - Forms a ring between the two targets.<br />
<span style="color: #ff0000">(16) StartSparks</span> - Generates a Spark Sprite at the beam start.<br />
<span style="color: #ff0000">(32) EndSparks</span> - As above, but at the beam end.<br />
<span style="color: #ff0000">(64) Decal End</span> - Decals (bullet holes) may appear where the beam hits objects. Good for laser trace lines.<br />
<span style="color: #ff0000">(128) Shade Start</span> - Start of beam fades away.<br />
<span style="color: #ff0000">(256) Shade End</span> -  End of beam fades away.
</blockquote>
<h3>Related Entities</h3>None<br />
<p><span style="font-weight: bold">Notes:</span><br />
Info_target entities can be used as the beam start and end points.<br />
You can create moving beams by using func_trains as the targets, but they need an origin brush for the beam to aim at.</p>
<p align="center"><a href="../node/954#Top">Top</a></p><br />
<hr />
<!--Next Entity-->
<h1><a name="env_beverage">env_beverage</a></h1>
<p>Creates a Monstermaker for beverage cans .</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - The Name of the entity, so it can be triggered.</p>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">Capacity</span> - The number of times the entity can be triggered. Once this number has been spawned, further triggering will result in nothing (vending machines run out, you know).</p>
<p><span style="font-weight: bold">Beverage Type</span> - The texture of the cans. Values:</p>
<pre>
0 = Coca-Cola
1 = Sprite
2 = Diet Coke
3 = Orange
4 = Surge
5 = Moxie
6 = Random</pre>
<h3>Flags</h3>
<blockquote>
None
</blockquote>
<h3>Related Entities</h3>
None
<p><span style="font-weight: bold">Notes:</span><br />
Each can gives the player 1 health.</p>
<p align="center"><a href="../node/954#Top">Top</a></p><br />
<hr />
<!--Next Entity-->
<h1><a name="env_blood">env_blood</a></h1>
<p>Creates a Blood Spurting entity. </p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - The Name of the entity, so it can be triggered.</p>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">Blood color</span> - <span style="color: #ff0000">0</span> for red, <span style="color: #ff0000">1</span> for yellow.</p>
<p><span style="font-weight: bold">Amount of blood</span> - The higher the value, the more gruesome.</p>
<h3>Flags</h3>
<blockquote>
<span style="color: #ff0000">(1) Random Direction</span> - Blood sprays randomly, ignoring Yaw value.<br />
<span style="color: #ff0000">(2) Blood Stream</span> - Shoots a stream of particles instead of just a splash.<br />
<span style="color: #ff0000">(4) On Player</span> - The blood emanates from the player that triggered it.<br />
<span style="color: #ff0000">(8) Spray decals</span> - Creates blood decals on any surface in the direction the blood shoots.</blockquote>
<h3>Related Entities</h3>
None
<p><span style="font-weight: bold">Notes:</span><br />
Dripping water? What has that got to do with env_blood? Good Question, Jeff 'Yesukai' Pritchard wrote a tutorial on Collective called: <a href="http://collective.valve-erc.com/index.php?doc=1037633927-89598500" target="_blank"> Cool looking Dripping Water</a> showing how to turn the humble env_blood into a drip making machine.</p>
<p align="center"><a href="../node/954#Top">Top</a></p><br />
<hr />
<!--Next Entity-->
<h1><a name="env_bubbles">env_bubbles</a></h1>
<p>Creates a stream of rising bubbles. </p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - The Name of the entity, so it can be triggered.</p>
<p><span style="font-weight: bold">Bubble density</span> - The number of bubbles produced.</p>
<p><span style="font-weight: bold">Bubble frequency</span> - The higher the value, the shorter the delay between each set of bubbles being produced. </p>
<p><span style="font-weight: bold">Speed of Current</span> - The speed the bubbles move in the direction specified by the angle.</p>
<h3>Flags</h3>
<blockquote>
<span style="color: #ff0000">(1)Start Off</span> -  With this flag set, the entity will need to be triggered before becoming active.
</blockquote>
<h3>Related Entities</h3>
None
<p><span style="font-weight: bold">Notes:</span>
This is the only brush-based env entity.<br />
Horizontal streams of bubbles cannot be produced with this entity. Use a cycler entity instead, with the <code>pipe_bubbles.mdl</code> model.</p>
<p align="center"><a href="../node/954#Top">Top</a></p><br />
<hr />
<!-- Next Entity -->
<h1><a name="env_explosion">env_explosion</a></h1>
<p>This entity creates any combination of fireball, smoke, sparks, decals and sound, also known as an explosion. </p> 
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - The Name of the entity.</p>
<p><span style="font-weight: bold">Magnitude</span> - The size of the explosion, 100 is average.</p>
<h3>Flags</h3>
<blockquote>
<span style="color: #ff0000">(1) No Damage</span> - Explosion won't cause any damage.<br />
<span style="color: #ff0000">(2) Repeatable</span> - Entity can be triggered more than once.<br />
<span style="color: #ff0000">(4) No Fireball</span> - There is no orange fireball. It won't look much like an explosion.<br />
<span style="color: #ff0000">(8) No Smoke</span> - Creates a pollution-free explosion.<br />
<span style="color: #ff0000">(16) No Decals</span> - No scorch marks are left behind.<br />
<span style="color: #ff0000"> (32) No Sparks</span> - No sparks fly out.</blockquote>
<h3>Related Entities</h3>
None
<p><span style="font-weight: bold">Notes:</span>
It's possible to create a similar effect with a combination of other entities, but it wouldn't be much fun, so this quick and easy one is here instead!</p>
<p align="center"><a href="../node/954#Top">Top</a></p><br />
<hr />
<!-- Next Entity -->
<h1><a name="env_fade">env_fade</a></h1>
<p>Creates a screen fade effect. </p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - The Name of the entity.</p>
<p><span style="font-weight: bold">Duration</span> - Duration of effect in seconds.</p>
<p><span style="font-weight: bold">Hold Fade</span> - Time to hold fade, in seconds.</p>
<p><span style="font-weight: bold">Fade Alpha</span> - The value of the Render Mode, between 0 and 255. &quot;Solid&quot; mode simply needs a non zero value to work, while in other modes translucency is controlled by this value.</p>
<p><span style="font-weight: bold">Fade Color</span> - An RGB value that controls the colour of the object rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names. </p>
<h3>Flags</h3>
<blockquote>
<span style="color: #ff0000">(1) Fade From</span> - Normal fade is from the &quot;Normal Colour&quot; of the screen to the &quot;Fade Colour&quot;. If you check this flag the process is reversed.<br />
<span style="color: #ff0000">(2) Modulate</span> - Attenuates the &quot;Screen Colours&quot; in RBG with the &quot;Fade Colours&quot;.</blockquote>
<h3>Related Entities</h3>
None
<p><span style="font-weight: bold">Notes:</span><br />
This is normally used when switching from 'Player' to 'Camera' View to avoid jerky cut scene starts.<br />
Also used in conjunction with 'Special Game' enties to finish levels when the player dies.</p>
<p align="center"><a href="../node/954#Top">Top</a></p><br />
<hr />
<!-- Next Entity -->
<h1><a name="env_funnel">env_funnel</a></h1>
<p>Produces a funnel of little sprites, as seen in the Half-Life disaster sequence. </p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - The Name of the entity for triggering.</p>
<h3>Flags</h3>
<blockquote>
<span style="color: #ff0000">Reverse</span> - Use this to reverse the effect.</blockquote>
<h3>Related Entities</h3>
None
<p><span style="font-weight: bold">Notes:</span><br />
None.</p>
<p align="center"><a href="../node/954#Top">Top</a></p><br />
<hr />
<!-- Next Entity -->
<h1><a name="env_global">env_global</a></h1>
<p>This entity stores 'global' variables across levels, so you can set a state in one level, and retrieve it in another. </p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> -  Trigger the env_global to set its Initial State. You can alternatively set the Set Initial State flag on to do this automatically when the level loads.</p>
<p><span style="font-weight: bold">Global State to Set</span> - The name of the global variable you want to set. This name must be the Global State to Read value of entities such as the multisource, that read the global state.</p>
<p><span style="font-weight: bold">Trigger Mode</span> - Values:</p>
<pre>
0 = Off
1 = On
2 = Dead
3 = Toggle</pre>
<p>This is the state that the global variable is set to when the env_global is triggered. If it is set to Toggle, the state will be toggled between on and off whenever the env_global is triggered, starting on the Initial State value.</p>
<p><span style="font-weight: bold">Initial State</span> - This is the state the global variable is given when the level loads, if the Set Initial State flag is enabled. Also, it is the first state given to the variable if Trigger Mode is toggle. Values are:</p>
<blockquote>
0 =  Off<br />
1 = On<br />
2 = Dead</blockquote>
<h3>Flags</h3>
<blockquote><span style="color: #ff0000">Set Initial State</span> - If enabled, the global variable is set to its Inital State when the level loads, rather than when the entity is triggered.</blockquote>
<h3>Related Entities</h3>
Almost every Entity that requires a Global.
<p><span style="font-weight: bold">Notes:</span><br />
None.</p>
<p align="center"><a href="../node/954#Top">Top</a></p><br />
<hr />
<!--Next Entity -->
<h1><a name="env_glow">env_glow</a></h1>
<p>Based on the env_sprite, this entity was specifically designed to create light halo effects.  </p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - This entity cannot be toggled on and off, although the env_sprite can.</p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows: </p>
<pre>
0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade)</pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>
0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive </pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. <br />
'Solid' mode simply needs a non zero value to work, while in other modes translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">path/filename.spr of sprite</span> - The sprite to be used by the entity. The default is <code>sprites/flare1.spr</code>, but you can see them all by browsing the &quot;sprites&quot; folder in the &quot;pak0.pak&quot; file.</p>
<p><span style="font-weight: bold">Scale</span> - The scale that the sprite should be drawn at.</p>
<h3>Flags</h3>
<blockquote>
None
</blockquote>
<h3>Related Entities</h3>
<a href="../node/954#env_sprite">Env_sprite</a>
<p><span style="font-weight: bold">Notes:</span><br />
Normally used to produce a Halo effect around lights, to give it more ambience. The ability to match the colour of the light with the colour of the Glow, makes it more realistic. Just be careful of the size...</p>
<p align="center"><a href="../node/954#Top">Top</a></p><br />
<hr />
<!-- Next Entity -->
<h1><a name="env_laser">env_laser</a></h1>
<p>Creates a damaging beam. Based on the env_beam, so everything it does can be done by an env_beam.  </p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - If given a name, the beam will start off, unless the Start On flag is set.</p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows: </p>
<pre>
0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade)</pre>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">Target of laser</span> - The beam will be emitted from the entity and will end at this target.</p>
<p><span style="font-weight: bold">Brightness</span> - The higher this number, the less transparent the beam. </p>
<p><span style="font-weight: bold">Beam Color</span> - An RGB value that controls the colour of the object rendering. You can pick the colour from the Smart button.</p>
<p><span style="font-weight: bold">Width of beam</span> - The beam width. It will be rendered in-game as the number multiplied by 0.1 to produce the width in pixels. Range: 0 - 255.</p>
<p><span style="font-weight: bold">Amount of noise</span> - The higher this value, the more the beam jumps around. <span style="color: #ff0000">0</span> is stationary. Range: 0 - 255.</p>
<p><span style="font-weight: bold">Sprite Name</span> - The name of the sprite used as a texture. Default is <code>sprites/laserbeam.spr</code>.</p>
<p><span style="font-weight: bold">End Sprite</span> - This sprite is placed where the laser beam ends.</p>
<p><span style="font-weight: bold">Texture Scroll Rate</span> - The speed at which the texture sprite scrolls across the beam. Range: 0 - 100.</p>
<p><span style="font-weight: bold">Starting Frame</span> - Set the frame on which to begin animating. Allows you to select different-looking beams from a multi-frame (animated) sprite.</p>
<p><span style="font-weight: bold">Damage / second</span> - Specify the amount of damage to be done per second by the beam.</p>
<h3>Flags</h3>
<blockquote>
<span style="color: #ff0000">(1) Start On</span> - Entity will start on (or active). This usually only has effect if the entity is given a name (most entities that aren't given names start on anyway), or has its Toggle flag set on.<br />
<span style="color: #ff0000">(16) Start Sparks</span> - Makes sparks shoot out of the env_laser's point.<br />
<span style="color: #ff0000">(32) End Sparks</span> - Sparks are emitted from the target (end) point.<br />
<span style="color: #ff0000">(64) Decal End</span> - Creates scorch marks at the end of the beam.
</blockquote>
<h3>Related Entities</h3>
<a href="../node/954#env_beam">Env_beam</a>
<p><span style="font-weight: bold">Notes:</span><br />
env_laser differs from env_beam in that instead of the beam being created between two points, the env_laser entity acts as the start point, with the beam extending to a target.<br />
The simplest target to use is the info_node entity, but anything with a name can be used, including brush-based entities (such as func_wall).<br />
In this case, the brush needs to be grouped with an origin brush that defines the targetted point. An origin brush is any brush with the texture called &quot;origin&quot; on all faces.<br />
If you have multiple entities with the same name as the laser target, the beam will jump from point to point randomly, originating always from the  env_laser's location.</p>
<p align="center"><a href="../node/954#Top">Top</a></p><br />
<hr />
<!-- by Next Entity -->
<h1><a name="env_message">env_message</a></h1>
<p>This entity allows you to display text messages with  sound for the player. </p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - Give the entity a name so that it can be triggered. </p>
<p><span style="font-weight: bold">Target</span> - When an entity is activated, it triggers the entity with the name specified by Target.</p>
<p><span style="font-weight: bold">Message Name</span> - The text of the message (see note below)</p>
<p><span style="font-weight: bold">path/filename.wav of WAV</span> - This will be the path to a WAV file from the sounds folder</p>
<p><span style="font-weight: bold">Volume 0 - 10</span> - Loud or not.</p>
<p><span style="font-weight: bold">Sound Radius</span>- Values:</p>
<pre>
0 = Small Radius
1 = Medium Radius
2 = Large Radius
3 = Play Everywhere</pre>
<h3>Flags</h3>
<blockquote>
<span style="color: #ff0000">(1) Play Once</span> - The text will only be triggered once.<br />
<span style="color: #ff0000">(2) All Clients</span> - Everyone will see the message</blockquote>
<h3>Related Entities</h3>None
<p><span style="font-weight: bold">Notes:</span><br />
This entity only allows the use of predefined text messages. These are found in the &quot;titles.txt&quot; file in the root of &quot;pak0.pak&quot;, in your <code>Half-Life\valve\</code> folder. Browse the PAK with a PAK viewer (like PakExplorer), and open the &quot;titles.txt&quot; file. The format is:</p>
<code>
NAME<br />
{<br />
Message<br />
}
</code><br /><br />
<p>This entity is only really useful for mods, where a custom &quot;titles.txt&quot; file is distributed, either in the PAK, or in the mod's root folder. To see how to construct your own file, read through Valve's comments in their one.</p>
<p align="center"><a href="../node/954#Top">Top</a></p><br />
<hr />
<!--Next Entity -->
<h1><a name="env_render">env_render</a></h1>
<p>This entity allows you to change the rendering properties of most of the visible entities in the game (monsters, func_walls etc.), while the map is running. The four render properties of the env_render will be copied to its target. </p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - Entity must be triggered to activate. </p>
<p><span style="font-weight: bold">Target</span> - The name of the entity whose properties are to be changed. </p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows: </p>
<pre>
0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade)
</pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>
0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive
</pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. <br />
'Solid' mode simply needs a non zero value to work, while in other modes translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<h3>Flags</h3>
<blockquote>
<span style="color: #ff0000">(1) No Renderfx</span> - Render FX will not be copied.<br />
<span style="color: #ff0000">(2) No Renderamt</span> - Render Amount will not be copied.<br />
<span style="color: #ff0000">(4) No Rendermode</span> - Render Mode will not be copied.<br />
<span style="color: #ff0000">(8) No Rendercolor</span> - Render Color will not be copied.</blockquote>
<h3>Related Entities</h3>
None
<p><span style="font-weight: bold">Notes:</span><br />
Use this entity to fake situations that would be impossible for the game engine, such as apparently binding multiple entities together (e.g. a moving doorhandle on a rotating door). With a bit of careful setup, it is possible to let the the doorhandle move first, then become invisible, then let the door move (with a static doorhandle attached).</p>
<p align="center"><a href="../node/954#Top">Top</a></p><br />
<hr />
<!--Next Entity -->
<h1><a name="env_shake">env_shake</a></h1>
<p>This entity produces a shake effect that is useful for big explosions, large guns and the like. </p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - Give the entity a name so that it can be triggered. </p>
<p><span style="font-weight: bold">Amplitude 0-16</span> - The power of the shake.</p>
<p><span style="font-weight: bold">Effect Radius</span> - The radius around the entity in which the effect is &quot;felt&quot;.</p>
<p><span style="font-weight: bold">Duration</span> - Time the effect lasts in seconds.</p>
<p><span style="font-weight: bold">0.1 = jerk, 255.0 = rumble</span> - The frequency of the vibration. The higher the number, the lower the frequency.</p>
<h3>Flags</h3>
<blockquote>
<span style="color: #ff0000">(1)  GlobalShake</span> - Shake occurs everywhere.
</blockquote>
<h3>Related Entities</h3>
None
<p><span style="font-weight: bold">Notes:</span><br />
There used to be two other flags, In Air and Disrupt Control, that sound interesting, but were obviously not implemented.</p>
<p align="center"><a href="../node/954#Top">Top</a></p><br />
<hr />
<!-- Next Entity -->
<h1><a name="env_shooter">env_shooter</a></h1>
<p>The env_shooter shoots out models or sprites or Gibs.</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - Provide a name so that the entity can be triggered. </p>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">Number of Gibs</span> - The number of gibs that will be spawned on activation.</p>
<p><span style="font-weight: bold">Delay between shots</span> - The time in seconds between each gib being shotout. <span style="color: #ff0000">0</span> means they are all expelled at once.</p>
<p><span style="font-weight: bold">Gib Velocity</span> - The speed that gibs are shot out.</p>
<p><span style="font-weight: bold">Course Variance</span> - How much each gib's direction will vary from the normal.</p>
<p><span style="font-weight: bold">Gib Life</span> - Time in seconds that gibs are visible.</p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows: </p>
<pre>
0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade)
</pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>
0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive
</pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. <br />
'Solid' mode simply needs a non zero value to work, while in other modes translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">Model or Sprite name</span> - The path and name of the model or sprite to be shot. e.g. <code>models/model.mdl</code> or <code>sprites/sprite.mdl</code>.</p>
<p><span style="font-weight: bold">Material Sound</span> - The sound that is produced when gibs hit the ground. Values:</p>
<pre>
-1 = None
0 = Glass
1 = Wood
2 = Metal
3 = Flesh
4 = Concrete
</pre>
<p><span style="font-weight: bold">Gib Sprite Scale</span> - Applies to sprites only. Sets their scale.</p>
<p><span style="font-weight: bold">Gib Skin</span> - Applies to models only. Sets the skin if more than one is available.</p>
<h3>Flags</h3>
<blockquote>
<span style="color: #ff0000">(1) Repeatable</span> - Allows the entity to be triggered more than once.
</blockquote>
<h3>Related Entities</h3>None
<p><span style="font-weight: bold">Notes:</span><br />
You will need a model viewer such as HLMV to browse the models that are available. To see sprites, use the model viewer to extract the .spr files, then open them with a sprite viewer.<br />
A full Gib list is available at <a href="http://collective.valve-erc.com/index.php?doc=1083484325-81541000" target="_blank">Collective</a>.<br />
If you do decide for some reason to shoot heaps of Barneys all over the joint, just remember that the models center will not have been initialised. Which means they will sink into the floor up to their waste.</p>
<p align="center"><a href="../node/954#Top">Top</a></p><br />
<hr />
<!-- Next Entity -->
<h1><a name="env_sound">env_sound</a></h1>
<p>This entity controls how the ambient sounds are processed. Use it to enhance the atmosphere of a particular area.</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Radius</span> - When the player passes through an part of this area around the entity, the sound style is triggered on.</p>
<p><span style="font-weight: bold">Room Type</span> - The sound setting to use. Types are:</p>
<pre>
0 = Normal (off)
1 = Generic
2 = Metal Small
3 = Metal Medium
4 = Metal Large
5 = Tunnel Small
6 = Tunnel Medium
7 = Tunnel Large
8 = Chamber Small
9 = Chamber Medium
10 = Chamber Large
11 = Bright Small
12 = Bright Medium
13 = Bright Large
14 = Water 1
15 = Water 2
16 = Water 3
17 = Concrete Small
18 = Concrete Medium
19 = Concrete Large
20 = Big 1
21 = Big 2
22 = Big 3
23 = Cavern Small
24 = Cavern Medium
25 = Cavern Large
26 = Weirdo 1
27 = Weirdo 2
28 = Weirdo 3 
</pre>
<h3>Flags</h3>
<blockquote>None</blockquote>
<h3>Related Entities</h3>None
<p><span style="font-weight: bold">Notes:</span><br />
Once the player has had a particular sound style applied, it stays with the player until it is changed by another env_sound. The setting can be returned to normal by forcing the player to pass through an env_sound with a Room Type of 0 (Normal).<br />
Typically these entities are placed above doorways and set the sound for the room. As the player passes into the room, the &quot;Room Type&quot; is initiated, it effects footsteps, and anything else that makes a sound in that room. Another env_sound at the exit of the same type and setting will cancel the effect.</p>
<p align="center"><a href="../node/954#Top">Top</a></p><br />
<hr />
<!-- Next Entity  -->
<h1><a name="env_spark">env_spark</a></h1>
<p>Produces an electrical spark effect.</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - When given a name, and with the Toggle flag set on, you can turn the entity on and off.</p>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">Max Delay</span> - Maximum delay between sparks.</p>
<h3>Flags</h3>
<blockquote><span style="color: #ff0000">(32) Toggle</span> - With this flag set on, an entity can be turned on and off, either by the player, or by being triggered.<br />
<span style="color: #ff0000">(64)Start On</span> - Entity will start on (or active). This usually only has effect if the entity is given a name (most entities that aren't given names start on anyway), or has its Toggle flag set on.</blockquote>
<h3>Related Entities</h3>None
<p><span style="font-weight: bold">Notes:</span><br />None</p>
<p align="center"><a href="../node/954#Top">Top</a></p><br />
<hr />
<!-- by Next Entity -->
<h1><a name="env_sprite">env_sprite</a></h1>
<p>Places a sprite (small 2D image) in your map. </p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - Giving the env_sprite a name will allow it to be triggered on and off.</p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows: </p>
<pre>
0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade)</pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>
0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive
</pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. <br />
'Solid' mode simply needs a non zero value to work, while in other modes translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">Framerate</span> - For animated sprites, controls the framerate.</p>
<p><span style="font-weight: bold">Sprite Name</span> - The path and name of the sprite as found in the PAK (default is <code>sprites/glow01.spr</code>).</p>
<p><span style="font-weight: bold">Scale</span> - Sets the scale. Default is 1:1. If you leave this setting blank, the sprite will be set at it's optimum initial scale. Sometimes this is NOT 1:1. Entering a value of <span style="color: #ff0000">1</span> here may increase the size of a standard sprite.</p>
<h3>Flags</h3>
<blockquote>
<span style="color: #ff0000">(1) Start On</span> - Entity will start on (or active). This usually only has effect if the entity is given a name (most entities that aren't given names start on anyway), or has its Toggle flag set on.<br />
<span style="color: #ff0000">(2) Play Once</span> - With animated sprites, makes the sprite play through its frames only once before it needs to be re-triggered to work.</blockquote>
<h3>Related Entities</h3>
<a href="../node/954#env_glow">Env_glow</a>
<p><span style="font-weight: bold">Notes:</span><br />
To see all the sprites you can use, browse through the &quot;pak0.pak&quot; file found in your <code>Half-Life\valve\</code> folder with a PAK viewer (such as HLMV). Extract the .spr files and open them with SprView.</p>
<p align="center"><a href="../node/954#Top">Top</a></p>
<br />
<p align="center">Next Entity Guide <a href="../node/955">Func Entities</a></p>
<br />
<hr />
		<!--EOF@605--></ul><h1 id="955" name="955" class="book-h3">Func</h1><ul><!--
Submitted by Andy 09 Nov 2004 
Updated FEB 05 as Validated XHTML Transitional
-->
<h1><a name="Top">Half-Life Func Entities</a></h1>
<!--Start Description-->
<ul>
<li><a href="../node/955#func_breakable">Func_breakable</a></li>
<li><a href="../node/955#func_button">Func_button</a></li>
<li><a href="../node/955#func_conveyor">Func_conveyor</a></li>		
<li><a href="../node/955#func_door">Func_door</a></li>			
<li><a href="../node/955#func_door_rotating">Func_door_rotating</a></li>				
<li><a href="../node/955#func_friction">Func_friction</a></li>			
<li><a href="../node/955#func_guntarget">Func_guntarget</a></li>		
<li><a href="../node/955#func_healthcharge">Func_healthcharge</a></li>		
<li><a href="../node/955#func_illusionary">Func_illusionary</a></li>		
<li><a href="../node/955#func_ladder">Func_ladder</a></li>		
<li><a href="../node/955#func_monsterclip">Func_monsterclip</a></li>		
<li><a href="../node/955#func_mortarfield">Func_mortarfield</a></li>		
<li><a href="../node/955#func_pendulum">Func_pendulum</a></li>		
<li><a href="../node/955#func_plat">Func_plat</a></li>		
<li><a href="../node/955#func_platrot">Func_platrot</a></li>		
<li><a href="../node/955#func_pushable">Func_pushable</a></li>		
<li><a href="../node/955#func_recharge">Func_recharge</a></li>		
<li><a href="../node/955#func_rotating">Func_rotating</a></li>		
<li><a href="../node/955#func_rot_button">Func_rot_button</a></li>		
<li><a href="../node/955#func_tank">Func_tank</a></li>		
<li><a href="../node/955#func_tankcontrols">Func_tankcontrols</a></li>		
<li><a href="../node/955#func_tanklaser">Func_tanklaser</a></li>		
<li><a href="../node/955#func_tankmortar">Func_tankmortar</a></li>		
<li><a href="../node/955#func_tankrocket">Func_tankrocket</a></li>		
<li><a href="../node/955#func_trackautochange">Func_trackautochange</a></li>		
<li><a href="../node/955#func_trackchange">Func_trackchange</a></li>		
<li><a href="../node/955#func_tracktrain">Func_tracktrain</a></li>
<li><a href="../node/955#func_train">Func_train</a></li>		
<li><a href="../node/955#func_traincontrols">Func_traincontrols</a></li>		
<li><a href="../node/955#func_wall">Func_wall</a></li>		
<li><a href="../node/955#func_wall_toggle">Func_wall_toggle</a></li>		
<li><a href="../node/955#func_water">Func_water</a></li>
</ul><br />
<hr />
<!--Next Entity-->
<h1><a name="func_breakable">func_breakable</a></h1> - by G.A.R.D.
<p>This entity allows you to create a breakable brush, and is a useful affect for breaking glass, accidents and explosions.</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - A unique target name allows for a trigger, else for the brush to break it will have be damaged (shot, chainsawed ... etc). Set the Name if you want a trigger for an event.</p>
<p><span style="font-weight: bold">Target</span> - Often when a brush breaks you will want to activate sound, another trigger ... etc. Target on break will activate that feature.</p>
<p><span style="font-weight: bold">Material Type</span> - This defines the material type, where:</p>
<pre>0 - Glass
1 - Wood
2 - Metal
3 - Flesh
4 - Cinder Block
5 - Ceiling Tile
6 - Computer
7 - Unbreakable Glass
8 - Rocks</pre>
<p><span style="font-weight: bold">Strength</span> - Sets the amount of damage a brush will sustain before breaking (unless a Name is set and trigger is used). Note that it is logical to make stronger materials harder. <a href="http://www.geocities.com/tovanen/" target="_blank">Tovanen</a> once suggested a value of 50 for wood, less for glass more for metal.</p>
<p><span style="font-weight: bold">Delay (before breaking)</span> - Sets the delay between the breaking of the brush and by default flag properties (see below). Very useful for traps!</p>
<p><span style="font-weight: bold">Gib Model</span> - Spawned the gibmodel when the brush is broken.</p>
<p><span style="font-weight: bold">Spawn object</span> - Sets an item to be spawned when the brush is broken, options are:</p>
<pre>0 - Nothing
1 - Battery
2 - Healthkit
3 - 9mm Handgun
4 - 9mm Clip
5 - Machine Gun
6 - Machine Gun Clip
7 - Machine Gun Grenades
8 - Shotgun
9 - Shotgun Shells
10 - Crossbow
11 - Crossbow Bolts
12 - 357
13 - 357 clip
14 - RPG
15 - RPG Clip
16 - Gauss clip
17 - Hand grenade
18 - Tripmine
19 - Satchel Charge
20 - Snark
21 - Hornet Gun</pre>
<p><span style="font-weight: bold">Explosion Magnitude</span> - This sets the size of the explosion that will result from breaking the brush. A value of Zero will result in no explosion. Breaking glass shouldn't have a explosion magnitude! </p>
<p><span style="font-weight: bold">Render Properties</span> - Sets the control the visual behavior of the object, See Render Properties Tutorial (still to be written!)</p>
<h3>Flags</h3> - Set the entity event to break on
<blockquote><span style="color: #ff0000">(1) Only Trigger</span> - Trigger is activated<br />
<span style="color: #ff0000">(2) Touch</span> - Player touches<br />
<span style="color: #ff0000">(4) Pressure</span> - When any object touches<br />
<span style="color: #ff0000">(256) Crowbar</span> - When hit with a crowbar</blockquote>
<h3>Interesting Func_Breakable Discussions on the RUST Forums:</h3>
<ol><li><a href="http://forums.gamedesign.net/viewtopic.php?t=5787&amp;start=0&amp;postdays=0&amp;postorder=asc&amp;highlight=funcbreakable" target="_blank">breakable func_ladder?</a></li><li><a href="http://forums.gamedesign.net/viewtopic.php?t=5704&amp;highlight=funcbreakable" target="_blank">Respawnable Glass</a></li></ol>
<p align="center"><a href="../node/955#Top">Top</a></p>
<hr />
<!--Next Entity-->
<h1><a name="func_button">func_button</a></h1> - by G.A.R.D. 
<p>This entity allows you to create a button, such as a elevator button ... any button in the game. This function  is typically used to trigger an event when it is touched or &quot;used&quot; by a player.  Once activated a Func_button will move in the direction set by an angle, for  a distance equal to its own length. Which gives the affect of a button being  pushed!</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - If a name, or target name, is assigned to a func_button entity, it can be activated by any trigger_ function. Name defines a unique identity to any func_button.</p>
<p><span style="font-weight: bold">Render Properties</span>  - Sets the control the visual behavior of the object, See Render Properties Tutorial (still to be written!)</p>
<p><span style="font-weight: bold">Speed</span> - This defines the rate a func_button will move from the inactivated to activate position.</p>
<p><span style="font-weight: bold">Targeted object</span> - Sets the event that will be activated when a button is Flagged (see flags below)</p>
<p><span style="font-weight: bold">Health</span> - If a non zero value is set here the func_button has to be shot/damaged rather than touched or used (flags are negated). When the button health reaches zero the target object will be activated.</p>
<p><span style="font-weight: bold">Master</span> - Multisource master option (tutorial to be written ... sorry)</p>
<p><span style="font-weight: bold">Wait</span> - Defines the time between switching between on and off. This is useful if you have a scripted sequence running, and don't wont the sequence to be restarted/ interrupted</p>
<p><span style="font-weight: bold">Delay</span> - Defines the delay between when the func_button is touched or used and the target object is activated.</p>
<h3>Flags</h3> - There are a four button flags behaviors, these are:
<blockquote><span style="color: #ff0000">(1) Don't move</span> - When enabled, the button will jump from inactive to activated without moving, 
<span style="color: #ff0000">(32) Toggle</span> - When enabled, the button moves in and out. The user has to press again to switch been active and inactive. The targeted object is  activated everytime the button is toggled. <br />
<span style="color: #ff0000">(64) Sparks</span> - When enabled sparks are generated when the button is inactive. <br />
<span style="color: #ff0000">(256) Touch</span> - When enabled, the button is activated by a  players touch, and does not require the "<span style="font-style: italic">use</span>" key. </blockquote>
<h3>Related Entities</h3>
<a href="../node/959#button_target">button_target</a><br />
<a href="../node/955#func_rot_button">func_rot_button</a> <br />
<a href="../node/959#momentary_rot_button">momentary_rot_button</a> <br />
<h3>RUST Forum Discusions</h3>
<p><span style="color: #ff0000">Mazemaster</span>: &nbsp;Suggested this great idea for a trap &quot;<span style="font-style: italic">make the wall a func_button with health 1 and with the &quot;do not move&quot; flag checked. Have that button target a multimanager, and have that multimanager trigger the gas and the turrets to come on.</span>"</p>
<p><span style="font-weight: bold"><span style="color: #ff0000">RD</span> </span>(Previous known as Realdespair): &nbsp;Suggested this cool affects idea using a func_button, &quot;<span style="font-style: italic">Make tracer fire in the sky (func_button with lightemitting texture RED, speed 3500, rendermode additive and a thin long shape) that just flies over the skyline around the map, like i did in lan_iban, i KNOW people will be digging that!</span>&quot;</p>
<p align="center"><a href="../node/955#Top">Top</a></p>
<hr />
<!--Next entity-->
<h1><a name="func_conveyor">func_conveyor</a></h1>
<p>This entity creates a &quot;moving&quot; conveyor belt. It can push things along or be used to simulate a waterfall.</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows:</p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade) </pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive</pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. &quot;Solid&quot; mode simply needs a non zero value to work, while in other modes, translucency are controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">Name</span> - Using the Name to trigger the func_conveyor will cause it to reverse direction.</p>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Set the direction of push here.</p>
<p><span style="font-weight: bold">ZHLT Lightflags</span> - Set optional lightflags. Refer to ZHLTReference for more info.</p>
<p><span style="font-weight: bold">Light Origin Target</span> - Set optional light placement. Refer to ZHLTReference for more info.</p>
<p><span style="font-weight: bold">Conveyor Speed</span> - The speed the conveyor runs at.</p>
<p><span style="font-weight: bold">Minimum light level</span> - A Value &gt; zero will let this entity emit light, the range is zero and '1'.</p>
<h3>Flags</h3>- Set the entity event to break on
<blockquote><span style="color: #ff0000">(1) No Push</span> - Enabled, this flag will stop the push effect.<br />
<span style="color: #ff0000">(2) Not Solid</span> - Allows the player to move through, for waterfalls</blockquote>
<h3>Related Entities</h3>
<a href="../node/961#trigger_push">Trigger_push</a>
<p><span style="font-weight: bold">Notes</span><br />
For this entity to actually look like it's moving, you need to use a texture with 'scroll' in its name like <code>scrollwater1</code>.
Set the texture's angle to the direction of the conveyor's movement (the texture will only scroll in its direction, not the conveyor's (so you can't make it move sideways unless the texture is rendered sideways).</p>
<p align="center"><a href="../node/955#Top">Top</a></p><br />
<hr />
<!--Next Entity-->
<h1><a name="func_door">func_door</a></h1>
<p>Probably one of the most fundemental entities in Half-Life. Yes folks... A Door, but with imagination it can be used as a moving platform.</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - This entity can be triggered to 'Open' by targeting its Name.</p>
<p><span style="font-weight: bold">RenderFX</span> - Gives objects special render effects. Think of it as modifying whatever the Render Mode puts out.</p>
<p><span style="font-weight: bold">Render mode</span> - Controls the type of rendering that is used for an object.</p>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. 'Solid' mode simply needs a non zero value to work, while in other modes translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Colour</span> - An RGB value that controls the colour of the object rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names</p>
<p><span style="font-weight: bold">Global Entity Name</span> - </p>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Set the direction of push here.</p>
<p><span style="font-weight: bold">KillTarget</span> - The entity 'Named' here will be removed from the game forever, when the door is triggered.</p>
<p><span style="font-weight: bold">Speed</span> - The speed the door will move.</p>
<p><span style="font-weight: bold">Master</span> - The name of a multisource (or game_team_master) entity. A master must usually be active in order for the entity to work. Thus they act almost like an on/off switch, in their simplest form, and like an AND gate in the case of the multisource. If the specified 'Master' is not active, the door will be locked.</p>
<p><span style="font-weight: bold">Move Sound</span> - the options are as follows: </p>
<pre>0 = No Sound
1 = Servo (Sliding)
2 = Pneumatic (Sliding)
3 = Pneumatic (Rolling)
4 = Vacuum
5 = Power Hydraulic
6 = Large Rollers
7 = Track Door
8 = Snappy Metal Door</pre>
<p><span style="font-weight: bold">Stop Sound</span> - the options are: </p>
<pre>0 = No Sound
1 = Clang with brake 
2 = Clang reverb
3 = Ratchet Stop
4 = Chunk
5 = Light airbrake
6 = Metal Slide Stop
7 = Metal Lock Stop
8 = Snappy Metal Stop</pre>
<p><span style="font-weight: bold">Delay before Close</span> - This is the time in seconds the door will remain open after opening, '-1' makes the door stay open.</p>
<p><span style="font-weight: bold">Lip</span> - The number of units 'in relation to the door width' that remain after opening. A negative value <span style="color: #ff0000">-10</span> will make the door move it's width <span style="color: #ff0000">+10</span> units in the direction chosen.</p>
<p><span style="font-weight: bold">Damamge Inflicted when Blocked</span> - This figure is how much damage the player will suffer if caught in the door.</p>
<p><span style="font-weight: bold">Message if triggered</span> - </p>
<p><span style="font-weight: bold">Target</span> - Event to activate on opening.</p>
<p><span style="font-weight: bold">Delay before Fire</span> - Usually the time in seconds before an entity should trigger its target (after being triggered itself).</p>
<p><span style="font-weight: bold">Fire on Close</span> - The entity to trigger when the door closes.</p>
<p><span style="font-weight: bold">Health</span> - The amount of damage required before the door opens.</p>
<p><span style="font-weight: bold">Locked Sound</span> - Sounds that play when the play is 'locked'. Options are:</p>
<pre>0 = None
2 = Access Denied
8 = Small zap
10 = Buzz
11 = Buzz Off
12 = Latch Locked</pre>
 <p><span style="font-weight: bold">Unlocked Sound</span> - Sound to play when the door is 'unlocked'. Options are:</p>
<pre>0 = None
1 = Big zap &amp; Warmup
3 = Access Granted
4 = Quick Combolock
5 = Power Deadbolt 1
6 = Power Deadbolt 2
7 = Plunger
8 = Small zap
9 = Keycard Sound
10 = Buzz</pre>
 <p><span style="font-weight: bold">Locked Sentence</span> - Sentence that is spoken when entity is 'locked'. Options are:</p>
<pre>1 = Gen. Access Denied
2 = Security Lockout
3 = Blast Door
4 = Fire Door
5 = Chemical Door</pre>
 <p><span style="font-weight: bold">Unlocked Sentence</span> - Sentence that is spoken when door is 'unlocked'. Options are:</p>
<pre>1 = Gen. Access Granted
2 = Security Disengaged
3 = Blast Door
4 = Fire Door
5 = Chemical Door
6 = Radiation Door
7 = General Containment
8 = Maintenance area</pre>
<p><span style="font-weight: bold">Minimum light level</span> - A Value &gt; zero will let this entity emit light,  the range is zero and '1'.</p>
<p><span style="font-weight: bold">ZHLT Lightflags</span> - Set optional lightflags. Refer to ZHLTReference for more info.</p>
<p><span style="font-weight: bold">Light Origin Target</span> - Set optional light placement. Refer to ZHLTReference for more info.</p>
<h3>Flags</h3>
<blockquote><span style="color: #ff0000">(1) Starts open</span> - The door will 'Start Open'.<br />
<span style="color: #ff0000">(4) Don't link</span> - <br />
<span style="color: #ff0000">(8) Passable</span> - Not Solid: an entity with this flag enabled will not obstruct the player or monsters.<br />
<span style="color: #ff0000">(32) Toggle</span> - With this flag set on, an entity can be turned on and off, either by the player, or by being triggered.<br />
<span style="color: #ff0000">(256) Use Only</span> - Player must 'Use' to open. Checking this flag prevents the door being triggered any other way.<br />
<span style="color: #ff0000">(512) Monsters can't</span> - Monsters with arms (Zombies) can't use this door.<br />
<span style="color: #ff0000">(2048) Not in Deathmatch</span> - If this flag is set on, the entity will not appear in deathmatch games.</blockquote>
<h3>Related Entities</h3>
<a href="../node/955#func_door_rotating">Func_door_rotating</a><br />
<a href="../node/955#func_water">Func_water</a><br />
<a href="../node/959#momentary_door">Momentary_door</a>
<p><span style="font-weight: bold">Notes</span><br />
A door will move it's entire width in the Open direction when activated. Doors can be made to trigger other entities, so in effect it can act as a button. Changing the Pitch Roll Yaw can make the door perform as an elevator.</p>
<p align="center"><a href="../node/955#Top">Top</a></p><br />
<hr />
<!--Next Entity-->
<h1><a name="func_door_rotating">func_door_rotating</a></h1>
<p>Much like func_door, this entity allows you to make a door that rotates on an axis rather than sliding back on its width.</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - Use the 'Name' to trigger the door.</p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows:</p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade)</pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive</pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. 'Solid' mode simply needs a non zero value to work, while in other modes  translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">Global Entity Name</span> - The name of the Global controlling this door</p>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and  roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used. Doors are unique in that they have 'Flags" to allow movement set in the 'Z' and 'Y' planes.</p>
<p><span style="font-weight: bold">Kill Target</span> -  The entity named here will be removed from the game when the rotating door is activated</p>
<p><span style="font-weight: bold">Speed</span> - Speed at which the door rotates.</p>
<p><span style="font-weight: bold">Master</span> - The name of a multisource (or game_team_master) entity. A master must usually be active in order for the entity to work. Thus they act almost like an on/off switch, in their simplest form, and like an AND gate in the case of the multisource.</p>
<p><span style="font-weight: bold">Move Sound</span> - These apply to the door when it moves. The options are as follows:</p>
<pre>0 = No Sound
1 = Servo (Sliding)
2 = Pneumatic (Sliding)
3 = Pneumatic (Rolling)
4 = Vacuum
5 = Power Hydraulic
6 = Large Rollers
7 = Track Door
8 = Snappy Metal Door</pre>
<p><span style="font-weight: bold">Stop Sound</span> - These apply to the door when it stops. The options are:</p>
<pre>0 = No Sound
1 = Clang with brake
2 = Clang reverb
3 = Ratchet Stop
4 = Chunk
5 = Light airbrake
6 = Metal Slide Stop
7 = Metal Lock Stop
8 = Snappy Metal Stop </pre>
<p><span style="font-weight: bold">Delay before close</span> - Delay before the door moves back to its closed position (-1 makes it stay open).</p>
<p><span style="font-weight: bold">Lip</span> - See Func_door, I am not sure why you would to change the Lip, as the 'Distance' property dictates the angle of swing....Unless you wanted it's Origin to move also?</p>
<p><span style="font-weight: bold">Damage inflicted when blocked</span> - How much damage the player receives if trapped in a closing door.</p>
<p><span style="font-weight: bold">Message</span> - Message if triggered.</p>
<p><span style="font-weight: bold">Target</span> - An entity named here will be triggered when the entity is activated.</p>
<p><span style="font-weight: bold">Delay before fire</span> - Usually the time in seconds before the door triggers its target (above) after being triggered itself.</p>
<p><span style="font-weight: bold">Fire on Close</span> - This will trigger the entity 'Named' when the door closes.</p>
<p><span style="font-weight: bold">Health</span> - If the figure here is > 0, the door will have to be damaged to the amount specified to open.</p>
<p><span style="font-weight: bold">Locked Sound</span> - Sound played when the entity is 'locked'. Options are:</p>
<pre>0 = None
2 = Access Denied
8 = Small zap
10 = Buzz
11 = Buzz Off
12 = Latch Locked</pre>
<p><span style="font-weight: bold">Unlocked Sound</span> - Sound played when entity is 'unlocked'. Options are:</p>
<pre>0 = None
1 = Big zap &amp; Warmup
3 = Access Granted
4 = Quick Combolock
5 = Power Deadbolt 1
6 = Power Deadbolt 2
7 = Plunger
8 = Small zap
9 = Keycard Sound
10 = Buzz
13 = Latch Unlocked
14 = Light Switch</pre>
<p><span style="font-weight: bold">Locked Sentence</span> - Sentence that is spoken when entity is  'locked'. Options are:</p>
<pre>1 = Gen. Access Denied
2 = Security Lockout
3 = Blast Door
4 = Fire Door
5 = Chemical Door
6 = Radiation Door
7 = Gen. Containment
8 = Maintenance Door
9 = Broken Shut Door</pre>
<p><span style="font-weight: bold">Unlocked Sentence</span> - Sentence that is spoken when entity is 'unlocked'. Options are:</p>
<pre>1 = Gen. Access Granted
2 = Security Disengaged
3 = Blast Door
4 = Fire Door
5 = Chemical Door
6 = Radiation Door
7 = General Containment
8 = Maintenance area</pre>
<p><span style="font-weight: bold">Minimum light level</span> - A Value &gt; zero will let this entity emit light, the range is zero and '1'.</p>
<p><span style="font-weight: bold">ZHLT Lightflags</span> - Set optional lightflags. Refer to ZHLTReference for more info.</p>
<p><span style="font-weight: bold">Light Origin Target</span> - Set optional light placement. Refer to ZHLTReference for more info.</p>  <p><span style="font-weight: bold">Distance</span> - Distance in degrees the door will rotate.</p>
<h3>Flags</h3>
<blockquote><span style="color: #ff0000">(1) Starts open</span> - Door starts in its 'open' position.<br />
<span style="color: #ff0000">(2) Reverse Direction</span> - Reverse direction of rotation.<br />
<span style="color: #ff0000">(4) Don't link</span> -<br />
<span style="color: #ff0000">(8) Passable</span> - When 'ticked' the entity will be 'Not Solid' and will not restrict player or monster movement.<br />
<span style="color: #ff0000">(16) One Way</span> - Door only opens in one direction.<br />
<span style="color: #ff0000">(32) Toggle</span> - <br />
<span style="color: #ff0000">(64) X axis</span> - Door will rotate on its X axis.<br />
<span style="color: #ff0000">(128) Y axis</span> - Door will rotate on its Y axis.<br />
<span style="color: #ff0000">(256) Use only</span> - Player must &quot;use&quot; to open. Enabling this prevents the entity being triggered any other way.<br />
<span style="color: #ff0000">(512) Monsters can't</span> - Monsters with arms (e.g. zombies, grunts) can't use the door. 'armless monsters don't count.<br />
<span style="color: #ff0000">(2048) Not in Deathmatch</span> - If this flag is set on, the entity will not appear in deathmatch games.</blockquote>
<h3>Related Entities</h3>
<a href="../node/955#func_door">Func_door</a><br />
<a href="../node/955#func_rotating">Func_rotating</a><br />
<a href="../node/959#momentary_door">Momentary_door</a>
<p><span style="font-weight: bold">Notes:</span><br />
The func_door_rotating requires an origin brush as part of its entity. This gives it the axis to rotate on. The axis defaults to 'Z' if neither of the axis flags is enabled. There are two ways to reverse the direction of rotation: Check the relevent flag, or make the Distance property a negative value. If One Way is not enabled, the door will open away from the player.</p>
<p align="center"><a href="../node/955#Top">Top</a></p><br />
<hr />
<!--Next Entity-->
<h1><a name="func_friction">func_friction</a></h1>
<p>This entity allows you to create an area of low friction, to simulate wet or oily or icy surfaces.</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows: </p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade)</pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive</pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. 'Solid' mode simply needs a non zero value to work, while in other modes translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">ZHLT Lightflags</span> - Set optional lightflags. Refer to ZHLTReference for more info.</p>
<p><span style="font-weight: bold">Light Origin Target</span> - Set optional light placement. Refer to ZHLTReference for more info.</p>
<p><span style="font-weight: bold">Percentage of standard</span> - The percentage of friction between 0 and 100 (where 100% is normal friction).</p>
<h3>Flags</h3>
<blockquote> <span style="color: #ff0000">(2048) Not in Deathmatch</span> - If this flag is set on, the entity will not appear in deathmatch games.</blockquote>
<h3>Related Entities</h3>
<blockquote>None.</blockquote>
<p><span style="font-weight: bold">Notes:</span><br />None</p>
<p align="center"><a href="../node/955#Top">Top</a></p><br />
<hr />
<!--Next Entity-->
<h1><a name="func_guntarget">func_guntarget</a></h1>
<p>This entity was designed for the Hazard course, it is a moving target that stops when shot and triggers another event.</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - The func_guntarget must be triggered to start it moving on its path. </p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows: </p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade) </pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive </pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. 'Solid' mode simply needs a non zero value to work, while in other modes translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">Global Entity Name</span> - The Global name that controls this target</p>
<p><span style="font-weight: bold">ZHLT Lightflags</span> - Set optional lightflags. Refer to ZHLTReference for more info.</p>
<p><span style="font-weight: bold">Light Origin Target</span> - Set optional light placement. Refer to ZHLTReference for more info.</p>
<p><span style="font-weight: bold">Speed</span> - Speed that the guntarget travels at in units per second.</p>
<p><span style="font-weight: bold">First Stop target</span> - The name of the first path_corner to follow. </p>
<p><span style="font-weight: bold">Fire on Damage</span> - When the target is damaged, this event will be triggered.</p>
<p><span style="font-weight: bold">Damage to take</span> - The amount of damage that must be taken before halting movement and activating the target.</p>
<p><span style="font-weight: bold">Minimum light level</span> - A Value &gt; zero will let this entity emit light, the range is zero and '1'.</p>
<h3>Flags</h3>
<blockquote>None</blockquote>
<h3>Related Entities</h3>
<a href="../node/955#func_train">Func_train</a><br />
<a href="../node/959#path_corner">Path_corner</a>
<p><span style="font-weight: bold">Notes:</span><br /> None </p>
<p align="center"><a href="../node/955#Top">Top</a></p><br /><br />
<hr />
<!--Next Entity-->
<h1><a name="func_healthcharge">func_healthcharge</a> </h1>
<p>This entity creates an area in which the player can recharge his health.</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Global Entity Name</span> - Name of the Global</p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows:</p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade) </pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive </pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. 'Solid' mode simply needs a non zero value to work, while in other modes  translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">ZHLT Lightflags</span> - Set optional lightflags. Refer to ZHLTReference for more info.</p>
<p><span style="font-weight: bold">Light Origin Target</span> - Set optional light placement. Refer to ZHLTReference for more info.</p>  <p><span style="font-weight: bold">Minimum light level</span> - A Value &gt; zero will let this entity emit light, the range is zero and '1'.</p>
<h3>Flags</h3>
<blockquote>None</blockquote>
<h3>Related Entities</h3>
<a href="../node/955#func_recharge">Func_recharge</a>
<p><span style="font-weight: bold">Notes:</span><br />None </p>
<p align="center"><a href="../node/955#Top">Top</a></p><br />
<hr />
<!--Next Entity-->
<h1><a name="func_illusionary">func_illusionary</a></h1>
<p>The func_illusionary has all the properties of a func_wall entity, except for the fact that it is non-solid.</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - Property used to identify the entity.</p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows:</p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade) </pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive </pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. 'Solid' mode simply needs a non zero value to work, while in other modes  translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">ZHLT Lightflags</span> - Set optional lightflags. Refer to ZHLTReference for more info.</p>
<p><span style="font-weight: bold">Light Origin Target</span> - Set optional light placement. Refer to ZHLTReference for more info.</p>
<p><span style="font-weight: bold">Contents</span> - <span style="color: #ff0000">-1</span> = Empty, <span style="color: #ff0000">-7</span> = Volumetric light.</p>
<p><span style="font-weight: bold">Minimum light level</span> - A Value &gt; zero will let this entity emit light, the range is zero and '1'.</p>
<h3>Flags</h3>
<blockquote> None</blockquote>
<h3>Related Entities</h3>None.<br />
<p><span style="font-weight: bold">Notes:</span><br />Combined with a clip brush, this entity can be used to make a grate or fence  that can be shot through, but not walked through. Small objects made into func_illusionary entities will not obstruct player  movement, useful for knee-height light fixtures etc.</p>
<p align="center"><a href="../node/955#Top">Top</a></p><br />
<hr />
<!--Next Entity-->
<h1><a name="func_ladder">func_ladder</a></h1>
<p>This creates an invisible area which, when entered by the player, allows to player to climb up or down.</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - Property used to identify the entity.</p>
<h3>Flags</h3>
<blockquote>None</blockquote>
<h3>Related Entities</h3>
<a href="../node/955#func_wall">Func_wall</a><br />
<p><span style="font-weight: bold">Notes:</span><br />
The simplest way to create a ladder is to construct the visible bit first, with the ladder texture you want, then copy the brush, drag it forward, and turn the front brush into a func_ladder. The Brush with the ladder texture should be a func_wall, with Render mode set to 'Solid' and FX Amount set to '255'. This will make the 'blue' parts of the texture disappear in game.   This entity can also simulate ropes (although the sound isn't quite right).</p>
<p align="center"><a href="../node/955#Top">Top</a></p><br /><br />
<!-- Next Entity -->
<h1><a name="func_monsterclip">func_monsterclip</a></h1>
<p>This entity acts like the 'clip' brush, except it restricts monster movement, not the player's.</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - This entity can be triggered to turn it on and off. </p>
<h3>Flags</h3>
<blockquote>None</blockquote>
<h3>Related Entities</h3>
<a href="../rustent/info.html#info_node">Info_node</a><br />
<p><span style="font-weight: bold">Notes</span>:<br />
Can be used to control the paths monsters take when chasing the player. Only monsters with their MonsterClip flag enabled will take notice of this entity.</p>
<p align="center"><a href="../node/955#Top">Top</a></p><br />
<hr />
<!--Next Entity -->
<h1><a name="func_mortar_field">func_mortar_field</a></h1>
<p>This entity is used to define an area that an airstrike is called on.</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - This entity can be triggered to turn it on and off. </p>
<p><span style="font-weight: bold">Spread Radius</span> - Defines the accuracy of the bombardment.</p>
<p><span style="font-weight: bold">Repeat Count</span> - Determines how many bombs will be dropped per strike.</p>
<p><span style="font-weight: bold">Targeting</span> - <span style="color: #ff0000">0</span> = random, <span style="color: #ff0000">1</span> = activator, <span style="color: #ff0000">2</span> = table.</p>
<p><span style="font-weight: bold">X Controller</span> - The name of a momentary_rot_button to provide a relative strike position on the X axis.</p>
<p><span style="font-weight: bold">Y Controller</span> - The name of a momentary_rot_button to provide a relative strike position on the Y axis.</p>
<h3>Flags</h3>
<blockquote>None</blockquote>
<h3>Related Entities</h3>
<a href="../node/959#momentary_door">Momentary_door</a><br />
<a href="../node/959#momentary_rot_button">Momentary_rot_button</a>
<p><span style="font-weight: bold">Notes:</span><br />
Using a Targeting value of <span style="color: #ff0000">0</span> will simulate a random bombardment. The X and Y controlers can be used where a table is utilised to define the strike location (as seen in Half-Life).</p>
<p align="center"><a href="../node/955#Top">Top</a></p><br /><br />
<!-- Next Entity -->
<h1><a name="func_pendulum">func_pendulum</a></h1>
<p>This entity allows you to create an object that moves like a pendulum.</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Global Entity Name</span> - Name of the Global controlling this pendulum. </p>
<p><span style="font-weight: bold">Name</span> - Use the 'Name' to trigger the pendulum to move or stop.</p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows:</p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade) </pre>
 <p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive </pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255.  'Solid' mode simply needs a non zero value to work, while in other modes  translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and  roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used. Doors are unique in that they have 'Flags' to allow movement set in the 'Z' and 'Y' planes.</p>
<p><span style="font-weight: bold">ZHLT Lightflags</span> - Set optional lightflags. Refer to ZHLTReference for more info.</p>
<p><span style="font-weight: bold">Light Origin Target</span> - Set optional light placement. Refer to ZHLTReference for more info.</p>
<p><span style="font-weight: bold">Speed</span> - Speed of movement of the pendulum.</p>
<p><span style="font-weight: bold">Distance</span> - Distance in degrees the pendulum will swing. Negative values reverse the direction.</p>
<p><span style="font-weight: bold">Damping</span> - If you specify a value here the pendulum will slowly narrow its movement until it stops moving. It will end in the middle of it's swing, so if you specified 90 degrees as its distance, it will stop at the 45 degree position. Range: 0 - 1000.</p>
<p><span style="font-weight: bold">Damage inflicted when blocked</span> - When movement is blocked by the player, he will receive this amount of damage.</p>
<p><span style="font-weight: bold">Minimum light level</span> - A Value &gt; zero will let this entity emit light, the range is zero and '1'.</p>
<h3>Flags</h3>
<blockquote><span style="color: #ff0000">(1) Start on</span> - Pendulum will start on (or active). This usually only has effect if the entity is given a name, most entities that aren't given names start on anyway, or has its Toggle flag set on.<br />
  <span style="color: #ff0000"> (8) Passable</span>  - Makes the pendulum non-soild. The ambiguous name is a synonym for Not Solid: an entity with this flag enabled will not obstruct the player or monsters.<br />
  <span style="color: #ff0000">(16) Auto-return</span>  - If this is enabled it will cause the pendulum to return to its start position when triggered.<br />
  <span style="color: #ff0000">(64) X-axis</span>  - If enabled, the swing will be in the X axis.<br />
  <span style="color: #ff0000"> (128) Y-axis</span>  - If enabled, the swing will be in the Y axis.<br />
  <span style="color: #ff0000">(2048) Not in Deathmatch</span> - If this flag is set on, the entity will not appear in deathmatch games.</blockquote>
<h3>Related Entities</h3>None.<br />
<p><span style="font-weight: bold">Notes:</span><br />Swing defaults to the Z axis if neither of the axis flags is enabled. Use this entity to make broken lights, grandfather clocks and swinging grates.</p>
<p align="center"><a href="../node/955#Top">Top</a></p><br /><br />
<!-- Next Entity -->
<h1><a name="func_plat">func_plat</a></h1>
<p>This entity lets you create a platform that will move to its raised position when the player walks onto it.</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - Can be activated by being triggered. </p>
<p><span style="font-weight: bold">Global Entity name</span> - The Global Name controlling this platform. </p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows:</p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade) </pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive </pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. 'Solid' mode simply needs a non zero value to work, while in other modes  translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">Move Sound</span> - These apply to the platform when it moves. The options are as follows:</p>
<pre>For elevators:
0 = No Sound
1 = big elev 1
2 = big elev 2
3 = tech elev 1
4 = tech elev 2
5 = tech elev 3
6 = freight elev 1
7 = freight elev 2
8 = heavy elev
9 = rack elev
10 = rail elev
11 = squeek elev
12 = odd elev 1
13 = odd elev 2 </pre>
<p><span style="font-weight: bold">Stop Sound</span> - These apply to the platform when it stops. The options are:</p>
<pre>0 = no sound
1 = big elev stop 1
2 = big elev stop 2
3 = freight elev stop
4 = heavy elev stop
5 = rack stop
6 = rail stop
7 = squeek stop
8 = quick stop</pre>
<p><span style="font-weight: bold">Sound Volume</span> - Volume in the range <span style="color: #ff0000">0.0</span> - <span style="color: #ff0000">1.0</span>.</p>
<p><span style="font-weight: bold">ZHLT Lightflags</span> - Set optional lightflags. Refer to ZHLTReference for more info.</p>
<p><span style="font-weight: bold">Light Origin Target</span> - Set optional light placement. Refer to ZHLTReference for more info.</p>
<p><span style="font-weight: bold">Travel Altitude</span> - The distance the object will move.</p>
<p><span style="font-weight: bold">Minimum light level</span> - A Value &gt; zero will let this entity emit light, the range is zero and '1'.</p>
<h3>Flags</h3>
<blockquote> <span style="color: #ff0000">(1) Toggle</span> - If enabled, the platform can be triggered to toggle it between its raised and lowered positions. </blockquote>
<h3>Related Entities</h3>
<a href="../node/955#func_platrot">Func_platrot</a>
<p><span style="font-weight: bold">Notes:</span><br />
Although the Travel Altitude property may say 'can be negative' in SmartEdit mode, it can't. This entity can be used to make simple elevators.</p>
<p align="center"><a href="../node/955#Top">Top</a></p><br />
<hr />
<!--Next Entity-->	 
<h1><a name="func_platrot">func_platrot</a></h1>
<p>This entity lets you create a platform that will move to its raised position when you walk onto it. It differs from func_plat in that it will also rotate as it moves.</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - Can be activated by being triggered. </p>
<p><span style="font-weight: bold">Global Entity name</span> - The Global name controlling this rotating platform.</p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows:</p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade) </pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive </pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255.  'Solid' mode simply needs a non zero value to work, while in other modes  translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">Move Sound</span> - These apply to the platform when it moves. The options are as follows:</p>
<pre>0 = No Sound
1 = big elev 1
2 = big elev 2
3 = tech elev 1
4 = tech elev 2
5 = tech elev 3
6 = freight elev 1
7 = freight elev 2
8 = heavy elev
9 = rack elev
10 = rail elev
11 = squeek elev
12 = odd elev 1
13 = odd elev 2 </pre>
<p><span style="font-weight: bold">Stop Sound</span> - These apply to the platform when it stops. The options are:</p>
<pre>0 = no sound
1 = big elev stop 1
2 = big elev stop 2
3 = freight elev stop
4 = heavy elev stop
5 = rack stop
6 = rail stop
7 = squeek stop
8 = quick stop </pre>
<p><span style="font-weight: bold">Sound Volume</span> - Volume in the range 0.0 - 1.0.</p>
<p><span style="font-weight: bold">Pitch Yaw Roll</span> - Use to set rotation. [Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">ZHLT Lightflags</span> - Set optional lightflags. Refer to ZHLTReference for more info.</p>
<p><span style="font-weight: bold">Light Origin Target</span> - Set optional light placement. Refer to ZHLTReference for more info.</p> <p><span style="font-weight: bold">Speed</span> - Speed the rotating platform moves</p>
<p><span style="font-weight: bold">Travel Altitude</span> - The distance the object will move.</p>
<p><span style="font-weight: bold">Spin Amount</span> - This is the distance, in degrees, the platform will rotate between its lowered and raised positions.</p>
 <p><span style="font-weight: bold">Minimum light level</span> - A Value &gt; zero will let this entity emit light, the range is zero and '1'.</p>
<h3>Flags</h3>
<blockquote> <span style="color: #ff0000">(1) Toggle</span> - If enabled, the platform can be triggered to toggle it between its raised and lowered positions.<br />
<span style="color: #ff0000">(64) X axis</span> - If enabled, the rotation will be in the X axis.<br />
<span style="color: #ff0000">(128) Y axis</span> - If enabled, the rotation will be in the Y axis.</blockquote>
<h3>Related Entities</h3>
<a href="../node/955#func_plat">Func_plat</a><br />
<p><span style="font-weight: bold">Notes:</span><br /> Rotation defaults to the Z axis if neither of the axis flags is enabled.</p>
<p align="center"><a href="../node/955#Top">Top</a></p><br />
<!-- Next Entity -->
<h1><a name="func_pushable">func_pushable</a></h1>
<p>Func_pushable entities can be pushed and pulled around by the player. Func_pushables can also be breakable.</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - Can be activated by being triggered.</p>
<p><span style="font-weight: bold">Global Entity name</span> - The name of the Global controlling this Pushable.</p>
<p><span style="font-weight: bold">Target on break</span> - If breakable, this event will be activated when broken.</p>
<p><span style="font-weight: bold">Strength</span> - If breakable, this is the amount of damage to be taken before breaking.</p>
<p><span style="font-weight: bold">Material Type</span> - The type of material that a func_breakable or func_pushable should act as. Options are:</p>
<pre>0 = Glass
1 = Wood
2 = Metal
3 = Flesh
4 = Cinder Block
5 = Ceiling Tile
6 = Computer
7 = Unbreakable Glass
8 = Rocks </pre>
<p><span style="font-weight: bold">Gibs Direction</span> - Direction the gibs will go when the brush is broken. Values:</p>
<pre>0 = Random
1 = Relative to attack.</pre>
<p><span style="font-weight: bold">Delay before fire</span> - Delay before Target on Break is triggered after being broken. </p>
<p><span style="font-weight: bold">Gib Model</span> - Specify a gib model to use. This overrides the default specified by Material Type.</p>
<p><span style="font-weight: bold">Spawn on break</span> - Select an item to be spawned when the brush breaks. Used by func_breakable and func_pushable. Determines what item is spawned when the entity is broken. Options are:</p>
<pre>0 = Nothing
1 = Battery
2 = Health Kit
3 = 9mm Handgun
4 = 9mm Clip
5 = Machine Gun
6 = Machine Gun Clip
7 = Machine Gun Grenades
8 = Shotgun
9 = Shotgun Shells
10 = Crossbow
11 = Crossbow Bolts
12 = 357
13 = 357 Clip
14 = RPG
15 = RPG Clip
16 = Gauss Clip
17 = Hand Grenade
18 = Tripmine
19 = Satchel Charge
20 = Snark
21 = Hornet Gun </pre>
<p><span style="font-weight: bold">Explode Magnitude</span> - A non-zero value here creates an explosion when the object breaks.</p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows:</p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wideulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade) </pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive </pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. 'Solid' mode simply needs a non zero value to work, while in other modes  translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">ZHLT Lightflags</span> - Set optional lightflags. Refer to ZHLTReference for more info.</p>
<p><span style="font-weight: bold">Light Origin Target</span> - Set optional light placement. Refer to ZHLTReference for more info.</p> <p><span style="font-weight: bold">Hull size</span> - Values:</p>
<pre>0 = point sized
1 = player sized
2 = big size
3 = player duck</pre>
<p><span style="font-weight: bold">Friction</span> - This determines the amount of resistance the brush will give when the player pushes it. Range is 0 to 400, where 400 is the most resistance.</p>
<p><span style="font-weight: bold">Bouyancy</span> - Determines how well the brush floats on water.</p>
<p><span style="font-weight: bold">Minimum light level</span> - A Value &gt; zero will let this entity emit light, the range is zero and '1'.</p>
<h3>Flags</h3>
<blockquote><span style="color: #ff0000">(128) Breakable</span> - If this is enabled, the entity will act like a func_breakable.</blockquote>
<h3>Related Entities</h3>
<a href="../node/955#func_breakable">Func_breakable</a><br />
<p><span style="font-weight: bold">Notes:</span><br />Most commonly used with crates.</p>
<p align="center"><a href="../node/955#Top">Top</a></p><br />
<!-- Next Entity -->
<h1><a name="func_recharge">func_recharge</a></h1>
<p>Similar to the func_healthcharge, this entity specifies an area in which the player can recharge his armour (HEV suit).</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Global Entity name</span> - The Global name controlling this charger.</p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows:</p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade) </pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive </pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. 'Solid' mode simply needs a non zero value to work, while in other modes  translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">ZHLT Lightflags</span> - Set optional lightflags. Refer to ZHLTReference for more info.</p>
<p><span style="font-weight: bold">Light Origin Target</span> - Set optional light placement. Refer to ZHLTReference for more info.</p>
<p><span style="font-weight: bold">Minimum light level</span> - A Value &gt; zero will let this entity emit light, the range is zero and '1'.</p>
<h3>Flags</h3>
<blockquote> None</blockquote>
<h3>Related Entities</h3>
<a href="../node/955#func_healthcharge">Func_healthcharge</a><br />
<p><span style="font-weight: bold">Notes</span><br />None</p>
<p align="center"><a href="../node/955#Top">Top</a></p><br />
<!-- Next Entity -->
<h1><a name="func_rotating">func_rotating</a></h1>
<p>This entity lets you create a rotating object.</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - Can be activated by being triggered. </p>
<p><span style="font-weight: bold">Global Entity name</span> - The Name of the Global controlling this entity.</p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows:</p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade) </pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive </pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. 'Solid' mode simply needs a non zero value to work, while in other modes  translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">ZHLT Lightflags</span> - Set optional lightflags. Refer to ZHLTReference for more info.</p>
<p><span style="font-weight: bold">Light Origin Target</span> - Set optional light placement. Refer to ZHLTReference for more info.</p>
<p><span style="font-weight: bold">Rotation Speed</span> - This is the maximum speed the rotating object will acheive.</p>
<p><span style="font-weight: bold">Volume</span> - Sound volume from 0 to 10 (10 loudest).</p>
<p><span style="font-weight: bold">Friction</span> - If the Acc/Dcc flag is enabled, this value determines the time it takes to reach full speed or to stop after being triggered.</p>
<p><span style="font-weight: bold">Fan Sounds</span> - The sound to make while moving. Values:</p>
<pre>0 = no sound
1 = fast whine
2 = slow rush
3 = medium rickety
4 = fast beating
5 = slow smooth</pre>
<p><span style="font-weight: bold">WAV Name</span> - The path / filename of a custom movement sound to be played (overrides Fan Sounds).</p>
<p><span style="font-weight: bold">Minimum light level</span> - A Value &gt; zero will let this entity emit light, the range is zero and '1'.</p>
<p><span style="font-weight: bold">X Y Z - Move here after lighting</span> - From <a href="http://www.thewall.de">The Wall</a> and translated by Pepper:<br /> The object will move to these coordinates after lighting. Usually the lightning around a rotating object is not good. It could be that a side is darkend, and that will look bad as the object rotates in game play. To solve this make a seperate room that is lit the way you want, select the coordinates you want the object to move to 'after it is initially lit' in your special room, and enter them under this property. As the game begins, the object will be lit in your special room, and then move to these coordinates. Check your grid alignment using the 2D windows.</p>
<p><span style="font-weight: bold">Damage inflicted when blocked</span> - If the player blocks the entity's movement, this amount of damage will be dealt.</p>
<h3>Flags</h3>
<blockquote> <span style="color: #ff0000">(1) Start On</span> Entity will start on (or active). This usually only has effect if the entity is given a name (most entities that aren't given names start on anyway), or has its Toggle flag set on.<br />
  <span style="color: #ff0000">(2) Reverse Direction </span> - Set this flag to make the brush turn in the opposite direction.<br />
  <span style="color: #ff0000">(4) X axis</span> - If enabled, the rotation will be in the X axis.<br />
  <span style="color: #ff0000">(8) Y axis </span> - If enabled, the rotation will be in the Y axis.<br />
  <span style="color: #ff0000">(16) Acc/Dcc</span> - If enabled, the entity will accelerate and decelerate from maximum speed based on the Friction property.<br />
  <span style="color: #ff0000"> (32) Fan Pain</span> - With this enabled, the player will be hurt when coming into contact with the brush.<br />
  <span style="color: #ff0000">(64) Not Solid</span> - With this flag enabled, a brush-based entity will not be solid, so will not affect the player's movement in the way solid brushes do. Useful for things like moving laser targets that musn't obstruct the player.<br />
  <span style="color: #ff0000">(128) Small Radius</span> - Sets sound range to low.<br />
  <span style="color: #ff0000"> (256) Medium Radius</span> - Sets sound range to medium.<br />
  <span style="color: #ff0000"> (512) Large Radius</span> - Sets sound range to high.</blockquote>
<h3>Related Entities</h3>
<a href="../node/955#func_door_rotating">Func_door_rotating</a><br />
<a href="../node/955#func_platrot">Func_platrot</a><br />
<a href="../node/955#func_rot_button">Func_rot_button</a>
<p><span style="font-weight: bold">Notes:</span></p>
<p> Often used to create fans.  An origin brush needs to be part of the entity to specify its axis of rotation. If you use a WAV file to produce your sound, the 'Fan Sounds' will not work. </p>
<p>After a day trying to get a couple of fans to work, I thought I would share some info:<br />
If you are running your maps in OpenGL mode, you might find that the Fan Sounds and WAV name's don't work as advertised... Not sure of the reason, and I did a lot of testing and retesting and here is the result:<br />
For Fans that are always on, rather than piss around with these settings, just and an <a href="../node/959#ambient_generic">Ambient_generic</a> that has no name, but does have the sound you want the fan to make. Place it near the fan and it will sound Ok. For fans that spin up and down, you can 'Name' the ambient_generic and set it's Dynamic Preset to Fade in or Oscillate spin up/spin down. Just make sure the 'Name of the ambient_generic is the same 'Name' as the fan.</p>
<p><span style="font-style: italic">Disclaimer</span>: there is a good chance that this doesn't work for me cause I have a crap system. However, the idea of 'Blind' ambient_generics has other uses..... If something isn't making the noise you think it should such as the Monster_loader, just add a couple of blind generics with the right .wav files.</p>
<p align="center"><a href="../node/955#Top">Top</a></p><br />
<!-- Next Entity -->
<h1><a name="func_rot_button">func_rot_button</a></h1>
<p>This entity creates a button that rotates. Most commonly used for wheels and valves.</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - Can be activated by being triggered.</p>
<p><span style="font-weight: bold">Global Entity name</span> - The name of the Global controlling this button.</p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows:</p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade) </pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive </pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. 'Solid' mode simply needs a non zero value to work, while in other modes  translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">ZHLT Lightflags</span> - Set optional lightflags. Refer to ZHLTReference for more info.</p>
<p><span style="font-weight: bold">Light Origin Target</span> - Set optional light placement. Refer to ZHLTReference for more info.</p>
<p><span style="font-weight: bold">Targetted Object</span> - The event that the button will activate.</p>
<p><span style="font-weight: bold">Change Target Name</span> - </p>
<p><span style="font-weight: bold">Master</span> - The name of a multisource (or game_team_master) entity. A master must usually be active in order for the entity to work. Thus they act almost like an on/off switch, in their simplest form, and like an AND gate in the case of the multisource.</p>
<p><span style="font-weight: bold">Speed</span> - How fast the button rotates when activated.</p>
<p><span style="font-weight: bold">Health</span> - If non-zero, the button must be damaged to this extent to activate it.</p>
<p><span style="font-weight: bold">Sounds</span> - Values:</p>
<pre>21 = squeaky
22 = squeaky pneumatic
23 = ratchet groan
24 = clean ratchet
25 = gas clunk</pre>
<p><span style="font-weight: bold">Delay before reset</span> - Time to wait before button resets itself. <span style="color: #ff0000">-1</span> makes it stay set.</p>
<p><span style="font-weight: bold">Delay before trigger</span> - Usually the time in seconds before an entity should trigger its target (after being triggered itself).</p>
<p><span style="font-weight: bold">Distance</span> - Distance in degrees the button will rotate before activating its target.</p>
<p><span style="font-weight: bold">Minimum light level</span> - A Value &gt; zero will let this entity emit light, the range is zero and '1'.</p>
<h3>Flags</h3>
<blockquote><span style="color: #ff0000">(1) Not solid</span> - With this flag enabled, a brush-based entity will not be solid,  so will not affect the player's movement in the way solid brushes do. Useful for things like moving laser targets that musn't obstruct the player.<br />
<span style="color: #ff0000">(2) Reverse Direction</span> - Reverse rotation direction.<br />
<span style="color: #ff0000">(32) Toggle</span> - Allows button to be toggled. Using the button toggles it between 'on' and 'off', each time retriggering its target. With this flag set on, an entity can be turned on and off, either by the player, or by being triggered.<br />
<span style="color: #ff0000">(64) X axis</span> - If enabled, the rotation will be on the X axis.<br />
<span style="color: #ff0000">(128) Y axis</span> - If enabled, the rotation will be in the Y axis.<br />
<span style="color: #ff0000">(256) Touch Activates</span> - The button can only be activated by the player bumping into it (or by being shot, if Health is > 0).<br />
</blockquote>
<h3>Related Entities</h3>
<a href="../node/955#func_rotating">Func_rotating</a><br />
<a href="../node/955#func_button">Func_button</a>
<p><span style="font-weight: bold">Notes:</span><br /> Used for taps, spigots, levers, etc.  If neither of the axis flags is enabled, rotation will default to the Z axis. Don't forget the Origin brush!</p>
<p align="center"><a href="../node/955#Top">Top</a></p><br />
<!-- Next Entity-->
<h1><a name="func_tank">func_tank</a></h1>
<p>This entity allows you to create a controllable or automatic gun turret.</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - The gun must have a unique name. If non-player-controllable, the gun can be triggered to activate, otherwise this name is used with a func_tankcontrols entity to give the player control. </p>
<p><span style="font-weight: bold">Target</span> - Event to activate on each fire. </p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows:</p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade) </pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive</pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. 'Solid' mode simply needs a non zero value to work, while in other modes  translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">Global Entity Name</span> - The name of the Global controlling this tank. </p>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">Master</span> - The name of a multisource (or game_team_master) entity. A master must usually be active in order for the entity to work. Thus they act almost like an on/off switch, in their simplest form, and like an AND gate in the case of the multisource.</p>
<p><span style="font-weight: bold">Yaw rate</span> - The speed of the left/right movement of the gun.</p>
<p><span style="font-weight: bold">Yaw range</span> - Range of left/right movement in degrees.</p>
<p><span style="font-weight: bold">Yaw tolerance</span> - defaults at 15.</p>
<p><span style="font-weight: bold">Pitch rate</span> - The speed of the up/down movement of the gun.</p>
<p><span style="font-weight: bold">Pitch range</span> - Range of up/down movement in degrees.</p>
<p><span style="font-weight: bold">Pitch tolerance</span> - Default is 5.</p>
<p><span style="font-weight: bold">Barrel Length</span> - The distance from the center of the origin brush to the tip of the barrel.</p>
<p><span style="font-weight: bold">Barrel Horizontal</span> - Horizontal distance from the center of the origin brush to the center of the Barrel.</p>
<p><span style="font-weight: bold">Barrel Vertical</span> - Vertical distance from the center of the origin brush to the center of the Barrel.</p>
<p><span style="font-weight: bold">Smoke Sprite</span> - The sprite that will be shown at the end of the barrel when the gun is fired.</p>
<p><span style="font-weight: bold">Flash Sprite</span> - The sprite that will be shown at the end of the barrel when the gun is fired.</p>
<p><span style="font-weight: bold">Sprite Scale</span> - Scale of the sprites that appear at the end of the barrel. 1 is normal, 0.5 is half, etc.</p>
<p><span style="font-weight: bold">Rotate Sound</span> - Specify the name of an ambient_generic.</p>
<p><span style="font-weight: bold">Rate of Fire</span> - Number of bullets fired per second.</p>
<p><span style="font-weight: bold">Damage per Bullet</span> - Default is 0, so if you want it to kill things you must enter something.</p>
<p><span style="font-weight: bold">Firing Persistance</span> - Used by non-player-controlled guns to determine for how long the gun carries on firing after the player has left its range.</p>
<p><span style="font-weight: bold">Bullet accuracy</span> - How accurate the gun is. Values:</p>
<pre>0 = perfect shot
1 = small cone
2 = medium cone
3 = large cone
4 = extra-large cone</pre>
<p><span style="font-weight: bold">Minimum target range</span> - Minimum range the target can be at for a non-player-controlled gun to fire.</p>
<p><span style="font-weight: bold">Maximum target range</span> - Maximum range the target can be at for a non-player-controlled gun to fire.</p>
<p><span style="font-weight: bold">Minimum light level</span> - A Value &gt; zero will let this entity emit light, the range is zero and '1'.</p>
<p><span style="font-weight: bold">ZHLT Lightflags</span> - Set optional lightflags. Refer to ZHLTReference for more info.</p>
<p><span style="font-weight: bold">Light Origin Target</span> - Set optional light placement. Refer to ZHLTReference for more info.</p>
<p><span style="font-weight: bold">Bullets</span> - Projectile type: </p>
<pre>0 = none
1 = 9mm
2 = MP5
3 = 12mm</pre>
<h3>Flags</h3>
<blockquote>  <span style="color: #ff0000">(1) Active</span> - If enabled, the gun will be active when the map loads. If not enabled, the gun will need to be triggered to work (if non-player-controlled).<br />
  <span style="color: #ff0000">(16) Only direct</span> - Gun will only fire if the target is in direct line of sight.<br />
  <span style="color: #ff0000">(32) Controllable</span> - If enabled, the gun can be controlled by the player through a func_tankcontrols entity.<br /></blockquote>
<h3>Related Entities</h3>
<a href="../node/955#func_tankcontrols">Func_tankcontrols</a><br />
<a href="../node/955#func_tanklaser">Func_tanklaser</a><br />
<a href="../node/955#func_tankmortar">Func_tankmortar</a><br />
<a href="../node/955#func_tankrocket">Func_tankrocket</a><br />
<a href="../node/959#ambient_generic">Ambient_generic</a>
<p><span style="font-weight: bold">Notes:</span><br />
The func_tank needs to be created facing 0 degrees (to the right in the top (x/y) view). The angle that the weapon faces in-game can be controlled with the compass (Yaw). Targetting an ambient_generic (with its Not Toggled and Start Silent flags enabled) allows you to give the gun a sound. You can also target an env_shooter to shoot out spent shells!</p>
<p align="center"><a href="../node/955#Top">Top</a></p><br />
<hr />
<!--Next Entity -->
<h1><a name="func_tankcontrols">func_tankcontrols</a></h1>
<p>This entity defines an area in which a player can control a func_tank entity.</p>
 <h3>Properties</h3>
<p><span style="font-weight: bold">Tank Entity Name</span> - Set this to the Name of the gun you want to control.</p>
<h3>Flags</h3>
<blockquote>None</blockquote>
<h3>Related Entities</h3>
<a href="../node/955#func_tank">Func_tank</a><br />
<a href="../node/955#func_traincontrols">Func_traincontrols</a>
<p><span style="font-weight: bold">Notes:</span><br />
 Getting the position of this entity right is important. It can be directly behind the gun, or placed for a 'remote control' effect. When 'used' by a player, the player's 'look' movements are translated into relative turret movements. Similar to func_traincontrols.</p>
<p align="center"><a href="../node/955#Top">Top</a></p><br />
<hr />
<!--Next Entity -->
<h1><a name="func_tanklaser">func_tanklaser</a></h1>
<p>This is a func_tank that fires laser beams instead of bullets.</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - If non-player-controllable, the gun can be triggered to activate, otherwise this name is used with a func_tankcontrols entity to give the player control.</p>
<p><span style="font-weight: bold">Target</span> - Event to activate on each shot. </p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows:</p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade) </pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive </pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. 'Solid' mode simply needs a non zero value to work, while in other modes  translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">Global Entity Name</span> - The Name of the Global controlling this laser.</p>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">Master</span> - The name of a multisource (or game_team_master) entity. A master must usually be active in order for the entity to work. Thus they act almost like an on/off switch, in their simplest form, and like an AND gate in the case of the multisource.</p>
<p><span style="font-weight: bold">Yaw rate</span> - The speed of the left/right movement of the gun.</p>
<p><span style="font-weight: bold">Yaw range</span> - Range of left/right movement in degrees.</p>
<p><span style="font-weight: bold">Yaw tolerance</span> - Default is 15.</p>
<p><span style="font-weight: bold">Pitch rate</span> - The speed of the up/down movement of the gun.</p>
<p><span style="font-weight: bold">Pitch range</span> - Range of up/down movement in degrees.</p>
<p><span style="font-weight: bold">Pitch tolerance</span> - Default's to 5.</p>
<p><span style="font-weight: bold">Barrel Length</span> - The distance from the center of the origin brush to the tip of the barrel.</p>
<p><span style="font-weight: bold">Barrel Horizontal</span> - Horizontal distance from the center of the origin brush to the center of the Barrel.</p>
<p><span style="font-weight: bold">Barrel Vertical</span> - Vertical distance from the center of the origin brush to the center of the Barrel.</p>
<p><span style="font-weight: bold">Smoke Sprite</span> - The sprite that will be shown at the end of the barrel when the gun is fired.</p>
<p><span style="font-weight: bold">Flash Sprite</span> - The sprite that will be shown at the end of the barrel when the gun is fired.</p>
<p><span style="font-weight: bold">Sprite Scale</span> - Scale of the sprites that appear at the end of the barrel. (1 is normal, 0.5 is half, etc).</p>
<p><span style="font-weight: bold">Rotate Sound</span> - Specify an ambient_generic.</p>
<p><span style="font-weight: bold">Rate of Fire</span> - Number of bullets fired per second.</p>
<p><span style="font-weight: bold">Damage per Bullet</span> - Default is 0, so if you want it to kill things you must enter something.</p>
<p><span style="font-weight: bold">Firing Persistance</span> - Used by non-player-controlled guns to determine for how long the gun carries on firing after the player has left its range.</p>
<p><span style="font-weight: bold">Bullet accuracy</span> - How accurate the gun is. Values:</p>
<pre>0 = perfect shot
1 = small cone
2 = medium cone
3 = large cone
4 = extra-large cone</pre>
<p><span style="font-weight: bold">Minimum target range</span> - Minimum range the target can be at for a non-player-controlled gun to fire.</p>
<p><span style="font-weight: bold">Maximum target range</span> - Maximum range the target can be at for a non-player-controlled gun to fire.</p>
<p><span style="font-weight: bold">Minimum light level</span> - A Value &gt; zero will let this entity emit light, the range is zero and '1'.</p>
<p><span style="font-weight: bold">ZHLT Lightflags</span> - Set optional lightflags. Refer to ZHLTReference for more info.</p>
<p><span style="font-weight: bold">Light Origin Target</span> - Set optional light placement. Refer to ZHLTReference for more info.</p>
<p><span style="font-weight: bold">env_laser Entity</span> - The Name of the env_laser entity to use.</p>
<h3>Flags</h3>
<blockquote><span style="color: #ff0000">(1) Active</span> - If enabled, the gun will be active when the map loads. If not enabled, the gun will need to be triggered to work (if non-player-controlled).<br />
   <span style="color: #ff0000">(16) Only direct</span> - Laser will only fire if the target is in direct line of sight (when non-player-controlled).<br />
   <span style="color: #ff0000">(32) Controllable</span> - If enabled, the gun can be controlled by the player through a func_tankcontrols entity.<br /></blockquote>
<h3>Related Entities</h3>
<a href="../node/954#env_laser">Env_laser</a><br />
<a href="../node/955#func_tank">Func_tank</a><br />
<a href="../node/955#func_tankmortar">Func_tankmortar</a><br />
<a href="../node/955#func_tankrocket">Func_tankrocket</a><br />
<a href="../node/959#ambient_generic">Ambient_generic</a>
<p><span style="font-weight: bold">Notes:</span><br />
The func_tanklaser needs to be created facing 0 degrees (to the right in the top (x/y) view). The angle that the weapon faces in-game can be controlled with the compass (Yaw). Targetting an ambient_generic (with its Not Toggled and Start Silent flags enabled) allows you to give the gun a sound. The env_laser entity is used to determine how the laser beams look. The Target of the env_laser should be the Name of the func_tanklaser.</p>
<p align="center"><a href="../node/955#Top">Top</a></p><br />
<!-- Next Entity -->
<h1><a name="func_tankmortar">func_tankmortar</a></h1>
<p>This is basically mortar-firing func_tank. Most commonly used for 'real' tanks.</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - If non-player-controllable, the gun can be triggered to activate, otherwise this name is used with a func_tankcontrols entity to give the player control.</p>
<p><span style="font-weight: bold">Target</span> - Event to activate on each shot. </p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows:</p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade) </pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive </pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. 'Solid' mode simply needs a non zero value to work, while in other modes  translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">Global Entity Name</span> - The name of the Global controlling this tank. </p>
<p><span style="font-weight: bold">Yaw rate</span> - The speed of the left/right movement of the gun.</p>
<p><span style="font-weight: bold">Yaw range</span> - Range of left/right movement in degrees.</p>
<p><span style="font-weight: bold">Yaw tolerance</span> - Default is 15.</p>
<p><span style="font-weight: bold">Pitch rate</span> - The speed of the up/down movement of the gun.</p>
<p><span style="font-weight: bold">Pitch range</span> - Range of up/down movement in degrees.</p>
<p><span style="font-weight: bold">Pitch tolerance</span> - Default is 5.</p>
<p><span style="font-weight: bold">Barrel Length</span> - The distance from the center of the origin brush to the tip of the barrel.</p>
<p><span style="font-weight: bold">Barrel Horizontal</span> - Horizontal distance from the center of the origin brush to the center of the Barrel.</p>
<p><span style="font-weight: bold">Barrel Vertical</span> - Vertical distance from the center of the origin brush to the center of the Barrel.</p>
<p><span style="font-weight: bold">Smoke Sprite</span> - The sprite that will be shown at the end of the barrel when the gun is fired.</p>
<p><span style="font-weight: bold">Flash Sprite</span> - The sprite that will be shown at the end of the barrel when the gun is fired.</p>
<p><span style="font-weight: bold">Sprite Scale</span> - Scale of the sprites that appear at the end of the barrel. (1 is normal, 0.5 is half, etc).</p>
<p><span style="font-weight: bold">Rotate Sound</span> - Specify an ambient_generic.</p>
<p><span style="font-weight: bold">Rate of Fire</span> - Number of bullets fired per second.</p>
<p><span style="font-weight: bold">Damage per Bullet</span> - Default is 0, so if you want it to kill things you must enter something.</p>
<p><span style="font-weight: bold">Firing Persistance</span> - Used by non-player-controlled guns to determine for how long the gun carries on firing after the player has left its range.</p>
<p><span style="font-weight: bold">Bullet accuracy</span> - How accurate the gun is.   Values:</p>
<pre>0 = perfect shot
1 = small cone
2 = medium cone
3 = large cone
4 = extra-large cone</pre>
<p><span style="font-weight: bold">Minimum target range</span> - Minimum range the target can be at for a non-player-controlled gun to fire.</p>
<p><span style="font-weight: bold">Maximum target range</span> - Maximum range the target can be at for a non-player-controlled gun to fire.</p>
<p><span style="font-weight: bold">Minimum light level</span> - A Value &gt; zero will let this entity emit light, the range is zero and '1'.</p>
<p><span style="font-weight: bold">ZHLT Lightflags</span> - Set optional lightflags. Refer to ZHLTReference for more info.</p>
<p><span style="font-weight: bold">Light Origin Target</span> - Set optional light placement. Refer to ZHLTReference for more info.</p>
<p><span style="font-weight: bold"> Explosion Magnitude</span> - The size of the explosion produced when the  round hits its target.</p>
<h3>Flags</h3>
<blockquote><span style="color: #ff0000">(1) Active</span> - If enabled, the gun will be active when the map loads. If not enabled, the gun will need to be triggered to work (if non-player-controlled).<br />
<span style="color: #ff0000">(16) Only direct</span> - Laser will only fire if the target is in direct line of sight (when non-player-controlled).<br />
<span style="color: #ff0000">(32) Controllable</span> - If enabled, the gun can be controlled by the player through a func_tankcontrols entity.<br /></blockquote>
<h3>Related Entities</h3>
<a href="../node/954#env_shake">Env_shake</a><br />
<a href="../node/955#func_tank">Func_tank</a><br />
<a href="../node/955#func_tanklaser">Func_tanklaser</a><br />
<a href="../node/955#func_tankrocket">Func_tankrocket</a>
<p><span style="font-weight: bold">Notes:</span><br />
 The func_tankmortar needs to be created facing 0 degrees (to the right in the top (x/y) view). The angle that the weapon faces in-game can be controlled with the compass (Yaw).Targetting an ambient_generic (with its Not Toggled and Start Silent flags enabled) allows you to give the gun a sound. Doesn't fire a visible projectile. Contact is instant after firing. If you want a shake effect when the gun fires, use an env_shake. Giving it the same name as the ambient_generic used for sound makes the func_tankmortar target both.</p>
<p align="center"><a href="../node/955#Top">Top</a></p><br />
<!-- by Next Ent -->
<h1><a name="func_tankrocket">func_tankrocket</a></h1>
<p>A func_tank that fires visible rockets (like the ones from the RPG).</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - If non-player-controllable, the gun can be triggered to activate, otherwise this name is used with a func_tankcontrols entity to give the player control.</p>
<p><span style="font-weight: bold">Target</span> - Event to activate on each shot. </p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows:</p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade) </pre>
 <p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive </pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. 'Solid' mode simply needs a non zero value to work, while in other modes  translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">Global Entity Name</span> - The name of the Global controlling this tank. </p>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">Master</span> - The name of a multisource (or game_team_master) entity. A master must usually be active in order for the entity to work. Thus they act almost like an on/off switch, in their simplest form, and like an AND gate in the case of the multisource.</p>
<p><span style="font-weight: bold">Yaw rate</span> - The speed of the left/right movement of the gun.</p>
<p><span style="font-weight: bold">Yaw range</span> - Range of left/right movement in degrees.</p>
<p><span style="font-weight: bold">Yaw tolerance</span> - Default is 15.</p>
<p><span style="font-weight: bold">Pitch rate</span> - The speed of the up/down movement of the gun.</p>
<p><span style="font-weight: bold">Pitch range</span> - Range of up/down movement in degrees.</p>
<p><span style="font-weight: bold">Pitch tolerance</span> - Default is 5.</p>
<p><span style="font-weight: bold">Barrel Length</span> - The distance from the center of the origin brush to the tip of the barrel.</p>
<p><span style="font-weight: bold">Barrel Horizontal</span> - Horizontal distance from the center of the origin brush to the center of the Barrel.</p>
<p><span style="font-weight: bold">Barrel Vertical</span> - Vertical distance from the center of the origin brush to the center of the Barrel brush to the center of the Barrel.</p>
<p><span style="font-weight: bold">Smoke Sprite</span> - The sprite that will be shown at the end of the barrel when the gun is fired.</p>
<p><span style="font-weight: bold">Flash Sprite</span> - The sprite that will be shown at the end of the barrel when the gun is fired.</p>
<p><span style="font-weight: bold">Sprite Scale</span> - Scale of the sprites that appear at the end of the barrel. (1 is normal, 0.5 is half, etc).</p>
<p><span style="font-weight: bold">Rotate Sound</span> - specify an ambient_generic.</p>
<p><span style="font-weight: bold">Rate of Fire</span> - Number of bullets fired per second.</p>
<p><span style="font-weight: bold">Damage per Bullet</span> - Default is 0, so if you want it to kill things you must enter something.</p>
<p><span style="font-weight: bold">Firing Persistance</span> - Used by non-player-controlled guns to determine for how long the gun carries on firing after the player has left its range.</p>
<p><span style="font-weight: bold">Bullet accuracy</span> - How accurate the gun is. 
Values:</p>
<pre>0 = perfect shot
1 = small cone
2 = medium cone
3 = large cone
4 = extra-large cone</pre>
<p><span style="font-weight: bold">Minimum target range</span> - Minimum range the target can be at for a non-player-controlled gun to fire.</p>
<p><span style="font-weight: bold">Maximum target range</span> - Maximum range the target can be at for a non-player-controlled gun to fire.</p>
<p><span style="font-weight: bold">Minimum light level</span> - A Value &gt; zero will let this entity emit light, the range is zero and '1'.</p>
<p><span style="font-weight: bold">ZHLT Lightflags</span> - Set optional light flags, See ZHLTReference for more info.</p>
<p><span style="font-weight: bold">Light Origin Target</span> - Set optional light placement, see ZHLTReference for more info. </p>
<h3>Flags</h3>
<blockquote><span style="color: #ff0000">(1) Active</span> - If enabled, the gun will be active when the map loads. If not enabled, the gun will need to be triggered to work (if non-player-controlled).<br />
<span style="color: #ff0000">(16) Only direct</span> - Laser will only fire if the target is in direct line of sight (when non-player-controlled).<br />
<span style="color: #ff0000">(32) Controllable</span> - If enabled, the gun can be controlled by the player through a func_tankcontrols entity.</blockquote>
<h3>Related Entities</h3>
<a href="../node/955#func_tank">Func_tank</a><br />
<a href="../node/955#func_tanklaser">Func_tanklaser</a><br />
<a href="../node/955#func_tankmortar">Func_tankmortar</a><br />
<a href="../node/959#ambient_generic">Ambient_generic</a>
<p><span style="font-weight: bold">Notes:</span><br />The func_tankrocket needs to be created facing 0 degrees (to the right in the top (x/y) view). The angle that the weapon faces in-game can be controlled with the compass (Yaw). Targetting an ambient_generic (with its Not Toggled and Start Silent flags enabled) allows you to give the gun a sound.
Setting the Rate of Fire too high may result in the rockets hitting each other as they leave the barrel, so anything in the vicinity of the gun will be blown to pieces (including the player)</p>
<p align="center"><a href="../node/955#Top">Top</a></p><br />
<hr />
<!--Next Entity -->
<h1><a name="func_trackautochange">func_trackautochange</a></h1>
<p>This entity lets you switch a train that is not being controlled by the player to a new track via a moving piece of track, either rotating, or ascending / decending, or both. </p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - Using the Name to trigger the func_conveyor will cause it to reverse direction.</p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows:</p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade) </pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive </pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. 'Solid' mode simply needs a non zero value to work, while in other modes, translucency are controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">Global Entity Name</span> - The name of the Global controlling this autochange. (globalname)</p> 
<p><span style="font-weight: bold">Move Sound</span> - These apply to the trackchange when it occurs. The options are as follows:</p>
<pre>0 = No Sound
1 = big elev 1
2 = big elev 2
3 = tech elev 1
4 = tech elev 2
5 = tech elev 3
6 = freight elev 1
7 = freight elev 2
8 = heavy elev
9 = rack elev
10 = rail elev
11 = squeek elev
12 = odd elev 1
13 = odd elev 2 </pre>
<p><span style="font-weight: bold">Stop Sound</span> - These apply to the trackchange when it stops. The options are:</p>
<pre>0 = no sound
1 = big elev stop 1
2 = big elev stop 2
3 = freight elev stop
4 = heavy elev stop
5 = rack stop
6 = rail stop
7 = squeek stop
8 = quick stop </pre>
<p><span style="font-weight: bold">Sound Volume</span> - Volume in the range 0.0 - 1.0.</p>
<p><span style="font-weight: bold">Travel altitude</span> - Altitude to ascend or descend (use negative values for the latter, or 0 to disable altitude change).</p>
<p><span style="font-weight: bold">Spin Amount</span> - This is the amount in degrees the track will turn on its way up / down.</p>
<p><span style="font-weight: bold">Train to Switch</span> - The Name of the train that is using the track.</p>
<p><span style="font-weight: bold">Top Track</span> - This is the Name of the last path_corner in the upper track.</p>
<p><span style="font-weight: bold">Bottom Track</span> -The Name of the first path_corner in the lower track.</p>
<p><span style="font-weight: bold">Move/Rotate Speed</span> - The speed in units/sec that the track platform will move. If the Rotate Only flag is set this will be the speed of rotation only.</p>
<p><span style="font-weight: bold">ZHLT Lightflags</span> - Set optional lightflags. Refer to ZHLTReference for more info.</p>
<p><span style="font-weight: bold">Light Origin Target</span> - Set optional light placement. Refer to ZHLTReference for more info.</p>
<p><span style="font-weight: bold">Travel Altitude</span> - The distance the object will move.</p>
<p><span style="font-weight: bold">Minimum light level</span> - A Value &gt; zero will let this entity emit light, the range is zero and '1'.</p>
<h3>Flags</h3>
<blockquote><span style="color: #ff0000">(1) Auto activate train</span> - <br />
 <span style="color: #ff0000">(2) Relink track</span>  - <br />
 <span style="color: #ff0000">(8) Start at bottom</span>  - Moving track will start in the bottom position.<br />
 <span style="color: #ff0000">(16) Rotate only</span>  - Track will not move up and down.<br />
 <span style="color: #ff0000">(64) X axis</span>  - Rotate around the X axis.<br />
 <span style="color: #ff0000">(128) Y axis</span>  - Rotate around the Y axis.<br /></blockquote>
<h3>Related Entities</h3>
<a href="../node/959#path_track">Path_track	</a><br />
<a href="../node/955#func_trackchange">Func_trackchange</a><br />
<a href="../node/955#func_tracktrain">Func_tracktrain</a><br />
<a href="../node/955#func_train">Func_train</a><br />
<a href="../node/955#func_traincontrols">Func_traincontrols</a>
<p><span style="font-weight: bold">Notes:</span><br />
It is important that the last path_track should not have a Next Stop Target. For this path_track to function correctly, set the property Fire on Dead End to the Name of the func_trackautochange. An origin brush needs to be part of the entity to specify its axis of rotation. The axis defaults to <span style="color: #ff0000">Z</span> if neither of the axis flags is enabled.</p>
<p align="center"><a href="../node/955#Top">Top</a></p><br />
<hr />
<!-- by Next Entity -->
<h1><a name="func_trackchange">func_trackchange</a></h1>
<p>This entity allows you to create a rotating platform that will switch a func_tracktrain's path, used mainly with player-controllable trains.</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - Using the Name to trigger the func_conveyor will cause it to reverse direction.</p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows:</p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade) </pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive </pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. 'Solid' mode simply needs a non zero value to work, while in other modes, translucency are controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">Global Entity Name</span> - The name of the Global controlling this trackchange.</p> 
<p><span style="font-weight: bold">Move Sound</span> - These apply to the trackchange when it occurs. The options are as follows:</p>
<pre>0 = No Sound
1 = big elev 1
2 = big elev 2
3 = tech elev 1
4 = tech elev 2
5 = tech elev 3
6 = freight elev 1
7 = freight elev 2
8 = heavy elev
9 = rack elev
10 = rail elev
11 = squeek elev
12 = odd elev 1
13 = odd elev 2 </pre>
<p><span style="font-weight: bold">Stop Sound</span> - These apply to the trackchange when it stops. The options are:</p>
<pre>0 = no sound
1 = big elev stop 1
2 = big elev stop 2
3 = freight elev stop
4 = heavy elev stop
5 = rack stop
6 = rail stop
7 = squeek stop
8 = quick stop </pre>
<p><span style="font-weight: bold">Sound Volume</span> - Volume in the range 0.0 - 1.0.</p>
<p><span style="font-weight: bold"> Travel altitude (height)</span> - Altitude to ascend or descend (use negative values  for the latter, or 0 to disable altitude change).</p>
<p><span style="font-weight: bold">Travel altitude</span> - Altitude to ascend or descend (use negative values for the latter, or 0 to disable altitude change).</p>
<p><span style="font-weight: bold">Spin Amount</span> - This is the amount in degrees the track will turn on its way up / down.</p>
<p><span style="font-weight: bold">Train to Switch</span> - The Name of the train that is using the track.</p>
<p><span style="font-weight: bold">Top Track</span> - This is the Name of the last path_corner in the upper track.</p>
<p><span style="font-weight: bold">Bottom Track</span> -The Name of the first path_corner in the lower track.</p>
<p><span style="font-weight: bold">Move/Rotate Speed</span> - The speed in units/sec that the track platform will move. If the Rotate Only flag is set this will be the speed of rotation only.</p>
<p><span style="font-weight: bold">ZHLT Lightflags</span> - Set optional lightflags. Refer to ZHLTReference for more info.</p>
<p><span style="font-weight: bold">Light Origin Target</span> - Set optional light placement. Refer to ZHLTReference for more info.</p>
<p><span style="font-weight: bold">Minimum light level</span> - A Value &gt; zero will let this entity emit light, the range is zero and '1'.</p>
<h3>Flags</h3>
<blockquote><span style="color: #ff0000">(1) Auto activate train</span> - ??<br />
 <span style="color: #ff0000">(2) Relink track</span>  - ??<br />
 <span style="color: #ff0000">(8) Start at bottom</span>  - Moving track will start in the bottom position.<br />
 <span style="color: #ff0000">(16) Rotate only</span>  - Track will not move up and down.<br />
 <span style="color: #ff0000">(64) X axis</span>  - Rotate around the X axis.<br />
 <span style="color: #ff0000">(128) Y axis</span>  - Rotate around the Y axis.<br /></blockquote>
<h3>Related Entities</h3>
<a href="../node/955#func_trackautochange">Func_trackautochange</a><br />
<a href="../node/955#func_tracktrain">Func_tracktrain</a><br />
<a href="../node/955#func_train">Func_train</a><br />
<a href="../node/955#func_traincontrols">Func_traincontrols</a><br />
<a href="../node/959#path_track">Path_track</a>
<p><span style="font-weight: bold">Notes:</span><br />
Identical to func_trackautochange except that this one is for player-controlled trains. An origin brush needs to be part of the entity to specify its axis of rotation. The axis defaults to Z if neither of the axis flags is enabled.</p>
<p align="center"><a href="../node/955#Top">Top</a></p><br />
<hr />
<!-- Next Entity -->
<h1><a name="func_tracktrain">func_tracktrain</a></h1>
<p>This entity allows you to create a player-controllable train / platform etc. that follows a path.</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - Using the Name to trigger the func_conveyor will cause it to reverse direction.</p>
<p><span style="font-weight: bold">Global Entity Name</span> - If your trian is going to cross level transitions, it'll need a global name.</p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows:</p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade) </pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive </pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. 'Solid' mode simply needs a non zero value to work, while in other modes, translucency are controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">ZHLT Lightflags</span> - Set optional lightflags. Refer to ZHLTReference for more info.</p>
<p><span style="font-weight: bold">Light Origin Target</span> - Set optional light placement. Refer to ZHLTReference for more info.</p>
<p><span style="font-weight: bold">First stop Target</span> - The name of the path_track to start at.</p>
<p><span style="font-weight: bold">Sound</span> - Values:</p>
<pre>0 = none
1 = rail 1
2 = rail 2
3 = rail 3
4 = rail 4
5 = rail 6
6 = rail 7</pre>
<p><span style="font-weight: bold">Distance between the wheels</span> - This determines how the train behaves when turning corners. Generally the length of the object works here.</p>
<p><span style="font-weight: bold">Height above track</span> - This is the height above the path_track that the train will ride, based on the location of the train's origin brush.</p>
<p><span style="font-weight: bold">Initial Speed</span> - The speed the train starts at, until overridden by player control or path_track settings.</p>
<p><span style="font-weight: bold">Speed</span> - The maximum speed the player can make a controllable train go in units/second. You can really have some fun here!</p>
<p><span style="font-weight: bold">Damage on crush</span> - If train movement is blocked by the player, the player will take this much damage.</p>
<p><span style="font-weight: bold"> Volume</span> - Range: 0 - 10.</p>
<p><span style="font-weight: bold">Bank angle on turns</span> - This is the angle the train will tilt when    cornering.</p>
<p><span style="font-weight: bold">Minimum Light Level</span> - If you want the train to emit light, set this to <span style="color: #ff0000">1</span> The range is zero to '1'</p>
<h3>Flags</h3>
<blockquote><span style="color: #ff0000">(1) No pitch</span> - Enabling this will make the train rotate on the Z axis only (yaw - left and right)<br />
<span style="color: #ff0000">(2) No User Control</span> - Removes the player's ability to control the train.<br />
  <span style="color: #ff0000">(8) Passable</span> - Makes train non-solid.</blockquote>
<h3>Related Entities</h3>
<a href="../node/955#func_trackchange">Func_trackchange</a><br />
<a href="../node/955#func_trackautochange">Func_trackautochange</a><br />
<a href="../node/955#func_train">Func_train</a><br />
<a href="../node/955#func_traincontrols">Func_traincontrols</a><br />
<a href="../node/959#path_track">Path_track</a>
<p><span style="font-weight: bold">Notes:</span><br />
When you create the brush model it must face west (90 degrees - to the left in the top view). When it spawns in the game it will automatically move to the first path_track and orientate itself to face the second path_track.   func_traincontrol entities allow the player to control the train. They are not part of the func_tracktrain and their placement only determines the area of use. They will automatically stay in that area relative to the train as it moves. An origin brush needs to be part of the entity to specify its axes. This is one of the few entities that can have 'clip' brushes as part of itself, which prevent player movement (i.e. to stop the player falling off the sides).</p>
<p align="center"><a href="../node/955#Top">Top</a></p><br />
<hr />
<!-- Next Entity -->
<h1><a name="func_train">func_train</a></h1>
<p>This entity creates a moving object. Not just used for trains; in fact, the func_train is more commonly seen in elevators, platforms, laser targets etc.</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - Using the Name to trigger the func_conveyor will cause it to reverse direction.</p>
<p><span style="font-weight: bold">Global Entity Name</span> - If your trian is going to cross level transitions, it'll need a global name.</p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows:</p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade) </pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive </pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. 'Solid' mode simply needs a non zero value to work, while in other modes, translucency are controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">ZHLT Lightflags</span> - Set optional lightflags. Refer to ZHLTReference for more info.</p>
<p><span style="font-weight: bold">Light Origin Target</span> - Set optional light placement. Refer to ZHLTReference for more info.</p>
<p><span style="font-weight: bold">First stop Target</span> - The name of the path_track to start at.</p>
<p><span style="font-weight: bold">Move Sound</span> - options are as follows:</p>
<pre>0 = No Sound
1 = big elev 1
2 = big elev 2
3 = tech elev 1
4 = tech elev 2
5 = tech elev 3
6 = freight elev 1
7 = freight elev 2
8 = heavy elev
9 = rack elev
10 = rail elev
11 = squeek elev
12 = odd elev 1
13 = odd elev 2 </pre>
<p><span style="font-weight: bold">Stop Sound</span> - the options are:</p>
<pre>0 = no sound
1 = big elev stop 1
2 = big elev stop 2
3 = freight elev stop
4 = heavy elev stop
5 = rack stop
6 = rail stop
7 = squeek stop
8 = quick stop </pre>
<p><span style="font-weight: bold">Speed</span> - The speed the entity will move at in units/second.</p>
<p><span style="font-weight: bold">Angular velocity</span> - Sets up axial rotation. Format: Y Z X.</p>
<p><span style="font-weight: bold">Damage on crush</span> - If the player is caught between the entity and a solid brush, this is the amount of damage he will sustain.</p>
<p><span style="font-weight: bold">Contents</span> - </p>
<p><span style="font-weight: bold">Sound Volume</span> - Range: 0.0 - 1.0</p>
<p><span style="font-weight: bold">Minimum Light Level</span> - If you want this entity to emit light, set this to '1'.</p>
<h3>Flags</h3>
<blockquote><span style="color: #ff0000">(8) Not solid</span> - With this flag enabled, a brush-based entity will not be solid, so will not affect the player's movement in the way solid brushes do. Useful for things like moving laser targets that musn't obstruct the player.</blockquote>
<h3>Related Entities</h3>
<a href="../node/955#func_tracktrain">Func_tracktrain</a><br />
<a href="../node/955#func_traincontrols">Func_traincontrols</a><br />
<a href="../node/959#path_corner">Path_corner</a>
<p><span style="font-weight: bold">Notes:</span><br />
After spawning, the func_train moves instantly to its First Stop Target path_corner. So the entity can be created in another area (and therefore lighting can be controlled), but it will always appear in the right place to the player. When making moving targets for things like env_laser, set Render Mode to Texture and Render Amount to 0, and enable the Not Solid flag. No origin brush is required - the func_train aligns itself so that its centre is right over the centre of its path_corners.</p>
<p align="center"><a href="../node/955#Top">Top</a></p><br />
<hr />
<!-- Entity Next -->
<h1><a name="func_traincontrols">func_traincontrols</a></h1>
<p>This entity defines the area in which the player can control a func_tracktrain, relative to the train (since they move). Similar to func_tankcontrols.</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Train Name</span> - Set this to the Name of the func_tracktrain you want to control.</p>
<h3>Flags</h3>
<blockquote>None</blockquote>
<h3>Related Entities</h3>
<a href="../node/955#func_trackchange">Func_trackchange</a><br />
<a href="../node/955#func_trackautochange">Func_trackautochange</a><br />
<a href="../node/955#func_tracktrain">Func_tracktrain</a><br />
<a href="../node/955#func_train">Func_train</a><br />
<a href="../node/959#path_track">Path_track</a>
<p><span style="font-weight: bold">Notes:</span><br />None </p>
<p align="center"><a href="../node/955#Top">Top</a></p><br />
<hr />
<!-- Next Entity -->
<h1><a name="func_wall">func_wall</a></h1>
<p>This entity lets you create a stationary piece of geometry in your level which can then be modifed (through its rendering properties) for a number of effects. Often used for performace reasons, and for things like unbreakable glass, masked textures (fences, ladders).</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - If the func_wall is covered by a switchable texture (e.g. <span style="color: #ff0000">+0~light3a</span> , <span style="color: #ff0000">+A~light3a</span>) , then use this name to toggle the texture.</p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows:</p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade) </pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive </pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. 'Solid' mode simply needs a non zero value to work, while in other modes  translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">Global Entity Name</span> - The name of the Global controlling this wall.</p>
<p><span style="font-weight: bold">Minimum light level</span> - A Value &gt; zero will let this entity emit light, the range is zero and '1'.</p>
<p><span style="font-weight: bold">ZHLT Lightflags</span> - Set optional lightflags. Refer to ZHLTReference for more info.</p>
<p><span style="font-weight: bold">Light Origin Target</span> - Set optional light placement. Refer to ZHLTReference for more info.</p>
<h3>Flags</h3>
<blockquote><span style="color: #ff0000">(2048) Not in Deathmatch</span> - If this flag is set on, the entity will not appear in deathmatch games.</blockquote>
<h3>Related Entities</h3>
<a href="../node/955#func_wall_toggle">Func_wall_toggle</a><br />
<a href="../node/955#func_ladder">Func_ladder</a>
<p><span style="font-weight: bold">Notes:</span><br />
<span style="font-weight: bold">Unbreakable windows</span>: Set the Render Mode to Texture, and the FX amount to about 100. This will make the entity see-through.<br />
<span style="font-weight: bold">Masked textures</span>: (blue background, prefixed with <span style="color: #ff0000">{</span> ): Apply a masked texture, then set the Render mode to Solid and the FX Amount to 255. The blue areas on the texture will not show up in the game.<br />
<span style="font-weight: bold">Small / complex objects</span>: Brush entities break up other world brushes (which can cause harsh transitions between light and dark, and performance decreases), so bind small stuff (light fittings, pipe flanges etc.) to func_wall entities. Beware of the fact that entities bound together (as one entity) over a large area will all be visible by the engine at the same time.</p>
<p align="center"><a href="../node/955#Top">Top</a></p><br />
<hr />
<!-- Next Entity -->
<h1><a name="func_wall_toggle">func_wall_toggle</a></h1>
<p>The func_wall_toggle is a func_wall that is made invisible when triggered.</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - Provide a name to enable the entity to be triggered visible / invisible.</p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows:</p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade) </pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive </pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. 'Solid' mode simply needs a non zero value to work, while in other modes  translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">Global Entity Name</span> - The name of the Global that controlls this wall.</p>
<p><span style="font-weight: bold">Minimum light level</span> - A Value &gt; zero will let this entity emit light, the range is zero and '1'.</p>
<p><span style="font-weight: bold">ZHLT Lightflags</span> - Set optional lightflags. Refer to ZHLTReference for more info.</p>
<p><span style="font-weight: bold">Light Origin Target</span> - Set optional light placement. Refer to ZHLTReference for more info.</p>
<h3>Flags</h3>
<blockquote><span style="color: #ff0000">(1) Starts invisible</span> - Use this if you are triggering the wall and want it to start in an invisible state.<br />
<span style="color: #ff0000">(2048) Not in Deathmatch</span> - If this flag is set on, the entity will not appear in deathmatch games.</blockquote>
<h3>Related Entities</h3>
<a href="../node/955#func_wall">Func_wall</a>
<p><span style="font-weight: bold">Notes:</span><br />
Concept seems similar to func_illusionary, but illusionary is 'not solid' (with optional invisibility... which makes it effectively the same), while this becomes 'not there'. Illusionary is always not solid; func_wall_toggle isn't always 'not there'. Just depends on what you're trying to achieve :)</p>
<p align="center"><a href="../node/955#Top">Top</a></p><br />
<hr />
<!-- Next Entity -->
<h1><a name="func_water">func_water</a></h1>
<p>You guessed it.... Water.<br /> A water texture (one prefixed with <span style="color: #ff0000">!</span>) will act as water, but binding it to an entity gives added advantages. By the way, this entity looks a lot like func_door, because it's designed to be able to move (flooding etc.)</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - Provide a name to use as a trigger for this entity. </p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows: </p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade) </pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive </pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. 'Solid' mode simply needs a non zero value to work, while in other modes translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">Global Entity Name</span> - The name of the Global controlling the water.</p>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Set the direction of push here.</p>
<p><span style="font-weight: bold">KillTarget</span> - The entity 'Named' here will be removed from the game forever, when the door is triggered.</p>
<p><span style="font-weight: bold">Speed</span> - The speed the door will move.</p>
<p><span style="font-weight: bold">Master</span> - The name of a multisource (or game_team_master) entity. A master must usually be active in order for the entity to work. Thus they act almost like an on/off switch, in their simplest form, and like an AND gate in the case of the multisource. If the specified 'Master' is not active, the door will be locked.</p>
<p><span style="font-weight: bold">Move Sound</span> - Options are as follows: </p>
<pre>0 = No Sound
1 = Servo (Sliding)
2 = Pneumatic (Sliding)
3 = Pneumatic (Rolling)
4 = Vacuum
5 = Power Hydraulic
6 = Large Rollers
7 = Track Door
8 = Snappy Metal Door  </pre>
<p><span style="font-weight: bold">Stop Sound</span> - the options are: </p>
<pre>0 = No Sound 
1 = Clang with brake 
2 = Clang reverb 
3 = Ratchet Stop 
4 = Chunk 
5 = Light airbrake 
6 = Metal Slide Stop 
7 = Metal Lock Stop 
8 = Snappy Metal Stop</pre>
<p><span style="font-weight: bold">Delay before Close</span> - This is the time in seconds the door will remain open after opening, '-1' makes the door stay open.</p>
<p><span style="font-weight: bold">Lip</span> - The number of units 'in relation to the door width' that remain after opening. A negative value <span style="color: #ff0000">-10</span> will make the door move it's width <span style="color: #ff0000">+10</span> units in the direction chosen.</p>
<p><span style="font-weight: bold">Damamge Inflicted when Blocked</span> - This figure is how much damage the player will suffer if caught in the door.</p>
<p><span style="font-weight: bold">Message if triggered</span> - </p>
<p><span style="font-weight: bold">Target</span> - Event to activate on opening.</p>
<p><span style="font-weight: bold">Fire on Close</span> - The entity to trigger, when this entity returns to it's starting position. </p>
<p><span style="font-weight: bold">Health</span> - The amount of damage required before the water opens. I am sure there is a use for this... I just haven't figured it out yet.</p>
<p><span style="font-weight: bold">Locked Sound</span> - Sounds that play when the play is 'locked'. Options are:</p>
<pre>0 = None
2 = Access Denied
8 = Small zap
10 = Buzz
11 = Buzz Off
12 = Latch Locked</pre>
<p><span style="font-weight: bold">Unlocked Sound</span> - Sound to play when the door is 'unlocked'. Options are:</p>
<pre>0 = None
1 = Big zap &amp; Warmup
3 = Access Granted
4 = Quick Combolock
5 = Power Deadbolt 1
6 = Power Deadbolt 2
7 = Plunger 
8 = Small zap
9 = Keycard Sound
10 = Buzz
</pre>
<p><span style="font-weight: bold">Locked Sentence</span> - Sentence that is spoken when entity is 'locked'. Options are:</p>
<pre>1 = Gen. Access Denied
2 = Security Lockout
3 = Blast Door
4 = Fire Door
5 = Chemical Door  
</pre>
<p><span style="font-weight: bold">Unlocked Sentence</span> - Sentence that is spoken when door is 'unlocked'. Options are:</p>
<pre>1 = Gen. Access Granted
2 = Security Disengaged
3 = Blast Door
4 = Fire Door
5 = Chemical Door
6 = Radiation Door
7 = General Containment
8 = Maintenance area  
</pre>
<p><span style="font-weight: bold">Minimum light level</span> - A Value &gt; zero will let this entity emit light,  the range is zero and '1'.</p>
<p><span style="font-weight: bold">ZHLT Lightflags</span> - Set optional lightflags. Refer to ZHLTReference for more info.</p>
<p><span style="font-weight: bold">Light Origin Target</span> - Set optional light placement. Refer to ZHLTReference for more info.</p>
<p><span style="font-weight: bold">Contents</span> - Values:</p>
<pre>-3 = water
-4 = slime
-5 = lava</pre>
<p><span style="font-weight: bold">Wave Height</span> - Overrides the height set in worldspawn.</p>
<h3>Flag Properties</h3>
<blockquote><span style="color: #ff0000">(1) Starts open</span> - The door will 'Start Open'.<br />
<span style="color: #ff0000">(4) Don't link</span> - <br />
<span style="color: #ff0000">(8) Passable</span> - Not Solid: an entity with this flag enabled will not obstruct the player or monsters.<br />
<span style="color: #ff0000">(32)Toggle</span> - With this flag set on, an entity can be turned on and off, either by the player, or by being triggered.<br />
<span style="color: #ff0000">(256) Use Only</span> - Player must 'Use' to open. Checking this flag prevents the door being triggered any other way.<br />
<span style="color: #ff0000">(512) Monsters can't</span> - Monsters with arms (Zombies) can't use this door.<br />
<span style="color: #ff0000">Not in Deathmatch</span> - If this flag is set on, the entity will not appear in deathmatch games.</blockquote>
<h3>Related Entities</h3>
<a href="../node/959#worldspawn">Worldspawn</a><br />
<a href="../node/955#func_conveyor">Func_conveyor</a><br />
<a href="../node/961#trigger_push">Trigger_push</a><br />
<a href="../node/955#func_door">Func_door</a>
<p><span style="font-weight: bold">Notes</span><br />
You can set the default wave height in the worldspawn properties (Map -> Map Properties) and this will effect all func_water entities in the map, but if you want less wave height for a particular entity, use the Wave Height property. Some of the func_door-derived properties don't work with func_water. To get the water to look like it's flowing, use a water texture name that starts with <span style="color: #ff0000">scroll</span>, (ie: SCROLLWATER1) and place it on a func_conveyor. The direction the "water" will flow is decided by the texture angle settings and not the conveyor direction.</p>
<p align="center"><a href="../node/955#Top">Top</a></p><br />
<hr />
<p align="center">Next Entity Guide <a href="../node/956">Game Entities</a></p>
<br />
<hr />
<!--EOF@1941--></ul><h1 id="956" name="956" class="book-h3">Game</h1><ul><!-- 
Submitted by Andy 
Updated XHTML FEB 05 -Andy
-->
<h1><a name="Top">Half-Life Game Entities</a></h1>
 Originally written for <a href="http://www.twhl.co.za/">TWHL</a> .
<!--Start Description-->
<ul>
<li><a href="../node/956#game_counter">Game_counter</a></li>
<li><a href="../node/956#game_counter_set">Game_counter_set</a></li>
<li><a href="../node/956#game_end">Game_end</a></li>
<li><a href="../node/956#game_playerequip">Game_player_equip</a></li>
<li><a href="../node/956#game_player_hurt">Game_player_hurt</a></li>
<li><a href="../node/956#game_player_team">Game_player_team</a></li>
<li><a href="../node/956#game_score">Game_score</a></li>
<li><a href="../node/956#game_team_master">Game_team_master</a></li>
<li><a href="../node/956#game_team_set">Game_team_set</a></li>
<li><a href="../node/956#game_text">Game_text</a></li>
<li><a href="../node/956#game_zone_player">Game_zone_player</a></li>
</ul>
<!--Start Entity--><hr />
<h1><a name="game_counter">game_counter</a></h1>
<p>This entity counts each trigger that it receives, and triggers its target when the count reaches a specified limit.</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - This entity needs to be triggered. </p>
<p><span style="font-weight: bold"> Target</span> - This target will be activated when the counter reaches its limit. </p>
<p><span style="font-weight: bold">Delay before trigger</span> - Time in seconds before the 'target' is activated </p>
<p><span style="font-weight: bold">KillTarget</span> - This target will be removed when the counter reaches its limit. </p>
<p><span style="font-weight: bold">Master</span> - The name of a multisource of game_team_master entity. This master must be active in order for the counter to work. </p>
<p><span style="font-weight: bold"> Initial Value</span> - This sets the initial count. </p>
<p><span style="font-weight: bold">Limit Value</span> - This is the value that the counter must reach before firing its target. </p>
<h3>Flags</h3>
<blockquote> <span style="color: #ff0000">(1) Remove on fire</span> - Remove the counter entity after firing.<br />
<span style="color: #ff0000">(2) Reset on fire</span> - Reset the counter after firing.</blockquote>
<h3>Related Entities</h3>
None.<br />
<p><span style="font-weight: bold">Notes</span>:<br />
None </p>
<p align="center"><a href="../node/956#Top">Top</a></p><br /><hr />
<!--Next Entity -->
<h1><a name="game_counter_set">game_counter_set</a></h1>
<p>When triggered, this entity will set a game_counter to a specified value.</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> -The Name of the entity for triggering. </p>
<p><span style="font-weight: bold"> Target</span> - The name of the game_counter to be set. </p>
<p><span style="font-weight: bold">Master</span> - The name of a multisource or game_team_master. The master must be active for this entity to work.</p>
<p><span style="font-weight: bold">New Value</span> - The new value to be given to the target game_counter.</p>
<h3>Flags</h3>
<blockquote><span style="color: #ff0000">(1)  Remove on fire</span>  - After firing, this entity will be removed. </blockquote>
<h3>Related Entities</h3>
None<br />
<p><span style="font-weight: bold">Notes</span>:<br />
None</p>
<p align="center"><a href="../node/956#Top">Top</a></p><br /><hr />
<!--Next Entity -->
<h1><a name="game_end">game_end</a></h1>
<p>When triggered, this entity ends the current game.</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - Use this name as the target of another entity to trigger.</p>
<p><span style="font-weight: bold">Master</span> - The name of a multisource or game_team_master entity. This master must be active in order for the entity to work.</p>
<h3>Flags</h3>
<blockquote>None</blockquote>
<h3>Related Entities</h3>
None<br />
<p><span style="font-weight: bold">Notes</span>:<br />
None</p>
<p align="center"><a href="../node/956#Top">Top</a></p><br /><hr />
<!--Next Entity -->
<h1><a name="game_player_equip">game_player_equip</a></h1>
<p>This entity allows you to equip a player with specific items when they join a game or at some time during gameplay.</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - If this entity has a name, it will need to be triggered to activate. Without a name, it will activate when the map loads or a player joins.</p>
<p><span style="font-weight: bold">Team Master</span> - The name of a game_team_master can go here so that you can control which team is equipped.</p>
<h3>Flags</h3>
<blockquote>None</blockquote>
<h3>Related Entities</h3>
None<br />
<p><span style="font-weight: bold">Notes</span>:<br />
To actually specify what you want to be equipped, turn off SmartEdit mode and click Add. The item's name is the key, and the value is the number of items to be given to the player.<br />
For example, a key of 'weapon_rpg' with a value of '3' will equip the player with 3 rockets. Use item_battery for armour and item_healthkit for health. <br />
Note that health and armour cannot exceed the normal maximum of 100 each.</p>
<p align="center"><a href="../node/956#Top">Top</a></p><br /><hr />
<!--Next Entity -->
<h1><a name="game_player_hurt">game_player_hurt</a></h1>
<p>Unlike the trigger_hurt, this entity will apply damage (or health) to a player without that player being in a specific place. </p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - This entity must be triggered to activate.</p>
<p><span style="font-weight: bold">Damage To Apply</span> - This is the amount of damage to apply to the player that activated the entity. Using a negative number heals the player.</p>
<p><span style="font-weight: bold">Master</span> - The name of a multisource or game_team_master. This master must be active for the entity to work.</p>
<h3>Flags</h3>
<blockquote><span style="color: #ff0000">(1) Remove on fire</span> - Remove the entity after firing. [Entities with this flag set on will be removed from the game after doing whatever they're supposed to do. As a result they will only activate once.]</blockquote>
<h3>Related Entities</h3>
None<br />
<p><span style="font-weight: bold">Notes</span>:<br />
None</p>
<p align="center"><a href="../node/956#Top">Top</a></p><br /><hr />
<!--Next Entity -->
<h1><a name="game_player_team">game_player_team</a></h1>
<p>This entity makes a player change teams. </p>
<h3>Properties</h3>
<p><span style="font-weight: bold"> Name</span> - Trigger to activate. </p>
<p><span style="font-weight: bold"> game_team_master to use</span> - The player that activates this entity will have his team changed to the team index of the game_team_master entity specified here.</p>
<p><span style="font-weight: bold">Master</span> - The name of a multisource or game_team_master. The master must be active for this entity to work.</p>
<h3>Flags</h3>
<blockquote><span style="color: #ff0000">(1) Remove on fire</span> - Remove the entity after firing. [Entities with this flag set on will be removed from the game after doing whatever they're supposed to do. As a result they will only activate once.]<br />
<span style="color: #ff0000">(2) Kill Player</span> - The player will be killed when the entity is activated.<br /><span style="color: #ff0000">(4) Gib Player</span> - The player will be pulled apart when the entity is activated.<br /></blockquote>
<h3>Related Entities</h3>
None<br />
<p><span style="font-weight: bold">Notes</span>:<br />
None</p>
<p align="center"><a href="../node/956#Top">Top</a></p><br /><hr />
<!--Next Entity -->
<h1><a name="game_score">game_score</a></h1>
<p>This entity gives or takes points from a player or team.</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - Trigger to activate.</p>
<p><span style="font-weight: bold">Points to add (+/-)</span> - The number of points to be given or taken.</p>
<p><span style="font-weight: bold">Master</span> - The name of a multisource or game_team_master. The master must be active for the entity to work.</p>
<h3>Flags</h3>
<blockquote><span style="color: #ff0000">(1) Allow Negative</span> - Set this to allow the game_score to make a score negative.<br />
<span style="color: #ff0000">(2) Team Points</span> - Set this to make the entity affect the activating player's whole team.<br /></blockquote>
<h3>Related Entities</h3>
None<br />
<p><span style="font-weight: bold">Notes</span>:<br />
None</p>
<p align="center"><a href="../node/956#Top">Top</a></p><br /><hr />
<!--Next Entity -->
<h1><a name="game_team_master">game_team_master</a></h1>
<p>This entity acts like a combination of the multisource and trigger_relay entities, but is based on teams. <br />
The game_team_master can replace the multisource as the master for any entity. It will only be active when the activating team matches the team index value.</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - If used as a relay, this entity must be activated to trigger.</p>
<p><span style="font-weight: bold">Target</span> - If used as a relay, the event that will be activated.</p>
<p><span style="font-weight: bold">Delay before trigger</span> - If used as a relay, the delay before activating the target.</p>
<p><span style="font-weight: bold">KillTarget</span> - If used as a relay, this target will be removed from the game.</p>
<p><span style="font-weight: bold">Trigger State</span> - Activate the target with this trigger state (0 = off, 1 = on, 2 = toggle).</p>
<p><span style="font-weight: bold">Team Index (-1 = no team)</span> - The team number that is valid for this entity. -1 allows all teams.</p>
<p><span style="font-weight: bold">Master</span> - The name of a multisource or game_team_master entity. The master must be active for the entity to work. </p>
<h3>Flags</h3>
<blockquote><span style="color: #ff0000">(1) Remove on fire</span> - The entity will be removed after firing. </blockquote>
<h3>Related Entities</h3>
None<br />
<p><span style="font-weight: bold">Notes</span>:<br />
The team index can be changed by the game_team_set entity.<br />The server selects which team corresponds to which number with the 'mp_teamlist' cvar.<br />
</p>
<p align="center"><a href="../node/956#Top">Top</a></p><br /><hr />
<!--Next Entity -->
<h1><a name="game_team_set">game_team_set</a></h1>
<p>This entity will set the team index of the game_team_master it targets to the team of the player that activates it.</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - Trigger to activate. [Property used to identify entities.]</p>
<p><span style="font-weight: bold">Target</span> - The game_team_master to be affected.</p>
<p><span style="font-weight: bold">Delay before trigger</span>- Wait this amount of time before triggering. </p>
<p><span style="font-weight: bold">KillTarget</span> - This target will be removed from the game when the entity fires.</p>
<p><span style="font-weight: bold">Master</span> - The name of a multisource or game_team_master. The master must be active for the entity to work</p>
<h3>Flags</h3>
<blockquote><span style="color: #ff0000">(1) Remove on fire</span> - Remove the entity after firing. [Entities with this flag set on will be removed from the game after doing whatever they're supposed to  do. As a result they will only activate once.]</blockquote>
<h3>Related Entities</h3>
None<br />
<p><span style="font-weight: bold">Notes</span>:<br />
None </p><br />
<p align="center"><a href="../node/956#Top">Top</a></p><br /><hr />
<!--Next Entity -->
<h1><a name="game_text">game_text</a></h1>
<p>This entity is used to display messages on-screen. It is used instead of env_message because it doesn't need to be a file full of message strings to be distributed with the map.</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - Trigger to activate.</p>
<p><span style="font-weight: bold">Target</span> - Event to activate when this entity is activated.</p>
<p><span style="font-weight: bold"> Message Text</span> - The text to be displayed.</p>
<p><span style="font-weight: bold"> X (0 - 1.0 = left to right, -1 = center)</span> - X position of text (across screen).</p>
<p><span style="font-weight: bold">Y (0 - 1.0 = top to bottom, -1 = center)</span> - Y position of text (up/down screen).</p>
<p><span style="font-weight: bold">Text Effect </span> - Effect to apply to the text (0 = Fade In/Out, 1 = Credits, 2 = Scan Out).</p>
<p><span style="font-weight: bold">Color1</span> - The main colour.</p>
<p><span style="font-weight: bold">Color2</span> - The highlight colour.</p>
<p><span style="font-weight: bold">Fade in Time (or character scan time)</span> - Time taken to fade in each character.</p>
<p><span style="font-weight: bold">Fade Out Time</span> - Time taken to fade out message.</p>
<p><span style="font-weight: bold">Hold Time</span> - Length of time to hold message on screen after fading in.</p>
<p><span style="font-weight: bold">Scan time (scan effect only)</span> - The amount of time the highlight lags behind the leading edge of the text.</p>
<p><span style="font-weight: bold">Text Channel</span> - Any of four channels can be used by this entity. If while one channel is being used another entity on the same channel is triggered, the old text will be cleared from the screen.</p>
<p><span style="font-weight: bold">Master</span> - The name of a multisource or game_team_master. The master must be active for the entity to work.</p>
<h3>Flags</h3>
<blockquote><span style="color: #ff0000">(1) All Players</span> - Show the text to all players. If not set, only the player who activated the game_text will see the message.</blockquote>
<h3>Related Entities</h3>
<a href="../node/961#trigger_auto">Trigger_auto</a><br />
<a href="../node/954#env_message">Env_message</a><br />
<p><span style="font-weight: bold">Notes</span>:<br />
  You are limited to a maximum message length of 127 characters.<br />
  Line breaks can be added with the newline code  <code><span style="font-weight: bold">\n</span></code><br /> . e.g. <code><span style="font-weight: bold">Line one\nLine two</span></code><br />
  X, Y, effect, color, color2, fadein, fadeout and fxtime are the same as those found in titles.txt.<br /><br />
  The easiest way to get a text based message at the start of your level, like the Black Mesa one from HL, is to add a trigger_auto to the level and set it's target to the name of your game_text. You might have to add a delay to the trigger, depending on wether you fade the screen in or not, but either way when the game starts your text will be displayed.</p>
<p align="center"><a href="../node/956#Top">Top</a></p><br /><hr />
<!--Next Entity -->
<h1><a name="game_zone_player">game_zone_player</a></h1>
<p>This entity is used to trigger targets based on player locations.</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - Trigger to activate. [Property used to identify entities.]</p>
<p><span style="font-weight: bold">Target for IN players</span> - All players inside the area covered by the brush fire this target.</p>
<p><span style="font-weight: bold">Target for OUT players</span> - All players outside the area covered by the brush fire this target.</p>
<p><span style="font-weight: bold">Counter for IN players </span> - This game_counter's value will be set to the number of players inside the area.</p>
<p><span style="font-weight: bold">Counter for OUT players</span> - This game_counter's value will be set to the number of players outside the area.</p>
<h3>Flags</h3>
 <blockquote>None</blockquote>
<h3>Related Entities</h3>
None<br />
<p><span style="font-weight: bold">Notes</span>:<br />
  The only brush-based game_ entity.</p><br />
<p align="center"><a href="../node/956#Top">Top</a></p><br /><hr />
<br />
<p align="center">Next Entity Guide <a href="../node/957">Info Entities</a></p>
<br />
<hr />
<!--EOF@212--></ul><h1 id="957" name="957" class="book-h3">Info</h1><ul><!-- 
Submitted by Andy 
Updated XHTML - FEB 05 - Andy
 -->
<h1><a name="Top">Half-Life Info Entities</a></h1>
Originally written for <a href="http://www.twhl.co.za/">TWHL</a> .
<!--Start Description-->
<ul>
<li><a href="../node/957#info_bigmomma">Info_bigmomma</a></li>
<li><a href="../node/957#info_intermission">Info_intermission</a></li>
<li><a href="../node/957#info_landmark">Info_landmark</a></li>
<li><a href="../node/957#info_node">Info_node</a></li>
<li><a href="../node/957#info_node_air">Info_node_air</a></li>
<li><a href="../node/957#info_null">Info_null</a></li>
<li><a href="../node/957#info_player_coop">Info_player_coop</a></li>
<li><a href="../node/957#info_player_deathmatch">Info_player_deathmatch</a></li>
<li><a href="../node/957#info_player_start">Info_player_start</a></li>
<li><a href="../node/957#info_target">Info_target</a></li>
<li><a href="../node/957#info_teleport_destination">Info_teleport_destination</a></li>
</ul>
<hr />
<!--Entity Description Start-->
<h1><a name="info_bigmomma">info_bigmomma</a></h1>
<p>This entity allows you to setup a path for monster_bigmomma and get it to do specific sequences (a bit like a scripted_sequence) that relate to how the player interacts with the monster.</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - Name of the info entity</p>
<p><span style="font-weight: bold">Next node</span> - Next node in path.</p>
<p><span style="font-weight: bold">Radius</span> - Deviation from the node or the amount that the Gonarch is allowed to stray.</p>
<p><span style="font-weight: bold">Wait after approach</span> - Time spent at node.</p>
<p><span style="font-weight: bold">Kill Target</span> - When the node is reached, this target will be removed from the game.</p>
<p><span style="font-weight: bold">Fire on approach</span> - Target to activate on reaching the node.</p>
<p><span style="font-weight: bold">Sequence on approach</span> - The name of a scripted_sequence to use after the Gonarch reaches this node.</p>
<p><span style="font-weight: bold">Health on approach</span> - The amount of damage that that she must take before moving to this node.</p>
<p><span style="font-weight: bold">Sequence before approach</span> - The name of a scripted_sequence to use before she approaches this node.</p>
<h3>Flags:</h3>
<blockquote>
<span style="color: #ff0000">(1) Run to Node</span> - Determines whether the monster runs to the node.<br />
<span style="color: #ff0000">(2) Wait Indefinitely </span> - Causes the Gonarch to stay at this node. Also makes her invincible.
</blockquote>
<h3>Related Entities</h3>
<a href="../node/960#monster_bigmomma">Monster_bigmomma</a><br />
<p><span style="font-weight: bold">Notes</span>:<br />
None</p>
<p align="center"><a href="../node/957#Top">Top</a></p><br />
<hr />
<!--Next Entity-->
<h1><a name="info_intermission">info_intermission</a></h1>
<p>This acts as a camera view after the player has been killed in a deathmatch game. Instead of fading out, the dead player views an area assigned by you.</p>
<h3>Properties</h3>
<p><span style="font-weight: bold"> Target</span> - Name of info_target to point camera at.</p>
<h3>Flags:</h3>
<blockquote>  
None
</blockquote>
<h3>Related Entities</h3>
<a href="../node/957#info_target">Info_target</a><br />
<p><span style="font-weight: bold">Notes</span>:<br />
If, after death, nothing is done for 6 seconds, the players view will shift randomly to one of the info_intermission cameras placed in the level.<br />
Several info_intermission's around the map targeting info_targets at High Combat likely areas will give 'Dead people' something to look at.</p>
<p align="center"><a href="../node/957#Top">Top</a></p><br />
<hr />
<!--Next Entity-->
<h1><a name="info_landmark">info_landmark</a></h1>
<p>In a level transition, this entity defines the same point in both maps, so that the transition appears seamless.</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - The landmarks in both levels involved in the transition need the same name.</p>
<h3>Flags:</h3>
<blockquote>
None
</blockquote>
<h3>Related Entities</h3>
<a href="../node/961#trigger_changelevel">Trigger_changelevel</a><br />
<a href="../node/961#trigger_transition">Trigger_transition</a><br />
<p><span style="font-weight: bold">Notes</span>:<br />
None </p>
<p align="center"><a href="../node/957#Top">Top</a></p><br />
<hr />
<!--Next Entity-->
<h1><a name="info_node">info_node</a></h1>
<p>Info_nodes are essential for monsters who need to move under AI control. The engine draws a 'node graph' based on the positions of info_nodes in a map, and monsters can then find the quickest route from point A to point B via the nodes..</p>
<h3>Properties</h3>None
<h3>Flags:</h3>
<blockquote>
None
</blockquote>
<h3>Related Entities</h3>
<a href="../node/957#info_node_air">Info_node_air</a><br />
<p><span style="font-weight: bold">Notes</span>:<br />
To check your info_node placement, compile the map and run it. From the console type <span style="color: #ff0000">impulse 197</span> and you should now see a glowing path of node tracks. This will show up any weak points in your placement and areas that may need more nodes.<br />
General rule of thumb for info_node placement is to use lot's and keep them 24 to 48 units away from any brush.<br />
Place them in the middle of hallways, rather than at the edges.<br />
Info_nodes can also be used to help monsters perform scripted_sequences.<br />
To help monsters navigate to and from scripted_sequences, use info nodes. IE: If you want Barney to go through a door, place an info_node in the center of the doorway and then a trail of info_node's from Barney to the scripted_sequence.<br />
There is a hard limit of 128 info_node's per map.<br />
Monster_human_assasins require MORE info_nodes than other monsters.</p>
<p align="center"><a href="../node/957#Top">Top</a></p><br />
<hr />
<!-- Next Entity -->
 <h1><a name="info_node_air">info_node_air</a></h1>
<p>Similar to info_node, this entity is specifically for flying monsters (such as the monster_alien_controller).</p>
<h3>Properties</h3>None
<h3>Flags:</h3>
<blockquote>
None
</blockquote>
<h3>Related Entities</h3>
<a href="../node/957#info_node">Info_node</a><br />
<a href="../node/960#monster_alien_controller">Monster_alien_controller</a><br />
<p><span style="font-weight: bold">Notes</span>:<br />
None</p>
<p align="center"><a href="../node/957#Top">Top</a></p><br />
<hr />
<!-- Next Entity -->
<h1><a name="info_null">info_null</a></h1>
<p>The info_null entity was specifically designed to be the target of a spotlight.</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - Name to be targetted by the light_spot. </p>
<h3>Flags:</h3>
<blockquote>
None
</blockquote>
<h3>Related Entities</h3>
<a href="../node/959#light_spot">Light_spot</a><br />
<p><span style="font-weight: bold">Notes</span>:<br />None</p>
<p align="center"><a href="../node/957#Top">Top</a></p><br />
<hr />
<!-- Next Entity -->
<h1><a name="info_player_coop">info_player_coop</a></h1>
<p>Sets spawn points for co-operative multiplayer maps.</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Pitch Yaw Roll</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The ettings are not always (or not all) used.</p>
<h3>Flags:</h3>
<blockquote>
<span style="color: #ff0000">(2084) Not in Deathmatch</span> - If this flag is set on, the entity will not appear in deathmatch games.
</blockquote>
<h3>Related Entities</h3>
<a href="../node/957#info_player_start">Info_player_start</a><br />
<a href="../node/957#info_player_deathmatch">Info_player_deathmatch</a><br />
<p><span style="font-weight: bold">Notes</span>:<br />None</p>
<p align="center"><a href="../node/957#Top">Top</a></p><br />
<hr />
<!-- Next Entity -->
<h1><a name="info_player_deathmatch">info_player_deathmatch</a></h1>
<p>Defines player spawn positions for deathmatch games. If you want to run your map through the custom game menu, it must contain an info_player_deathmatch entity.</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Pitch Yaw Roll</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">Target</span> - When an entity is activated, it triggers the entity with the name specified by Target.</p>
<p><span style="font-weight: bold">Master</span> - The name of a  multisource (or game_team_master) entity. A master must usually be active in order for the entity to work. Thus they act almost like an on/off switch, in   their simplest form, and like an AND gate in the case of the multisource.</p>
<p><span style="font-weight: bold">Animation Sequence</span> - Hammer 3.5 specific animation for viewing in the 3D window.</p>
<h3>Flags:</h3>
<blockquote>
None
</blockquote>
<h3>Related Entities</h3>
<a href="../node/957#info_player_coop">Info_player_coop</a><br />
<a href="../node/957#info_player_start">Info_player_start</a><br />
<p><span style="font-weight: bold">Notes</span>:<br />None</p>
<p align="center"><a href="../node/957#Top">Top</a></p><br />
<hr />
<!-- Next Entity -->
<h1><a name="info_player_start">info_player_start</a></h1>
<p>This entity defines the player starting point in single-player maps.</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Pitch Yaw Roll</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">Animation Sequence</span> - Hammer 3.5 specific animation for viewing in the 3D window.</p>
<h3>Flags:</h3>
<blockquote>
<span style="color: #ff0000">(2084) Not in Deathmatch</span> - If this flag is set on, the entity will not appear in deathmatch games.
</blockquote>
<h3>Related Entities</h3>
<a href="../node/957#info_player_coop">Info_player_coop</a><br />
<a href="../node/957#info_player_deathmatch">Info_player_deathmatch</a><br />
<p><span style="font-weight: bold">Notes</span>:<br />
Try to place near the ground, as the player will drop from the entity origin to the floor. Also, make sure the info_player_start is clear of any obstacles,   or the player may be stuck at the start.<br />
Maps without info_player_starts will still run, however the player will spawn at the center of the map as defimned by the &quot;blue red yellow&quot; axis arms in the 3D view.</p>
<p align="center"><a href="../node/957#Top">Top</a></p><br />
<hr />
<!-- Next Entity -->
<h1><a name="info_target">info_target</a></h1>
<p>An info_target is used to provide static (non-moving) targets for entities like trigger_camera and env_beam.</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - Give this entity a name so it can do its job.</p>
<h3>Flags:</h3>
<blockquote>
None
</blockquote>
<h3>Related Entities</h3>
<a href="../node/954#env_beam">Env_beam</a><br />
<a href="../node/961#trigger_camera">Trigger_camera</a><br />
<p><span style="font-weight: bold">Notes</span>:<br />For moving targets, use a func_train with Render Mode set to Texture, Render Amount set to 0, and the Not Solid flag enabled. Then target the func_train as you would the info_target.</p>
<p align="center"><a href="../node/957#Top">Top</a></p><br />
<hr />
<!-- Next Entity -->
<h1><a name="info_teleport_destination">info_teleport_destination</a></h1>
<p>Works in conjunction with trigger_teleport. This entity provides the destination.</p>
<h3>Properties</h3>None
<h3>Flags:</h3>
<blockquote>
<span style="color: #ff0000">(2048) Not in Deathmatch</span> - If this flag is set on, the entity will not appear in deathmatch games.
</blockquote>
<h3>Related Entities</h3>
<a href="../node/961#trigger_teleport">Trigger_teleport</a><br />
<p><span style="font-weight: bold">Notes</span>:<br />None</p>
<br />
<p align="center"><a href="../node/957#Top">Top</a></p>
<hr />
<p align="center">Next Entity Guide <a href="../node/958">Item Entities</a></p>
<br />
<hr />
	<!--EOF@210--></ul><h1 id="958" name="958" class="book-h3">Item</h1><ul><!-- 
Submitted by Andy Nov  2004 
Updated XHTML FEB 05 - Andy
-->
<h1><a name="Top">Half-Life Item Entities</a></h1>
<ul>
<li><a href="../node/958#item_airtank">Item_airtank</a></li>
<li><a href="../node/958#item_antidote">Item_antidote</a></li>
<li><a href="../node/958#item_battery">Item_battery</a></li>
<li><a href="../node/958#item_healthkit">Item_healthkit</a></li>
<li><a href="../node/958#item_longjump">Item_longjump</a></li>
<li><a href="../node/958#item_security">Item_security</a></li>
<li><a href="../node/958#item_suit">Item_suit</a></li>
</ul><hr />
<h1><a name="item_airtank">item_airtank</a></h1>
<p>
Let's the Player breath underwater, but apart from <a href="http://www.issues.command-center.org/" target="_blank">Issues</a> I have not seen it implimented.
</p>
<center>
<img src="../content/half-life/entimgs/item/item_airtank.jpg" width="350" height="200" alt="item_airtank" title="item_airtank" />
</center>
<h3>
Properties
</h3>
<p>
<span style="font-weight: bold">Name</span> - Provide a name to use as a trigger for this entity.
</p>
<p>
<span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.
</p>
<p>
<span style="font-weight: bold">Target</span> -  When the entity is activated, the Target named here is triggered.
</p>
<p>
<span style="font-weight: bold">Delay before trigger</span> - Usually the time in seconds before an entity should trigger its target (after being triggered itself).
</p>
<p>
<span style="font-weight: bold">KillTarget</span> - When If you pick the airtank up or use it's name (trigger it), the entity named here will be removed from the game completely.
</p>
<h3>
Flag Properties
</h3>
<blockquote>
<span style="color: #ff0000">(2084) Not in Deathmatch</span> - If this flag is set on, the entity will not appear in deathmatch games.
</blockquote>
<h3>
Related Entities
</h3>
None<br />
<p>
<span style="font-weight: bold">Notes</span>:<br />
There is a key sequence to &quot;pick&quot; up an air tank. I will write it here as soon as I discover it.<br /> 
Doesn't sink to the ground. Makes funny noises. Blows up if shot, in a puff of smoke.
</p>
<p align="center">
<a href="../node/958#Top">Top</a>
</p>
<br />
<hr />
<!-- Next Entity -->
<h1>
<a name="item_antidote">item_antidote</a>
</h1>
<p>
A Cure for Poision.
</p>
<center>
<img src="../content/half-life/entimgs/item/item_antidote.jpg" width="350" height="200"  alt="item_antidote" title="item_antidote" />
</center>
<h3>
Properties
</h3>
<p>
<span style="font-weight: bold">Name</span> - Provide a name to use as a trigger for this entity. 
</p>
<p>
<span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.
</p>
<p>
<span style="font-weight: bold">Target</span> -  When the entity is activated, the Target named here is triggered.
</p>
<p>
<span style="font-weight: bold">Delay before trigger</span> - Usually the time in seconds before an entity should trigger its target (after being triggered itself).
</p>
<p>
<span style="font-weight: bold">KillTarget</span> - When If you pick the antidote up or use it's name (trigger it), the entity named here will be removed from the game completely.
</p>
<h3>Flag Properties</h3>
<blockquote>
<span style="color: #ff0000">(2084) Not in Deathmatch</span> - If this flag is set on, the entity will not appear in deathmatch games.
</blockquote>
<h3>
Related Entities
</h3>
None<br />
<p>
<span style="font-weight: bold">Notes</span>:<br />
Can be picked up, and apart from the healing properties... it can be used as a trigger.
</p>
<p align="center">
<a href="../node/958#Top">Top</a>
</p>
<br />
<hr />
<!-- Next Entity -->
<h1>
<a name="item_battery">item_battery</a>
</h1>
<p>
HEV suit Power up.
</p>
<center>
<img src="../content/half-life/entimgs/item/item_battery.jpg" width="350" height="200"  alt="item_battery" title="item_battery" />
</center>
<h3>
Properties
</h3>
<p>
<span style="font-weight: bold">Name</span> - Provide a name to use as a trigger for this entity. 
</p>
<p>
<span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.
</p>
<p>
<span style="font-weight: bold">Target</span> -  When the entity is activated, the Target named here is triggered.
</p>
<p>
<span style="font-weight: bold">Delay before trigger</span> - Usually the time in seconds before an entity should trigger its target (after being triggered itself).
</p>
<p>
<span style="font-weight: bold">KillTarget</span> - When If you pick the battery up or use it's name (trigger it), the entity named here will be removed from the game completely.
</p>
<h3>
Flag Properties
</h3>
<blockquote>
<span style="color: #ff0000">(2084) Not in Deathmatch</span> - If this flag is set on, the entity will not appear in deathmatch games.
</blockquote>
<h3>
Related Entities
</h3>
None<br />
<p>
<span style="font-weight: bold">Notes</span>:<br />A single battery gives 10 HEV points.
</p>
<p align="center">
<a href="../node/958#Top">Top</a>
</p>
<br />
<hr />
<!-- Next Entity -->
<h1>
<a name="item_healthkit">item_healthkit</a>
</h1>
<p>
The Red Cross Bag... A health power up
</p>
<center>
<img src="../content/half-life/entimgs/item/item_healthkit.jpg" width="350" height="200"  alt="item_healthkit" title="item_healthkit" />
</center>
<h3>
Properties
</h3>
<p>
<span style="font-weight: bold">Name</span> - Provide a name to use as a trigger for this entity. 
</p>
<p>
<span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.
</p>
<p>
<span style="font-weight: bold">Target</span> -  When the entity is activated, the Target named here is triggered.
</p>
<p>
<span style="font-weight: bold">Delay before trigger</span> - Usually the time in seconds before an entity should trigger its target (after being triggered itself).
</p>
<p>
<span style="font-weight: bold">KillTarget</span> - When If you pick the healthkit up or use it's name (trigger it), the entity named here will be removed from the game completely.
</p>
<h3>
Flag Properties
</h3>
<blockquote>
<span style="color: #ff0000">(2084) Not in Deathmatch</span> - If this flag is set on, the entity will not appear in deathmatch games.
</blockquote>
<h3>
Related Entities
</h3>
None<br />
<p>
<span style="font-weight: bold">Notes</span>:<br />
White Satchel with a red cross.
</p>
<p align="center">
<a href="../node/958#Top">Top</a>
</p>
<br />
<hr />
<!-- Next Entity -->
<h1>
<a name="item_longjump">item_longjump</a>
</h1>
<p>
Spawns a long jump module which allows the player to jump across greater distances than with running crouch jump.
</p>
<center>
<img src="../content/half-life/entimgs/item/item_longjump.jpg" width="350" height="200"  alt="item_longjump" title="item_longjump" />
</center>
<h3>
Properties
</h3>
<p>
<span style="font-weight: bold">Name</span> - Provide a name to use as a trigger for this entity. 
</p>
<p>
<span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.
</p>
<p>
<span style="font-weight: bold">Target</span> -  When the entity is activated, the Target named here is triggered.
</p>
<p>
<span style="font-weight: bold">Delay before trigger</span> - Usually the time in seconds before an entity should trigger its target (after being triggered itself).
</p>
<p>
<span style="font-weight: bold">KillTarget</span> - When If you pick the long jump unit up or use it's name (trigger it), the entity named here will be removed from the game completely.
</p>
<h3>
Flag Properties
</h3>
<blockquote>
<span style="color: #ff0000">(2084) Not in Deathmatch</span> - If this flag is set on, the entity will not appear in deathmatch games.
</blockquote>
<h3>
Related Entities
</h3>
None<br />
<p>
<span style="font-weight: bold">Notes</span>:<br />
I never seemed to get this to work right.
</p>
<p align="center">
<a href="../node/958#Top">Top</a>
</p>
<br />
<hr />
<!-- Next Entity -->
<h1>
<a name="item_security">item_security</a>
</h1>
<p>
Spawns a security card that looks like a circuit board.
</p>
<center>
<img src="../content/half-life/entimgs/item/item_security.jpg" width="350" height="200"  alt="item_security" title="item_security" />
</center>
<h3>
Properties
</h3>
<p>
<span style="font-weight: bold">Name</span> - Provide a name to use as a trigger for this entity. 
</p>
<p>
<span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.
</p>
<p>
<span style="font-weight: bold">Target</span> -  When the entity is activated, the Target named here is triggered.
</p>
<p>
<span style="font-weight: bold">Delay before trigger</span> - Usually the time in seconds before an entity should trigger its target (after being triggered itself).
</p>
<p>
<span style="font-weight: bold">KillTarget</span> - When If you pick the Key Card up or use it's name (trigger it), the entity named here will be removed from the game completely.
</p>
<h3>
Flag Properties
</h3>
<blockquote>
<span style="color: #ff0000">(2084) Not in Deathmatch</span> - If this flag is set on, the entity will not appear in deathmatch games.
</blockquote>
<h3>
Related Entities
</h3>
<a href="../rustent/misc.html#world_items">World items</a><br />
<p>
<span style="font-weight: bold">Notes</span>:<br />
This doesn't have any built-in function, but since it can be picked up, it can be used to trigger events (like allowing a door to be opened - target a multisource, then make that the master of a door).
</p>
<p align="center">
<a href="../node/958#Top">Top</a>
</p>
<br />
<hr />
<!-- Next Entity -->
<h1>
<a name="item_suit">item_suit</a>
</h1>
<p>
Spawns the Orange HEV suit. 
</p>
<center>
<img src="../content/half-life/entimgs/item/item_suit.jpg" width="350" height="200"  alt="item_suit" title="item_suit" />
</center>
<h3>
Properties
</h3>
<p>
<span style="font-weight: bold">Name</span> - Provide a name to use as a trigger for this entity. 
</p>
<p>
<span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.
</p>
<p>
<span style="font-weight: bold">Target</span> -  When the entity is activated, the Target named here is triggered.
</p>
<p>
<span style="font-weight: bold">Delay before trigger</span> - Usually the time in seconds before an entity should trigger its target (after being triggered itself).
</p>
<p>
<span style="font-weight: bold">KillTarget</span> - When you put the HEV Suit on or use it's name (trigger it), the entity named here will be removed from the game completely.
</p>
<h3>
Flag Properties
</h3>
<blockquote>
<span style="color: #ff0000">(1) Short logon</span> - If this flag is set, The "Welcome to the HEV...." dialog is shortened.<br />
<span style="color: #ff0000">(2084) Not in Deathmatch</span> - If this flag is set on, the entity will not appear in deathmatch games.
</blockquote>
<h3>
Related Entities:
</h3>
None<br />
<p>
<span style="font-weight: bold">Notes</span>:<br />
None 
</p>
<br />
<p align="center">
<a href="../node/958#Top">Top</a></p>
<br />
<p align="center">
Next Entity Guide <a href="../node/959">Misc Entities</a>
</p>
<br />
<hr />
<!--EOF@344--></ul><h1 id="959" name="959" class="book-h3">Misc</h1><ul><!--
Submitted by Andy 08 Dec 04
Updated XHTML FEB 05 - Andy
-->
<h1><a name="Top">Half-Life Miscellaneous Entities</a></h1>
<ul><li><a href="../node/959#aiscripted_sequence">Aiscripted_sequence</a></li>
<li><a href="../node/959#ambient_generic">Ambient_generic</a></li>
<li><a href="../node/959#button_target">Button_target</a></li>
<li><a href="../node/959#cycler">Cycler</a></li>
<li><a href="../node/959#cycler_sprite">Cycler_sprite</a></li>
<li><a href="../node/959#cycler_weapon">Cycler_weapon</a></li>
<li><a href="../node/959#cycler_wreckage">Cycler_wreckage</a></li>
<li><a href="../node/959#gibshooter">Gibshooter</a></li>
<li><a href="../node/959#infodecal">Infodecal</a></li>
<li><a href="../node/959#light">Light</a></li>
<li><a href="../node/959#light_environment">Light_environment</a></li>
<li><a href="../node/959#light_spot">Light_spot</a></li>
<li><a href="../node/959#momentary_door">Momentary_door</a></li>
<li><a href="../node/959#momentary_rot_button">Momentary_rot_button</a></li>
<li><a href="../node/959#monstermaker">Monstermaker</a></li>
<li><a href="../node/959#multimanager">Multimanager</a></li>
<li><a href="../node/959#multisource">Multisource</a></li>
<li><a href="../node/959#path_corner">Path_corner</a></li>
<li><a href="../node/959#pathtrack">Path_track</a></li>
<li><a href="../node/959#player_loadsaved">Player_loadsaved</a></li>
<li><a href="../node/959#player_weaponstrip">Player_weaponstrip</a></li>
<li><a href="../node/959#scripted_sentence">Scripted_sentence</a></li>
<li><a href="../node/959#scripted_sequence">Scripted_sequence</a></li>
<li><a href="../node/959#target_cdaudio">Target_cdaudio</a></li>
<li><a href="../node/959#worldspawn">Worldspawn</a></li>
<li><a href="../node/959#world_items">World_items</a></li>
<li><a href="../node/959#speaker">Speaker</a></li>
<li><a href="../node/959#special_game_entities">Special Game Entities</a></li></ul>
<!--break--><hr />
<!--Start Description-->
<h1><a name="aiscripted_sequence">aiscripted_sequence</a></h1>
<p>This entity is similar to the normal scripted_sequence, except that it completly overrides the monster AI. Regardless of what you do to the monster, it will follow this sequence.</p>
<h3>Properties</h3><p><span style="font-weight: bold">Name</span> - Trigger to activate.</p>
<p><span style="font-weight: bold">Target</span>- This event will be triggered when the script is complete.</p>
<p><span style="font-weight: bold">Delay before trigger</span> - The delay before Target and KillTarget are activated, after completing sequence.</p>
<p><span style="font-weight: bold">KillTarget</span> - When the script is complete, this event will be removed from the game.</p>
<p><span style="font-weight: bold">Pitch Yaw Roll</span> Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">Target Monster</span> - The name of the monster that this script affects (see notes).</p>
<p><span style="font-weight: bold">Action Animation</span> - This is the animation that will be performed by the targeted monster.</p>
<p><span style="font-weight: bold">Search Radius</span> - The script will look for a valid monster in this radius. Set this to 0 if you want the script to be triggerable only.</p>
<p><span style="font-weight: bold">Repeat Rate ms</span> - The above search will be performed with intervals of this length.</p>
<p><span style="font-weight: bold">Move to Position</span> - How the monster moves:</p>
<code>
0 = No - Monster will perform the sequence wherever it is.
1 = Walk
- walks to the location of the aiscripted_sequence, then performs its animation.
2 = Run - as above, but runs.
4 = Instantaneous - warps to spot.
5 = No-turn to face 
- monster turns to face the  aiscripted_sequence, then performs the sequence.
</code>
<p><span style="font-weight: bold">Ai Schedule when done</span> - 0 = Default Ai, 1 = ambush.</p>
<h3>Flags:</h3><blockquote><span style="color: #ff0000">(4) Repeatable</span> - Lets the sequence be repeated more than once.<br />
<span style="color: #ff0000">(8) Leave Corpse</span> - If the monster dies during the script, its corpse will be left. If not enabled, the corpse will fade away.</blockquote>
<h3>Related Entities</h3><p><a href="../node/959#scripted_sequence">Scripted_sequence</a></p>
<p><span style="font-weight: bold">Notes:</span><br />If you want the script to act with <span style="font-weight: bold">all</span> of a type of monster (monster_scientist for example) then enter that type in Target Monster rather than a Name.<br />Any damage taken by the monster while the script is running will take effect when the script finishes.<br />Use a model viewer to see the animations available to each monster.</p>
<p align="center"><a href="../node/959#Top">Top</a></p><br /><hr />
<!--Next Entity-->
<h1><a name="ambient_generic">ambient_generic</a></h1>
<p>The ambient_generic allows you to play a specific sound.</p>
<h3>Properties</h3><p><span style="font-weight: bold">Name</span> - Can be triggered to activate.</p>
<p><span style="font-weight: bold">WAV name</span> - This is the path/filename of the .wav file (note the forward-slash).</p>
<p><span style="font-weight: bold">Volume</span> - Volume of the sound. Range: 0 - 10.</p>
<p><span style="font-weight: bold"> Dynamic Presets</span> - Various effects that can be applied to the sound:</p> 
<pre>0 = None
1 = Huge Machine
2 = Big Machine
3 = Machine
4 = Slow Fade in
5 = Fade in
6 = Quick Fade in
7 = Slow Pulse
8 = Pulse
9 = Quick pulse
10 = Slow Oscillator
11 = Oscillator
12 = Quick Oscillator
13 = Grunge pitch
14 = Very low pitch
15 = Low pitch
16 = High pitch
17 = Very high pitch
18 = Screaming pitch
19 = Oscillate spinup/down
20 = Pulse spinup/down
21 = Random pitch
22 = Random pitch fast
23 = Incremental Spinup
24 = Alien
25 = Bizzare
26 = Planet X
27 = Haunted</pre>
<p><span style="font-weight: bold">Start volume</span> - Volume at Start.</p>
<p><span style="font-weight: bold">Fade-in time</span>- Time taken for the sound to fade in. Range: 0 - 100</p>
<p><span style="font-weight: bold">Fade-out time</span> - Time taken for the sound to fade out, if not looped. Range: 0 - 100</p>
<p><span style="font-weight: bold">Pitch</span> - 100 is normal, &nbsp;&gt;100 higher, &nbsp;&lt;100 lower.</p>
<p><span style="font-weight: bold">Start pitch</span> - Pitch at Start.</p>
<p><span style="font-weight: bold">Spin-up time</span> - Time taken for the sound to &quot;run&quot; up to full volume/pitch.  Range: 0 - 100</p>
<p><span style="font-weight: bold">spin-down time</span> - Time taken for the sound to run down when triggered off.  Range: 0 - 100</p>
<p><span style="font-weight: bold">LFO type</span> - Values:</p>
<pre>0 = off
1 = sqr
2 = tri
3 = rnd</pre>
<p><span style="font-weight: bold">LFO rate</span>- Range: 0 - 1000</p>
<p><span style="font-weight: bold">LFO mod pitch</span>- Range: 0 - 100</p>
<p><span style="font-weight: bold">LFO modvol</span> - Range: 0 - 100</p>
<p><span style="font-weight: bold">Incremental spin-up count</span> - </p>
<h3>Flags:</h3><blockquote><span style="color: #ff0000">(1) Play Everywhere</span> - Sound will be heard in the entire level.<br />
<span style="color: #ff0000">(2) Small Radius</span> - Sound range is about 800 units at max volume.<br />
<span style="color: #ff0000">(4) Medium Radius</span> - Sound range is about 1250 units at max volume.<br />
<span style="color: #ff0000">(8) Large Radius</span> - Sound range is about 2000 units at max volume.<br />
<span style="color: #ff0000">(16) Start Silent</span> - Checking this means the entity must be triggered to work.<br />
<span style="color: #ff0000">(32) Not Toggled</span> - Older FGDs show this as Not Looped. Specifies that the  sound is to be played only once. With this flag checked, each time the entity  is triggered it will play once. If it is not checked, triggering it will cause  the sound to alternate between on and off.</blockquote>
<h3>Related Entities</h3><p><a href="../node/954#env_sound">Env_sound</a><br /><a href="../node/959#speaker">Speaker</a></p>
<p><span style="font-weight: bold">Notes:</span><br />From WorldCraft/Hammer Helpfile: &quot;To play a wav through the streaming code (for very large, one-shot wavs) use <code> * </code> in front of the name. For instance, <code> ambienc/*speak2.wav </code> would stream speak2.wav. Streaming sounds are loaded in segments from the disk, played, and flushed from memory.&quot;<br />
&quot;To play any sentence from sentences.txt, replace the <code>path/filename.wav</code> with<code> ! </code>  followed by the sentence name. For instance,<code> !NA1 </code> plays the sentence named <span style="font-weight: bold">NA1</span> .&quot;</p>
<p> &quot;All the keyvalues from volstart to cspinup are various pitch, volume, and low frequency pitch oscillation settings that are overridden by the dynamic preset setting. In general, don't use these. The incremental spin-up count may be used as follows: each time the ambient is triggered, its pitch will rise from &quot;start pitch&quot; to &quot;pitch&quot; by this many increments. So, a setting of &quot;3&quot; means that the pitch of the ambient will rise from &quot;start pitch&quot; to &quot;pitch&quot; in three presses (ie: three triggers).&quot;</p>
<p>For more information on LFO (Low Frequency Oscillator) settings see <a href="http://collective.valve-erc.com/index.php?ent=ambient_generic" target="_blank">Collective</a></p>
<p align="center"><a href="../node/959#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="button_target">button_target</a></h1>
<p>This entity allows you to create a solid that acts like a button when shot. It won't move, but will change texture and activate its target.</p>
<h3>Properties</h3><p><span style="font-weight: bold">Target</span> - This event will be triggered when the button is activated.</p>
<p><span style="font-weight: bold">ZHLT Lightflags</span> - See ZHLTReference for more information.</p>
<p><span style="font-weight: bold">Light Origin Target</span> - See ZHLTReference for more information.</p>
<p><span style="font-weight: bold">Master</span> - The name of a multisource (or game_team_master) entity. A master must usually be active in order for the entity to work. Thus they act almost like an on/off switch, in their simplest form, and like an AND gate in the case of the multisource.</p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows:</p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade)</pre>
<span style="font-weight: bold">Render Mode</span> -  Options are:<br />
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive</pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. <br />
&quot;Solid&quot; mode simply needs a non zero value to work, while in other modes translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<h3>Flags:</h3><blockquote><span style="color: #ff0000">(1) Use Activates</span> - Button can be activated with the &quot;use&quot; key.<br />
<span style="color: #ff0000">(2) Start On</span> - This referes to the texture of the button. With this flag  enabled, the texture will start &quot;on&quot; (if possible).</blockquote>
<h3>Related Entities</h3><p><a href="../node/955#func_button">Func_button</a></p>
<p><span style="font-weight: bold">Notes:</span><br />None</p>
<p align="center"><a href="../node/959#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="cycler">cycler</a></h1>
<p>The cycler lets you display and cycle through different animations of a model. It also allows you to place Models in the map.</p>
<h3>Properties</h3><p><span style="font-weight: bold">Name</span> - This entity can be triggered by another entity.</p>
<p><span style="font-weight: bold">Pitch Yaw Roll</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">Model</span> - A model must be specified (<code>models/modelname.mdl</code>).</p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows:</p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade)</pre>
<span style="font-weight: bold">Render Mode</span> -  Options are:<br />
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive</pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. <br />
&quot;Solid&quot; mode simply needs a non zero value to work, while in other modes translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold"> Animation Sequence</span> - The animation sequence to play. If you are using Hammer 3.5, this will also be displayed in the 3D window.</p>
<p><span style="font-weight: bold">Model</span> - The Model to place.</p>
<h3>Flags:</h3><blockquote>None</blockquote>
<h3>Related Entities</h3><p><a href="../node/959#cycler_sprite">Cycler_sprite</a><br /><a href="../node/959#cycler_weapon">Cycler_weapon</a></p>
<p><span style="font-weight: bold">Notes:</span><br />None </p>
<p align="center"><a href="../node/959#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="cycler_sprite">cycler_sprite</a></h1>
<p>This entity lets you display and cycle through the animation of a sprite.</p>
<h3>Properties</h3><p><span style="font-weight: bold">Name</span> - This entity can be triggered by another entity.</p>
<p><span style="font-weight: bold">Pitch Yaw Roll</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">Sprite</span> - A sprite must be specified here (<code>sprites/spritename.spr</code>).</p>
<p><span style="font-weight: bold">Frames per second</span> - Framerate the sprite will run at if animated.</p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows:</p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade)</pre>
<span style="font-weight: bold">Render Mode</span> -  Options are:<br />
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive</pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. <br />
&quot;Solid&quot; mode simply needs a non zero value to work, while in other modes translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<h3>Flags:</h3><blockquote>None</blockquote>
<h3>Related Entities</h3><p><a href="../node/959#cycler">Cycler</a><br />
<a href="../node/959#cycler_weapon">Cycler_weapon</a></p>
<p><span style="font-weight: bold">Notes:</span><br />Using and shooting the entity in-game allows you to inspect an animated sprite frame-by-frame. </p>
<p align="center"><a href="../node/959#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="cycler_weapon">cycler_weapon</a></h1>
<p>A model cycler that wasn't used in game and doesn't seem to work very well.</p>
<h3>Properties</h3><p><span style="font-weight: bold">Target</span> - When an entity is activated, it triggers the entity with the name specified by Target.</p>
<p><span style="font-weight: bold">Name</span> - This entity can be triggered by another entity.</p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows:</p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade)</pre>
<span style="font-weight: bold">Render Mode</span> -  Options are:<br />
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive</pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. <br />&quot;Solid&quot; mode simply needs a non zero value to work, while in other modes translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">Pitch Yaw Roll</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">Trigger Target</span> - The event to trigger when the TriggerCondition is met.</p>
<p><span style="font-weight: bold">Trigger Condition</span> - This controls the condition under which a monster will trigger its TriggerTarget. The options are:</p>
<pre>0 = No Trigger
1 = See Player, Mad at Player
2 = Take Damage
3 = 50% Health Remaining
4 = Death
7 = Hear World
8 = Hear Player
9 = Hear Combat
10 = See Player Unconditional
11 = See Player, Not In Combat</pre>
<p><span style="font-weight: bold"> Animation Sequence</span> - The animation sequence to play. If you are using Hammer 3.5, this will also be displayed in the 3D window.</p>
<p><span style="font-weight: bold">Model</span> - The Model to place.</p>
<h3>Flags:</h3><blockquote><span style="color: #ff0000">(1) WaitTillSeen</span> - Monster will wait till seen, however it doesn't always work that way.<br />
<span style="color: #ff0000">(2) Gag</span> - When checked, the monster won't say anything or make noise, great for shutting Grunts up.<br />
<span style="color: #ff0000">(4) MonsterClip</span> - Prevents the monster from moving through func_monsterclip brushes.<br />
<span style="color: #ff0000">(16) Prisoner</span> - When enabled, the monster won't  attack the player (normal AI is disabled).<br />
<span style="color: #ff0000">(128) WaitForScript</span> - Does not appear to have been  implemented.<br />
<span style="color: #ff0000">(256) Pre-Disaster</span> - Only used by Scientists and Barneys. Gives them pre-disaster speech, and prevents them  from following the player.<br />
<span style="color: #ff0000">(512) Fade Corpse</span> - After being killed, the monster's corpse will fade out after a while, instead of lying there forever.</blockquote>
<h3>Related Entities</h3><p><a href="../node/959#cycler">Cycler</a><br /><a href="../node/959#cycler_sprite">Cycler_sprite</a></p>
<p><span style="font-weight: bold">Notes:</span><br />Using and shooting the entity in-game allows you to see the next sequence, frame-by-frame. </p>
<p align="center"><a href="../node/959#Top">Top</a></p><br />
<!-- Next Entity -->
<h1><a name="cycler_wreckage">cycler_wreckage</a></h1>
<p>This entity allows you to give the apperance of a burning fire with lots of black smoke. It was only added to later FGDs, and can not be turned on or off.</p>
<h3>Properties</h3><p><span style="font-weight: bold">Name</span> - Not sure if you can actually use the Name to KillTarget this entity?</p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows:</p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade)</pre>
<span style="font-weight: bold">Render Mode</span> -  Options are:<br />
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive</pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. <br />
&quot;Solid&quot; mode simply needs a non zero value to work, while in other modes translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">Pitch Yaw Roll</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">Framerate</span> - Speed of the sprite frame sequence.</p>
<p><span style="font-weight: bold">Sprite Name</span> - Default is <code>sprites/fire.spr</code></p>
<p><span style="font-weight: bold">Scale</span> - Size of the Sprite.</p>
<h3>Flags:</h3><blockquote><span style="color: #ff0000">Toggle</span> - Not fuctional last time I tried.<br />
<span style="color: #ff0000">Start On</span> - Starts on anyway...</blockquote>
<h3>Related Entities</h3>None
<p><span style="font-weight: bold">Notes:</span><br />There may be problems with the way this entity triggers / starts on. From what I have read, it was devised for Day of Defeat to add realism.</p>
<p align="center"><a href="../node/959#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="gibshooter">gibshooter</a></h1>
<p>An env_shooter hard-wired to shoot blood-encrusted body parts.</p>
<h3>Properties</h3><p><span style="font-weight: bold">Name</span> - This entity can be triggered by another entity.</p>
<p><span style="font-weight: bold">Pitch Yaw Roll</span> - Sets the pitch (up / down), yaw (left / right) and  roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">Number of Gibs</span> - Total number of gibs spawned per activation.</p>
<p><span style="font-weight: bold">Delay between shots</span> - The amount of time between the release of each gib.</p>
<p><span style="font-weight: bold">Course Variance</span> - Defines how much each gib's path will vary from the normal.</p>
<p><span style="font-weight: bold">Gib Life</span> - Time in seconds for a gib to hang around before it fades away.</p>
<h3>Flags:</h3><blockquote><span style="color: #ff0000">(1) Repeatable</span> - Entity can be triggered more than once.</blockquote>
<h3>Related Entities</h3><p><a href="../node/954#env_shooter">Env_shooter</a></p>
<p><span style="font-weight: bold">Notes:</span><br />None </p>
<p align="center"><a href="../node/959#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="infodecal">infodecal</a></h1>
<p>This entity lets you place special textures in your map, on top of other textures. Things like scortch marks, cracks, oil, etc. can be applied. The Decal Tool in Hammer is an easier way to apply them.</p>
<h3>Properties</h3><p><span style="font-weight: bold">Name</span> - You can &quot;turn&quot; a decal on. Just trigger it using this name.</p>
<p><span style="font-weight: bold">texture</span> - The Decal texture from the Decal.wad</p>
<h3>Flags:</h3><blockquote><span style="color: #ff0000">(2048) Not in Deathmatch</span> - If this flag is set on, the entity will not appear in deathmatch games.</blockquote>
<h3>Related Entities</h3>None
<p><span style="font-weight: bold">Notes:</span><br />
The decal texture must be selected from the decals.wad file.<br />The decal will reflect the texture properties that it's been placed on. So if you run the game and the decal is wrong, adjust the texture you have placed it on... NOT the infodecal.<br />The angle of the infodecal should face the player if possible.</p>
<p><span style="font-weight: bold">Turning it on</span>:<br /> Place the infodecal and &quot;Name&quot; it. It will not be visible in the game until it is triggered. A good way to add cracks to glass, after the disaster.</p><br />
<p align="center"><a href="../node/959#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="light">light</a></h1>
<p>Point-based light. Simple, effective.</p>
<h3>Properties</h3><p><span style="font-weight: bold">Target</span> - When an entity is activated, it triggers the entity with the name specified by Target.</p>
<p><span style="font-weight: bold">Name</span> - Can be triggered on and off using the Name supplied here.</p>
<p><span style="font-weight: bold">Brightness</span> - First three 3-digit numbers are the color (RGB). The fourth number is the brightness.</p>
<p><span style="font-weight: bold">Apperance</span> - Light appearance. Values:</p>
<pre>0 = normal
1 = flicker A
2 = slow strong pulse
3 = candle A
4 = fast strobe
5 = gentle pulse
6 = flicker B
7 = candle B
8 = candle C
9 = slow strobe
10 = fluorescent flicker
11 = slow pulse, no black</pre>
<p><span style="font-weight: bold">Custom Apperance</span> - Use a string of letters to provide a custom light style (see note).</p>
<p><span style="font-weight: bold">ZHLT Fade</span> - See ZHLTReference for more info.</p>
<p><span style="font-weight: bold">ZHLT Falloff</span>  - See ZHLTReference for more info.</p>
<h3>Flags:</h3><blockquote><span style="color: #ff0000">(1) Initially dark</span> - If this is enabled, the entity will need to be triggered to work.</blockquote>
<h3>Related Entities</h3><p><a href="../node/959#light_environment">Light_environment</a><br /><a href="../node/959#light_spot">Light_spot</a></p>
<p><span style="font-weight: bold">Notes:</span><br />The Custom Apperance property allows you to enter a string of letters from <span style="font-weight: bold">a</span> to <span style="font-weight: bold">z</span>, representing brightness.<br /> If you entered:&nbsp;&nbsp;<span style="font-weight: bold">abcdefghihgfedcba</span><br /> Then the light would go from bright to dim and back again and then repeat. <br />To use this feature, you must name the light, However, if you then use  a trigger to activate it, then it will behave as a normal light.<br />Custom Apperance, and &quot;Named&quot; lights can cause trouble if there are too many in a visible area.</p>
<p align="center"><a href="../node/959#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="light_environment">light_environment</a></h1>
<p>This entity makes a map's sky emit light. The only practical way of lighting outdoor maps.</p>
<h3>Properties</h3><p><span style="font-weight: bold">Name</span> - Might be used if -noskyfix is added to the RAD compile.</p>
<p><span style="font-weight: bold">Pitch Yaw Roll</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">ZHLT Fade</span> - See ZHLTReference for more details.</p>
<p><span style="font-weight: bold">ZHLT Falloff</span> - See ZHLTReference for more details.</p>
<p><span style="font-weight: bold">Pitch</span> - A negative number will give downward pitch (which is normally what you want), But to add sunlight &quot;like&quot; shadows, change this value.</p>
<p><span style="font-weight: bold">Brightness</span> - The first three 3-digit numbers are the colour (RGB), and the Fourth is brightness.</p>
<h3>Flags:</h3><blockquote>None</blockquote>
<h3>Related Entities</h3><p><a href="../node/959#light_spot">Light_spot</a><br /><a href="../node/959#light">Light</a></p>
<p><span style="font-weight: bold">Notes:</span><br />Since ZHLT 2.1,  You only need one light_enviroment per map, regardless of the amount of seperate sky's you have.<br />If you want to control sunlight shadow with Pitch and Brightness differently in two seperate areas of map, then you have to revert to using -noskyfix in your RAD compile. You will also need to use seperate light_environment entities for each piece of sky.</p>
<p align="center"><a href="../node/959#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="light_spot">light_spot</a></h1>
<p>The light_spot entity allows you to create direct beams of light.</p>
<h3>Properties</h3><p><span style="font-weight: bold">Name</span> - Can be triggered to toggle on and off.</p>
<p><span style="font-weight: bold">Target</span> - This lets you aim the light at an info_target entity rather than manually specifying the angles.</p>
<p><span style="font-weight: bold">Pitch Yaw Roll</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">ZHLT Fade</span> - See ZHLTReference for more information.</p>
<p><span style="font-weight: bold">ZHLT Falloff</span> - See ZHLTReference for more information.</p>
<p><span style="font-weight: bold"> Inner Radius</span> - The angle of the cone formed around the directional axis. The area inside this cone will contain the brightest light.</p>
<p><span style="font-weight: bold"> Outer Radius</span> - As above, although the area inside this cone will fade increasingly towards the outer edges.</p>
<p><span style="font-weight: bold">Pitch</span> - The pitch of the light (-90 is straight down, 90 is straight up).</p>
<p><span style="font-weight: bold">Brighness</span> - The first three 3-digit number are the colour (RGB). The Fourth number is the brightness/luminesence.</p>
<p><span style="font-weight: bold">Is Sky</span> - Values:</p>
<pre>0 =No
1 =Yes.</pre>
If Yes, the spot_light will affect the sky brushes, rather than project any light itself.
<p><span style="font-weight: bold">Apperance</span> - Light appearance. Values:</p>
<pre>0 = normal
1 = flicker A
2 = slow strong pulse
3 = candle A
4 = fast strobe
5 = gentle pulse
6 = flicker B
7 = candle B
8 = candle C
9 = slow strobe
10 = fluorescent flicker
11 = slow pulse, no black</pre>
<p><span style="font-weight: bold">Custom Apperance</span> - Use a string of letters to provide a custom light style (see note).</p>
<h3>Flags:</h3><blockquote><span style="color: #ff0000">(1) Initially dark</span> - If this is enabled, the entity will need to be triggered to work.</blockquote>
<h3>Related Entities</h3><p><a href="../node/9957#info_null">Info_null</a><br /><a href="../node/959#light_environment">Light_environment</a><br /><a href="#light">Light</a></p>
<p><span style="font-weight: bold">Notes:</span><br />The Custom Apperance property allows you to enter a string of letters from <span style="font-weight: bold">a</span> to <span style="font-weight: bold">z</span>, representing brightness. <br /> If you entered:&nbsp;&nbsp;<span style="font-weight: bold">abcdefghihgfedcba</span><br />Then the light would go from bright to dim and back again and then repeat. <br />To use this feature, you must name the light, However, if you then use  a trigger to activate it, then it will behave as a normal light.<br />Custom Apperance, and &quot;Named&quot; lights can cause trouble if there are too many in a visible area.</p>
<p align="center"><a href="../node/959#Top">Top</a></p><br />
<!-- Next Entity -->
<h1><a name="momentary_door">momentary_door</a></h1>
<p>This creates a sliding door that opens or closes in coordination with a momentary_rot_button.</p>
<h3>Properties</h3><p><span style="font-weight: bold">Name</span> - Target this entity with a momentary_rot_button.</p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows:</p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade)</pre>
<span style="font-weight: bold">Render Mode</span> -  Options are:<br />
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive</pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. <br />
&quot;Solid&quot; mode simply needs a non zero value to work, while in other modes translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">Global Entity Name</span> - Name of the Global associated with this entity</p>
<p><span style="font-weight: bold">Pitch Yaw Roll</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">Kill Target</span> - When an entity is triggered, it will remove from the game the entity specified by this property.</p>
<p><span style="font-weight: bold">Speed</span> - Speed the door moves at.</p>
<p><span style="font-weight: bold">Master</span> - The name of a multisource (or game_team_master) entity. A master must usually be active in order for the entity to work. Thus they act almost like an on/off switch, in their simplest form, and like an AND gate in the case of the multisource.</p>
<p><span style="font-weight: bold">Move Sound</span> - Options are as follows:</p>
<pre>0 = No Sound
1 = Servo (Sliding)
2 = Pneumatic (Sliding)
3 = Pneumatic (Rolling)
4 = Vacuum
5 = Power Hydraulic
6 = Large Rollers
7 = Track Door
8 = Snappy Metal Door</pre>
<p><span style="font-weight: bold">Stop Sound</span> - the options are:</p>
<pre>0 = No Sound 
1 = Clang with brake 
2 = Clang reverb 
3 = Ratchet Stop 
4 = Chunk 
5 = Light airbrake 
6 = Metal Slide Stop
7 = Metal Lock Stop
8 = Snappy Metal Stop</pre>
<p><span style="font-weight: bold">Delay before Close</span> - This is the time in seconds the door will remain open after opening, &quot; -1 &quot; makes the door stay open.</p>
<p><span style="font-weight: bold">Lip</span> - The number of units in relation to the door width that remain after opening. A negative value <span style="color: #ff0000">-10</span> will make the door move it's width <span style="color: #ff0000">+10</span> units in the direction chosen.</p>
<p><span style="font-weight: bold">Damamge Inflicted when Blocked</span> - This figure is how much damage the player will suffer if caught in the door.</p>
<p><span style="font-weight: bold">Message if triggered</span> -</p>
<p><span style="font-weight: bold">Target</span> - Event to activate on opening.</p>
<p><span style="font-weight: bold">Delay before Fire</span> - Usually the time in seconds before an entity should trigger its target (after being triggered itself). Under other SmartEdit names, delay might also be the time to wait before performing some other action.</p>
<p><span style="font-weight: bold">Fire on Close</span> - The entity to trigger when the door closes.</p>
<p><span style="font-weight: bold">Health</span> - The amount of damage required before the door opens.</p>
<p><span style="font-weight: bold">Locked Sound</span> - Sounds that play when the play is &quot; locked&quot;.<br /> Options are:</p>
<pre>0 = None
2 = Access Denied
8 = Small zap
10 = Buzz
11 = Buzz Off
12 = Latch Locked</pre>
<p><span style="font-weight: bold">Unlocked Sound</span> - Sound to play when the door is &quot;unlocked&quot;.<br />
Options are:</p>
<pre>0 = None
1 = Big zap &amp; Warmup
3 = Access Granted
4 = Quick Combolock
5 = Power Deadbolt 1
6 = Power Deadbolt 2
7 = Plunger
8 = Small zap
9 = Keycard Sound
10 = Buzz</pre>
<p><span style="font-weight: bold">Locked Sentence</span> - Sentence that is spoken when entity is &quot;locked&quot;.<br />Options are:</p>
<pre>1 = Gen. Access Denied
2 = Security Lockout
3 = Blast Door
4 = Fire Door
5 = Chemical Door</pre>
<p><span style="font-weight: bold">Unlocked Sentence</span> - Sentence that is spoken when door is &quot;unlocked&quot;.<br />Options are:</p>
<pre>1 = Gen. Access Granted
2 = Security Disengaged
3 = Blast Door
4 = Fire Door
5 = Chemical Door
6 = Radiation Door
7 = General Containment
8 = Maintenance area</pre>
<p><span style="font-weight: bold">Minimum light level</span> - A Value > zero will let this entity emit light,  the range is zero and &quot; 1 &quot;.</p>
<p><span style="font-weight: bold">ZHLT Lightflags</span> - Set optional lightflags. Refer to ZHLTReference for more info.</p>
<p><span style="font-weight: bold">Light Origin Target</span> - Set optional light placement. Refer to ZHLTReference for more info.</p>
<h1>Flag Properties</h1><blockquote><span style="color: #ff0000">(1) Starts open</span> - The door will &quot;Start Open&quot;.<br />
<span style="color: #ff0000">(4) Don't link</span> - <br />
<span style="color: #ff0000">(8) Passable</span> - Not Solid: an entity with this flag enabled will not obstruct the player or monsters.<br />
<span style="color: #ff0000">(32)Toggle</span> - With this flag set on, an entity can be turned on and off, either by the player, or by being triggered.<br />
<span style="color: #ff0000">(256) Use Only</span> - Player must &quot;Use&quot; to open. Checking this flag prevents the door being triggered any other way.<br />
<span style="color: #ff0000">(512) Monsters can't</span> - Monsters with arms (Zombies) can't use this door.<br />
<span style="color: #ff0000">Not in Deathmatch</span> - If this flag is set on, the entity will not appear in deathmatch games.</blockquote>
<h3>Related Entities</h3><p><a href="../node/959#momentary_rot_button">Momentary_rot_button</a></p>
<p><span style="font-weight: bold">Notes:</span><br />Setting up a momentary_door is the same as setting up a func_door, except it needs a name and it must be targeted by a momentary_rot_button.</p>
<p align="center"><a href="../node/959#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="momentary_rot_button">momentary_rot_button</a></h1>
<p>The momentary_rot_button was designed to control the momentary_door, or, thanks to the Door Hack, another momentary_rot_button. The door (or door-hack button) moves relative to the posistion of the momentary_rot_button controlling it. i.e., if the player lets go of the button, the door begins to close.</p>
<h3>Properties</h3><p><span style="font-weight: bold">Name</span> - Name of Entity</p>
<p><span style="font-weight: bold">Pitch Yaw Roll</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">Targeted Object</span> - Normally, the momentary_door you want to control.</p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows:</p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade)</pre>
<span style="font-weight: bold">Render Mode</span> -  Options are:<br />
<pre> 0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive</pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. <br />&quot;Solid&quot; mode simply needs a non zero value to work, while in other modes translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">ZHLT Lightflags</span> - Set optional lightflags. Refer to ZHLTReference for more info.</p>
<p><span style="font-weight: bold">Light Origin Target</span> - Set optional light placement. Refer to ZHLTReference for more info.</p>
<p><span style="font-weight: bold">Speed</span> - Speed the button will turn.</p>
<p><span style="font-weight: bold">Master</span> - The name of a multisource (or game_team_master) entity. A master must usually be active in order for the entity to work. Thus they act almost like an on/off switch, in their simplest form, and like an AND gate in the case of the multisource.</p>
<p><span style="font-weight: bold">Sounds</span> - sounds values</p>
<pre>0 = None
1 = Big zap &amp; Warmup
2 = Access Denied
3 = Access Granted
4 = Quick Combolock
5 = Power Deadbolt 1
6 = Power Deadbolt 2
7 = Plunger
8 = Small zap
9 = Keycard Sound
21 = Squeaky
22 = Squeaky Pneumatic
23 = Ratchet Groan
24 = Clean Ratchet
25 = Gas Clunk</pre>
<p><span style="font-weight: bold">Distance</span> - Distance in degrees the button will rotate.</p>
<p><span style="font-weight: bold">Auto-return speed</span> - Speed at which the button will return to its starting position after being used.</p>
<p><span style="font-weight: bold">Minimum Light</span> - If you want this entity to emit light, set this to <span style="color: #ff0000">1</span>.</p>
<h3>Flags:</h3><blockquote><span style="color: #ff0000">(1) Door Hack</span> - With this flag enabled, multiple momentary_rot_buttons can have the same Target value, and they will all move when one is used.<br />
<span style="color: #ff0000">(2) Not useable</span>  - Button must be triggered to work.<br />
<span style="color: #ff0000">(16) Auto return</span> - Button returns to its starting position automatically.<br />
<span style="color: #ff0000">(64) X axis</span> - If enabled, the rotation will be on the X axis.<br />
<span style="color: #ff0000">(128) Y axis</span> - If enabled, the rotation will be on the Y axis.</blockquote>
<h3>Related Entities</h3><p><a href="../node/959#momentary_door">Momentary_door</a><br /><a href="../node/955#func_rot_button">Func_rot_button</a></p>
<p><span style="font-weight: bold">Notes:</span><br />If neither of the axis flags is enabled, rotation will default to the Z axis.<br />An origin brush needs to be part of the entity to specify its axis of rotation.<br />This entity is pretty similar to the func_rot_button.</p>
<p align="center"><a href="../node/959#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="monstermaker">monstermaker</a></h1>
<p>This entity allows you to spawn monsters.</p>
<h3>Properties</h3><p><span style="font-weight: bold">Name</span> - If a name is provided, this entity can be toggled on and off or made to spawn its next monster.</p>
<p><span style="font-weight: bold">Target on release</span> - Event to trigger when a monster is spawned.</p>
<p><span style="font-weight: bold">Monster Type</span> - The entity name of the monsters to be spawned (e.g. monster_headcrab).</p>
<p><span style="font-weight: bold">Children's Name</span> - Assigns this name to each monster spawned, so that they can be controlled.</p>
<p><span style="font-weight: bold">Number of monsters</span> - The maximum number of entities to spawn. <span style="color: #ff0000">-1</span> is infinite.</p>
<p><span style="font-weight: bold">Frequency</span> - Delay, in seconds, between each monster being spawned. If <span style="color: #ff0000">-1</span>, a new monster will only be spawned after the previous has been killed.</p> 
<p><span style="font-weight: bold">Max live children</span> - Maximum number of live children allowed at one time. Spawnings will be suspended until a monster dies. A value of <span style="color: #ff0000">-1</span> means infinite.</p>
<h3>Flags:</h3><blockquote><span style="color: #ff0000">(1) Start On</span> - The monstermaker will begin spawning monsters as soon as the map loads.<br />
<span style="color: #ff0000">(4) Cyclic</span> - If this is enabled, triggering the monstermaker will make it spawn its next monster. Otherwise, triggering will toggle the monstermaker on or off.<br />
<span style="color: #ff0000">(8) Monsterclip</span> - If this is enabled, spawned monsters will not be able to pass through func_monsterclip brushes.</blockquote>
<h3>Related Entities</h3>None
<p><span style="font-weight: bold">Notes:</span><br />Monstermakers can be a bit of buggy, some of the monsters produced will not fade after death, and there are issues with the AI behaviour of monsters spawned with a monstermaker.</p><p>The &quot;Childrens Name&quot; (netname) basically assigns a name to the monster spawned, that way you can target the monster with a scripted_sequence, or sentence.</p><p>AI problems seem to be natural with grunts for some reason, and the only solution I have found is to transport them into the map from somewhere else. That way they retain their AI.</p>
<p align="center"><a href="../node/959#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="multimanager">multimanager</a></h1>
<p>This entity can activate several different events (including itself) at specified times.</p>
<h3>Properties</h3><p><span style="font-weight: bold">Name</span> -Trigger this entity to make it begin activating its targets.</p>
<h3>Flags:</h3><blockquote><span style="color: #ff0000">(1) Multithreaded</span> - See notes below for an explanation.</blockquote>
<h3>Related Entities</h3><p><a href="../node/959#multisource">Multisource</a><br /><a href="../node/961#trigger_relay">Trigger_relay</a></p>
<p><span style="font-weight: bold">Notes:</span><br /><span style="font-weight: bold">Maximum of 16 individual targets.</span></p><p>To add targets, disable SmartEdit, then click Add and enter the Name as the new Key and a delay in seconds as the Value, then click OK.</p><span style="font-weight: bold">Multithreading</span>: Normally, If the multi_manager is called again before it has finished its work-order, it will ignore the new call and will just carry on with its work. However, with the Multithreaded flag enabled, when the manager is called again, it will continue working while another &quot;copy&quot; of the multi_manager will start up. This solves various problems, mainly related to multiplayer games (where you might want a multi_manager to start up for each player that joins - if one player joins while the multimanager is still going for another player, a new thread needs to be created).<br />
<p align="center"><a href="../node/959#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="multisource">multisource</a></h1>
<p>The multisource acts as an AND gate. It only triggers its targets if all entities targeting it are in the &quot;on&quot; state. It can also be used as a master (instead of actively tiggering something when the conditions are met, events using it as a master will only be able to function when the conditions are met).</p>
<h3>Properties</h3><p><span style="font-weight: bold">Name</span> - This entity must have a name so that other entities can use it as a master.</p>
<p><span style="font-weight: bold">Target</span> - Name of the event to be activated once all clients have been activated.</p>
<p><span style="font-weight: bold">Global State Master</span> - This is the Name of the global variable (set by an env_global) that can be used to control the state of the multisource.</p>
<h3>Flags:</h3><blockquote>None</blockquote>
<h3>Related Entities</h3><p><a href="../node/959#multimanager">Multimanager</a><br /><a href="../node/954#env_gloabal">Env_global</a></p>
<p><span style="font-weight: bold">Notes:</span><br />Note that all clients need to be &quot;active&quot; at the same time in order for the multisource state to be &quot;on&quot;. If you have two buttons targeting a multisource, pressing both will make the multisource active, until either one resets (pops back).</p>
<p align="center"><a href="../node/959#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="path_corner">path_corner</a></h1>
<p>Multiple path_corners form a path that can be followed by various moving entities, including some monsters and the func_train.</p>
<h3>Properties</h3><p><span style="font-weight: bold">Name</span> - Provide a name to identify each corner in a path.</p>
<p><span style="font-weight: bold">Pitch Yaw Roll</span> - Sets the pitch (up / down), yaw (left / right) and  roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">Next stop target</span> - Name of the next path_corner in the path.</p> 
<p><span style="font-weight: bold">Fire On Pass</span> - Trigger this event when this path_corner is passed by the entity using the path.</p>
<p><span style="font-weight: bold">Wait here</span> - Wait at this path_corner, for this number of seconds before moving to next corner.</p>
<p><span style="font-weight: bold">New Train Speed</span> - Speed of the train once it passes this path_corner.</p>
<p><span style="font-weight: bold">New train rot. Speed</span> -</p>
<h3>Flags:</h3><blockquote><span style="color: #ff0000">(1) Wait for retdivigger</span> - Moving entity will wait and will only continue when triggered.<br />
<span style="color: #ff0000">(2) Teleport</span> - Makes a func_train entity teleport to the Next Stop path_corner.<br />
<span style="color: #ff0000">(4) Fire once</span> - Will only fire its &quot;Fire On Pass&quot; target once.</blockquote>
<h3>Related Entities</h3><p><a href="../node/955#func_train">Func_train</a><br /><a href="../node/959#path_track">Path_track</a></p>
<p><span style="font-weight: bold">Notes:</span><br />It's a good idea to establish a simple path_corner naming convension. For example:<br />&quot;mypath1_1&quot;, &quot;mypath1_2&quot;, &quot;mypath1_3&quot;.</p>
<p align="center"><a href="../node/959#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="path_track">path_track</a></h1>
<p>Similar to path_corner, but <span style="font-weight: bold">specifically</span> for func_tracktrains.</p>
<h3>Properties</h3><span style="font-weight: bold">Name</span> - Provide a name to identify each corner in a path.<br />
<p><span style="font-weight: bold">Pitch Yaw Roll</span> - Sets the pitch (up / down), yaw (left / right) and  roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">Next stop target</span> - The name of the next path_track in the path.</p>
<p><span style="font-weight: bold">Fire on pass</span> - When a train passes this path_track it will trigger this event.</p>
<p><span style="font-weight: bold">Branch path</span> - The name of a secondary path_track (see notes).</p>
<p><span style="font-weight: bold">Fire on dead-end</span> - If this path_track is a dead-end (see notes), activate this event on reaching.</p>
<p><span style="font-weight: bold"> New Train Speed</span> - As the train passes this point, this speed will be assigned to it.</p>
<h3>Flags:</h3><blockquote><span style="color: #ff0000">(1) Disabled</span> - Disables this path_track<br />
<span style="color: #ff0000">(2) Fire once</span> - Fires the &quot;Fire on pass target&quot; only once<br />
<span style="color: #ff0000">(4) Branch reverse</span> - Reverse the Branch at this path<br />
<span style="color: #ff0000">(8) Disable train</span> - Disable train at this path</blockquote>
<h3>Related Entities</h3><p><a href="../rustent/func.html#func_trackautochange">Func_trackautochange</a><br />
<a href="../node/955#func_trackchange">Func_trackchange</a><br />
<a href="../node/955#func_tracktrain">Func_tracktrain</a><br />
<a href="../node/955#func_traincontrols">Func_traincontrols</a><br />
<a href="../node/959#path_corner">Path_corner</a></p>
<p><span style="font-weight: bold">Notes:</span><br />When a path_track is triggered, its Next Stop Target is replaced by its Branch Path value.<br />If a path_track's Next Stop target is not defined, or if it has been triggered but has no branch path, it is considered a dead end.</p>
<p align="center"><a href="../node/959#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="player_loadsaved">player_loadsaved</a></h1>
<p>This entity triggers the game to load the last autosave (created with a trigger_autosave). Use this entity for when the player does something that will prohibit them from finishing the level.</p>
<h3>Properties</h3><p><span style="font-weight: bold">Name</span> - If you want to trigger this entity with an event, you must name it.</p>
<p><span style="font-weight: bold">Fade Duration</span> - Duration of the fade In seconds.</p>
<p><span style="font-weight: bold">Hold Fade</span> - In seconds.</p>
<p><span style="font-weight: bold">Fade Alpha</span> - This controls the level of fade. A Fade Alpha of 128 would fade the screen half-way between normal and the fade color (setting below). For a solid fade, a value of 255 can be used.</p>
<p><span style="font-weight: bold">Fade Color</span> - This is the RGB color the screen will fade to. It defaults to black (0 0 0).</p>
<p><span style="font-weight: bold">Show Message delay</span> - Delay time before the Message is shown</p>
<p><span style="font-weight: bold">Message to Display</span> - Text to display indicating WHY the loadsave was used<br /> &quot;Subject Failed to keep the Scientist alive, Subject Terminated!&quot;<br /> You get the idea...</p>
<p><span style="font-weight: bold">Reload delay</span> - Time to wait before the autosave is reloaded, in seconds.</p>
<h3>Flags:</h3><blockquote>None</blockquote>
<h3>Related Entities</h3><p><a href="../node/961#trigger_autosave">Trigger_autosave</a></p>
<p><span style="font-weight: bold">Notes:</span><br />Player_loadsaved has similar properties to the env_fade.<br /> This entity is normally used when Gordon kills something vital to his success in the mission. If he needs a Sci to open a door for instance, but think outside the square... This can also be used if Gordon follows a path to nowhere. Just remember to use a trigger_autosave before the event.</p>
<p align="center"><a href="../node/959#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="player_weaponstrip">player_weaponstrip</a></h1>
<p>When activated, this entity removes all the weapons that the player is carrying.</p>
<h3>Properties</h3><p><span style="font-weight: bold">Name</span> - To trigger this entity externally, use this name.</p>
<h3>Flags:</h3><blockquote>None</blockquote>
<h3>Related Entities</h3><p><a href="../node/961#trigger_autosave">Trigger_autosave</a></p>
<p><span style="font-weight: bold">Notes:</span><br />Player_weaponstrip is a brush entity, assigned to a brush and placed in the players path. The player walks through the trigger and his weapons (all of them, including Ammo) are stripped.</p>
<p align="center"><a href="../node/959#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="scripted_sentence">scripted_sentence</a></h1>
<p>A scripted_sentence allows you to add voice to your monsters. This is probably the most misunderstood entity in the whole set. But also one of the most powerfull.</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - To trigger this entity, use a Name here</p>
<p><span style="font-weight: bold">Target</span> - Event or entity to activate once the sentence has finished.</p>
<p><span style="font-weight: bold">Delay Before Trigger</span> -  Delay before the Target is activated, once the sentence is finished</p>
<p><span style="font-weight: bold">Kill Target</span> - Event or entity to be killed once the sentence has finished.</p>
<p><span style="font-weight: bold">Sentence Name</span> - Sentence to play (see notes).</p>
<p><span style="font-weight: bold">Speaker Type</span> - This is the name of the monster that says the sentence.</p>
<p><span style="font-weight: bold">Sentence Time</span> - This defines how long the monster will face the player while speaking</p>
<p><span style="font-weight: bold">Search Radius</span> - This seems to be the distance from the scripted_sentence to the monster. If the monster that is identified in the &quot;Speaker type&quot; is not in this radius, the sentence wont play.</p>
<p><span style="font-weight: bold">Delay Before Refire</span> - Delay before the entity can be retriggered.</p>
<p><span style="font-weight: bold">Listener Type</span> - The name of the entity that the speaker will look towards while speaking. This can be the Player or another entity.</p>
<p><span style="font-weight: bold">Volume</span> - Range: 0 - 10.</p>
<p><span style="font-weight: bold">Sound Radius</span> - The radius the sentence will be audible</p>
<h3>Flags:</h3><blockquote><span style="color: #ff0000">(1) Fire once</span> - This will stop the sentence from being retriggered<br />
<span style="color: #ff0000">(2) Followers only</span> - <br />
<span style="color: #ff0000">(4) Interrupt speech</span> - Will interupt the normal speach to the &quot;Speaker Type&quot; to play the sentence.<br />
<span style="color: #ff0000">(8) Concurrent</span> -</blockquote>
<h3>Related Entities</h3><p><a href="../node/959#aiscripted_sequence">Aiscripted_sequence</a><br /><a href="../node/959#scripted_sequence">Scripted_sequence</a></p>
<p><span style="font-weight: bold">Notes:</span><br />Enter <span style="font-weight: bold">player</span> as Listener Type if you want the speaker to look at the player while talking.<br />The sentence name is derived from the sentence.txt, to enter the sentence name, find the Group heading and enter:<span style="font-weight: bold"> ! </span> infront of the name.<br />From the sentence.txt:</p>
<pre>	// HUMAN GRUNTS
	HG_GREN0 hgrunt/clik(p120) grenade! clik
</pre>
<p>So, to get your monster to say &quot;grenade! Clik&quot;, you would enter <span style="color: #ff0000">&nbsp;!HG_GREN0&nbsp;</span><br />The monster speaking the sentence does not have to match the type from the sentence.txt, but hey... it would be a bit weird if it didn't.</p>
<p align="center"><a href="../node/959#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="scripted_sequence">scripted_sequence</a></h1>
<p>This entity allows you to make a monster perform a pre-scripted animation.</p>
<h3>Properties</h3><p><span style="font-weight: bold">Name</span> - The name of the entity so it can be triggered</p>
<p><span style="font-weight: bold">Target</span> - This event will be triggered when the script is complete.</p>
<p><span style="font-weight: bold">Delay before trigger</span> - The delay before Target and KillTarget are activated, after completing sequence.</p>
<p><span style="font-weight: bold">KillTarget</span> - When the script is complete, this event will be removed from the game.</p>
<p><span style="font-weight: bold">Pitch Yaw Roll</span> - Sets the pitch (up / down), yaw (left / right) and  roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">Target Monster</span> - The name of the monster that this script affects (see notes).</p>
<p><span style="font-weight: bold">Idle Animation</span> - This is what the monster will return to after performing the Action Animation.</p>
<p><span style="font-weight: bold">Action Animation</span> - This is the animation that will be performed by the targeted monster.</p>
<p><span style="font-weight: bold">Search Radius</span> - The script will look for a valid monster in this radius. Set this to 0 if you want the script to be triggerable only.</p>
<p><span style="font-weight: bold">Repeat Rate ms</span> - The above search will be performed with intervals of this length.</p>
<p><span style="font-weight: bold">Move to Position</span> - How the monster moves:</p>
<code>
0 = No - Monster will perform the sequence wherever it is.
1 = Walk 
- walks to the location of the aiscripted_sequence, then performs its animation.
2 = Run - as above, but runs.
4 = Instantaneous - warps/ teleports to spot.
5 = No-turn to face 
- monster turns to face the aiscripted_sequence, then performs the sequence.</code>
<h3>Flags:</h3><blockquote><span style="color: #ff0000">(4) Repeatable</span> - Lets the sequence be repeated more than once.<br />
<span style="color: #ff0000">(8) Leave corpse</span> - If the monster dies during the script, its corpse will be left. If not enabled, the corpse will fade away.<br />
<span style="color: #ff0000">(16) interpolate</span> - not used?<br />
<span style="color: #ff0000">(32) No interruptions</span> - The script will not stop for any reason.<br />
<span style="color: #ff0000">(64) Override AI</span> - If this is enabled, the normal AI will be overridden.<br />
<span style="color: #ff0000">(128) No Script Move</span> - Only turn this on if the monster jumps to a new position after playing the script. It should make the monster re-sync with its 
AI.</blockquote>
<h3>Related Entities</h3><p><a href="../node/959#aiscripted_seqeuence">Aiscripted_sequence</a><br /><a href="../node/959#scripted_sentence">Scripted_sentence</a></p>
<p><span style="font-weight: bold">Notes:</span><br />If you want the script to act with all of a type of monster (monster_scientist for example) then enter that type in Target Monster rather than a Name.<br />Use a Model Viewer (HLMV) to see the animations available to each monster.</p><p>These sequences were designed to make Half-Life possible. They were <span style="font-weight: bold">Not</span> designed so you could make monsters do everything you want them too.</p>
<p align="center"><a href="../node/959#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="speaker">speaker</a></h1>
<p>Creates a PA system that randomly plays announcements.</p>
<h3>Properties</h3><p><span style="font-weight: bold">Name</span> - Trigger to activate (if Start Silent is enabled).</p>
<p><span style="font-weight: bold">Announcement Presets</span> - Values:</p>
<pre>0 = None
1 = c1a0 announcer
2 = c1a1 announcer
3 = c1a2 announcer
4 = c1a3 announcer
5 = c1a4 announcer
6 = c2a1 announcer
7 = c2a2 announcer
9 = c2a4 announcer
11 = c3a1 announcer
12 = c3a2 announcer</pre>
<p><span style="font-weight: bold">Sentence Group Name</span> - The sentence group to randomly select sentences from.</p>
<p><span style="font-weight: bold">Volume (10=loudest)</span> - Sound Volume for the PA.</p>
<h3>Flags:</h3><blockquote><span style="color: #ff0000">(1) Start Silent</span> -  If enabled, the entity will have to be triggered to work.</blockquote>
<h3>Related Entities</h3><p><a href="../node/954#env_sound">Env_sound</a><br /><a href="../node/959#ambient_generic">Ambient_generic</a></p>
<p><span style="font-weight: bold">Related Tutorial</span><br /><a href="../node/7" target="_blank">Taming the Speaker Entity</a></p>
<p><span style="font-weight: bold">Notes:</span><br />Place this in one or more spots in your level. Every 3 to 10 minutes it will make a random announcement, as if a PA system is in effect.</p>
<p align="center"><a href="../node/959#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="special_game_entities">Special Game Entities</a></h1>
<p> Game specific Enities are listed in the main <a href="../node/33" target="_blank"> Entity Properties</a> page</p>
<p align="center"><a href="../node/959#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="target_cdaudio">target_cdaudio</a></h1>
<p>The target_cdaudio entity allows you to play a CD track when the player passes within the specified radius around the entity.</p>
<h3>Properties</h3><p><span style="font-weight: bold">Name</span> - Can be triggered to activate.</p>
<p><span style="font-weight: bold">Track #</span> - Track to play (1 - 30), -1 to stop.</p>
<p><span style="font-weight: bold">Player Radius</span> - Player must come within this radius for the track to start playing.</p>
<h3>Flags:</h3><blockquote>None</blockquote>
<h3>Related Entities</h3><p><a href="../node/961#trigger_cdaudio">Trigger_cdaudio</a></p>
<p><span style="font-weight: bold">Notes:</span><br />None </p>
<p align="center"><a href="../node/959#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="worldspawn">Worldspawn</a></h1>
<p>A special entity that controls several global properties. Created automatically, 
and can be found in Hammer under Map -> Map Properties.</p>
<h3>Properties</h3><p><span style="font-weight: bold">Map Description/Title</span> - For tracking use only, this will not display anything at map start</p>
<p><span style="font-weight: bold">Environment Map</span> - Lets you choose what sky image you want.</p> Values are:<br />
<pre>2desert
alien1
alien2
alien3
black
city
cliff 
desert 
dusk 
morning
neb1
neb2
neb6
neb7
night
space
xen8
xen9
xen10</pre>
<p><span style="font-weight: bold">CD track to play</span> - CD track to play when the level begins.</p>
<p><span style="font-weight: bold">Default light level</span> - Not impilmented?</p>
<p><span style="font-weight: bold">Default Wave Height</span> - Set the default wave height here (can be overridden by the properties in func_water).</p>
<p><span style="font-weight: bold">Max viewable distance</span> - Maximum distance the player can see. The Default is 4096. If you want to increase this, it is best to do it in multiples ie: 8192</p>
<p><span style="font-weight: bold">Chapter title message</span> - Text displayed when entering the level. Same format as env_message</p>
<p><span style="font-weight: bold">Level Fade-in</span> - 0 = No, 1 = Yes. If Yes, then the level will start black and fade into normal light.</p>
<p><span style="font-weight: bold">Display game title</span> - 0 = No, 1 = Yes. If Yes, then &quot;Half-Life&quot; will be displayed after the map loads. The game title is found on the bottom of the HUD Sprites in the Sprite folder.</p>
<p><span style="font-weight: bold">New Level Unit</span> - 0 = No, 1 = Yes. If Yes, all previous global triggers will be removed.</p>
<p><span style="font-weight: bold">Map team List</span> - This will be copied into the mp_teamlist while your map is running if the server allows maps to override the team list.</p>
<p><span style="font-weight: bold">Default Team</span> - 0 = Fewest Players, 1 = First Team (team index 0).</p>
<h3>Flags:</h3><blockquote>None</blockquote>
<h3>Related Entities</h3><p><a href="../node/955#func_water">Func_water</a><br /><a href="../node/954#env_message">Env_message</a></p>
<p><span style="font-weight: bold">Related Tutorial</span><br /><a href="../node/558" target="_blank">Half-Life Skies</a></p>
<p><span style="font-weight: bold">Notes:</span><br />None</p>
<p align="center"><a href="../node/959#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="world_items">World_items</a></h1>
<p>This entity allows you to spawn various items. Its function was replaced by the individual <span style="color: #ff0000"> item_ entities</span>, so it's not normally used.</p>
<h3>Properties</h3><p><span style="font-weight: bold">Name</span> - Name the item.</p>
<p><span style="font-weight: bold">Pitch Yaw Roll</span> - Sets the pitch (up / down), yaw (left / right) and  roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">Target</span> - When an entity is activated, it triggers the entity with the name specified by Target.</p>
<p><span style="font-weight: bold">Delay before trigger</span> - When the Item is &quot;picked up&quot; by the player, this is the delay before the &quot;Killtarget&quot; is fired</p>
<p><span style="font-weight: bold">KillTarget</span> - The entity named here will be removed from the game when the world_item is used</p>
<p><span style="font-weight: bold">Types</span> - World item to spawn:</p>
<pre>42 = Antidote
43 = Security Card
44 = Battery
45 = Suit</pre>
<h3>Flags:</h3><blockquote>None</blockquote>
<h3>Related Entities</h3><p><a href="../node/958#item_security">Item_security</a></p>
<p><span style="font-weight: bold">Notes:</span><br />All the Items available here can be placed seperately using their individual Item_entities.</p>
<p align="center"><a href="../node/959#Top">Top</a></p><br />
<p align="center">Next Entity Guide <a href="../node/960">Monster Entities</a></p><br /><hr />
<!--EOF@858--></ul><h1 id="960" name="960" class="book-h3">Monster</h1><ul><!-- 
Submitted by Andy Nov  2004 
Updated to validated XHTML Transitional - FEB 05 Andy
-->
<h1><a name="Top">Half-Life Monster Entities</a></h1>
<!-- Start description -->
<ul><li><a href="../node/960#monster_alien_controller">Monster_alien_controller</a></li>
<li><a href="../node/960#monster_alien_grunt">Monster_alien_grunt</a></li>
<li><a href="../node/960#monster_alien_slave">Monster_alien_slave</a></li>
<li><a href="../node/960#monster_apache">Monster_apache</a></li>
<li><a href="../node/960#monster_babycrab">Monster_babycrab</a></li>
<li><a href="../node/960#monster_barnacle">Monster_barnacle</a></li>
<li><a href="../node/960#monster_barney">Monster_barney</a></li>
<li><a href="../node/960#monster_barney_dead">Monster_barney_dead</a></li>
<li><a href="../node/960#monster_bigmomma">Monster_bigmomma</a></li>
<li><a href="../node/960#monster_bloater">Monster_bloater</a></li>
<li><a href="../node/960#monster_bullchicken">Monster_bullchicken</a></li>
<li><a href="../node/960#monster_cockroach">Monster_cockroach</a></li>
<li><a href="../node/960#monster_flyer_flock">Monster_flyer_flock</a></li>
<li><a href="../node/960#monster_furniture">Monster_furniture</a></li>
<li><a href="../node/960#monster_gargantua">Monster_gargantua</a></li>
<li><a href="../node/960#monster_generic">Monster_generic</a></li>
<li><a href="../node/960#monster_gman">Monster_gman</a></li>
<li><a href="../node/960#monster_grunt_repel">Monster_grunt_repel</a></li>
<li><a href="../node/960#monster_handgrenade">Monster_handgrenade</a></li>
<li><a href="../node/960#monster_headcrab">Monster_headcrab</a></li>
<li><a href="../node/960#monster_hevsuit_dead">Monster_hevsuit_dead</a></li>
<li><a href="../node/960#monster_hgrunt_dead">Monster_hgrunt_dead</a></li>
<li><a href="../node/960#monster_human_assassin">Monster_human_assassin</a></li>
<li><a href="../node/960#monster_human_grunt">Monster_human_grunt</a></li>
<li><a href="../node/960#monster_ichthyosaur">Monster_ichthyosaur</a></li>
<li><a href="../node/960#monster_leech">Monster_leech</a></li>
<li><a href="../node/960#monster_miniturret">Monster_miniturret</a></li>
<li><a href="../node/960#monster_nihlanth">Monster_nihlanth</a></li>
<li><a href="../node/960#monster_osprey">Monster_osprey</a></li>
<li><a href="../node/960#monster_rat">Monster_rat</a></li>
<li><a href="../node/960#monster_satchelcharge">Monster_satchelcharge</a></li>
<li><a href="../node/960#monster_scientist">Monster_scientist</a></li>
<li><a href="../node/960#monster_scientist_dead">Monster_scientist_dead</a></li>
<li><a href="../node/960#monster_sentry">Monster_sentry</a></li>
<li><a href="../node/960#monster_sitting_scientist">Monster_sitting_scientist</a></li>
<li><a href="../node/960#monster_snark">Monster_snark</a></li>
<li><a href="../node/960#monster_tentacle">Monster_tentacle</a></li>
<li><a href="../node/960#monster_tripmine">Monster_tripmine</a></li>
<li><a href="../node/960#monster_turret">Monster_turret</a></li>
<li><a href="../node/960#monster_zombie">Monster_zombie</a></li></ul>
<!--Next Entity--><hr />
<h1><a name="monster_alien_controller">monster_alien_controller</a></h1>
<p>Spawns a flying fire-throwing thing with a big head. These crafty little blighters hover using info_node_air.</p>
<center><center><img src="../content/half-life/entimgs/monster/alien_controller.jpg" width="350" height="200"  alt="alien_controller" title="alien_controller" /></center></center>
<h3>Properties</h3>
<p><span style="font-weight: bold">Target</span> -  When the entity is activated, the Target named here is triggered.</p>
<p><span style="font-weight: bold">Name</span> - The Name of the entity.</p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows: </p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade)</pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive</pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. 'Solid' mode simply needs a non zero value to work, while in other modes translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">TriggerTarget</span> Used to trigger a seperate Target in conjunction with the Trigger Condition.</p>
<p><span style="font-weight: bold">Trigger Condition</span> - This controls the condition under which  a monster will trigger its TriggerTarget.<br /> The options are:</p>
<pre>0 = No Trigger
1 = See Player, Mad at Player
2 = Take Damage
3 = 50% Health Remaining
4 = Death
7 = Hear World
8 = Hear Player
9 = Hear Combat
10 = See Player Unconditional
11 = See Player, Not In Combat </pre>
<p><span style="font-weight: bold"> Animation Sequence</span> - The animation sequence to play. If you are using Hammer 3.5, this will also be displayed in the 3D window.</p>
<h3>Flags:</h3>
<blockquote><span style="color: #ff0000">(1) WaitTillSeen</span>: Monster will wait till seen, however it doesn't always work that way.<br />
<span style="color: #ff0000">(2) Gag</span>:  When checked, the monster won't say anything, great for shutting Grunts up.<br />
<span style="color: #ff0000">(4) MonsterClip</span>: Prevents the monster from moving through func_monsterclip brushes.<br />
<span style="color: #ff0000">(16) Prisoner</span>: When enabled, the monster won't  attack the player (normal AI is disabled).<br />
<span style="color: #ff0000">(128) WaitForScript</span>: Does not appear to have been  implemented.<br />
<span style="color: #ff0000">(256) Pre-Disaster</span>: Only used by Scientists and Barneys. Gives them pre-disaster speech, and prevents them  from following the player.<br />
<span style="color: #ff0000">(512) Fade Corpse</span>: After being killed, the monster's corpse will fade out after a while, instead of lying there forever.</blockquote>
<h3>Related Entities</h3>
<a href="../node/957#info_node_air">Info_node_air</a>
<p><span style="font-weight: bold">Notes:</span><br />To get these little critters flying, you will need a lot of info_node_air placed in the map. </p>
<p align="center"><a href="../node/960#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="monster_alien_grunt">monster_alien_grunt</a></h1>
<p>Spawns a solid hornet shooting monster.</p>
<center><center><img src="../content/half-life/entimgs/monster/alien_grunt.jpg" width="350" height="200"  alt="alien_grunt" title="alien_grunt" /></center></center>
<h3>Properties</h3>
<p><span style="font-weight: bold">Target</span> -  When the entity is activated, the Target named here is triggered.</p>
<p><span style="font-weight: bold">Name</span> - The Name of the entity for triggering.</p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows: </p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade)</pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive</pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. 'Solid' mode simply needs a non zero value to work, while in other modes translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">TriggerTarget</span> - Used to trigger a Target in conjunction with the Trigger Condition.</p>
<p><span style="font-weight: bold">Trigger Condition</span> - This controls the condition under which  a monster will trigger its TriggerTarget.<br /> The options are:</p>
<pre>0 = No Trigger
1 = See Player, Mad at Player
2 = Take Damage
3 = 50% Health Remaining
4 = Death
7 = Hear World
8 = Hear Player
9 = Hear Combat
10 = See Player Unconditional
11 = See Player, Not In Combat </pre>
<p><span style="font-weight: bold"> Animation Sequence</span> - The animation sequence to play. If you are using Hammer 3.5, this will also be displayed in the 3D window.</p>
<p><span style="font-weight: bold">Squad Name</span> - Not sure if this is enabled? but you should be able to select a Squad Leader</p>
<h3>Flags:</h3>
<blockquote><span style="color: #ff0000">(1) WaitTillSeen</span>: Monster will wait till seen, however it doesn't always work that way.<br />
<span style="color: #ff0000">(2) Gag</span>: When checked, the monster won't say anything or make noise, great for shutting Grunts up.<br />
<span style="color: #ff0000">(4) MonsterClip</span>: Prevents the monster from moving through func_monsterclip brushes.<br />
<span style="color: #ff0000">(16) Prisoner</span>: When enabled, the monster won't  attack the player (normal AI is disabled).<br />
<span style="color: #ff0000">(32) Squad Leader</span>: Enables this monster as the Squad leader.<br />
<span style="color: #ff0000">(128) WaitForScript</span>: Does not appear to have been  implemented.<br />
<span style="color: #ff0000">(256) Pre-Disaster</span>: Only used by Scientists and Barneys. Gives them pre-disaster speech, and prevents them  from following the player.<br />
<span style="color: #ff0000">(512) Fade Corpse</span>: After being killed, the monster's corpse will fade out after a while, instead of lying there forever.</blockquote>
<h3>Related Entities</h3>None<br />
<p><span style="font-weight: bold">Notes:</span><br />Incredible fire power when deployed in packs. Difficult to kill and the 'Hornets' they fire are very annoying. Not sure, but since it has a Squad Leader Flag, it might pay to try it out.</p>
<p align="center"><a href="../node/960#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="monster_alien_slave">monster_alien_slave</a></h1>
<p>Spawns one of those pesky electric slaves.</p>
<center><img src="../content/half-life/entimgs/monster/alien_slave.jpg" width="350" height="200"  alt="alien_slave" title="alien_slave" /></center>
<h3>Properties</h3>
<p><span style="font-weight: bold">Target</span> -  When the entity is activated, the Target named here is triggered.</p>
<p><span style="font-weight: bold">Name</span> - The Name of the entity for triggering.</p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows: </p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade)</pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive</pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. 'Solid' mode simply needs a non zero value to work, while in other modes translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">TriggerTarget</span> Used to trigger a Target in conjunction with the Trigger Condition.</p>
<p><span style="font-weight: bold">Trigger Condition</span> - This controls the condition under which  a monster will trigger its TriggerTarget.<br /> The options are:</p>
<pre>0 = No Trigger
1 = See Player, Mad at Player
2 = Take Damage
3 = 50% Health Remaining
4 = Death
7 = Hear World
8 = Hear Player
9 = Hear Combat
10 = See Player Unconditional
11 = See Player, Not In Combat </pre>
<p><span style="font-weight: bold"> Animation Sequence</span> - The animation sequence to play. If you are using Hammer 3.5, this will also be displayed in the 3D window.</p>
<p><span style="font-weight: bold">Squad Name</span> - Allows you to choose a Squad name for use with the Squad leader Flag.</p>
<h3>Flags:</h3>
<blockquote><span style="color: #ff0000">(1) WaitTillSeen</span>: Monster will wait till seen, however it doesn't always work that way.<br />
<span style="color: #ff0000">(2) Gag</span>: When checked, the monster won't say anything or make noise, great for shutting Grunts up.<br />
<span style="color: #ff0000">(4) MonsterClip</span>: Prevents the monster from moving through func_monsterclip brushes.<br />
<span style="color: #ff0000">(16) Prisoner</span>: When enabled, the monster won't  attack the player (normal AI is disabled).<br />
<span style="color: #ff0000">(32) Squad Leader</span>: Appoint a Squad leader for a 'Named' squad.<br />
<span style="color: #ff0000">(64) Ignore Player</span>: Not sure if this is implemented.<br />
<span style="color: #ff0000">(128) WaitForScript</span>: Does not appear to have been  implemented.<br />
<span style="color: #ff0000">(256) Pre-Disaster</span>: Only used by Scientists and Barneys. Gives them pre-disaster speech, and prevents them  from following the player.<br />
<span style="color: #ff0000">(512) Fade Corpse</span>: After being killed, the monster's corpse will fade out after a while, instead of lying there forever.</blockquote>
<h3>Related Entities</h3>None<br />
<p><span style="font-weight: bold">Notes:</span><br />The FGD calls this thing a Vortigaunt. Very powerful in packs. Give the Squad Leader Falg a try.</p>
<p align="center"><a href="../node/960#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="monster_apache">monster_apache</a></h1>
<p>Spawns the Apache attack helicopter</p>
<center><img src="../content/half-life/entimgs/monster/apache.jpg" width="350" height="200"  alt="apache" title="apache" /></center>
<h3>Properties</h3>
<p><span style="font-weight: bold">Target</span> -  When the entity is activated, this Target named here is triggered.</p>
<p><span style="font-weight: bold">Name</span> - The Name of the entity for triggering.</p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows: </p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade)</pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive</pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255.  'Solid' mode simply needs a non zero value to work, while in other modes translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">TriggerTarget</span> Used to trigger a Target in conjunction with the Trigger Condition.</p>
<p><span style="font-weight: bold">Trigger Condition</span> - This controls the condition under which  a monster will trigger its TriggerTarget.<br /> The options are:</p>
<pre>0 = No Trigger
1 = See Player, Mad at Player
2 = Take Damage
3 = 50% Health Remaining
4 = Death
7 = Hear World
8 = Hear Player
9 = Hear Combat
10 = See Player Unconditional
11 = See Player, Not In Combat </pre>
<p><span style="font-weight: bold"> Animation Sequence</span> - The animation sequence to play. If you are using Hammer 3.5, this will also be displayed in the 3D window.</p>
<h3>Flags:</h3>
<blockquote><span style="color: #ff0000">(1) WaitTillSeen</span>: Monster will wait till seen, however it doesn't always work that way.<br />
<span style="color: #ff0000">(2) Gag</span>:  When checked, the monster won't say anything, great for shutting Grunts up.<br />
<span style="color: #ff0000">(4) MonsterClip</span>: Prevents the monster from moving through func_monsterclip brushes.<br />
<span style="color: #ff0000">(8) No Wreckage</span>: When the Apache is shot down, No wreckage gibs are shown.<br />
<span style="color: #ff0000">(16) Prisoner</span>: When enabled, the monster won't  attack the player (normal AI is disabled).<br />
<span style="color: #ff0000"> (64) Start Inactive</span>: Places the apache in hover mode and requires triggering<br />
<span style="color: #ff0000">(128) WaitForScript</span>: Does not appear to have been  implemented.<br />
<span style="color: #ff0000">(256) Pre-Disaster</span>: Only used by Scientists and Barneys. Gives them pre-disaster speech, and prevents them  from following the player.<br />
<span style="color: #ff0000">(512) Fade Corpse</span>: After being killed, the monster's corpse will fade out after a while, instead of lying there forever.</blockquote>
<h3>Related Entities</h3>None<br />
<p><span style="font-weight: bold">Notes:</span><br />
The apache folows path_corners, The flight path between the corners is predetermined by their placement, unlike the Osprey. Pitch, Roll and Yaw settings of the path_corners is limited, but does enhance flight.</p>
<p align="center"><a href="../node/960#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="monster_babycrab">monster_babycrab</a></h1>
<p>This has to be one of the most annoying creatures in the game. It's the offspring of a Big Momma.</p>
<center><img src="../content/half-life/entimgs/monster/babycrab.jpg" width="350" height="200"  alt="babycrab" title="babycrab" /></center>
<h3>Properties</h3>
<p><span style="font-weight: bold">Target</span> -  When the entity is activated, the Target named here is triggered.</p>
<p><span style="font-weight: bold">Name</span> - The Name of the entity for targeting.</p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows: </p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade)</pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive</pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. 'Solid' mode simply needs a non zero value to work, while in other modes translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">TriggerTarget</span> Used to trigger a Target in conjunction with the Trigger Condition.</p>
<p><span style="font-weight: bold">Trigger Condition</span> - This controls the condition under which  a monster will trigger its TriggerTarget.<br /> The options are:</p>
<pre>0 = No Trigger
1 = See Player, Mad at Player
2 = Take Damage
3 = 50% Health Remaining
4 = Death
7 = Hear World
8 = Hear Player
9 = Hear Combat
10 = See Player Unconditional
11 = See Player, Not In Combat </pre>
<p><span style="font-weight: bold"> Animation Sequence</span> - The animation sequence to play. If you are using Hammer 3.5, this will also be displayed in the 3D window.</p>
<h3>Flags:</h3>
<blockquote><span style="color: #ff0000">(1) WaitTillSeen</span>: Monster will wait till seen, however it doesn't always work that way.<br />
<span style="color: #ff0000">(2) Gag</span>:  When checked, the monster won't say anything, great for shutting Grunts up.<br />
<span style="color: #ff0000">(4) MonsterClip</span>:  Prevents the monster from moving through func_monsterclip brushes.<br />
<span style="color: #ff0000">(16) Prisoner</span>: When enabled, the monster won't  attack the player (normal AI is disabled).<br />
<span style="color: #ff0000">(128) WaitForScript</span>: Does not appear to have been  implemented.<br />
<span style="color: #ff0000">(256) Pre-Disaster</span>: Only used by Scientists and Barneys. Gives them pre-disaster speech, and prevents them  from following the player.<br />
<span style="color: #ff0000">(512) Fade Corpse</span>: After being killed, the monster's corpse will fade out after a while, instead of lying there forever.</blockquote>
<h3>Related Entities</h3>None<br />
<p><span style="font-weight: bold">Notes:</span><br />Everytime Bigmomma is around, you can expect these little nasties. Add a bit of suspense by nesting them somewhere. </p>
<p align="center"><a href="../node/960#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="monster_barnacle">monster_barnacle</a></h1>
<p>Spawns one of those red things that sits on the ceiling, dangle's it's sticky rope and eats brains.</p>
<center><img src="../content/half-life/entimgs/monster/barnacle.jpg" width="350" height="200"  alt="barnacle" title="barnacle" /></center>
<h3>Properties</h3>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows: </p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade)</pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive</pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255.  'Solid' mode simply needs a non zero value to work, while in other modes translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold"> Animation Sequence</span> - The animation sequence to play. If you are using Hammer 3.5, this will also be displayed in the 3D window.</p>
<h3>Flags:</h3>
<blockquote>None listed</blockquote>
<h3>Related Entities</h3>None<br />
<p><span style="font-weight: bold">Notes:</span><br />When the map loads, the barnacle will extend it's 'tongue' until it hits another brush (floor, table etc,).  This takes a while so It isn't a good idea to place barnacles at the entrance of a map. Leave them sufficient time to extend.</p>
<p align="center"><a href="../node/960#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="monster_barney">monster_barney</a></h1>
<p>Spawns Barney our loveable character in Blue.</p>
<center><img src="../content/half-life/entimgs/monster/barney.jpg" width="350" height="200"  alt="Barney" title="Barney" /></center>
<h3>Properties</h3>
<p><span style="font-weight: bold">Target</span> -  When the entity is activated, the Target named here is triggered.</p>
<p><span style="font-weight: bold">Name</span> - The Name of the entity for triggering.</p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows: </p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade)</pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive</pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. 'Solid' mode simply needs a non zero value to work, while in other modes translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">TriggerTarget</span> Used to trigger a Target in conjunction with the Trigger Condition.</p>
<p><span style="font-weight: bold">Trigger Condition</span> - This controls the condition under which  a monster will trigger its TriggerTarget.<br /> The options are:</p>
<pre>0 = No Trigger
1 = See Player, Mad at Player
2 = Take Damage
3 = 50% Health Remaining
4 = Death
7 = Hear World
8 = Hear Player
9 = Hear Combat
10 = See Player Unconditional
11 = See Player, Not In Combat </pre>
<p><span style="font-weight: bold"> Animation Sequence</span> - The animation sequence to play. If you are using Hammer 3.5, this will also be displayed in the 3D window.</p>
<p><span style="font-weight: bold">Use Sentence</span> - When the Player &quot;uses&quot; Barney to follow, he will speak this sentence.</p>
<p><span style="font-weight: bold">Un-Use Sentence</span> - If the Player &quot;uses&quot; Barney a second time, indicating &quot;Don't Follow&quot; he will speak this sentence.</p>
<h3>Flags:</h3>
<blockquote><span style="color: #ff0000">(1) WaitTillSeen</span>: Monster will wait till seen, however it doesn't always work that way.<br />
<span style="color: #ff0000">(2) Gag</span> When checked, the monster won't say anything or make noise, great for shutting Grunts up.<br />
<span style="color: #ff0000">(4) MonsterClip</span>: Prevents the monster from moving through func_monsterclip brushes.<br />
<span style="color: #ff0000">(16) Prisoner</span>: When enabled, the monster won't  attack the player (normal AI is disabled).<br />
<span style="color: #ff0000">(128) WaitForScript</span>: Does not appear to have been  implemented.<br />
<span style="color: #ff0000">(256) Pre-Disaster</span>: Only used by Scientists and Barneys. Gives them pre-disaster speech, and prevents them  from following the player.<br />
<span style="color: #ff0000">(512) Fade Corpse</span>: After being killed, the monster's corpse will fade out after a while, instead of lying there forever.</blockquote>
<h3>Related Entities</h3>None<br />
<p><span style="font-weight: bold">Notes:</span><br />Barney is very useful, Not only will he attack a massive force of opponents without fear, he seems to fair well in the battle. Get the most from your Barney's  by understanding scripted_sentences and scripted_sequences.</p>
<p align="center"><a href="../node/960#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="monster_barney_dead">monster_barney_dead</a></h1>
<p>Spawns a dead Barney in one of 3 poses.</p>
<center><img src="../content/half-life/entimgs/monster/barney_dead.jpg" width="350" height="200"  alt="Barney_dead" title="Barney_dead" /></center>
<h3>Properties</h3>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows: </p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade)</pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive</pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255.  'Solid' mode simply needs a non zero value to work, while in other modes translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">Pose</span> - Options</p>
<pre>- 0 = On back
1 = On side
2 = On stomach</pre>
<h3>Flags:</h3>
<blockquote><span style="color: #ff0000">(2048) Not in Deathmatch</span>:  If this flag is set on, the entity will not appear  in deathmatch games.</blockquote>
<h3>Related Entities</h3>None<br />
<p><span style="font-weight: bold">Notes:</span><br />Nothing like having a few Dead Barney's about to liven up a scene.</p>
<p align="center"><a href="../node/960#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="monster_bigmomma">monster_bigmomma</a></h1>
<p>Spawns the Mother Of All Headcrabs.</p>
<center><img src="../content/half-life/entimgs/monster/bigmomma.jpg" width="350" height="200"  alt="Bigmomma" title="Bigmomma" /></center>
<h3>Properties</h3>
<p><span style="font-weight: bold">Target</span> -  When the entity is activated, the Target named here is triggered.</p>
<p><span style="font-weight: bold">Name</span> - The Name of the entity for triggering.</p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows: </p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade)</pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive</pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255.  'Solid' mode simply needs a non zero value to work, while in other modes translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">TriggerTarget</span> - Used to trigger a Target in conjunction with the Trigger Condition.</p>
<p><span style="font-weight: bold">Trigger Condition</span> - This controls the condition under which  a monster will trigger its TriggerTarget.<br /> The options are:</p>
<pre>0 = No Trigger
1 = See Player, Mad at Player
2 = Take Damage
3 = 50% Health Remaining
4 = Death
7 = Hear World
8 = Hear Player
9 = Hear Combat
10 = See Player Unconditional
11 = See Player, Not In Combat </pre>
<p><span style="font-weight: bold"> Animation Sequence</span> - The animation sequence to play. If you are using Hammer 3.5, this will also be displayed in the 3D window.</p>
<p><span style="font-weight: bold">First node</span> - This is the name of the first info_bigmomma. It is important that you understand the relationship between info_bigmomma's and Bigmomma itself. Unlike other info_nodes, the info_bigmomma allows you to control the battle.</p>
<h3>Flags:</h3>
<blockquote><span style="color: #ff0000">(1) WaitTillSeen</span>: Monster will wait till seen, however it doesn't always work that way.<br />
<span style="color: #ff0000">(2) Gag</span>: When checked, the monster won't say anything or make noise, great for shutting Grunts up.<br />
<span style="color: #ff0000">(4) MonsterClip</span>: Prevents the monster from moving through func_monsterclip brushes.<br />
<span style="color: #ff0000">(16) Prisoner</span>: When enabled, the monster won't  attack the player (normal AI is disabled).<br />
<span style="color: #ff0000">(128) WaitForScript</span>: Does not appear to have been  implemented.<br />
<span style="color: #ff0000">(256) Pre-Disaster</span>: Only used by Scientists and Barneys. Gives them pre-disaster speech, and prevents them  from following the player.<br />
<span style="color: #ff0000">(512) Fade Corpse</span>: After being killed, the monster's corpse will fade out after a while, instead of lying there forever.</blockquote>
<h3>Related Entities</h3>
<p><a href="../node/957#info_bigmomma">Info_bigmomma</a></p>
<p><span style="font-weight: bold">Notes:</span><br />Personal Profile:<br />   From <a href="http://members.cox.net/slayera/" target="_blank">Minimicus</a><br />
&quot;Extremely anti-social, your temper is prevalent in nearly every situation. This results in fierce battles where you and your adversary eventually fight  to the death. 'Anger management' is NOT part of your vocabulary or life-style. Your prolific reproduction rivals the growth of any bacteria. In the space of  minutes you have spawned several hundered offspring. Your tiny progeny immediately  displays the aggressive nature that is so ingrained in your own psyche. You  are prone to having microwave accidents.&quot;<br /> -SlayerA</p>
<p align="center"><a href="../node/960#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="monster_bloater">monster_bloater</a></h1>
<p>This wasn't used in the game, and it has no AI. In fact it doesn't even move.</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Target</span> -  When the entity is activated, the Target named here is triggered.</p>
<p><span style="font-weight: bold">Name</span> - The Name of the entity for triggering.</p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows: </p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade)</pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive</pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. 'Solid' mode simply needs a non zero value to work, while in other modes translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">TriggerTarget</span> Used to trigger a Target in conjunction with the Trigger Condition.</p>
<p><span style="font-weight: bold">Trigger Condition</span> - This controls the condition under which  a monster will trigger its TriggerTarget.<br /> The options are:</p>
<pre>0 = No Trigger
1 = See Player, Mad at Player
2 = Take Damage
3 = 50% Health Remaining
4 = Death
7 = Hear World
8 = Hear Player
9 = Hear Combat
10 = See Player Unconditional
11 = See Player, Not In Combat </pre>
<p><span style="font-weight: bold"> Animation Sequence</span> - The animation sequence to play. If you are using Hammer 3.5, this will also be displayed in the 3D window.</p>
<h3>Flags:</h3>
<blockquote><span style="color: #ff0000">(1) WaitTillSeen</span>: Monster will wait till seen, however it doesn't always work that way.<br />
<span style="color: #ff0000">(2) Gag</span>: When checked, the monster won't say anything or make noise, great for shutting Grunts up.<br />
<span style="color: #ff0000">(4) MonsterClip</span>: Prevents the monster from moving through func_monsterclip brushes.<br />
<span style="color: #ff0000">(16) Prisoner</span>: When enabled, the monster won't  attack the player (normal AI is disabled).<br />
<span style="color: #ff0000">(128) WaitForScript</span>: Does not appear to have been  implemented.<br />
<span style="color: #ff0000">(256) Pre-Disaster</span>: Only used by Scientists and Barneys. Gives them pre-disaster speech, and prevents them  from following the player.<br />
<span style="color: #ff0000">(512) Fade Corpse</span>: After being killed, the monster's corpse will fade out after a while, instead of lying there forever.</blockquote>
<h3>Related Entities</h3>None<br />
<p><span style="font-weight: bold">Notes:</span><br />The model is called a floater, if your interested in having a look.</p>
<p align="center"><a href="../node/960#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="monster_bullchicken">monster_bullchicken</a></h1>
<p>Spawns a... a... er... thing that spits yellow globby stuff.</p>
<center><img src="../content/half-life/entimgs/monster/bullchicken.jpg" width="350" height="200"  alt="Bullchicken" title="Bullchicken" /></center>
<h3>Properties</h3>
<p><span style="font-weight: bold">Target</span> -  When the entity is activated, the Target named here is triggered.</p>
<p><span style="font-weight: bold">Name</span> - The Name of the entity for triggering.</p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows: </p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade)</pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive</pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255.  'Solid' mode simply needs a non zero value to work, while in other modes translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">TriggerTarget</span> Used to trigger a Target in conjunction with the Trigger Condition.</p>
<p><span style="font-weight: bold">Trigger Condition</span> - This controls the condition under which  a monster will trigger its TriggerTarget.<br /> The options are:</p>
<pre>0 = No Trigger
1 = See Player, Mad at Player
2 = Take Damage
3 = 50% Health Remaining
4 = Death
7 = Hear World
8 = Hear Player
9 = Hear Combat
10 = See Player Unconditional
11 = See Player, Not In Combat </pre>
<p><span style="font-weight: bold"> Animation Sequence</span> - The animation sequence to play. If you are using Hammer 3.5, this will also be displayed in the 3D window.</p>
<h3>Flags:</h3>
<blockquote><span style="color: #ff0000">(1) WaitTillSeen</span>: Monster will wait till seen, however it doesn't always work that way.<br />
<span style="color: #ff0000">(2) Gag</span>: When checked, the monster won't say anything or make noise, great for shutting Grunts up.<br />
<span style="color: #ff0000">(4) MonsterClip</span>: Prevents the monster from moving through func_monsterclip brushes.<br />
<span style="color: #ff0000">(16) Prisoner</span>: When enabled, the monster won't  attack the player (normal AI is disabled).<br />
<span style="color: #ff0000">(128) WaitForScript</span>: Does not appear to have been  implemented.<br />
<span style="color: #ff0000">(256) Pre-Disaster</span>: Only used by Scientists and Barneys. Gives them pre-disaster speech, and prevents them  from following the player.<br />
<span style="color: #ff0000">(512) Fade Corpse</span>: After being killed, the monster's corpse will fade out after a while, instead of lying there forever.</blockquote>
<h3>Related Entities</h3>None<br />
<p><span style="font-weight: bold">Notes:</span><br />Also known as the Bullsquid.</p>
<p align="center"><a href="../node/960#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="monster_cockroach">monster_cockroach</a></h1>
<p>An inoffensive little critter that makes a great squishing sound when you tread on them. Always nice for those dark hallways...</p>
<center><img src="../content/half-life/entimgs/monster/cockroach.jpg" width="350" height="200"  alt="Cockroach" title="Cockroach" /></center>
<h3>Properties</h3>
<p><span style="font-weight: bold">Target</span> -  When the entity is activated, the Target named here is triggered.</p>
<p><span style="font-weight: bold">Name</span> - The Name of the entity for triggering.</p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows: </p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade)</pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive</pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. 'Solid' mode simply needs a non zero value to work, while in other modes translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">TriggerTarget</span> Used to trigger a Target in conjunction with the Trigger Condition.</p>
<p><span style="font-weight: bold">Trigger Condition</span> - This controls the condition under which  a monster will trigger its TriggerTarget.<br /> The options are:</p>
<pre>0 = No Trigger
1 = See Player, Mad at Player
2 = Take Damage
3 = 50% Health Remaining
4 = Death
7 = Hear World
8 = Hear Player
9 = Hear Combat
10 = See Player Unconditional
11 = See Player, Not In Combat </pre>
<p><span style="font-weight: bold"> Animation Sequence</span> - The animation sequence to play. If you are using Hammer 3.5, this will also be displayed in the 3D window.</p>
<h3>Flags:</h3>
<blockquote><span style="color: #ff0000">(1) WaitTillSeen</span>: Monster will wait till seen, however it doesn't always work that way.<br />
<span style="color: #ff0000">(2) Gag</span>: When checked, the monster won't say anything or make noise, great for shutting Grunts up.<br />
<span style="color: #ff0000">(4) MonsterClip</span>: Prevents the monster from moving through func_monsterclip brushes.<br />
<span style="color: #ff0000">(16) Prisoner</span>: When enabled, the monster won't  attack the player (normal AI is disabled).<br />
<span style="color: #ff0000">(128) WaitForScript</span>: Does not appear to have been  implemented.<br />
<span style="color: #ff0000">(256) Pre-Disaster</span>: Only used by Scientists and Barneys. Gives them pre-disaster speech, and prevents them  from following the player.<br />
<span style="color: #ff0000">(512) Fade Corpse</span>: After being killed, the monster's corpse will fade out after a while, instead of lying there forever.</blockquote>
<h3>Related Entities</h3>None<br />
<p><span style="font-weight: bold">Notes:</span><br />Add a little ambience with a few 'cockies'.</p>
<p align="center"><a href="../node/960#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="monster_flyer_flock">monster_flyer_flock</a></h1>
<p>Spawns a flock of flying creatures.</p>
<center><img src="../content/half-life/entimgs/monster/flyer_flock.jpg" width="350" height="200"  alt="Flyer_flock" title="Flyer_flock" /></center>
<h3>Properties</h3>
<p><span style="font-weight: bold">Target</span> -  When the entity is activated, the Target named here is triggered.</p>
<p><span style="font-weight: bold">Name</span> - The Name of the entity for triggering.</p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows: </p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade)</pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive</pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. 'Solid' mode simply needs a non zero value to work, while in other modes translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">TriggerTarget</span> Used to trigger a Target in conjunction with the Trigger Condition.</p>
<p><span style="font-weight: bold">Trigger Condition</span> - This controls the condition under which  a monster will trigger its TriggerTarget.<br /> The options are:</p>
<pre>0 = No Trigger
1 = See Player, Mad at Player
2 = Take Damage
3 = 50% Health Remaining
4 = Death
7 = Hear World
8 = Hear Player
9 = Hear Combat
10 = See Player Unconditional
11 = See Player, Not In Combat </pre>
<p><span style="font-weight: bold"> Animation Sequence</span> - The animation sequence to play. If you are using Hammer 3.5, this will also be displayed in the 3D window.</p>
<p><span style="font-weight: bold">Flock Size</span> - Number of Flyers in the flock</p>
<p><span style="font-weight: bold">Flock Radius</span> - Effects the spread of the flock</p>
<h3>Flags:</h3>
<blockquote><span style="color: #ff0000">(1) WaitTillSeen</span>: Monster will wait till seen, however it doesn't always work that way.<br />
<span style="color: #ff0000">(2) Gag</span>: When checked, the monster won't say anything or make noise, great for shutting Grunts up.<br />
<span style="color: #ff0000">(4) MonsterClip</span>: Prevents the monster from moving through func_monsterclip brushes.<br />
<span style="color: #ff0000">(16) Prisoner</span>: When enabled, the monster won't  attack the player (normal AI is disabled).<br />
<span style="color: #ff0000">(128) WaitForScript</span>: Does not appear to have been  implemented.<br />
<span style="color: #ff0000">(256) Pre-Disaster</span>: Only used by Scientists and Barneys. Gives them pre-disaster speech, and prevents them  from following the player.<br />
<span style="color: #ff0000">(512) Fade Corpse</span>: After being killed, the monster's corpse will fade out after a while, instead of lying there forever.</blockquote>
<h3>Related Entities</h3>None<br />
<p><span style="font-weight: bold">Notes:</span><br />Great big bat like things that can be made to  follow path_corners.</p>
<p align="center"><a href="../node/960#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="monster_furniture">monster_furniture</a></h1>
<p>Used in scripted sequences involving furniture models. And can be used to place other models.</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Target</span> -  When the entity is activated, the Target named here is triggered.</p>
<p><span style="font-weight: bold">Name</span> - The Name of the entity for triggering.</p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows: </p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade)</pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive</pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. 'Solid' mode simply needs a non zero value to work, while in other modes translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">TriggerTarget</span> Used to trigger a Target in conjunction with the Trigger Condition.</p>
<p><span style="font-weight: bold">Trigger Condition</span> - This controls the condition under which  a monster will trigger its TriggerTarget.<br /> The options are:</p>
<pre>0 = No Trigger
1 = See Player, Mad at Player
2 = Take Damage
3 = 50% Health Remaining
4 = Death
7 = Hear World
8 = Hear Player
9 = Hear Combat
10 = See Player Unconditional
11 = See Player, Not In Combat </pre>
<p><span style="font-weight: bold"> Animation Sequence</span> - The animation sequence to play. If you are using Hammer 3.5, this will also be displayed in the 3D window.</p>
<p><span style="font-weight: bold">model </span> - Choose the model you want to display</p>
<h3>Flags:</h3>
<blockquote><span style="color: #ff0000">(1) WaitTillSeen</span>: Monster will wait till seen, however it doesn't always work that way.<br />
<span style="color: #ff0000">(2) Gag</span>: When checked, the monster won't say anything or make noise, great for shutting Grunts up.<br />
<span style="color: #ff0000">(4) MonsterClip</span>: Prevents the monster from moving through func_monsterclip brushes.<br />
<span style="color: #ff0000">(16) Prisoner</span>: When enabled, the monster won't  attack the player (normal AI is disabled).<br />
<span style="color: #ff0000">(128) WaitForScript</span>: Does not appear to have been  implemented.<br />
<span style="color: #ff0000">(256) Pre-Disaster</span>: Only used by Scientists and Barneys. Gives them pre-disaster speech, and prevents them  from following the player.<br />
<span style="color: #ff0000">(512) Fade Corpse</span>: After being killed, the monster's corpse will fade out after a while, instead of lying there forever.</blockquote>
<h3>Related Entities</h3>None<br />
<p><span style="font-weight: bold">Notes:</span><br />You can use verious entities to 'place Models', this is one of them. Any entity with the "Model" (model) string will allow you to insert Models into your map.</p>
<p align="center"><a href="../node/960#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="monster_gargantua">monster_gargantua</a></h1>
<p>Spawns an evil Spark Shootin' Stomp'n Nasty Beasty.</p>
<center><img src="../content/half-life/entimgs/monster/gargantua.jpg" width="350" height="200"  alt="Gargantua" title="Gargantua" /></center>
<h3>Properties</h3>
<p><span style="font-weight: bold">Target</span> -  When the entity is activated, the Target named here is triggered.</p>
<p><span style="font-weight: bold">Name</span> - The Name of the entity for triggering.</p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows: </p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade)</pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive</pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. 'Solid' mode simply needs a non zero value to work, while in other modes translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">TriggerTarget</span> Used to trigger a Target in conjunction with the Trigger Condition.</p>
<p><span style="font-weight: bold">Trigger Condition</span> - This controls the condition under which  a monster will trigger its TriggerTarget.<br /> The options are:</p>
<pre>0 = No Trigger
1 = See Player, Mad at Player
2 = Take Damage
3 = 50% Health Remaining
4 = Death
7 = Hear World
8 = Hear Player
9 = Hear Combat
10 = See Player Unconditional
11 = See Player, Not In Combat </pre>
<p><span style="font-weight: bold"> Animation Sequence</span> - The animation sequence to play. If you are using Hammer 3.5, this will also be displayed in the 3D window.</p>
<h3>Flags:</h3>
<blockquote><span style="color: #ff0000">(1) WaitTillSeen</span>: Monster will wait till seen, however it doesn't always work that way.<br />
<span style="color: #ff0000">(2) Gag</span>: When checked, the monster won't say anything or make noise, great for shutting Grunts up.<br />
<span style="color: #ff0000">(4) MonsterClip</span>: Prevents the monster from moving through func_monsterclip brushes.<br />
<span style="color: #ff0000">(16) Prisoner</span>: When enabled, the monster won't  attack the player (normal AI is disabled).<br />
<span style="color: #ff0000">(128) WaitForScript</span>: Does not appear to have been  implemented.<br />
<span style="color: #ff0000">(256) Pre-Disaster</span>: Only used by Scientists and Barneys. Gives them pre-disaster speech, and prevents them  from following the player.<br />
<span style="color: #ff0000">(512) Fade Corpse</span>: After being killed, the monster's corpse will fade out after a while, instead of lying there forever.</blockquote>
<h3>Related Entities</h3>None<br />
<p><span style="font-weight: bold">Notes:</span><br />Garg's are great fun. I am probably wrong, but I only remember 2 in Half-Life. One was in the underground carpark and the other was in a tunnel somewhere. The best thing about this is that they were not overdone. <i>Hint..Hint</i></p>
<p align="center"><a href="../node/960#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="monster_generic">monster_generic</a></h1>
<p>Used to place Models in your map.</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Target</span> -  When the entity is activated, the Target named here is triggered.</p>
<p><span style="font-weight: bold">Name</span> - The Name of the entity for triggering.</p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows: </p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade)</pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive</pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255.  'Solid' mode simply needs a non zero value to work, while in other modes translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">TriggerTarget</span> Used to trigger a Target in conjunction with the Trigger Condition.</p>
<p><span style="font-weight: bold">Trigger Condition</span> - This controls the condition under which  a monster will trigger its TriggerTarget.<br /> The options are:</p>
<pre>0 = No Trigger
1 = See Player, Mad at Player
2 = Take Damage
3 = 50% Health Remaining
4 = Death
7 = Hear World
8 = Hear Player
9 = Hear Combat
10 = See Player Unconditional
11 = See Player, Not In Combat </pre>
<p><span style="font-weight: bold">Animation Sequence</span> - The animation sequence to play. If you are using Hammer 3.5, this will also be displayed in the 3D window.</p>
<p><span style="font-weight: bold">model</span> - The Model you want placed in the map.</p>
<p><span style="font-weight: bold"> body</span>- Applies to models that have Body options.</p>
<h3>Flags:</h3>
<blockquote><span style="color: #ff0000">(1) WaitTillSeen</span>: Monster will wait till seen, however it doesn't always work that way.<br />
<span style="color: #ff0000">(2) Gag</span>: When checked, the monster won't say anything or make noise, great for shutting Grunts up.<br />
<span style="color: #ff0000">(4) MonsterClip</span>: Prevents the monster from moving through func_monsterclip brushes.<br />
<span style="color: #ff0000">(16) Prisoner</span>: When enabled, the monster won't  attack the player (normal AI is disabled).<br />
<span style="color: #ff0000">(128) WaitForScript</span>: Does not appear to have been  implemented.<br />
<span style="color: #ff0000">(256) Pre-Disaster</span>: Only used by Scientists and Barneys. Gives them pre-disaster speech, and prevents them  from following the player.<br />
<span style="color: #ff0000">(512) Fade Corpse</span>: After being killed, the monster's corpse will fade out after a while, instead of lying there forever.</blockquote>
<h3>Related Entities</h3>None<br />
<p><span style="font-weight: bold">Notes:</span><br /> This entity is more versitile than the monster_furniture as it allows you to place Monster entities with Body properties.</p>
<p align="center"><a href="../node/960#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="monster_gman">monster_gman</a></h1>
<p>Spawns the naughty Sierra man who started the whole thing....</p>
<center><img src="../content/half-life/entimgs/monster/gman.jpg" width="350" height="200"  alt="Gman" title="Gman" /></center>
<h3>Properties</h3>
<p><span style="font-weight: bold">Target</span> -  When the entity is activated, the Target named here is triggered.</p>
<p><span style="font-weight: bold">Name</span> - The Name of the entity for triggering.</p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows: </p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade)</pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive</pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. 'Solid' mode simply needs a non zero value to work, while in other modes translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">TriggerTarget</span> Used to trigger a Target in conjunction with the Trigger Condition.</p>
<p><span style="font-weight: bold">Trigger Condition</span> - This controls the condition under which  a monster will trigger its TriggerTarget.<br /> The options are:</p>
<pre>0 = No Trigger
1 = See Player, Mad at Player
2 = Take Damage
3 = 50% Health Remaining
4 = Death
7 = Hear World
8 = Hear Player
9 = Hear Combat
10 = See Player Unconditional
11 = See Player, Not In Combat </pre>
<p><span style="font-weight: bold"> Animation Sequence</span> - The animation sequence to play. If you are using Hammer 3.5, this will also be displayed in the 3D window.</p>
<h3>Flags:</h3>
<blockquote><span style="color: #ff0000">(1) WaitTillSeen</span>: Monster will wait till seen, however it doesn't always work that way.<br />
<span style="color: #ff0000">(2) Gag</span>: When checked, the monster won't say anything or make noise, great for shutting Grunts up.<br />
<span style="color: #ff0000">(4) MonsterClip</span>: Prevents the monster from moving through func_monsterclip brushes.<br />
<span style="color: #ff0000">(16) Prisoner</span>: When enabled, the monster won't  attack the player (normal AI is disabled).<br />
<span style="color: #ff0000">(128) WaitForScript</span>: Does not appear to have been  implemented.<br />
<span style="color: #ff0000">(256) Pre-Disaster</span>: Only used by Scientists and Barneys. Gives them pre-disaster speech, and prevents them  from following the player.<br />
<span style="color: #ff0000">(512) Fade Corpse</span>: After being killed, the monster's corpse will fade out after a while, instead of lying there forever.</blockquote>
<h3>Related Entities</h3>None<br />
<p><span style="font-weight: bold">Notes:</span><br />There really isn't a lot you can do with the Gman. He was there to add consistancy to the game, an unobtainable goal.</p>
<p align="center"><a href="../node/960#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="monster_grunt_repel">monster_grunt_repel</a></h1>
<p>Spawns a human grunt that drops down a rope to the nearest surface.</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Target</span> -  When the entity is activated, the Target named here is triggered.</p>
<p><span style="font-weight: bold">Name</span> - The Name of the entity for triggering.</p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows: </p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade)</pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive</pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. 'Solid' mode simply needs a non zero value to work, while in other modes translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">TriggerTarget</span> Used to trigger a Target in conjunction with the Trigger Condition.</p>
<p><span style="font-weight: bold">Trigger Condition</span> - This controls the condition under which  a monster will trigger its TriggerTarget.<br /> The options are:</p>
<pre>0 = No Trigger
1 = See Player, Mad at Player
2 = Take Damage
3 = 50% Health Remaining
4 = Death
7 = Hear World
8 = Hear Player
9 = Hear Combat
10 = See Player Unconditional
11 = See Player, Not In Combat </pre>
<p><span style="font-weight: bold"> Animation Sequence</span> - The animation sequence to play. If you are using Hammer 3.5, this will also be displayed in the 3D window.</p>
<h3>Flags:</h3>
<blockquote><span style="color: #ff0000">(1) WaitTillSeen</span>: Monster will wait till seen, however it doesn't always work that way.<br />
<span style="color: #ff0000">(2) Gag</span>: When checked, the monster won't say anything or make noise, great for shutting Grunts up.<br />
<span style="color: #ff0000">(4) MonsterClip</span>: Prevents the monster from moving through func_monsterclip brushes.<br />
<span style="color: #ff0000">(16) Prisoner</span>: When enabled, the monster won't  attack the player (normal AI is disabled).<br />
<span style="color: #ff0000">(128) WaitForScript</span>: Does not appear to have been  implemented.<br />
<span style="color: #ff0000">(256) Pre-Disaster</span>: Only used by Scientists and Barneys. Gives them pre-disaster speech, and prevents them  from following the player.<br />
<span style="color: #ff0000">(512) Fade Corpse</span>: After being killed, the monster's corpse will fade out after a while, instead of lying there forever.</blockquote>
<h3>Related Entities</h3>None<br />
<p><span style="font-weight: bold">Notes:</span><br />The most common occurence of these guy's is included in the monster_osprey. But they are equally good value dropping from ceilings and cliffs. Place the monster entity at the point you want them to drop from, Their rope does not extend past their start point as the animation starts, so careful placement is necessary so that they don't look 'odd'.</p>
<p align="center"><a href="../node/960#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="monster_handgrenade">monster_handgrenade</a></h1>
<p>Spawns a handgrenade.</p>
<center><img src="../content/half-life/entimgs/monster/grenade.jpg" width="350" height="200"  alt="Grenade" title="Grenade" /></center>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - The Name of the entity for triggering.</p>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">Target</span> -  When the entity is activated, the Target named here is triggered.</p>
<p><span style="font-weight: bold">Delay before trigger</span> - Usually the time in seconds before an entity should trigger its target (after being triggered itself). Under other SmartEdit names, delay might also be the time to wait before performing some other action.</p>
<p><span style="font-weight: bold">KillTarget</span> - When an entity is triggered, it will remove from the  game the entity specified by this property.</p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows: </p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade)</pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive</pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. 'Solid' mode simply needs a non zero value to work, while in other modes translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold"> Animation Sequence</span> - The animation sequence to play. If you are using Hammer 3.5, this will also be displayed in the 3D window.</p>
<h3>Flags:</h3>
<blockquote><span style="color: #ff0000">(2048) Not in Deathmatch</span>: - If this flag is set on, the entity will not appear in deathmatch games.</blockquote>
<h3>Related Entities</h3>None<br />
<p><span style="font-weight: bold">Notes:</span><br />None </p>
<p align="center"><a href="../node/960#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="monster_headcrab">monster_headcrab</a></h1>
<p>Spawns a brain-eating crab.</p>
<center><img src="../content/half-life/entimgs/monster/headcrab.jpg" width="350" height="200"  alt="Headcrab" title="Headcrab" /></center>
<h3>Properties</h3>
<p><span style="font-weight: bold">Target</span> -  When the entity is activated, the Target named here is triggered.</p>
<p><span style="font-weight: bold">Name</span> - The Name of the entity for triggering.</p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows: </p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade)</pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive</pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. 'Solid' mode simply needs a non zero value to work, while in other modes translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">TriggerTarget</span> Used to trigger a Target in conjunction with the Trigger Condition.</p>
<p><span style="font-weight: bold">Trigger Condition</span> - This controls the condition under which  a monster will trigger its TriggerTarget.<br /> The options are:</p>
<pre>0 = No Trigger
1 = See Player, Mad at Player
2 = Take Damage
3 = 50% Health Remaining
4 = Death
7 = Hear World
8 = Hear Player
9 = Hear Combat
10 = See Player Unconditional
11 = See Player, Not In Combat </pre>
<p><span style="font-weight: bold"> Animation Sequence</span> - The animation sequence to play. If you are using Hammer 3.5, this will also be displayed in the 3D window.</p>
<h3>Flags:</h3>
<blockquote><span style="color: #ff0000">(1) WaitTillSeen</span>: Monster will wait till seen, however it doesn't always work that way.<br />
<span style="color: #ff0000">(2) Gag</span>: When checked, the monster won't say anything or make noise, great for shutting Grunts up.<br />
<span style="color: #ff0000">(4) MonsterClip</span>: Prevents the monster from moving through func_monsterclip brushes.<br />
<span style="color: #ff0000">(16) Prisoner</span>: When enabled, the monster won't  attack the player (normal AI is disabled).<br />
<span style="color: #ff0000">(128) WaitForScript</span>: Does not appear to have been  implemented.<br />
<span style="color: #ff0000">(256) Pre-Disaster</span>: Only used by Scientists and Barneys. Gives them pre-disaster speech, and prevents them  from following the player.<br />
<span style="color: #ff0000">(512) Fade Corpse</span>: After being killed, the monster's corpse will fade out after a while, instead of lying there forever.</blockquote>
<h3>Related Entities</h3>None<br />
<p><span style="font-weight: bold">Notes:</span><br />Remember the <span style="font-weight: bold">first</span> time you had one of these jump on your face in a vent?</p>
<p align="center"><a href="../node/960#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="monster_hevsuit_dead">monster_hevsuit_dead</a></h1>
<p>This is not a HEV Suit ! If you want a HEV suit for your player, you need to add an item_suit. What this does produce is a dead version of the player. I think there was one of these guy's in Gonarchs lair.</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows: </p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade)</pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive</pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. 'Solid' mode simply needs a non zero value to work, while in other modes translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold"> Animation Sequence</span> - The animation sequence to play. If you are using Hammer 3.5, this will also be displayed in the 3D window.</p>
<p><span style="font-weight: bold">Pose</span>- Options</p>
<pre>
 - 0 = On back<br />
 1 = Seated<br />
 2 = On stomach<br />
 3 = On Table<br />
</pre>
<h3>Flags:</h3>
<blockquote><span style="color: #ff0000">(2048) Not in Deathmatch</span>: If this flag is set on, the entity will not appear in deathmatch games.</blockquote>
<h3>Related Entities</h3>None<br />
<p><span style="font-weight: bold">Notes:</span><br />These guy's added &quot;story&quot; to the original game, As the player you came across them just to remind you that someone had tried this path before. They didn't always signify the wrong path, but warned of danger ahead.</p>
<p align="center"><a href="../node/960#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="monster_hgrunt_dead">monster_hgrunt_dead</a></h1>
<p>This will allow you to strategically place dead guy's (marines) around the map.</p>
<center><img src="../content/half-life/entimgs/monster/hgrunt_dead.jpg" width="350" height="200"  alt="Dead Grunt" title="Dead Grunt" /></center>
<h3>Properties</h3>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows: </p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade)</pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive</pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. 'Solid' mode simply needs a non zero value to work, while in other modes translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold"> Animation Sequence</span> - The animation sequence to play. If you are using Hammer 3.5, this will also be displayed in the 3D window.</p>
<p><span style="font-weight: bold">Pose</span> - Options:</p>
<pre>- 0 = On stomach
1 = On side
2 = Seated</pre>
<p><span style="font-weight: bold">Body</span> - Options:</p>
<pre>- 0 = Grunt with Gun
 1 = Commander with Gun
 2 = Grunt no Gun
 3  = Commander no Gun.</pre>
<h3>Flags:</h3>
<blockquote><span style="color: #ff0000">(2048) Not in Deathmatch</span> - If this flag is set on, the entity will not appear in deathmatch games.</blockquote>
<h3>Related Entities</h3>None<br />
<p><span style="font-weight: bold">Notes:</span><br />Dead grunts around the map add ambience, hints or generally warn of danger.</p>
<p align="center"><a href="../node/960#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="monster_houndeye">monster_houndeye</a></h1>
<p>Spawns the sonic creature. These guy's work great in packs. The more there are, the more the damage when they power up and discharge.</p>
<center><img src="../content/half-life/entimgs/monster/houndeye.jpg" width="350" height="200"  alt="Houndeye" title="Houndeye" /></center>
<h3>Properties</h3>
<p><span style="font-weight: bold">Target</span> -  When the entity is activated, the Target named here is triggered.</p>
<p><span style="font-weight: bold">Name</span> - The Name of the entity for triggering.</p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows: </p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade)</pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive</pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. 'Solid' mode simply needs a non zero value to work, while in other modes translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">TriggerTarget</span> Used to trigger a Target in conjunction with the Trigger Condition.</p>
<p><span style="font-weight: bold">Trigger Condition</span> - This controls the condition under which  a monster will trigger its TriggerTarget.<br /> The options are:</p>
<pre>0 = No Trigger
1 = See Player, Mad at Player
2 = Take Damage
3 = 50% Health Remaining
4 = Death
7 = Hear World
8 = Hear Player
9 = Hear Combat
10 = See Player Unconditional
11 = See Player, Not In Combat </pre>
<p><span style="font-weight: bold"> Animation Sequence</span> - The animation sequence to play. If you are using Hammer 3.5, this will also be displayed in the 3D window.</p>
<p><span style="font-weight: bold">Squad Name</span> - Squads of Houndeye's!! Set this to the name of the Squad and appoint a leader.</p>
<h3>Flags:</h3>
<blockquote><span style="color: #ff0000">(1) WaitTillSeen</span> Monster will wait till seen, however it doesn't always work that way.<br />
<span style="color: #ff0000">(2) Gag</span>: When checked, the monster won't say anything or make noise, great for shutting Grunts up.<br />
<span style="color: #ff0000">(4) MonsterClip</span>: Prevents the monster from moving through func_monsterclip brushes.<br />
<span style="color: #ff0000">(16) Prisoner</span>: When enabled, the monster won't  attack the player (normal AI is disabled).<br />
<span style="color: #ff0000">(32) Squad Leader</span>: Identify this entity as the Squad Leader.<br />
<span style="color: #ff0000">(128) WaitForScript</span>: Does not appear to have been  implemented.<br />
<span style="color: #ff0000">(256) Pre-Disaster</span>: Only used by Scientists and Barneys. Gives them pre-disaster speech, and prevents them  from following the player.<br />
<span style="color: #ff0000">(512) Fade Corpse</span>: After being killed, the monster's corpse will fade out after a while, instead of lying there forever.</blockquote>
<h3>Related Entities</h3>None<br />
<p><span style="font-weight: bold">Notes:</span><br />As I mentioned in the intro, these guy's work best in packs. Originally intended to be &quot;friendly&quot; to the player, the Beta testing changed all that. Seems that the testers blew these little critters away as soon as they saw them. So in true Valve style, they modified the original dog like creature and made it nasty.</p>
<p align="center"><a href="../node/960#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="monster_human_assassin">monster_human_assassin</a></h1>
<p>The second-most annoying enemy in the game.</p>
<center><img src="../content/half-life/entimgs/monster/human_assassin.jpg" width="350" height="200"  alt="Assassin" title="Assassin" /></center>
<h3>Properties</h3>
<p><span style="font-weight: bold">Target</span> -  When the entity is activated, the Target named here is triggered.</p>
<p><span style="font-weight: bold">Name</span> - The Name of the entity for triggering.</p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows: </p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade)</pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive</pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. 'Solid' mode simply needs a non zero value to work, while in other modes translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">TriggerTarget</span> Used to trigger a Target in conjunction with the Trigger Condition.</p>
<p><span style="font-weight: bold">Trigger Condition</span> - This controls the condition under which  a monster will trigger its TriggerTarget.<br /> The options are:</p>
<pre>0 = No Trigger
1 = See Player, Mad at Player
2 = Take Damage
3 = 50% Health Remaining
4 = Death
7 = Hear World
8 = Hear Player
9 = Hear Combat
10 = See Player Unconditional
11 = See Player, Not In Combat </pre>
<p><span style="font-weight: bold"> Animation Sequence</span> - The animation sequence to play. If you are using Hammer 3.5, this will also be displayed in the 3D window.</p>
<h3>Flags:</h3>
<blockquote><span style="color: #ff0000">(1) WaitTillSeen</span>: Monster will wait till seen, however it doesn't always work that way.<br />
<span style="color: #ff0000">(2) Gag</span>: When checked, the monster won't say anything or make noise, great for shutting Grunts up.<br />
<span style="color: #ff0000">(4) MonsterClip</span>: Prevents the monster from moving through func_monsterclip brushes.<br />
<span style="color: #ff0000">(16) Prisoner</span>: When enabled, the monster won't  attack the player (normal AI is disabled).<br />
<span style="color: #ff0000">(128) WaitForScript</span>: Does not appear to have been  implemented.<br />
<span style="color: #ff0000">(256) Pre-Disaster</span>: Only used by Scientists and Barneys. Gives them pre-disaster speech, and prevents them  from following the player.<br />
<span style="color: #ff0000">(512) Fade Corpse</span>: After being killed, the monster's corpse will fade out after a while, instead of lying there forever.</blockquote>
<h3>Related Entities</h3>
<p><a href="../rustent/info.html#info_node">Info_node</a></p>
<p><span style="font-weight: bold">Notes:</span><br />To get the most out of your assassin's you need to use a lot of info_nodes. You will get the best &quot;play&quot; out of your assassin's if you use about three times as many nodes as you would with a normal monster. Interesting to see that assassin's don't have Squad capabilities.</p>
<p align="center"><a href="../node/960#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="monster_human_grunt">monster_human_grunt</a></h1>
<p>Spawns one of the game's greatest attractions. Grunts, Marines... call 'em what you like, but these guy's will really kick your ass if they are supported well with info_nodes.</p>
<center><img src="../content/half-life/entimgs/monster/human_grunt.jpg" width="350" height="200"  alt="Grunt" title="Grunt" /></center>
<h3>Properties</h3>
<p><span style="font-weight: bold">Target</span> -  When the entity is activated, the Target named here is triggered.</p>
<p><span style="font-weight: bold">Name</span> - The Name of the entity for triggering.</p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows: </p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade)</pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive</pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. 'Solid' mode simply needs a non zero value to work, while in other modes translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">TriggerTarget</span> Used to trigger a Target in conjunction with the Trigger Condition.</p>
<p><span style="font-weight: bold">Trigger Condition</span> - This controls the condition under which  a monster will trigger its TriggerTarget.<br /> The options are:</p>
<pre>0 = No Trigger
1 = See Player, Mad at Player
2 = Take Damage
3 = 50% Health Remaining
4 = Death
7 = Hear World
8 = Hear Player
9 = Hear Combat
10 = See Player Unconditional
11 = See Player, Not In Combat </pre>
<p><span style="font-weight: bold"> Animation Sequence</span> - The animation sequence to play. If you are using Hammer 3.5, this will also be displayed in the 3D window.</p>
<p><span style="font-weight: bold">Squad Name</span> - The name of the Squad that the leader controls.</p>
<p><span style="font-weight: bold">Weapons</span>-  Available:</p>
<pre> - 1 = 9mmAR
 3 = 9mmAR + Hand Grenade
 5 = 9mmAR + Grenade Launcher
 8 = Shotgun
 10  = Shotgun + Hand Grenade</pre>
<h3>Flags:</h3>
<blockquote><span style="color: #ff0000">(1) WaitTillSeen</span>: Monster will wait till seen, however it doesn't always work that way.<br />
<span style="color: #ff0000">(2) Gag</span>: When checked, the monster won't say anything or make noise, great for shutting Grunts up.<br />
<span style="color: #ff0000">(4) MonsterClip</span>: Prevents the monster from moving through func_monsterclip brushes.<br />
<span style="color: #ff0000">(16) Prisoner</span>: When enabled, the monster won't  attack the player (normal AI is disabled).<br />
<span style="color: #ff0000">(32) Squad Leader</span>: - Identify this entity as the Squad Leader.<br />
<span style="color: #ff0000">(128) WaitForScript</span>: Does not appear to have been  implemented.<br />
<span style="color: #ff0000">(256) Pre-Disaster</span>: Only used by Scientists and Barneys. Gives them pre-disaster speech, and prevents them  from following the player.<br />
<span style="color: #ff0000">(512) Fade Corpse</span>: After being killed, the monster's corpse will fade out after a while, instead of lying there forever.</blockquote>
<h3>Related Entities</h3>None<br />
<p><span style="font-weight: bold">Notes:</span><br />Select a commander (Using the Squad leader Flag) and set the grunts up in Squads, this provides a more realistic AI.</p>
<p align="center"><a href="../node/960#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="monster_ichthyosaur">monster_ichthyosaur</a></h1>
<p>Spawns an over-sized fish (maybe the leech after radiation exposure)</p>
<center><img src="../content/half-life/entimgs/monster/ichthyosaur.jpg" width="350" height="200"  alt="Iccy" title="Iccy" /></center>
<h3>Properties</h3>
<p><span style="font-weight: bold">Target</span> -  When the entity is activated, the Target named here is triggered.</p>
<p><span style="font-weight: bold">Name</span> - The Name of the entity for triggering.</p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows: </p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade)</pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive</pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. 'Solid' mode simply needs a non zero value to work, while in other modes translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">TriggerTarget</span> Used to trigger a Target in conjunction with the Trigger Condition.</p>
<p><span style="font-weight: bold">Trigger Condition</span> - This controls the condition under which  a monster will trigger its TriggerTarget.<br /> The options are:</p>
<pre>0 = No Trigger
1 = See Player, Mad at Player
2 = Take Damage
3 = 50% Health Remaining
4 = Death
7 = Hear World
8 = Hear Player
9 = Hear Combat
10 = See Player Unconditional
11 = See Player, Not In Combat </pre>
<p><span style="font-weight: bold"> Animation Sequence</span> - The animation sequence to play. If you are using Hammer 3.5, this will also be displayed in the 3D window.</p>
<h3>Flags:</h3>
<blockquote><span style="color: #ff0000">(1) WaitTillSeen</span>: Monster will wait till seen, however it doesn't always work that way.<br />
<span style="color: #ff0000">(2) Gag</span>: When checked, the monster won't say anything or make noise, great for shutting Grunts up.<br />
<span style="color: #ff0000">(4) MonsterClip</span>: Prevents the monster from moving through func_monsterclip brushes.<br />
<span style="color: #ff0000">(16) Prisoner</span>: When enabled, the monster won't  attack the player (normal AI is disabled).<br />
<span style="color: #ff0000">(128) WaitForScript</span>: Does not appear to have been  implemented.<br />
<span style="color: #ff0000">(256) Pre-Disaster</span>: Only used by Scientists and Barneys. Gives them pre-disaster speech, and prevents them  from following the player.<br />
<span style="color: #ff0000">(512) Fade Corpse</span>: After being killed, the monster's corpse will fade out after a while, instead of lying there forever.</blockquote>
<h3>Related Entities</h3>None<br />
<p><span style="font-weight: bold">Notes:</span><br />Once these guy's start firing at the player, they don't seem to stop.</p>
<p align="center"><a href="../node/960#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="monster_leech">monster_leech</a></h1>
<p>Kind of like a cockaroach underwater, and they do damage.</p>
<center><img src="../content/half-life/entimgs/monster/leech.jpg" width="350" height="200"  alt="Leech" title="Leech" /></center>
<h3>Properties</h3>
<p><span style="font-weight: bold">Target</span> -  When the entity is activated, the Target named here is triggered.</p>
<p><span style="font-weight: bold">Name</span> - The Name of the entity for triggering.</p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows: </p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade)</pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive</pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. 'Solid' mode simply needs a non zero value to work, while in other modes translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">TriggerTarget</span> Used to trigger a Target in conjunction with the Trigger Condition.</p>
<p><span style="font-weight: bold">Trigger Condition</span> - This controls the condition under which  a monster will trigger its TriggerTarget.<br /> The options are:</p>
<pre>0 = No Trigger
1 = See Player, Mad at Player
2 = Take Damage
3 = 50% Health Remaining
4 = Death
7 = Hear World
8 = Hear Player
9 = Hear Combat
10 = See Player Unconditional
11 = See Player, Not In Combat </pre>
<p><span style="font-weight: bold"> Animation Sequence</span> - The animation sequence to play. If you are using Hammer 3.5, this will also be displayed in the 3D window.</p>
<h3>Flags:</h3>
<blockquote><span style="color: #ff0000">(1) WaitTillSeen</span>: Monster will wait till seen, however it doesn't always work that way.<br />
<span style="color: #ff0000">(2) Gag</span>: When checked, the monster won't say anything or make noise, great for shutting Grunts up.<br />
<span style="color: #ff0000">(4) MonsterClip</span>: Prevents the monster from moving through func_monsterclip brushes.<br />
<span style="color: #ff0000">(16) Prisoner</span>: When enabled, the monster won't  attack the player (normal AI is disabled).<br />
<span style="color: #ff0000">(128) WaitForScript</span>: Does not appear to have been  implemented.<br />
<span style="color: #ff0000">(256) Pre-Disaster</span>: Only used by Scientists and Barneys. Gives them pre-disaster speech, and prevents them  from following the player.<br />
<span style="color: #ff0000">(512) Fade Corpse</span>: After being killed, the monster's corpse will fade out after a while, instead of lying there forever.</blockquote>
<h3>Related Entities</h3>None<br />
<p><span style="font-weight: bold">Notes:</span><br />Normally found in water, they inflict an annoyance bite of one health unit.</p>
<p align="center"><a href="../node/960#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="monster_miniturret">monster_miniturret</a></h1>
<p>Spawns the small floor or ceiling mounted mini turret.</p>
<center><img src="../content/half-life/entimgs/monster/miniturret.jpg" width="350" height="200"  alt="Miniturret" title="Miniturret" /></center>
<h3>Properties</h3>
<p><span style="font-weight: bold">Target</span> -  When the entity is activated, the Target named here is triggered.</p>
<p><span style="font-weight: bold">Name</span> - The Name of the entity for triggering.</p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows: </p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade)</pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive</pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. 'Solid' mode simply needs a non zero value to work, while in other modes translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">TriggerTarget</span> Used to trigger a Target in conjunction with the Trigger Condition.</p>
<p><span style="font-weight: bold">Trigger Condition</span> - This controls the condition under which  a monster will trigger its TriggerTarget.<br /> The options are:</p>
<pre>0 = No Trigger
1 = See Player, Mad at Player
2 = Take Damage
3 = 50% Health Remaining
4 = Death
7 = Hear World
8 = Hear Player
9 = Hear Combat
10 = See Player Unconditional
11 = See Player, Not In Combat </pre>
<p><span style="font-weight: bold"> Animation Sequence</span> - The animation sequence to play. If you are using Hammer 3.5, this will also be displayed in the 3D window.</p>
<p><span style="font-weight: bold">Orientation</span>- Options:</p>
<pre>- 0 = Floor Mount
 1 = Ceiling Mount</pre>
<h3>Flags:</h3>
<blockquote><span style="color: #ff0000">(1) WaitTillSeen</span>: Monster will wait till seen, however it doesn't always work that way.<br />
<span style="color: #ff0000">(2) Gag</span>: When checked, the monster won't say anything or make noise, great for shutting Grunts up.<br />
<span style="color: #ff0000">(4) MonsterClip</span>: Prevents the monster from moving through func_monsterclip brushes.<br />
<span style="color: #ff0000">(16) Prisoner</span>: When enabled, the monster won't  attack the player (normal AI is disabled).<br />
<span style="color: #ff0000">(32) Autostart</span>: Does not require triggering.<br />
<span style="color: #ff0000">(64) Start Inactive</span>: Does require triggering<br />
<span style="color: #ff0000">(128) WaitForScript</span>: Does not appear to have been  implemented.<br />
<span style="color: #ff0000">(256) Pre-Disaster</span>: Only used by Scientists and Barneys. Gives them pre-disaster speech, and prevents them  from following the player.<br />
<span style="color: #ff0000">(512) Fade Corpse</span>: After being killed, the monster's corpse will fade out after a while, instead of lying there forever.</blockquote>
<h3>Related Entities</h3>None<br />
<p><span style="font-weight: bold">Notes:</span><br />A smaller version of the monster_turret, and nearly as effective.</p>
<p align="center"><a href="../node/960#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="monster_nihlanth">monster_nihlanth</a></h1>
<p>The end is near, you can feel it... and then you run up against this guy.</p>
<center><img src="../content/half-life/entimgs/monster/nihilanth.jpg" width="350" height="200"  alt="Nihlanth" title="Nihlanth" /></center>
<h3>Properties</h3>
<p><span style="font-weight: bold">Target</span> -  When the entity is activated, the Target named here is triggered.</p>
<p><span style="font-weight: bold">Name</span> - The Name of the entity for triggering.</p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows: </p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade)</pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive</pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. 'Solid' mode simply needs a non zero value to work, while in other modes translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">TriggerTarget</span> Used to trigger a Target in conjunction with the Trigger Condition.</p>
<p><span style="font-weight: bold">Trigger Condition</span> - This controls the condition under which  a monster will trigger its TriggerTarget.<br /> The options are:</p>
<pre>0 = No Trigger
1 = See Player, Mad at Player
2 = Take Damage
3 = 50% Health Remaining
4 = Death
7 = Hear World
8 = Hear Player
9 = Hear Combat
10 = See Player Unconditional
11 = See Player, Not In Combat </pre>
<p><span style="font-weight: bold"> Animation Sequence</span> - The animation sequence to play. If you are using Hammer 3.5, this will also be displayed in the 3D window.</p>
<h3>Flags:</h3>
<blockquote><span style="color: #ff0000">(1) WaitTillSeen</span>: Monster will wait till seen, however it doesn't always work that way.<br />
<span style="color: #ff0000">(2) Gag</span>: When checked, the monster won't say anything or make noise, great for shutting Grunts up.<br />
<span style="color: #ff0000">(4) MonsterClip</span>: Prevents the monster from moving through func_monsterclip brushes.<br />
<span style="color: #ff0000">(16) Prisoner</span>: When enabled, the monster won't  attack the player (normal AI is disabled).<br />
<span style="color: #ff0000">(128) WaitForScript</span>: Does not appear to have been  implemented.<br />
<span style="color: #ff0000">(256) Pre-Disaster</span>: Only used by Scientists and Barneys. Gives them pre-disaster speech, and prevents them  from following the player.<br />
<span style="color: #ff0000">(512) Fade Corpse</span>: After being killed, the monster's corpse will fade out after a while, instead of lying there forever.</blockquote>
<h3>Related Entities</h3>None<br />
<p><span style="font-weight: bold">Notes:</span><br />You need a lot of room to place the Nihilanth and make it look right.</p>
<p align="center"><a href="../node/960#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="monster_osprey">monster_osprey</a></h1>
<p>Spawns the Osprey half-helicopter half-aeroplane troop transporter.</p>
<center><img src="../content/half-life/entimgs/monster/osprey.jpg" width="350" height="200"  alt="Osprey" title="Osprey" /></center>
<h3>Properties</h3>
<p><span style="font-weight: bold">Target</span> -  When the entity is activated, the Target named here is triggered.</p>
<p><span style="font-weight: bold">Name</span> - The Name of the entity for triggering.</p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows: </p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade)</pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive</pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. 'Solid' mode simply needs a non zero value to work, while in other modes translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">TriggerTarget</span> Used to trigger a Target in conjunction with the Trigger Condition.</p>
<p><span style="font-weight: bold">Trigger Condition</span> - This controls the condition under which  a monster will trigger its TriggerTarget.<br /> The options are:</p>
<pre>0 = No Trigger
1 = See Player, Mad at Player
2 = Take Damage
3 = 50% Health Remaining
4 = Death
7 = Hear World
8 = Hear Player
9 = Hear Combat
10 = See Player Unconditional
11 = See Player, Not In Combat </pre>
<p><span style="font-weight: bold"> Animation Sequence</span> - The animation sequence to play. If you are using Hammer 3.5, this will also be displayed in the 3D window.</p>
<h3>Flags:</h3>
<blockquote><span style="color: #ff0000">(1) WaitTillSeen</span>: Monster will wait till seen, however it doesn't always work that way.<br />
<span style="color: #ff0000">(2) Gag</span>: When checked, the monster won't say anything or make noise, great for shutting Grunts up.<br />
<span style="color: #ff0000">(4) MonsterClip</span>: Prevents the monster from moving through func_monsterclip brushes.<br />
<span style="color: #ff0000">(16) Prisoner</span>: When enabled, the monster won't  attack the player (normal AI is disabled).<br />
<span style="color: #ff0000">(64) Start Inactive </span>: - Must be triggered to follow it's path corners..<br />
<span style="color: #ff0000">(128) WaitForScript</span>: Does not appear to have been  implemented.<br />
<span style="color: #ff0000">(256) Pre-Disaster</span>: Only used by Scientists and Barneys. Gives them pre-disaster speech, and prevents them  from following the player.<br />
<span style="color: #ff0000">(512) Fade Corpse</span>: After being killed, the monster's corpse will fade out after a while, instead of lying there forever.</blockquote>
<h3>Related Entities</h3>None<br />
<p><span style="font-weight: bold">Notes:</span><br />Careful placement of the path_corners ensures a smooth looking flight path. The path_corners will need to be tweaked to adjust pitch, roll and speed.<br /> This entity needs a lot of room to fly in. It also drops monster_grunt_repel based on the number of grunt_repels added initially.<br /> The resupply occurs when the grunt's are killed, based on where they were initially placed in the map.<br /> Make sure you have a path_corner over the grunts!! as this is where the Osprey will head to drop new ones when they die. </p>
<p align="center"><a href="../node/960#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="monster_rat">monster_rat</a></h1>
<p>Spawns a rat, which I don't remember ever having seen in the game.</p>
<center><img src="../content/half-life/entimgs/monster/rat.jpg" width="350" height="200"  alt="Rat" title="Rat" /></center>
<h3>Properties</h3>
<p><span style="font-weight: bold">Target</span> -  When the entity is activated, the Target named here is triggered.</p>
<p><span style="font-weight: bold">Name</span> - The Name of the entity for triggering.</p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows: </p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade)</pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive</pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. 'Solid' mode simply needs a non zero value to work, while in other modes translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">TriggerTarget</span> Used to trigger a Target in conjunction with the Trigger Condition.</p>
<p><span style="font-weight: bold">Trigger Condition</span> - This controls the condition under which  a monster will trigger its TriggerTarget.<br /> The options are:</p>
<pre>0 = No Trigger
1 = See Player, Mad at Player
2 = Take Damage
3 = 50% Health Remaining
4 = Death
7 = Hear World
8 = Hear Player
9 = Hear Combat
10 = See Player Unconditional
11 = See Player, Not In Combat </pre>
<p><span style="font-weight: bold"> Animation Sequence</span> - The animation sequence to play. If you are using Hammer 3.5, this will also be displayed in the 3D window.</p>
<h3>Flags:</h3>
<blockquote><span style="color: #ff0000">(1) WaitTillSeen</span>: Monster will wait till seen, however it doesn't always work that way.<br />
<span style="color: #ff0000">(2) Gag</span>: When checked, the monster won't say anything or make noise, great for shutting Grunts up.<br />
<span style="color: #ff0000">(4) MonsterClip</span>: Prevents the monster from moving through func_monsterclip brushes.<br />
<span style="color: #ff0000">(16) Prisoner</span>: When enabled, the monster won't  attack the player (normal AI is disabled).<br />
<span style="color: #ff0000">(128) WaitForScript</span>: Does not appear to have been  implemented.<br />
<span style="color: #ff0000">(256) Pre-Disaster</span>: Only used by Scientists and Barneys. Gives them pre-disaster speech, and prevents them  from following the player.<br />
<span style="color: #ff0000">(512) Fade Corpse</span>: After being killed, the monster's corpse will fade out after a while, instead of lying there forever.</blockquote>
<h3>Related Entities</h3>None<br />
<p><span style="font-weight: bold">Notes:</span><br /> Can be used to trigger an event when it see's the player. They also follow path_corners (<i>Slowly..</i>), but beware, their behaviour can be a bit weird and unpredictable.</p>
<p align="center"><a href="../node/960#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
	 <h1><a name="monster_satchelcharge">monster_satchelcharge</a></h1>
<p>Spawns a satchel full of explosives.</p>
<center><img src="../content/half-life/entimgs/monster/satchel.jpg" width="350" height="200"  alt="Satchel" title="Satchel" /></center>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - The Name of the entity for triggering.</p>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">Target</span> -  When the entity is activated, the Target named here is triggered.</p>
<p><span style="font-weight: bold">Delay before trigger</span> - Usually the time in seconds before an entity should trigger its target (after being triggered itself). Under other SmartEdit names, delay might also be the time to wait before performing some  other action.</p>
<p><span style="font-weight: bold">KillTarget</span> - When an entity is triggered, it will remove from the  game the entity specified by this property.</p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows: </p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade)</pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive</pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. 'Solid' mode simply needs a non zero value to work, while in other modes translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold"> Animation Sequence</span> - The animation sequence to play. If you are using Hammer 3.5, this will also be displayed in the 3D window.</p>
<h3>Flags:</h3>
<blockquote><span style="color: #ff0000">(2048) Not in Deathmatch</span> - If this flag is set on, the entity will not appear in deathmatch games.</blockquote>
<h3>Related Entities</h3>None<br />
<p><span style="font-weight: bold">Notes:</span><br />Shrike initiator included...no batteries required!</p>
<p align="center"><a href="../node/960#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="monster_scientist">monster_scientist</a></h1>
<p>Spawns a man in a lab coat.</p>
<center><img src="../content/half-life/entimgs/monster/scientist.jpg" width="350" height="200"  alt="Scientist" title="Scientist" /></center>
<h3>Properties</h3>
<p><span style="font-weight: bold">Target</span> -  When the entity is activated, the Target named here is triggered.</p>
<p><span style="font-weight: bold">Name</span> - The Name of the entity for triggering.</p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows: </p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade)</pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive</pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. 'Solid' mode simply needs a non zero value to work, while in other modes translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">TriggerTarget</span> Used to trigger a Target in conjunction with the Trigger Condition.</p>
<p><span style="font-weight: bold">Trigger Condition</span> - This controls the condition under which  a monster will trigger its TriggerTarget.<br /> The options are:</p>
<pre>0 = No Trigger
1 = See Player, Mad at Player
2 = Take Damage
3 = 50% Health Remaining
4 = Death
7 = Hear World
8 = Hear Player
9 = Hear Combat
10 = See Player Unconditional
11 = See Player, Not In Combat </pre>
<p><span style="font-weight: bold"> Animation Sequence</span> - The animation sequence to play. If you are using Hammer 3.5, this will also be displayed in the 3D window.</p>
<p><span style="font-weight: bold">Use Sentence</span> - When the Player &quot;uses&quot; Barney to follow, he will speak this sentence.</p>
<p><span style="font-weight: bold">Un-Use Sentence</span> - If the Player &quot;uses&quot; Barney a second time, indicating &quot;Don't Follow&quot; he will speak this sentence.</p>
<p><span style="font-weight: bold">Body</span> - Which Sci do you want?</p>
<pre>-1 = Random
 0 = Glasses
 1 = Einstein
 2 = Luther
 3 = Slick</pre>
<h3>Flags:</h3>
<blockquote><span style="color: #ff0000">(1) WaitTillSeen</span>: Monster will wait till seen, however it doesn't always work that way.<br />
<span style="color: #ff0000">(2) Gag</span>: When checked, the monster won't say anything or make noise, great for shutting Grunts up.<br />
<span style="color: #ff0000">(4) MonsterClip</span>: Prevents the monster from moving through func_monsterclip brushes.<br />
<span style="color: #ff0000">(16) Prisoner</span>: When enabled, the monster won't  attack the player (normal AI is disabled).<br />
<span style="color: #ff0000">(128) WaitForScript</span>: Does not appear to have been  implemented.<br />
<span style="color: #ff0000">(256) Pre-Disaster</span>: Only used by Scientists and Barneys. Gives them pre-disaster speech, and prevents them  from following the player.<br />
<span style="color: #ff0000">(512) Fade Corpse</span>:  After being killed, the monster's corpse will fade out after a while, instead of lying there forever.</blockquote>
<h3>Related Entities</h3>None<br />
<p><span style="font-weight: bold">Notes:</span><br />Exceptionally useful chappies, great for making Black Mesa look like a research facility.</p>
<p align="center"><a href="../node/960#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="monster_scientist_dead">monster_scientist_dead</a></h1>
<p>Spawns a dead man in a lab coat.</p>
<center><img src="../content/half-life/entimgs/monster/scientist_dead.jpg" width="350" height="200"  alt="Dead Scientist" title="Dead Scientist" /></center>
<h3>Properties</h3>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows: </p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade)</pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive</pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. 'Solid' mode simply needs a non zero value to work, while in other modes translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold"> Animation Sequence</span> - The animation sequence to play. If you are using Hammer 3.5, this will also be displayed in the 3D window.</p>
<p><span style="font-weight: bold">Body</span> - Which dead Sci do you want?</p>
<pre>-1 = Random
 0 = Glasses
 1 = Einstein
 2 = Luther
 3 = Slick</pre>
<p><span style="font-weight: bold">Pose</span> - Options:</p>
<pre>- 0 = On back
 1 = On Stomach
 2 = Sitting
 3 = Hanging
 4 = Table1
 5 = Table2
 6 = Table3</pre>
<h3>Flags:</h3>
<blockquote><span style="color: #ff0000">(2048) Not in Deathmatch</span> - If this flag is set on, the entity will not appear in deathmatch games.</blockquote>
<h3>Related Entities</h3>None<br />
<p><span style="font-weight: bold">Notes:</span><br />Post disaster fun... drape a few of these guy's around.</p>
<p align="center"><a href="../node/960#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="monster_sentry">monster_sentry</a></h1>
<p>Spawns a floor mounted tripod gun.</p>
<center><img src="../content/half-life/entimgs/monster/sentry.jpg" width="350" height="200"  alt="Sentry" title="Sentry" /></center>
<h3>Properties</h3>
<p><span style="font-weight: bold">Target</span> -  When the entity is activated, the Target named here is triggered.</p>
<p><span style="font-weight: bold">Name</span> - The Name of the entity for triggering.</p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows: </p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade)</pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive</pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. 'Solid' mode simply needs a non zero value to work, while in other modes translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">TriggerTarget</span> Used to trigger a Target in conjunction with the Trigger Condition.</p>
<p><span style="font-weight: bold">Trigger Condition</span> - This controls the condition under which  a monster will trigger its TriggerTarget.<br /> The options are:</p>
<pre>0 = No Trigger
1 = See Player, Mad at Player
2 = Take Damage
3 = 50% Health Remaining
4 = Death
7 = Hear World
8 = Hear Player
9 = Hear Combat
10 = See Player Unconditional
11 = See Player, Not In Combat </pre>
<p><span style="font-weight: bold"> Animation Sequence</span> - The animation sequence to play. If you are using Hammer 3.5, this will also be displayed in the 3D window.</p>
<h3>Flags:</h3>
<blockquote><span style="color: #ff0000">(1) WaitTillSeen</span>: Monster will wait till seen, however it doesn't always work that way.<br />
<span style="color: #ff0000">(2) Gag</span>: When checked, the monster won't say anything or make noise, great for shutting Grunts up.<br />
<span style="color: #ff0000">(4) MonsterClip</span>: Prevents the monster from moving through func_monsterclip brushes.<br />
<span style="color: #ff0000">(16) Prisoner</span>: When enabled, the monster won't  attack the player (normal AI is disabled).<br />
<span style="color: #ff0000">(32) Autostart</span>: Does not require triggering.<br />
<span style="color: #ff0000">(64) Start Inactive</span>: Does require triggering<br />
<span style="color: #ff0000">(128) WaitForScript</span>: Does not appear to have been  implemented.<br />
<span style="color: #ff0000">(256) Pre-Disaster</span>: Only used by Scientists and Barneys. Gives them pre-disaster speech, and prevents them  from following the player.<br />
<span style="color: #ff0000">(512) Fade Corpse</span>: After being killed, the monster's corpse will fade out after a while, instead of lying there forever.</blockquote>
<h3>Related Entities</h3>None<br />
<p><span style="font-weight: bold">Notes:</span><br />A small tripod mounted auto activated gun. Used mainly in the game with a laser trigger.</p>
<p align="center"><a href="../node/960#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="monster_sitting_scientist">monster_sitting_scientist</a></h1>
<p>Spawns a man in a lab coat in the sitting position. Check out venomous's tutorial on Chair's, Barney's and Sitting Scientists for uses.</p>
<center><img src="../content/half-life/entimgs/monster/sitting_scientist.jpg" width="350" height="200"  alt="Sitting Sci" title="Sitting Sci" /></center>
<h3>Properties</h3>
<p><span style="font-weight: bold">Target</span> -  When the entity is activated, the Target named here is triggered.</p>
<p><span style="font-weight: bold">Name</span> - The Name of the entity for triggering.</p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows: </p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade)</pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive</pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. 'Solid' mode simply needs a non zero value to work, while in other modes translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">TriggerTarget</span> Used to trigger a Target in conjunction with the Trigger Condition.</p>
<p><span style="font-weight: bold">Trigger Condition</span> - This controls the condition under which  a monster will trigger its TriggerTarget.<br /> The options are:</p>
<pre>0 = No Trigger
1 = See Player, Mad at Player
2 = Take Damage
3 = 50% Health Remaining
4 = Death
7 = Hear World
8 = Hear Player
9 = Hear Combat
10 = See Player Unconditional
11 = See Player, Not In Combat </pre>
<p><span style="font-weight: bold"> Animation Sequence</span> - The animation sequence to play. If you are using Hammer 3.5, this will also be displayed in the 3D window.</p>
<p><span style="font-weight: bold">Body</span> - Which Sci do you want?</p>
<pre>-1 = Random
 0 = Glasses
 1 = Einstein
 2 = Luther
 3 = Slick</pre>
<h3>Flags:</h3>
<blockquote><span style="color: #ff0000">(1) WaitTillSeen</span>: Monster will wait till seen, however it doesn't always work that way.<br />
<span style="color: #ff0000">(2) Gag</span>: When checked, the monster won't say anything or make noise, great for shutting Grunts up.<br />
<span style="color: #ff0000">(4) MonsterClip</span>: Prevents the monster from moving through func_monsterclip brushes.<br />
<span style="color: #ff0000">(16) Prisoner</span>: When enabled, the monster won't  attack the player (normal AI is disabled).<br />
<span style="color: #ff0000">(128) WaitForScript</span>: Does not appear to have been  implemented.<br />
<span style="color: #ff0000">(256) Pre-Disaster</span>: Only used by Scientists and Barneys. Gives them pre-disaster speech, and prevents them  from following the player.<br />
<span style="color: #ff0000">(512) Fade Corpse</span>: After being killed, the monster's corpse will fade out after a while, instead of lying there forever.</blockquote>
<h3>Related Entities</h3>None<br />
<p><span style="font-weight: bold">Related Tutorials</span><br /><a href="../node/3">Chairs, Scientists and Barneys</a></p>
<p><span style="font-weight: bold">Notes:</span><br />Exceptionally useful chappies, great for making Black Mesa look like a research facility. And sometimes difficult to get looking right. Just follow the tutorial (Chairs, Scientists and Barneys) and they will look great.</p>
<p align="center"><a href="../node/960#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="monster_snark">monster_snark</a></h1>
<p>Spawns a Snark. This thing is like a headcrab on speed.</p>
<center><img src="../content/half-life/entimgs/monster/snark.jpg" width="350" height="200"  alt="Snark" title="Snark" /></center>
<h3>Properties</h3>
<p><span style="font-weight: bold">Target</span> -  When the entity is activated, the Target named here is triggered.</p>
<p><span style="font-weight: bold">Name</span> - The Name of the entity for triggering.</p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows: </p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade)</pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive</pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. 'Solid' mode simply needs a non zero value to work, while in other modes translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">TriggerTarget</span> Used to trigger a Target in conjunction with the Trigger Condition.</p>
<p><span style="font-weight: bold">Trigger Condition</span> - This controls the condition under which  a monster will trigger its TriggerTarget.<br /> The options are:</p>
<pre>0 = No Trigger
1 = See Player, Mad at Player
2 = Take Damage
3 = 50% Health Remaining
4 = Death
7 = Hear World
8 = Hear Player
9 = Hear Combat
10 = See Player Unconditional
11 = See Player, Not In Combat </pre>
<p><span style="font-weight: bold"> Animation Sequence</span> - The animation sequence to play. If you are using Hammer 3.5, this will also be displayed in the 3D window.</p>
<h3>Flags:</h3>
<blockquote><span style="color: #ff0000">(1) WaitTillSeen</span>: Monster will wait till seen, however it doesn't always work that way.<br />
<span style="color: #ff0000">(2) Gag</span>: When checked, the monster won't say anything or make noise, great for shutting Grunts up.<br />
<span style="color: #ff0000">(4) MonsterClip</span>: Prevents the monster from moving through func_monsterclip brushes.<br />
<span style="color: #ff0000">(16) Prisoner</span>: When enabled, the monster won't  attack the player (normal AI is disabled).<br />
<span style="color: #ff0000">(128) WaitForScript</span>: Does not appear to have been  implemented.<br />
<span style="color: #ff0000">(256) Pre-Disaster</span>: Only used by Scientists and Barneys. Gives them pre-disaster speech, and prevents them  from following the player.<br />
<span style="color: #ff0000">(512) Fade Corpse</span>: After being killed, the monster's corpse will fade out after a while, instead of lying there forever.</blockquote>
<h3>Related Entities</h3>None<br />
<p><span style="font-weight: bold">Notes:</span><br />These little guy's are less than friendly, but the good thing is that if you find the nest, you can use them as a weapon.</p>
<p align="center"><a href="../node/960#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="monster_tentacle">monster_tentacle</a></h1>
<p>Spawns a one armed tentacle creature. Most probably fondly remembered from the Blast pit.</p>
<center><img src="../content/half-life/entimgs/monster/tentacle.jpg" width="350" height="200"  alt="Tentacle" title="Tentacle" /></center>
<h3>Properties</h3>
<p><span style="font-weight: bold">Target</span> -  When the entity is activated, the Target named here is triggered.</p>
<p><span style="font-weight: bold">Name</span> - The Name of the entity for triggering.</p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows: </p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade)</pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive</pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. 'Solid' mode simply needs a non zero value to work, while in other modes translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">TriggerTarget</span> Used to trigger a Target in conjunction with the Trigger Condition.</p>
<p><span style="font-weight: bold">Trigger Condition</span> - This controls the condition under which  a monster will trigger its TriggerTarget.<br /> The options are:</p>
<pre>0 = No Trigger
1 = See Player, Mad at Player
2 = Take Damage
3 = 50% Health Remaining
4 = Death
7 = Hear World
8 = Hear Player
9 = Hear Combat
10 = See Player Unconditional
11 = See Player, Not In Combat </pre>
<p><span style="font-weight: bold"> Animation Sequence</span> - The animation sequence to play. If you are using Hammer 3.5, this will also be displayed in the 3D window.</p>
<p><span style="font-weight: bold">Sweep Arc</span> - The arc in degrees that you want the tentacle to sweep.</p>
<p><span style="font-weight: bold">Tap Sound</span> Options:</p>
<pre>-1 = None
 0 = Silo
 1 = Dirt
 2 = Water</pre>
<h3>Flags:</h3>
<blockquote><span style="color: #ff0000">(1) WaitTillSeen</span>: Monster will wait till seen, however it doesn't always work that way.<br />
<span style="color: #ff0000">(2) Gag</span>: When checked, the monster won't say anything or make noise, great for shutting Grunts up.<br />
<span style="color: #ff0000">(4) MonsterClip</span>: Prevents the monster from moving through func_monsterclip brushes.<br />
<span style="color: #ff0000">(16) Prisoner</span>: When enabled, the monster won't  attack the player (normal AI is disabled).<br />
<span style="color: #ff0000">(128) WaitForScript</span>: Does not appear to have been  implemented.<br />
<span style="color: #ff0000">(256) Pre-Disaster</span>: Only used by Scientists and Barneys. Gives them pre-disaster speech, and prevents them  from following the player.<br />
<span style="color: #ff0000">(512) Fade Corpse</span>: After being killed, the monster's corpse will fade out after a while, instead of lying there forever.</blockquote>
<h3>Related Entities</h3>None<br />
<p><span style="font-weight: bold">Notes:</span><br />This critter reacts to noise. It will strike at any sound.</p>
<p align="center"><a href="../node/960#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="monster_tripmine">monster_tripmine</a></h1>
<p>Spawns a tripmine.</p>
<center><img src="../content/half-life/entimgs/monster/tripmine.jpg" width="350" height="200"  alt="Tripmine" title="Tripmine" /></center>
<h3>Properties</h3>
<p><span style="font-weight: bold">Target</span> -  When the entity is activated, the Target named here is triggered.</p>
<p><span style="font-weight: bold">Name</span> - The Name of the entity for triggering.</p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows: </p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade)</pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive</pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. 'Solid' mode simply needs a non zero value to work, while in other modes translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">TriggerTarget</span> Used to trigger a Target in conjunction with the Trigger Condition.</p>
<p><span style="font-weight: bold">Trigger Condition</span> - This controls the condition under which  a monster will trigger its TriggerTarget.<br /> The options are:</p>
<pre>0 = No Trigger
1 = See Player, Mad at Player
2 = Take Damage
3 = 50% Health Remaining
4 = Death
7 = Hear World
8 = Hear Player
9 = Hear Combat
10 = See Player Unconditional
11 = See Player, Not In Combat </pre>
<p><span style="font-weight: bold"> Animation Sequence</span> - The animation sequence to play. If you are using Hammer 3.5, this will also be displayed in the 3D window.</p>
<h3>Flags:</h3>
<blockquote><span style="color: #ff0000">(1) Instant On</span>: The mine is automatically 'ON' at the map start.<br />
<span style="color: #ff0000">(2) Gag</span>: When checked, the monster won't say anything or make noise, great for shutting Grunts up.<br />
<span style="color: #ff0000">(4) MonsterClip</span>: Prevents the monster from moving through func_monsterclip brushes.<br />
<span style="color: #ff0000">(16) Prisoner</span>: When enabled, the monster won't  attack the player (normal AI is disabled).<br />
<span style="color: #ff0000">(128) WaitForScript</span>: Does not appear to have been  implemented.<br />
<span style="color: #ff0000">(256) Pre-Disaster</span>: Only used by Scientists and Barneys. Gives them pre-disaster speech, and prevents them  from following the player.<br />
<span style="color: #ff0000">(512) Fade Corpse</span>: After being killed, the monster's corpse will fade out after a while, instead of lying there forever.</blockquote>
<h3>Related Entities</h3>None<br />
<p><span style="font-weight: bold">Notes:</span><br />Tripmine complete with Green laser trigger.</p>
<p align="center"><a href="../node/960#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="monster_turret">monster_turret</a></h1>
<p>Spawns a Large ceiling or floor mounted turret.</p>
<center><img src="../content/half-life/entimgs/monster/turret.jpg" width="350" height="200"  alt="Turret" title="Turret" /></center>
<h3>Properties</h3>
<p><span style="font-weight: bold">Target</span> -  When the entity is activated, the Target named here is triggered.</p>
<p><span style="font-weight: bold">Name</span> - The Name of the entity for triggering.</p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows: </p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade)</pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive</pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. 'Solid' mode simply needs a non zero value to work, while in other modes translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">TriggerTarget</span> Used to trigger a Target in conjunction with the Trigger Condition.</p>
<p><span style="font-weight: bold">Trigger Condition</span> - This controls the condition under which  a monster will trigger its TriggerTarget.<br /> The options are:</p>
<pre>0 = No Trigger
1 = See Player, Mad at Player
2 = Take Damage
3 = 50% Health Remaining
4 = Death
7 = Hear World
8 = Hear Player
9 = Hear Combat
10 = See Player Unconditional
11 = See Player, Not In Combat </pre>
<p><span style="font-weight: bold"> Animation Sequence</span> - The animation sequence to play. If you are using Hammer 3.5, this will also be displayed in the 3D window.</p>
<p><span style="font-weight: bold">Orientation</span>- Options:</p>
<pre> - 0 = Floor Mount
 1 = Ceiling Mount</pre>
<h3>Flags:</h3>
<blockquote><span style="color: #ff0000">(1) WaitTillSeen</span>: Monster will wait till seen, however it doesn't always work that way.<br />
<span style="color: #ff0000">(2) Gag</span>: When checked, the monster won't say anything or make noise, great for shutting Grunts up.<br />
<span style="color: #ff0000">(4) MonsterClip</span>: Prevents the monster from moving through func_monsterclip brushes.<br />
<span style="color: #ff0000">(16) Prisoner</span>: When enabled, the monster won't  attack the player (normal AI is disabled).<br />
<span style="color: #ff0000">(32) Autostart</span>: Does not require triggering.<br />
<span style="color: #ff0000">(64) Start Inactive</span>: Does require triggering<br />
<span style="color: #ff0000">(128) WaitForScript</span>: Does not appear to have been  implemented.<br />
<span style="color: #ff0000">(256) Pre-Disaster</span>: Only used by Scientists and Barneys. Gives them pre-disaster speech, and prevents them  from following the player.<br />
<span style="color: #ff0000">(512) Fade Corpse</span>: After being killed, the monster's corpse will fade out after a while, instead of lying there forever.</blockquote>
<h3>Related Entities</h3>None<br />
<p><span style="font-weight: bold">Notes:</span><br />A larger version of the monster_miniturret, and twice as effective.</p>
<p align="center"><a href="../node/960#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="monster_zombie">monster_zombie</a></h1>
<p>The result of an interaction between a headcrab and a man in a lab coat.</p>
<center><img src="../content/half-life/entimgs/monster/zombie.jpg" width="350" height="200"  alt="Zombie" title="Zombie" /></center>
<h3>Properties</h3>
<p><span style="font-weight: bold">Target</span> -  When the entity is activated, the Target named here is triggered.</p>
<p><span style="font-weight: bold">Name</span> - The Name of the entity for triggering.</p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows: </p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade)</pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive</pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. 'Solid' mode simply needs a non zero value to work, while in other modes translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">TriggerTarget</span> Used to trigger a Target in conjunction with the Trigger Condition.</p>
<p><span style="font-weight: bold">Trigger Condition</span> - This controls the condition under which  a monster will trigger its TriggerTarget.<br /> The options are:</p>
<pre>0 = No Trigger
1 = See Player, Mad at Player
2 = Take Damage
3 = 50% Health Remaining
4 = Death
7 = Hear World
8 = Hear Player
9 = Hear Combat
10 = See Player Unconditional
11 = See Player, Not In Combat </pre>
<p><span style="font-weight: bold"> Animation Sequence</span> - The animation sequence to play. If you are using Hammer 3.5, this will also be displayed in the 3D window.</p>
<h3>Flags:</h3>
<blockquote><span style="color: #ff0000">(1) WaitTillSeen</span>: Monster will wait till seen, however it doesn't always work that way.<br />
<span style="color: #ff0000">(2) Gag</span>: When checked, the monster won't say anything or make noise, great for shutting Grunts up.<br />
<span style="color: #ff0000">(4) MonsterClip</span>: Prevents the monster from moving through func_monsterclip brushes.<br />
<span style="color: #ff0000">(16) Prisoner</span>: When enabled, the monster won't  attack the player (normal AI is disabled).<br />
<span style="color: #ff0000">(128) WaitForScript</span>: Does not appear to have been  implemented.<br />
<span style="color: #ff0000">(256) Pre-Disaster</span>: Only used by Scientists and Barneys. Gives them pre-disaster speech, and prevents them  from following the player.<br />
<span style="color: #ff0000">(512) Fade Corpse</span>: After being killed, the monster's corpse will fade out after a while, instead of lying there forever.</blockquote>
<h3>Related Entities</h3>None<br />
<p><span style="font-weight: bold">Notes:</span><br />Pretty useless monsters, but don't forget that they have arms, and will be able to navigate through button triggered doors.</p>
<p align="center"><a href="../node/960#Top">Top</a></p><br /><hr />
<p align="center">Next Entity Guide <a href="../node/961">Trigger Entities</a></p>
<br />
<hr />
<!--EOF@2428--></ul><h1 id="961" name="961" class="book-h3">Trigger</h1><ul><!-- 
Submitted by Andy Nov  2004 
Updated XHTML FEB 05 - Andy
-->
<h1><a name="Top">Half-Life Trigger Entities</a></h1>
<ul>
<li><a href="../node/961#trigger_auto">Trigger_auto</a></li>
<li><a href="../node/961#trigger_autosave">Trigger_autosave</a></li>
<li><a href="../node/961#trigger_camera">Trigger_camera</a></li>
<li><a href="../node/961#trigger_cdaudio">Trigger_cdaudio</a></li>
<li><a href="../node/961#trigger_changelevel">Trigger_changelevel</a></li>
<li><a href="../node/961#trigger_changetarget">Trigger_changetarget</a></li>
<li><a href="../node/961#trigger_counter">Trigger_counter</a></li>
<li><a href="../node/961#trigger_endsection">Trigger_endsection</a></li>
<li><a href="../node/961#trigger_gravity">Trigger_gravity</a></li>
<li><a href="../node/961#trigger_hurt">Trigger_hurt</a></li>
<li><a href="../node/961#trigger_monsterjump">Trigger_monsterjump</a></li>
<li><a href="../node/961#trigger_multiple">Trigger_multiple</a></li>
<li><a href="../node/961#trigger_once">Trigger_once</a></li>
<li><a href="../node/961#trigger_push">Trigger_push</a></li>
<li><a href="../node/961#trigger_relay">Trigger_relay</a></li>
<li><a href="../node/961#trigger_teleport">Trigger_teleport</a></li>
<li><a href="../node/961#trigger_transition">Trigger_transition</a></li></ul>
	<!--break-->
<!--Start Description-->
<hr />
<h1><a name="trigger_auto">trigger_auto</a></h1>
<p>This entity fires its target the moment the map has loaded.</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Target</span> - The name of the event to be activated.</p>
<p><span style="font-weight: bold">Delay before trigger</span> - The length of time in seconds to wait before triggering the target.</p>
<p><span style="font-weight: bold">KillTarget</span> - This event will be removed when the trigger_auto fires.</p>
<p><span style="font-weight: bold">Global State to Read</span> - The name of a global variable (set by a env_global). This variable sets the state of the trigger_auto.</p>
<p><span style="font-weight: bold">Trigger State</span> - Sets the type of trigger the trigger_auto sends (0 = Off 1 = On 2 = Toggle).</p>
<h3>Flag Properties</h3>
<blockquote><span style="color: #ff0000">(1)  Remove On fire</span> - If this is set, the trigger_auto will be removed from the  after firing.</blockquote>
<h3>Related Entities</h3>
<p><a href="../node/954#env_global">Env_global</a><br />
<a href="../node/959#multimanager">multimanager</a></p>
<p><span style="font-weight: bold">Notes</span>:<br />Setting 'Delay before trigger' to something like 0.2 is a good idea, because it's possible for the trigger_auto to fire before the entity it targets has even been spawned.  Usually the Trigger State is On.</p>
<p align="center"><a href="../node/961#Top">Top</a></p><br /><hr />
<!--Next Entity -->
<h1><a name="trigger_autosave">trigger_autosave</a></h1>
<p>When the player moves through the area covered by this entity, the game will be autosaved.</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - Name a trigger_autosave, if you want it to be triggered by another event.</p>
<p><span style="font-weight: bold">Master</span> - The entity will only work if the master is active.</p>
<h3>Flag Properties</h3>
<blockquote>None</blockquote>
<h3>Related Entities</h3>
<a href="../node/959#player_loadsaved">Player_loadsaved</a>
<p><span style="font-weight: bold">Notes</span>:<br />Autosaves are a great idea if the area ahead of the player is dangerous. It will give the player a point to reload the map from. The drawback is that the autosave is announced as text. It gives the player a warning of impending doom.</p>
<p align="center"><a href="../node/961#Top">Top</a></p><br /><hr />
<!--Next Entity -->
<h1><a name="trigger_camera">trigger_camera</a></h1>
<p>This entity allows you to place cameras in your map. The camera will take over from the players normal view.</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Target</span> - When an the camera is activated, it triggers the entity with the name specified by Target.</p>
<p><span style="font-weight: bold">Delay before trigger</span> - Delay in seconds before the Target above is triggered.</p>
<p><span style="font-weight: bold">KillTarget</span> - When the camera is triggered, it will remove from the game the entity specified by this property.</p>
<p><span style="font-weight: bold">Name</span> - This entity must be triggered to work. </p>
<p><span style="font-weight: bold">Hold time</span> - Time to keep the camera going in seconds.</p>
<p><span style="font-weight: bold">Path Corner</span> - The first path_corner the camera will move to if you want it to move and have set up a series of path_corners for it to move along. The camera will start where it spawns and move to the first path_corner at the &quot;Initial Speed&quot;. Freeze Player flag must be checked.</p>
<p><span style="font-weight: bold">Initial Speed</span> - The speed the camera moves to it's first path_corner.</p>
<p><span style="font-weight: bold">Acceleration units/sec^2</span> - </p>
<p><span style="font-weight: bold">Stop Deceleration units/sec^2</span> - </p> 
<h3>Flag Properties</h3>
<blockquote><span style="color: #ff0000">(1) Start At Player</span> - Begin with the player's view.<br />
<span style="color: #ff0000">(2) Follow Player</span> - Use the player as the focal point.<br />
<span style="color: #ff0000">(4) Freeze Player</span> - Stop the player from moving while camera is in action.</blockquote>
<h3>Related Entities</h3>
<p><a href="../node/954#env_fade">Env_fade	</a></p>
<p><span style="font-weight: bold">Notes</span>:<br />The camera can be set up to work in any of several ways - fixed position, with a fixed or moving target (e.g. a security camera), or moving, with a fixed or moving target.<br /> The area that the camera is looking at must be in the players visible set of brushes. </p>
<p align="center"><a href="../node/961#Top">Top</a></p><br /><hr />
<!--Next Entity -->
<h1><a name="trigger_cdaudio">trigger_cdaudio</a></h1>
<p>When the player passes through this entity, the selected CD audio track will be played.</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name </span> - Although brush-based, this entity can also be triggered by another entity. </p>
<p><span style="font-weight: bold">Track &#35; </span> - This is the track number that will play.</p>
<h3>Flag Properties</h3>
<blockquote>None</blockquote>
<h3>Related Entities</h3>
<p><a href="../node/959#target_cdaudio">Target_cdaudio</a></p>
<p><span style="font-weight: bold">Notes</span>:<br />None</p>
<p align="center"><a href="../node/961#Top">Top</a></p><br /><hr />
<!--Next Entity -->
<h1><a name="trigger_changelevel">trigger_changelevel</a></h1>
<p>This entity causes a level transition, where a new map is loaded and the player is placed in it.</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - Provide a name to allow the transition to be triggered by another event.</p>
<p><span style="font-weight: bold">New map name</span> - The name of the new map to load.</p>
<p><span style="font-weight: bold">Landmark name</span> - The name of the info_landmark that defines the same point in space in both maps.</p>
<p><span style="font-weight: bold">Change Target</span> - </p>
<p><span style="font-weight: bold">Delay before change target</span> - </p>
<h3>Flag Properties</h3>
<blockquote><span style="color: #ff0000">(1) No Intermission</span> - <br />
<span style="color: #ff0000">(2) Use Only</span> - Entity can only be triggered by another event.</blockquote>
<h3>Related Entities</h3>
<p><a href="../node/957#info_landmark">Info_landmark</a><br />
<a href="../node/961#trigger_transition">Trigger_transition</a></p>
<p><span style="font-weight: bold">Notes</span>:<br />None</p>
<p align="center"><a href="../node/961#Top">Top</a></p><br /><hr />
<!--Next Entity -->
<h1><a name="trigger_changetarget">trigger_changetarget</a></h1>
<p>This entity can change the Target value of any entity.</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Target</span> - The name of the entity to be affected.</p>
<p><span style="font-weight: bold">Delay before trigger</span> - Delay in seconds before the target change.</p>
<p><span style="font-weight: bold">KillTarget</span> - This entity will be removed from the game when the trigger is activated.</p>
<p><span style="font-weight: bold">Name</span> - Trigger this entity to activate. </p>
<p><span style="font-weight: bold">New Target</span> - Change the target entity's 'target' value to this.</p>
<h3>Flag Properties</h3>
<blockquote>None</blockquote>
<h3>Related Entities</h3>None<br />
<p><span style="font-weight: bold">Notes</span>:<br />None</p>
<p align="center"><a href="../node/961#Top">Top</a></p><br /><hr />
<!--Next Entity -->
<h1><a name="trigger_counter">trigger_counter</a></h1>
<p>This entity counts the number of times it is triggered and activates its target when it reaches a specified number.</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Target</span> - The event to be activated once the count has reached the specified limit.</p>
<p><span style="font-weight: bold">Name</span> - Provide a name to allow this entity to be triggered by another. </p>
<p><span style="font-weight: bold">Kill target</span> - Remove this entity from the game on activation. </p>
<p><span style="font-weight: bold">Target Path</span> - </p>
<p><span style="font-weight: bold">Master</span> - The name of a master. This master must be active in order for this trigger to fire.</p>
<p><span style="font-weight: bold">Sound Style</span> - </p>
<p><span style="font-weight: bold">Delay before trigger</span> - The trigger_counter will wait this many seconds before activating its target. </p>
<p><span style="font-weight: bold">Message</span> - </p>
<p><span style="font-weight: bold">Count before activation</span> - The number that the counter must reach before activating its targets.</p>
<h3>Flag Properties</h3>
<blockquote><span style="color: #ff0000">(1) No Message</span><br />
<span style="color: #ff0000">(2) No Clients</span> - The 'client' is the player. So with this flag set on, the entity will not be affected by the player.<br />
<span style="color: #ff0000">(4) Pushables</span>  - With this flag set on, the entity will be activated by pushable objects.</blockquote>
<h3>Related Entities</h3>
<p><a href="../node/959#multisource">Multisource</a></p>
<p><span style="font-weight: bold">Notes</span>:<br />None</p>
<p align="center"><a href="../node/961#Top">Top</a></p><br /><hr />
<!--Next Entity -->
<h1><a name="trigger_endsection">trigger_endsection</a></h1>
<p>This entity ends the current game and returns the player to the Half-Life main menu.</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - This entity can be activated by other triggers.</p>
<p><span style="font-weight: bold">Section</span> - The type of game to end.<br />Values are:</p>
<blockquote><span style="font-weight: bold">_oem_end_training</span> : takes the player back to the main menu<br />
<span style="font-weight: bold">_oem_end_logo</span> : same as above<br />
<span style="font-weight: bold">_oem_end_demo</span> : This was used in the demo. Same as above, but also attempts to open&nbsp;&nbsp; <code><span style="font-weight: bold">  media/order/default.hml  </span></code>.</blockquote>
<h3>Flag Properties</h3>
<blockquote><span style="color: #ff0000">(1) Use Only</span> - Entity cannot be triggered by the player walking into it.</blockquote>
<h3>Related Entities</h3>None<br />
<p><span style="font-weight: bold">Notes</span>:<br />None</p>
<p align="center"><a href="../node/961#Top">Top</a></p><br /><hr />
<!--Next Entity -->
<h1><a name="trigger_gravity">trigger_gravity</a></h1>
<p>This entity sets the effect of gravity from low to normal.</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Target</span> - When trigger_gravity is activated, it triggers the entity with the name specified by Target.</p>
<p><span style="font-weight: bold">Name</span> - Name of the entity, for external triggering.</p>
<p><span style="font-weight: bold">Kill target</span> - When an entity is triggered, it will remove from the game the entity specified by this property.</p>
<p><span style="font-weight: bold">Target Path</span> - </p>
<p><span style="font-weight: bold">Master</span> - The name of a multisource (or game_team_master) entity. A master must usually be active in order for the entity to work. Thus they act almost like an on/off switch, in their simplest form, and like an AND gate in the case of the multisource.</p>
<p><span style="font-weight: bold">Sound style</span>- </p>
<p><span style="font-weight: bold">Delay before trigger</span> - Usually the time in seconds before an entity should trigger its target (after being triggered itself). Under other SmartEdit names, delay might also be the time to wait before performing some other action.</p>
<p><span style="font-weight: bold">Message</span> - </p>
<p><span style="font-weight: bold">Gravity (0 - 1)</span> - Any value between 0 and 1, <span style="font-weight: bold">1</span> being normal gravity.</p>
<h3>Flag Properties</h3>
<blockquote><span style="color: #ff0000">(1) Monsters</span> - With this set, the monster entities will not be affected by the gravity<br />
<span style="color: #ff0000">(2) No Clients</span> - The 'client' is the player. Same as above<br />
<span style="color: #ff0000">(4) Pushables</span> -  With this flag set on,pushables will not be affected by gravity</blockquote>
<h3>Related Entities</h3>None<br />
<p><span style="font-weight: bold">Notes</span>:<br />Level of gravity stays set after being put into effect - use two brushes, one with the new gravity, one with the old, to make sure the player returns to normal gravity in situations where that is necessary. The player normally walks through this trigger</p>
<p align="center"><a href="../node/961#Top">Top</a></p><br /><hr />
<!--Next Entity -->
<h1><a name="trigger_hurt">trigger_hurt</a></h1>
<p>This entity hurts anyone in its area. Being brush based, any player or monster will recieve damage when they walk into the brush</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - If this is specified, the entity can be triggered on and off.</p>
<p><span style="font-weight: bold">Target</span> - When the trigger_hurt is activated (by a player touching it), it will trigger this target.</p>
<p><span style="font-weight: bold">Master</span> - If used, this master must be active for the trigger_hurt to work. </p>
<p><span style="font-weight: bold">Damage</span> - The amount of damage to deal out.</p>
<p><span style="font-weight: bold">Delay before trigger</span> - Delay in seconds before the Target is activated.</p>
<p><span style="font-weight: bold">Damage Type</span> - Type of damage. One of the following:</p>
<pre>0 = GENERIC
1 = CRUSH
2 = BULLET
4 = SLASH
8 = BURN
16 = FREEZE
32 = FALL
64 = BLAST
128 = CLUB
256 = SHOCK
512 = SONIC
1024 = ENERGYBEAM
16384 = DROWN
32768 = PARALYSE
65536 = NERVEGAS
131072 = POISON
262144 = RADIATION
524288 = DROWNRECOVER
1048576 = CHEMICAL
2097152 = SLOWBURN
4194304 = SLOWFREEZE</pre>
<h3>Flag Properties</h3>
<blockquote><span style="color: #ff0000">(1)Target Once</span> - Normally the trigger_hurt will trigger its target every time it hurts something. Setting this flag lets it do this only once.<br />
<span style="color: #ff0000">(2) Start Off</span>  - Start the trigger off (needs to be activated to work). <br />
<span style="color: #ff0000">(8) No clients</span> - The entity won't affect players. The 'client' is the player. So with this flag set on, the entity will not be affected by the player.<br />
<span style="color: #ff0000">(16) FireClientOnly</span>  - Will hurt anyone, but will only fire its target when it hurts a player.<br />
<span style="color: #ff0000">(32) TouchClientOnly</span>  - Only the player will be hurt.</blockquote>
<h3>Related Entities</h3>
<p><a href="../node/959#multisource">Multisource</a></p>
<p><span style="font-weight: bold">Notes</span>:<br />None </p>
<p align="center"><a href="../node/961#Top">Top</a></p><br /><hr />
<!--Next Entity -->
<h1><a name="trigger_monsterjump">trigger_monsterjump</a></h1>
<p>Any monster that walks into the area covered by this entity will be made to jump in the specified direction, height and speed once.</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Pitch Yaw Roll</span> - Yaw sets the jump direction. </p>
<p><span style="font-weight: bold">Master</span> - Monsters will not jump unless this master is active. </p>
<p><span style="font-weight: bold">Jump Speed</span> - Speed of the jump in units per second.</p>
<p><span style="font-weight: bold">Jump Height</span> - The height of the jump in units.</p>
<h3>Flag Properties</h3>
<blockquote>None</blockquote>
<h3>Related Entities</h3>None<br />
<p><span style="font-weight: bold">Notes</span>:<br />Don't expect to get Barney doing circus tricks... This entity is limited, but might be really usefull to get monsters over small objects or start the run up a set of stairs.<br /> I couldn't get Barney to jump more than 48 units, and even then it looked like a 'run over obstacle' rather than a jump.</p>
<p align="center"><a href="../node/961#Top">Top</a></p><br /><hr />
<!--Next Entity -->
<h1><a name="trigger_multiple">trigger_multiple</a></h1>
<p>This entity triggers a specified target every time its area is entered by players, monsters or pushables.</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Target</span> - Name of event to be triggered when this entity is activated. </p>
<p><span style="font-weight: bold">Name</span> - Name of the trigger</p>
<p><span style="font-weight: bold">Kill target</span> - Remove this entity from the game when triggered. </p>
<p><span style="font-weight: bold">Target Path</span> - </p>
<p><span style="font-weight: bold">Master</span> - This master must be active for the trigger_multiple to work. </p>
<p><span style="font-weight: bold">Sound style</span> - </p>
<p><span style="font-weight: bold">Delay before trigger</span> - The delay in seconds to wait before triggering the target. </p>
<p><span style="font-weight: bold">Message</span> - </p>
<p><span style="font-weight: bold">Delay before reset</span> - Time in seconds before the entity is ready to be re-triggered.</p>
<h3>Flag Properties</h3>
<blockquote><span style="color: #ff0000">(1) Monsters</span> - Allow monsters to activate this entity. <br />
<span style="color: #ff0000">(2) No Clients</span> - Players cannot activate this entity. <br />
<span style="color: #ff0000">(4) Pushables</span> - Allow pushable objects to activate this entity.</blockquote>
<h3>Related Entities</h3>
<p><a href="../node/961#trigger_once">Trigger_once</a><br />
<a href="../node/961#trigger_relay">Trigger_relay</a></p>
<p><span style="font-weight: bold">Notes</span>:<br />None </p>
<p align="center"><a href="../node/961#Top">Top</a></p><br /><hr />
<!--Next Entity -->
<h1><a name="trigger_once">trigger_once</a></h1>
<p>When this entity's area is entered by players, pushable objects or monsters, it triggers its target, but only once.</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Target</span> - Name of event to be triggered when this entity is activated.  </p>
<p><span style="font-weight: bold">Name</span> - Name of the trigger</p>
<p><span style="font-weight: bold">Kill target</span> - Remove this entity from the game when triggered. </p>
<p><span style="font-weight: bold">Target Path</span> - </p>
<p><span style="font-weight: bold">Master</span> - This master must be active for the trigger_multiple to work. </p>
<p><span style="font-weight: bold">Sound style</span> - </p>
<p><span style="font-weight: bold">Delay before trigger</span> - The delay in seconds to wait before triggering the target. </p>
<p><span style="font-weight: bold">Message</span> - </p>
<p><span style="font-weight: bold">Delay before reset</span> - Time in seconds before the entity is ready to be re-triggered.</p>
<h3>Flag Properties</h3>
<blockquote><span style="color: #ff0000">(1) Monsters</span> - Allow monsters to activate this entity. <br />
<span style="color: #ff0000">(2) No Clients</span> - Players cannot activate this entity. <br />
<span style="color: #ff0000">(4) Pushables</span> - Allow pushable objects to activate this entity. </blockquote>
<h3>Related Entities</h3>
<p><a href="../node/961#trigger_multiple">Trigger_multiple</a><br />
<a href="../node/961#trigger_relay">Trigger_relay</a></p>
<p><span style="font-weight: bold">Notes</span>:<br />None</p>
<p align="center"><a href="../node/961#Top">Top</a></p><br /><hr />
<!--Next Entity -->
<h1><a name="trigger_push">trigger_push</a></h1>
<p>When a player, monster or pushable object enters this entity's area, it is pushed in the specified direction and speed.</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Target</span> - Name of event to be triggered when this entity is activated. </p>
<p><span style="font-weight: bold">Name</span> - Trigger to turn on or off. </p>
<p><span style="font-weight: bold">Kill target</span> - Remove this entity from the game when the trigger_once is triggered.</p>
<p><span style="font-weight: bold">Target Path</span> - </p>
<p><span style="font-weight: bold">Master</span> - This master must be active for the trigger_push to work. </p>
<p><span style="font-weight: bold">Sound style</span> - </p>
<p><span style="font-weight: bold">Delay before trigger</span> - The delay in seconds to wait before triggering the target.</p>
<p><span style="font-weight: bold">Message</span> - </p>
<p><span style="font-weight: bold">Pitch Yaw Roll</span> - These values set the direction of the push. </p>
<p><span style="font-weight: bold">Speed of push</span> - The speed to push at in units per second.</p>
<h3>Flag Properties</h3>
<blockquote><span style="color: #ff0000">(1) Once Only</span> - Makes the entity have effect once only.<br />
<span style="color: #ff0000">(2) Start Off</span> - Start off and wait to be triggered on. <br />
<span style="color: #ff0000">(4) Pushables</span> - Allow pushable objects to be affected this entity. </blockquote>
<h3>Related Entities</h3>
<p><a href="../node/955#func_conveyor">Func_conveyor</a></p>
<p><span style="font-weight: bold">Notes</span>:<br />None </p>
<p align="center"><a href="../node/961#Top">Top</a></p><br /><hr />
<!--Next Entity -->
	 <h1><a name="trigger_relay">trigger_relay</a></h1>
<p>This entity acts as a relay between an event and its target. Its main advantage is that it can send a specific trigger state to its target.</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - Name of the trigger</p>
<p><span style="font-weight: bold">Target</span> - Name of event to be triggered when this entity is activated.  </p>
<p><span style="font-weight: bold">Delay before trigger</span> - The delay in seconds to wait before triggering the target. </p>
<p><span style="font-weight: bold">Trigger State</span> - Off (0), On (1), or Toggle (2). Toggle mode is what normal triggers use. On and Off will only trigger their targets on or off respectively, and will not affect targets that are already on or off.</p>
<h3>Flag Properties</h3>
<blockquote><span style="color: #ff0000">(1) Remove On fire</span> - After triggering its targets, this entity will be removed. </blockquote>
<h3>Related Entities</h3>
<p><a href="../node/956#game_team_master">Game_team_master</a><br />
<a href="../node/959#multimanager">Multimanager</a><br />
<a href="../node/961#trigger_multiple">Trigger_multiple</a><br />
<a href="../node/961#trigger_once">Trigger_once</a></p>
<p><span style="font-weight: bold">Notes</span>:<br />None </p>
<p align="center"><a href="../node/961#Top">Top</a></p><br /><hr />
<!--Next Entity -->
<h1><a name="trigger_teleport">trigger_teleport</a></h1>
<p>This entity will teleport things in its area </p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Target</span> - The name of the info_teleport_destination to teleport to.</p> 
<p><span style="font-weight: bold">Name</span> - Name of the trigger, if you need to trigger it using another trigger.</p>
<p><span style="font-weight: bold">Kill target</span> - Remove this entity from the game when triggered. </p>
<p><span style="font-weight: bold">Target Path</span> - </p>
<p><span style="font-weight: bold">Master</span> - This master must be active for the trigger_multiple to work.</p>
<p><span style="font-weight: bold">Sound style</span> - </p>
<p><span style="font-weight: bold">Delay before trigger</span> - The delay in seconds to wait before triggering the target. </p>
<p><span style="font-weight: bold">Message</span> - </p>
<h3>Flag Properties</h3>
<blockquote><span style="color: #ff0000">(1) Monsters</span> - Allow monsters to activate this entity. <br />
<span style="color: #ff0000">(2) No Clients</span> - Players cannot activate this entity. <br />
<span style="color: #ff0000">(4) Pushables</span> - Allow pushable objects to activate this entity.</blockquote>
<h3>Related Entities</h3>
<p><a href="../node/957#info_teleport_destination">Info_teleport_destination</a></p>
<p><span style="font-weight: bold">Notes</span>:<br />To make a trigger_teleport toggleable, use a multisource master. Trigger this master with a button or multi_manager or something to activate it. When the master is inactive, the teleporter will be as well.</p>
<p align="center"><a href="../node/961#Top">Top</a></p><br /><hr />
<!--Next Entity -->
<h1><a name="trigger_transition">trigger_transition</a></h1>
<p>This entity creates an area in which the player must be for an associated trigger_changelevel to work.</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - Provide a name so that the entity can be associated with a trigger_changelevel.</p>
<h3>Flag Properties</h3>
<blockquote>None</blockquote>
<h3>Related Entities</h3>
<p><a href="../node/957#info_landmark">Info_landmark</a><br />
<a href="../node/961#trigger_changelevel">Trigger_changelevel</a></p>
<p><span style="font-weight: bold">Notes</span>:<br />None</p>
<p align="center"><a href="../node/961#Top">Top</a></p><br /><hr />
<p align="center">Next Entity Guide <a href="../node/962">Weapon Entities</a></p>
<br />
<hr />
	<!--EOF@345-->	</ul><h1 id="962" name="962" class="book-h3">Weapon</h1><ul><!-- 
Submitted by Andy Nov 2004 
Updated XHTML FEB 05 - Andy
-->
<h1><a name="Top">Half-Life Weapon Entities</a></h1>
<!-- Start description -->
<ul>
<li><a href="../node/962#weapon_357">Weapon_357</a></li>
<li><a href="../node/962#weapon_9mmAR">Weapon_9mmAR </a></li>
<li><a href="../node/962#weapon_9mmhandgun">Weapon_9mmhandgun </a></li>
<li><a href="../node/962#weapon_crossbow">Weapon_crossbow</a></li>
<li><a href="../node/962#weapon_crowbar">Weapon_crowbar </a></li>
<li><a href="../node/962#weapon_egon">Weapon_egon </a></li>
<li><a href="../node/962#weapon_gauss">Weapon_gauss </a></li>
<li><a href="../node/962#weapon_handgrenade">Weapon_handgrenade </a></li>
<li><a href="../node/962#weapon_hornetgun">Weapon_hornetgun</a></li>
<li><a href="../node/962#weapon_rpg">Weapon_rpg </a></li>
<li><a href="../node/962#weapon_satchel">Weapon_satchel</a></li>
<li><a href="../node/962#weapon_shotgun">Weapon_shotgun </a></li>
<li><a href="../node/962#weapon_snark">Weapon_snark</a></li>
<li><a href="../node/962#weapon_tripmine">Weapon_tripmine </a></li></ul>
<hr />
<h1><a name="weapon_357">weapon_357</a></h1>
<p>The 'Dirty Harry" weapon.</p>
<center><img src="../content/half-life/entimgs/weapon/w_357.jpg" width="350" height="200" alt="357" title="357" /></center>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - The 'name' of the entity.</p>
<p><span style="font-weight: bold">Pitch Roll Yaw(YZX)</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">Target</span> - When an entity is picked up, it triggers the entity with the name specified by Target.</p>
<p><span style="font-weight: bold">Delay before trigger</span> - The delay in seconds before the 'Target is triggered after the weapon is 'picked up' by the player.</p>
<p><span style="font-weight: bold">Kill Target</span> - Object to kill when weapon is picked up.</p>
<h3>Flags:</h3>
<blockquote><span style="color: #ff0000">(2048) Not in Deathmatch</span> - If this flag is set on, the entity will not appear in deathmatch games.</blockquote>
<h3>Related Entities</h3>
<p><a href="../node/953#ammo_357">Ammo_357</a></p>
<p><span style="font-weight: bold">Notes</span>:<br />You can trigger an event when this item is picked up by giving it a Target value and using that same value as the Name of the event to be triggered.</p>
<p align="center"><a href="../node/962#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="weapon_9mmAR">weapon_9mmAR</a></h1>
<p>The standard machine gun.</p>
<center><img src="../content/half-life/entimgs/weapon/w_9mmAR.jpg" width="350" height="200" alt="9mm AR" title="9mm AR" /></center>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - The 'name' of the entity.</p>
<p><span style="font-weight: bold">Pitch Roll Yaw(YZX)</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">Target</span> - When an entity is picked up, it triggers the entity with the name specified by Target.</p>
<p><span style="font-weight: bold">Delay before trigger</span> - The delay in seconds before the 'Target is triggered after the weapon is 'picked up' by the player.</p>
<p><span style="font-weight: bold">Kill Target</span> - Object to kill when weapon is picked up.</p>
<h3>Flags:</h3>
<blockquote> <span style="color: #ff0000">(2048) Not in Deathmatch</span> - If this flag is set on, the entity will not appear in deathmatch games.</blockquote>
<h3>Related Entities</h3>
<p><a href="../node/953#ammo_9mmAR">Ammo_9mmAR</a><br />
<a href="../node/953#ammo_9mmbox">Ammo_9mmbox</a><br />
<a href="../node/953#ammo_9mmclip">Ammo_9mmclip</a></p>
<p><span style="font-weight: bold">Notes</span>:<br />You can trigger an event when this item is picked up by giving it a Target value and using that same value as the Name of the event to be triggered.</p>
<p align="center"><a href="../node/962#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="weapon_9mmhandgun">weapon_9mmhandgun</a></h1>
<p>Barney's standard weapon.</p>
<center><img src="../content/half-life/entimgs/weapon/w_9mmhandgun.jpg" width="350" height="200" alt="Hand Gun" title="Hand Gun" /></center>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - The 'name' of the entity.</p>
<p><span style="font-weight: bold">Pitch Roll Yaw(YZX)</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">Target</span> - When an entity is picked up, it triggers the entity with the name specified by Target.</p>
<p><span style="font-weight: bold">Delay before trigger</span> - The delay in seconds before the 'Target is triggered after the weapon is 'picked up' by the player.</p>
<p><span style="font-weight: bold">Kill Target</span> - Object to kill when weapon is picked up.</p>
<h3>Flags:</h3>
<blockquote><span style="color: #ff0000">(2048) Not in Deathmatch</span> - If this flag is set on, the entity will not appear in deathmatch games.</blockquote>
<h3>Related Entities</h3>
<p><a href="../node/953#ammo_9mmclip">Ammo_9mmclip</a><br />
<a href="../node/953#ammo_9mmAR">Ammo_9mmAR</a><br />
<a href="../node/953#ammo_9mmbox">Ammo_9mmbox	</a></p>
<p><span style="font-weight: bold">Notes</span>:<br />You can trigger an event when this item is picked up by giving it a Target value and using that same value as the Name of the event to be triggered.</p>
<p align="center"><a href="../node/962#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="weapon_crossbow">weapon_crossbow</a></h1>
<p>The 'Crossbow" weapon.</p>
<center><img src="../content/half-life/entimgs/weapon/w_crossbow.jpg" width="350" height="200" alt="Crossbow" title="Crossbow" /></center>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - The 'name' of the entity.</p>
<p><span style="font-weight: bold">Pitch Roll Yaw(YZX)</span> - Sets the pitch (up / down), yaw (left / right)  and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds  to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">Target</span> - When an entity is picked up, it triggers the entity with the name specified by Target.</p>
<p><span style="font-weight: bold">Delay before trigger</span> - The delay in seconds before the 'Target is triggered after the weapon is 'picked up' by the player.</p>
<p><span style="font-weight: bold">Kill Target</span> - Object to kill when weapon is picked up.</p>
<h3>Flags:</h3>
<blockquote><span style="color: #ff0000">(2048) Not in Deathmatch</span> - If this flag is set on, the entity will not appear in  deathmatch games.</blockquote>
<h3>Related Entities</h3>
<p><a href="../node/953#ammo_crossbow">Ammo_crossbow</a></p>
<p><span style="font-weight: bold">Notes</span>:<br />You can trigger an event when this item is picked up by giving it a Target value and using that same value as the Name of the event to be triggered.</p>
<p align="center"><a href="../node/962#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="weapon_crowbar">weapon_crowbar</a></h1>
<p>The standard issue Crowbar.</p>
<center><img src="../content/half-life/entimgs/weapon/w_crowbar.jpg" width="350" height="200" alt="Crowbar" title="Crowbar" /></center>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - The 'name' of the entity.</p>
<p><span style="font-weight: bold">Pitch Roll Yaw(YZX)</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">Target</span> - When an entity is picked up, it triggers the entity with the name specified by Target.</p>
<p><span style="font-weight: bold">Delay before trigger</span> - The delay in seconds before the 'Target is triggered after the weapon is 'picked up' by the player.</p>
<p><span style="font-weight: bold">Kill Target</span> - Object to kill when weapon is picked up.</p>
<h3>Flags:</h3>
<blockquote><span style="color: #ff0000">(2048) Not in Deathmatch</span> - If this flag is set on, the entity will not appear in deathmatch games.</blockquote>
<h3>Related Entities</h3>None<br />
<p><span style="font-weight: bold">Notes</span>:<br />You can trigger an event when this item is picked up by giving it a Target value and using that same value as the Name of the event to be triggered.</p>
<p align="center"><a href="../node/962#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="weapon_egon">weapon_egon</a></h1>
<p>The standard Egon Backpack.</p>
<center><img src="../content/half-life/entimgs/weapon/w_egon.jpg" width="350" height="200" alt="Egon" title="Egon" /></center>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - The 'name' of the entity.</p>
<p><span style="font-weight: bold">Pitch Roll Yaw(YZX)</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds  to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">Target</span> - When an entity is picked up, it triggers the entity with the name specified by Target.</p>
<p><span style="font-weight: bold">Delay before trigger</span> - The delay in seconds before the 'Target is triggered after the weapon is 'picked up' by the player.</p>
<p><span style="font-weight: bold">Kill Target</span> - Object to kill when weapon is picked up.</p>
<h3>Flags:</h3>
<blockquote><span style="color: #ff0000">(2048) Not in Deathmatch</span> - If this flag is set on, the entity will not appear in deathmatch games.</blockquote>
<h3>Related Entities</h3>
<p><a href="../node/953#ammo_gaussclip">Ammo_gaussclip</a></p>
<p><span style="font-weight: bold">Notes</span>:<br />You can trigger an event when this item is picked up by giving it a Target value and using that same value as the Name of the event to be triggered.</p>
<p align="center"><a href="../node/962#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="weapon_gauss">weapon_gauss</a></h1>
<p>The standard Gauss Gun.</p>
<center><img src="../content/half-life/entimgs/weapon/w_gauss.jpg" width="350" height="200" alt="Gauss" title="Gauss" /></center>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - The 'name' of the entity.</p>
<p><span style="font-weight: bold">Pitch Roll Yaw(YZX)</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">Target</span> - When an entity is picked up, it triggers the entity with the name specified by Target.</p>
<p><span style="font-weight: bold">Delay before trigger</span> - The delay in seconds before the 'Target is triggered after the weapon is 'picked up' by the player.</p>
<p><span style="font-weight: bold">Kill Target</span> - Object to kill when weapon is picked up.</p>
<h3>Flags:</h3>
<blockquote><span style="color: #ff0000">(2048) Not in Deathmatch</span> - If this flag is set on, the entity will not appear in deathmatch games.</blockquote>
<h3>Related Entities</h3>
<p><a href="../node/953#ammo_gauss">Ammo_gauss</a></p>
<p><span style="font-weight: bold">Notes</span>:<br />You can trigger an event when this item is picked up by giving it a Target value and using that same value as the Name of the event to be triggered. events targetname value.</p>
<p align="center"><a href="../node/962#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="weapon_handgrenade">weapon_handgrenade</a></h1>
<p>The Handgrenade.</p>
<center><img src="../content/half-life/entimgs/weapon/w_grenade.jpg" width="350" height="200" alt="Hand Grenade " title="Hand Grenade" /></center>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - The 'name' of the entity.</p>
<p><span style="font-weight: bold">Pitch Roll Yaw(YZX)</span> - Sets the pitch (up / down), yaw (left / right)  and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">Target</span> - When an entity is picked up, it triggers the entity with the  name specified by Target.</p>
<p><span style="font-weight: bold">Delay before trigger</span> - The delay in seconds before the 'Target is triggered after the weapon is 'picked up' by the player.</p>
<p><span style="font-weight: bold">Kill Target</span> - Object to kill when weapon is picked up.</p>
<h3>Flags:</h3>
<blockquote><span style="color: #ff0000">(2048) Not in Deathmatch</span> - If this flag is set on, the entity will not appear in  deathmatch games.</blockquote>
<h3>Related Entities</h3>
<p><a href="../node/960#monster_handgrenade">Monster_handgrenade</a></p>
<p><span style="font-weight: bold">Notes</span>:<br />You can trigger an event when this item is picked up by giving it a Target value and using that same value as the Name of the event to be triggered.</p>
<p align="center"><a href="../node/962#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="weapon_hornetgun">weapon_hornetgun</a></h1>
<p>The Alien_Grunt weapon.</p>
<center><img src="../content/half-life/entimgs/weapon/w_hornetgun.jpg" width="350" height="200" alt="Hornet Gun" title="Hornet Gun" /></center>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - The 'name' of the entity.</p>
<p><span style="font-weight: bold">Pitch Roll Yaw(YZX)</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">Target</span> - When an entity is picked up, it triggers the entity with the name specified by Target.</p>
<p><span style="font-weight: bold">Delay before trigger</span> - The delay in seconds before the 'Target is triggered after the weapon is 'picked up' by the player.</p>
<p><span style="font-weight: bold">Kill Target</span> - Object to kill when weapon is picked up.</p>
<h3>Flags:</h3>
<blockquote><span style="color: #ff0000">(2048) Not in Deathmatch</span> - If this flag is set on, the entity will not appear in deathmatch games.</blockquote>
<h3>Related Entities</h3>
<p><a href="../node/960#monster_alien_grunt">Monster_alien_grunt</a></p>
<p><span style="font-weight: bold">Notes</span>:<br />The weapon used by monster_alien_grunt.<br />
  You can trigger an event when this item is picked up by giving it a Target value and using that same value as the Name of the event to be triggered.</p>
<p align="center"><a href="../node/962#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="weapon_rpg">weapon_rpg</a></h1>
<p>Rocket Propelled Grenade.</p>
<center><img src="../content/half-life/entimgs/weapon/w_rpg.jpg" width="350" height="200" alt="RPG" title="RPG" /></center>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - The 'name' of the entity.</p>
<p><span style="font-weight: bold">Pitch Roll Yaw(YZX)</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">Target</span> - When an entity is picked up, it triggers the entity with the name specified by Target.</p>
<p><span style="font-weight: bold">Delay before trigger</span> - The delay in seconds before the 'Target is triggered after the weapon is 'picked up' by the player.</p>
<p><span style="font-weight: bold">Kill Target</span> - Object to kill when weapon is picked up.</p>
<h3>Flags:</h3>
<blockquote><span style="color: #ff0000">(2048) Not in Deathmatch</span> - If this flag is set on, the entity will not appear in deathmatch games.</blockquote>
<h3>Related Entities</h3>
<p><a href="../node/953#ammo_rpgclip">Ammo_rpgclip</a></p>
<p><span style="font-weight: bold">Notes</span>:<br />You can trigger an event when this item is picked up by giving it a Target value and using that same value as the Name of the event to be triggered.</p>
<p align="center"><a href="../node/962#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="weapon_satchel">Weapon_satchel</a></h1>
<p>The Backpack Bomb.</p>
<center><img src="../content/half-life/entimgs/weapon/w_satchel.jpg" width="350" height="200" alt="Satchel" title="Satchel" /></center>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - The 'name' of the entity.</p>
<p><span style="font-weight: bold">Pitch Roll Yaw(YZX)</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">Target</span> - When an entity is picked up, it triggers the entity with the name specified by Target.</p>
<p><span style="font-weight: bold">Delay before trigger</span> - The delay in seconds before the 'Target is triggered after the weapon is 'picked up' by the player.</p>
<p><span style="font-weight: bold">Kill Target</span> - Object to kill when weapon is picked up.</p>
<h3>Flags:</h3>
<blockquote><span style="color: #ff0000">(2048) Not in Deathmatch</span> - If this flag is set on, the entity will not appear in deathmatch games.</blockquote>
<h3>Related Entities</h3>None<br />
<p><span style="font-weight: bold">Notes</span>:<br />You can trigger an event when this item is picked up by giving it a Target value and using that same value as the Name of the event to be triggered.</p>
<p align="center"><a href="../node/962#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="weapon_shotgun">weapon_shotgun</a></h1>
<p>Shotgun.</p>
<center><img src="../content/half-life/entimgs/weapon/w_shotgun.jpg" width="350" height="200" alt="Shotgun" title="Shotgun" /></center>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - The 'name' of the entity.</p>
<p><span style="font-weight: bold">Pitch Roll Yaw(YZX)</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">Target</span> - When an entity is picked up, it triggers the entity with the name specified by Target.</p>
<p><span style="font-weight: bold">Delay before trigger</span> - The delay in seconds before the 'Target is triggered after the weapon is 'picked up' by the player.</p>
<p><span style="font-weight: bold">Kill Target</span> - Object to kill when weapon is picked up.</p>
<h3>Flags:</h3>
<blockquote><span style="color: #ff0000">(2048) Not in Deathmatch</span> - If this flag is set on, the entity will not appear in deathmatch games.</blockquote>
<h3>Related Entities</h3>
<p><a href="../node/953#ammo_buckshot">Ammo_buckshot</a></p>
<p><span style="font-weight: bold">Notes</span>:<br /> You can trigger an event when this item is picked up by giving it a Target value and using that same value as the Name of the event to be triggered.</p>
<p align="center"><a href="../node/962#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="weapon_snark">weapon_snark</a></h1>
<p>These nasty little tikes are fast and furious.</p>
<center><img src="../content/half-life/entimgs/weapon/w_snark.jpg" width="350" height="200" alt="Snark" title="Snark" /></center>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - The 'name' of the entity.</p>
<p><span style="font-weight: bold">Pitch Roll Yaw(YZX)</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">Target</span> - When an entity is picked up, it triggers the entity with the name specified by Target.</p>
<p><span style="font-weight: bold">Delay before trigger</span> - The delay in seconds before the 'Target is triggered after the weapon is 'picked up' by the player.</p>
<p><span style="font-weight: bold">Kill Target</span> - Object to kill when weapon is picked up.</p>
<h3>Flags:</h3>
<blockquote> <span style="color: #ff0000">(2048) Not in Deathmatch</span> - If this flag is set on, the entity will not appear in deathmatch games.</blockquote>
<h3>Related Entities</h3>None<br />
<p><span style="font-weight: bold">Notes</span>:<br />You can trigger an event when this item is picked up by giving it a Target value and using that same value as the Name of the event to be triggered.</p>
<p align="center"><a href="../node/962#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="weapon_tripmine">weapon_tripmine</a></h1>
<p>Mine with it's own built in laser.</p>
<center><img src="../content/half-life/entimgs/weapon/w_tripmine.jpg" width="350" height="200" alt="Tripmine" title="Tripmine" /></center>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - The 'name' of the entity.</p>
<p><span style="font-weight: bold">Pitch Roll Yaw(YZX)</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<p><span style="font-weight: bold">Target</span> - When an entity is picked up, it triggers the entity with the name specified by Target.</p>
<p><span style="font-weight: bold">Delay before trigger</span> - The delay in seconds before the 'Target is triggered after the weapon is 'picked up' by the player.</p>
<p><span style="font-weight: bold">Kill Target</span> - Object to kill when weapon is picked up.</p>
<h3>Flags:</h3>
<blockquote> <span style="color: #ff0000">(2048) Not in Deathmatch</span> - If this flag is set on, the entity will not appear in deathmatch games.</blockquote>
<h3>Related Entities</h3>None<br />
<p><span style="font-weight: bold">Notes</span>:<br />  You can trigger an event when this item is picked up by giving it a Target value and using that same value as the Name of the event to be triggered.</p>
<p align="center"><a href="../node/962#Top">Top</a></p><br /><hr />
<p class="highlight">Next Entity Guide <a href="../rustent/xen.html">Xen Entities</a></p>
<br />
<hr />
<!--EOF@250--></ul><h1 id="963" name="963" class="book-h3">Xen</h1><ul><!-- 
Submitted by Andy Nov  2004 
Updated XHTML FEB 05 - Andy
-->
<h1><a name="Top">Half-Life Xen Entities</a></h1>
<ul><li><a href="/node/963#xen_hair">Xen_hair</a></li>
<li><a href="../node/963#xen_plantlight">Xen_plantlight</a></li>
<li><a href="../node/963#xen_spore_large">Xen_spore_large</a></li>
<li><a href="../node/963#xen_spore_medium">Xen_spore_medium</a></li>
<li><a href="../node/963#xen_spore_small">Xen_spore_small</a></li>
<li><a href="../node/963#xen_tree">Xen_tree</a></li></ul>
<hr />
<h1><a name="xen_hair">xen_hair</a></h1>
<p>Creates a little swaying grass thing... that looks a bit like a hair. </p>
<center><img src="../content/half-life/entimgs/xen/hair.jpg" width="350" height="200" alt="Hair" title="Hair" /></center>
<h3>Properties</h3>
<p><span style="font-weight: bold">Name</span> - The Name of the entity for triggering.</p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows: </p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade)</pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive</pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. 'Solid' mode simply needs a non '0' value to work, while in other modes translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<h3>Flags:</h3>
<blockquote><span style="color: #ff0000">(1)Sync Movement</span> - If set, all the hairs in the map will move in sync with each other.</blockquote>
<h3>Related Entities</h3>None<br />
<p><span style="font-weight: bold">Notes</span>:<br />None </p>
<p align="center"><a href="../node/963#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="xen_plantlight">xen_plantlight</a></h1>
<p>Spawns a shy light-emitting plant. </p>
<center><img src="../content/half-life/entimgs/xen/plant_light.jpg" width="350" height="200" alt="Plant Light" title="Plant Light" /></center>
<h3>Properties</h3>
<p><span style="font-weight: bold">Target</span> - When an entity is activated, it triggers the entity with the name specified by Target.</p>
<p><span style="font-weight: bold">Name</span> - The Name of the entity for triggering.</p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows: </p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade)</pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive</pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. 'Solid' mode simply needs a non '0' value to work, while in other modes translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<h3>Flags:</h3>
<blockquote>None.</blockquote>
<h3>Related Entities</h3>None<br />
<p><span style="font-weight: bold">Notes</span>:<br />To make the plantlight actually control a light, set it to target the 'Name' of a light entity.<br /> The reason you would want to do this is so that in a dark area, if the player approaches the plant, the lights go out.<br /> Set the xen_plantlight Target to the Name of the light.<br />  You can give the plant a little halo by setting Render Color (255 255 255) and  Render Amount (try 200). The Plantlight will not emit light, but these settings make it look as though it does.</p>
<p align="center"><a href="../node/963#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="xen_spore_large">xen_spore_large</a></h1>
<p>Spawns a large sack like thing with legs. </p>
<center><img src="../content/half-life/entimgs/xen/spore_large.jpg" width="350" height="200" alt="Spore Large" title="Spore Large" /></center>
<h3>Properties</h3>
<p><span style="font-weight: bold">Target</span> - When an entity is activated, it triggers the entity with the name specified by Target.</p>
<p><span style="font-weight: bold">Name</span> - The Name of the entity for triggering.</p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows: </p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade)</pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive</pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255.  'Solid' mode simply needs a non '0' value to work, while in other modes translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<h3>Flags:</h3>
<blockquote>None.</blockquote>
<h3>Related Entities</h3>None<br />
<p><span style="font-weight: bold">Notes</span>:<br />This entity has a coded animation that makes it look like it's breathing.</p>
<p align="center"><a href="../node/963#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="xen_spore_medium">xen_spore_medium</a></h1>
<p>Spawns a medium sack like thing with legs. </p>
<center><img src="../content/half-life/entimgs/xen/spore_medium.jpg" width="350" height="200" alt="Spore medium" title="Spore Medium " /></center>
<h3>Properties</h3>
<p><span style="font-weight: bold">Target</span> - When an entity is activated, it triggers the entity with the name specified by Target.</p>
<p><span style="font-weight: bold">Name</span> - The Name of the entity for triggering.</p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows: </p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade)</pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive</pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. 'Solid' mode simply needs a non '0' value to work, while in other modes translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<h3>Flags:</h3>
<blockquote>None.</blockquote>
<h3>Related Entities</h3>None<br />
<p><span style="font-weight: bold">Notes</span>:<br />None</p>
<p align="center"><a href="../node/963#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
	 <h1><a name="xen_spore_small">xen_spore_small</a></h1>
<p>Spawns a medium sack like thing with legs. </p>
<center><img src="../content/half-life/entimgs/xen/spore_small.jpg" width="350" height="200" alt="Spore Small" title="Spore Small" /></center>
<h3>Properties</h3>
<p><span style="font-weight: bold">Target</span> - When an entity is activated, it triggers the entity with the name specified by Target.</p>
<p><span style="font-weight: bold">Name</span> - The Name of the entity for triggering.</p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows: </p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade)</pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive</pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. 'Solid' mode simply needs a non '0' value to work, while in other modes translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<h3>Flags:</h3>
<blockquote>None.</blockquote>
<h3>Related Entities</h3>None<br />
<p><span style="font-weight: bold">Notes</span>:<br />None </p>
<p align="center"><a href="../node/963#Top">Top</a></p><br /><hr />
<!-- Next Entity -->
<h1><a name="xen_tree">xen_tree</a></h1>
<p>Spawns a tree with attitude. </p>
<center><img src="../content/half-life/entimgs/xen/tree.jpg" width="350" height="200" alt="Tree" title="Tree" /></center>
<h3>Properties</h3>
<p><span style="font-weight: bold">Target</span> - When an entity is activated, it triggers the entity with the name specified by Target.</p>
<p><span style="font-weight: bold">Name</span> - The Name of the entity for triggering.</p>
<p><span style="font-weight: bold">Render FX</span> -  The options are as follows: </p>
<pre>0 = Normal
1 = Slow Pulse
2 = Fast Pulse
3 = Slow Wide Pulse
4 = Fast Wide Pulse
5 = Slow Fade Away
6 = Fast Fade Away
7 = Slow Become Solid
8 = Fast Become Solid
9 = Slow Strobe
10 = Fast Strobe
11 = Faster Strobe
12 = Slow Flicker
13 = Fast Flicker
14 = Constant Glow
15 = Distort
16 = Hologram (Distort and Fade)</pre>
<p><span style="font-weight: bold">Render Mode</span> -  Options are:</p>
<pre>0 = Normal
1 = Color
2 = Texture
3 = Glow
4 = Solid
5 = Additive</pre>
<p><span style="font-weight: bold">FX Amount</span> - The value of the Render Mode, between 0 and 255. 'Solid' mode simply needs a non '0' value to work, while in other modes translucency is controlled by this value.</p>
<p><span style="font-weight: bold">FX Color</span> - An RGB value that controls the colour of the object  rendering. Only Color and Glow Render Modes use the Render Color property, but other entities also use it under different SmartEdit names.</p>
<p><span style="font-weight: bold">Pitch Roll Yaw</span> - Sets the pitch (up / down), yaw (left / right) and roll (bank) respectively. The compass in WorldCraft / Hammer corresponds to Yaw. The settings are not always (or not all) used.</p>
<h3>Flags:</h3>
<blockquote>None</blockquote>
<h3>Related Entities</h3>None<br />
<p><span style="font-weight: bold">Notes</span>:<br />The tree acts like a tentacle, Great for defending an area if used in groups of 4.</p>
<p align="center"><a href="../node/963#Top">Top</a></p><br /><hr />
<p align="center">Next Entity Guide <a href="../node/953">Ammo Entities</a></p>
<br />
<hr />
	<!--EOF@254--></ul><h1 id="35" name="35" class="book-h2">Half-Life 1 Tutorials</h1><ul><h1>RUST's Halflife Tutorials</h1></ul><h1 id="194" name="194" class="book-h3">Big Block Method of Error Finding</h1><ul><p><b>Big Block Method of Error Finding</b></p>
<p>What is the BBMoEF? Basically its a method of breaking your map down into different peices to determine which part is causing your problem.</p>
<p>With an unknown or unusual error, there could be a  million different potential causes - too many entities of this type, map geometry too complex, this or that memory being maxed out, etc.</p>
<p>Assuming your problem has a single cause, you can strategically eliminate the suspects through trial and error - get rid of half your "stuff" to see which half is causing the problem, then try half of half, and <i>keep winnowing down until you isolate the problem</i>. This is similar to the "Big Block Method of Leak Finding", except you are looking objects/entities causing an error rather than a leak.</p>
<p>Here is an <i>oversimplified</i> breakdown:<br />
  <img src="http://www3.hmc.edu/~nalger/BBMoEF_s.png"> </p>
<p>Now lets take an example - lets say Jim has an unknown error. To solve this, he decides to use the BBMoEF.</p>
<p>-----</p>
<p>First Jim hides all the entities in the map and recompiles with visible objects only. For the sake of example, lets say that <b>when Jim got rid of all the entities, the error went away</b>. Now Jim KNOWS that the <b>error is with some or all of the entities</b>, and in the above diagram He blocks off all the worldspawn stuff:<br />
  <img src="http://www3.hmc.edu/~nalger/BBMoEF_1_s.png">  </p>
<p>Next, Jim hides all the point entities, and the error goes away. Thus Jim knows that the point entities must be the problem and can focus only on them.<br />
  <img src="http://www3.hmc.edu/~nalger/BBMoEF_2_s.png"></p>
<p>After that, Jim hides half of his point entities of which (for the sake of example) they are all of types that are in the diagram -- Jim hides all the infrastructure entities and light entities, but the error remains. Therefore Jim can cross off all the infrastructure and light entities from the list of potential error-causers.<br />
  <img src="http://www3.hmc.edu/~nalger/BBMoEF_3_s.png">  </p>
<p>Finally, Jim <b>hides all the sound entities but the error remains</b>. By deduction, what can Jim conclude is causing his errors?</p>
<p><a href="http://www3.hmc.edu/~nalger/BBMoEF_4_s.png">Answer Here</a></p>
<p>-----</p>
<p>In real life it may not be so cookie-cutter as this, and there may be multiple factors contributing to the problem, or entire groups may be causing the problem, but this process is basically a good strategy to get an idea for whats wrong with your map.</p>
</ul><h1 id="3" name="3" class="book-h3">Chairs, Scientists and Barneys</h1><ul><!-- by Merl (merlinis@bigpond.net.au) 2001
     by Gard (stephen@geol.uwa.edu.au) 2003
     Format Updated Feb 05 Andy -->

<h3>Half-Life</h3>
<blockquote>
       Chairs, Scientists and Barneys - 
        <a href="mailto:MrMan@mrman58.freeserve.co.uk">Venomus</a>
</blockquote>
&nbsp;
<center>
    <img src="content/half-life/tutorials/chair/chair1.gif" width="256" height="192" alt="Sci Chair" />
    <img src="content/half-life/tutorials/chair/chair2.gif" width="256" height="192" alt="Barney Chair" />
</center>
<p>
From the title of this tutorial you will probably assume that I'm just going to tell you how get scientists to sit in a chair. Getting scientist bums on seats, so to speak, is a common query among mappers new to Half-Life, and it is not as simple as it may sound (there are a few pitfalls you should be aware of). Even so, it is quite easy as a tutorial. What I will show you afterwards is a little more complex and interesting: a rather cool setpiece in which a barney sits in his swivelling chair, occasionally rotating fluidly in it. You may remember it from the beginning of Half-Life (just after you finish the train ride).
</p>
<p>
Throughout these tutorials you may notice me paying an obsessive amount of attention to unit-precise placement of entities and brushes. This is necessary to avoid your scientists and barneys ending up stupidly embedded in the furniture.
</p>
<p>
1.) As promised, I will first just show you how to make scientists simply sit in chairs, industriously typing away or something. First make yourself a nice chair. 99% of the time this seems to be the 'Chair, black' prefab in the 'random objects' prefab library of WorldCraft. This is all right for some themes, but remember you can always make your own chair! If you want a scientists feet to rest on the floor and his arse to be firmly planted on the seat, make the top of the seat (ie: the surface that you would sit on) 18 units above the floor. The 'Chair, black' prefab is 22 units from bottom to top of seat, but its only worth shortening if you are really pedantic!
</p>
<p>
2.) Now we will create the scientist who sits in the chair. There are two ways of doing this. One is to use the convenient <a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/33">monster_sitting_scientist</a>. The other is to use a <a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/33">scripted_sequence</a> and an ordinary <a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/33">monster_scientist</a>. A monster_sitting_scientist will cycle randomly through about 3 sitting animations in which he types, looks thoughtful and is generally hard at work. This is probably what you will want most of the time. The scientist model has only one other sitting animation, in which he is supposedly drinking coffee. If you wanted a scientist to play this animation you would use a scripted_sequence and monster_scientist.
</p>
<p>
When using the monster_sitting_scientist for the first time, the main cause of frustration is that the origins of his sitting animations are screwed up. Besides this, they seem to sink through brush entities. This usually causes the sitting scientist to end up half buried in the floor, even after many futile attempts to shift the chair a bit, move the scientist higher up etc.
</p>
<p>
To stop this happening, we will use a small clip brush, taking care in its placement and that of the scientist. First place the chair where you want it and turn it into a <a href="book/view/619#func_wall">func_wall</a>. This is not always necessary but saves us time and patience because the scientist will not get stuck on it where we don't want him to. Create a monster_sitting_scientist and place him high enough above the chair to be clear of it. Now move him so that the edge of his bounding box is in line with the edge of the seat (see screenshot).
</p>
<p>
Now for the clip brush. Create a brush in the shape of a small cube or similar (eg: 4x4x4) and cover it with the CLIP texture. This will make the brush invisible in-game, but it will however block the monster_sitting_scientist so that he rests on the clip brush. Make sure you leave the clip brush as a world brush (ie: don't make it an entity). Move the clip brush so that its upper surface is exactly 16 units above the upper surface of the seat. Any higher and the scientist will float slightly above his seat, any lower and the scientist will be more noticeably buried in the seat (he will already be slightly buried). Check that the monster_sitting_scientist is facing the right direction, if not adjust his Pitch Yaw Roll (angles) accordingly. Then you are done! The screenshot below shows more clearly what I have said:
</p>
<center>
<img src="content/half-life/tutorials/chair/chair3_new.jpg" width="450" height="365" alt="Clip Brush" />
</center>
<p>
3.) If you want a scientist to sit with one of the animations not shown in a monster_sitting_scientist, you will need a monster_scientist in combination with a scripted_sequence. First create a monster_scientist and place him out of the way, it does not matter where but the player should preferably not be able to see him when the map loads. Give him a Name (targetname) such as sitting_scientist (it's late and I'm tired :) .
</p>
<p>
Create a scripted_sequence and place it so that the edge of its bounding box is in line with the edge of the seat (see screenshot). The animation 'coffee' does not have its origin displaced like the other sitting animations. This makes things somewhat simpler. Place the scripted_sequence so that the center of its bounding box is exactly 20 units above the upper surface of the seat (see screenshot).
</p>   
<center>
<img src="content/half-life/tutorials/chair/chair4_new.jpg" width="450" height="365" alt=" Sequence position" />
</center>
<p>
Give the scripted_sequence the following keyvalues:
<ul type="square">
<li>Target Monster (m_iszEntity): this will be the Name (targetname) of the target monster_scientist, in this case sitting_scientist</li>
<li>Idle Animation (m_iszIdle): this is the name of the animation to play, probably 'coffee' (see note below)</li>
<li>Search Radius (m_flRadius): you should not place the target monster_scientist too far from the scripted_sequence, so that it is within, say 512 units. But if you have to place it further away then increase this accordingly</li>
<li>Move to Position (f_MoveTo): set this to Instantaneous (4)</li>
<li>Pitch Yaw Roll (angles): set this to the direction you want the scientist to face when he is sitting down. In Worldcraft you can also set this with the 'compass'.</li>
</ul>
</p>
<p>Finally, tick the No Interruptions spawnflag. This will prevent the whole thing being borked when an evil player sets a crowbar to the poor scientists head   ;)
</p>
<p>Note on the animations: As I have said, the only sitting animation of the scientist model besides those used by the monster_sitting_scientist (and a couple of turning animations which would look stupid looped) is the one named 'coffee'. But if you apply one of the monster_sitting_scientist animations (eg: 'sitscared', 'sitting2', 'sitting3') to the scripted_sequence, you will get a different effect from just simply having used a monster_sitting_scientist. Unlike 'coffee' these animations are not looped, so the animations will play once and then get 'frozen' on the last frame. This looks slightly wierd close up to see a scientist not even breathing, but these poses might add interest and variety, so it might be worth it, from a distance anyway. Anything else I should mention? Oh yeah, if you have added your own sitting animations to the scientist model, you could have them play with the scripted sequence, but then you probably don't need telling anyway.
</p>
<p>4.) Well by now you should be an expert on adding sitting scientists to your map, so I will move on to barneys. The only sitting animation which the barney model has is the one named 'sit1'. This is the one we will be using to create our sitting, rotating barney.
</p>
<p>
What we are going to create is a setpiece which utilises an animation that has been precisely choreographed to fit into a particular area in the original game (its near the beginning). You don't have to recreate this exact area when you include the rotating barney in your map, but it will have to fit the animation. So its probably not going to be vastly different after all.
</p>
<p>
5.) First I will describe the animation in detail. Our barney will be rotating 90 degrees anticlockwise and back again (from the direction you specify in a scripted_sequence). During the part of his animation in which he is facing the direction you specify, he is reading a book in front of him (well thats the idea, anyway). After rotating 90 degrees anticlockwise he does some typing on a keyboard. Try to picture this in the area of your map in which you want the setpiece to occur. You must decide on the direction in which you want the setpiece to be orientated, (eg: does the barney move from facing North to facing West and back again, or from facing South to facing East and back again). You can then get on with creating the surrounding brushwork to which the animation has been choreographed.
</p>
<p>
6.) Its time to create the chair. If you want the barneys feet to rest on the floor as he sits, it should be 22 units between the top of the surface he will sit on and the floor on which his feet will rest. The 'Chair, black' prefab, seems to have been optimised for barneys in this respect, fitting this dimension exactly. The chair is going to be a rotating entity (func_door_rotating) and for this reason it is going to need an origin brush. This is a small brush which you incorporate into the chair. It is covered completely with the ORIGIN texture, and is invisible in game. However, its position, (or rather the position of its centre) will tell the game which part of the chair the axis of rotation should pass through. In our case this is the 'stem' of the chair, (see next screenshot).
</p>
<p>
You should build (or rotate) the chair so that, in your map editor it faces the direction in which the barney will face after he has rotated 90 degrees anticlockwise, (if you are confused, see the next screenshot and the diagram at the very bottom of this tutorial).
</p>
<p>
When you have finished creating the chair, select the part of the chair which you want to rotate, (for example, you may want to not select the base of the chair). Make sure you include the origin brush in your selection. Then turn your selection into a func_door_rotating.
</p>
<p>
Now for the surrounding furniture in which he is working. If you were paying attention to my description of the animation, you will know that some sort of keyboard may be required which should be in front of the barney after he has rotated 90 degrees anticlockwise (alternatively you could attach the keyboard to the rotating chair). Give our barney ample legroom to rotate.
</p>
<center>
<img src="content/half-life/tutorials/chair/chair5_new.jpg" widht="450" height="365" alt="Rotating Chair" />
</center>
<p>Give the func_door_rotating chair the following keyvalues:
<ul type="square">
<li>Name (targetname): this must be set to introchair. It is imperative. If you name it anything else, the func_door_rotating chair will not rotate with the barney. This is because it is the barneys animation that calls introchair on the frames in which he begins to rotate. We are not going to be calling the chair to rotate with other entities
</li>
<li>Speed (speed): set the rotation speed to something like 65</li>
<li>Delay before close (wait): set this to -1, so that the chair will not rotate unless called to</li>
<li>Distance (distance): this must be -90 if the chair rotation is to be synchronised with that of the barney</li>
</ul>
</p>
<p>
In addition to these keyvalues, tick the Passable and Toggle spawnflags. The first of these spawnflags makes the chair non-solid. This is necessary to avoid it getting stuck on things and messing up the synchronisation of its rotation with that of the barney.
</p>
<p>
7.) Create a monster_barney and place him in the vicinity of the chair. Again, you probably don't want the player to be able to see him just after the map loads or the player might see the barney flash spookily for a second before he is teleported to his scripted_sequence. Give the barney a Name (targetname) of something like sitting_barney.
</p>
<p>
8.) Create a scripted_sequence. I will deal with its positioning in a minute (it's weird, I can tell you). Give the scripted_sequence the following keyvalues: 
<ul type="square">
<li>Target Monster (m_iszEntity): this will be the Name (targetname) of the target monster_barney, in this case sitting_barney</li>
<li>Idle Animation (m_iszIdle): this is the name of the animation to play, which is 'sit1'</li>
<li>Search Radius (m_flRadius): you should not place the target monster_barney too far from the scripted_sequence, so that it is within, say 512 units. But if you have to place it further away then increase this accordingly</li>
<li>Move to Position (f_MoveTo): set this to Instantaneous (4)</li>
<li>Pitch Yaw Roll (angles): set this to the direction you want the barney to face (before he rotates 90 degrees anticlockwise). This direction should be 90 degrees clockwise from the direction the chair is facing in your map editor. In Worldcraft you can set this direction with the 'compass'.</li>
</ul>
</p>
<p>
Also, tick the No Interruptions spawnflag.
</p>
<p>
9.) Now its time to position the scripted_sequence. In this case a picture really is worth a thousand words, hence the diagram. This diagram should tell you everything you need to know about the relative positioning of the func_door_rotating (chair) and the scripted_sequence, apart from the vertical separation of the two entities. This I will tell you now. The lower edge of the scripted_sequence bounding box should be 14 units above the upper surface of the seat.
</p>
<center>
<img src="content/half-life/tutorials/chair/chair6_new.jpg" width="450" height="365" alt="Final Layout" />
</center>
<p>
Once you have got that, you are sorted!
</p>
<p>
If you browse through the animations of many of the models in the Half-Life pak file (use a model viewer like <a href="http://www.swissquake.ch/chumbalum-soft/hlmv/index.html">Half-Life Model Viewer</a>), you will notice many long choreographed' animations. The one we have just added is an example. Others include dives through windows, rolls and other action-packed stunts. Some are part of coordinated sets of animations from different monsters (the zombie dragging two victims is one cool example!) All require precise positioning and careful construction of the 'set', but if done well give amazing results! 
</p>
	
<!-- eof @ 126 -->
</ul><h1 id="290" name="290" class="book-h3">Code Locks</h1><ul><!-- by by Sebastiannielsen 2004 -->

<h3>Half-Life</h3>
<blockquote>
       <b>Code Locks</b> - by Sebastiannielsen
</blockquote>
<br><br>	

<p>Well there are several techniques to make doors with passwords, but I think this is by far the easiest method. Although this tutorial is relatively long, it is still relatively easy - trust me).<p> 

<p><hr color=black noshade width=75%><p>

<b>STEP 1: BUILDING A KEY PAD</b><br><br>

If you want to do a key pad password to a door(or anything else) the following is required. Note, that the colors of the keys relate to the key position and order they must be pressed to unlock the door. In this example the code is 5734:<BR><BR>

For consistency, I have colored all keys in this tutorial, and the colours are assigned thus: <font color=blue> FIRST DIGIT </font>, <font color=red> SECOND DIGIT </font>, <font color=brown> THIRD DIGIT </font>, <font color=green> FOURTH DIGIT </font><br><BR>

In the map editor align the buttons of your key pad like this:<br><br>

B1,B2,<font color=brown>B3</font> <BR>
<font color=green>B4</font>,<font color=blue>B5</font>,B6<BR>
<font color=red>B7</font>,B8,B9 <BR>
BR,B0,BA <BR><BR>

Make sure <i>all</i> buttons have wait=0.1<BR><BR>

Buttons B0-B9 can have the "port 0#" texture. Where you make it bigger and make it so only the last number is shown, the port 0# textures are in SIGNS category in Qoole 99.<BR><BR>

To make the 0-button, take port01, but use the zero in the beginning.<BR><BR>

BR can have the empty round, gray button that turns orange when pressed. <BR><BR>

BA can have elevator button pointing UP.<BR><BR>

<p><hr color=black noshade width=75%><p>

<b>STEP 2: MAKING THE LOCK CODE</b><br><br>

The first code number must have a trigger refering to the first trigger_changetarget <BR><BR>

As stated above, the code is set to 5734 <BR><BR>

<b>B1: </b><BR>
targetname: B1 <BR>
target: but_reset <BR><BR>

<b>B2: </b><BR>
targetname: B2<BR> 
target: but_reset <BR><BR>

<b>B3: </b><BR>
<font color=brown>
targetname: B3 <BR>
target: but_reset <BR>
</font><BR>

<b>B4: </b><BR>
<font color=green>
targetname: B4 <BR>
target: but_reset <BR>
</font><BR>

<b>B5: </b><BR>
<font color=blue>
targetname: B5 <BR>
target: but_code1 <BR>
</font><BR>

<b>B6: </b><BR>
targetname: B6 <BR>
target: but_reset <BR><BR>

<b>B7: </b><BR>
<font color=red>
targetname: B7 <BR>
target: but_reset <BR>
</font><BR>

<b>B8: </b><BR>
targetname: B8 <BR>
target: but_reset <BR><BR>

<b>B9: </b><BR>
targetname: B9 <BR>
target: but_reset <BR><BR>

<b>B0: </b><BR>
targetname: B0 <BR>
target: but_reset <BR><BR>

<b>BR: </b><BR>
targetname: (nothing) <BR>
target: but_reset <BR><BR>

<b>BA: </b><BR>
targetname: BA <BR>
target: sound_denied <BR><BR>

<p><hr color=black noshade width=75%><p>

<b>STEP 3: CODING THE TRIGGER_CHANGETARGETS</b><br><br>

11 trigger_changetarget are required to make the key pad work. Note that all these triggers here are trigger_changetarget. Set the trigger_changetargets to:<BR><BR>

targetname: but_reset <BR>
target: B0 <BR>
newtarget: but_reset <BR><BR>

targetname: but_reset <BR>
target: B1 <BR>
newtarget: but_reset <BR><BR>

targetname: but_reset <BR>
target: B2 <BR>
newtarget: but_reset <BR><BR>

<font color=brown>
targetname: but_reset <BR>
target: B3 <BR>
newtarget: but_reset <BR>
</font><BR>

<font color=green>
targetname: but_reset <BR>
target: B4 <BR>
newtarget: but_reset <BR>
</font><BR>

<i>NOTE: The first code digit must be reset correctly, or else the code lock will "lock" after entering a wrong code digit!! (I learnt that the hard way)</i><BR><BR>

<font color=blue>
targetname: but_reset <BR>
target: B5 <BR>
newtarget: but_open1 <BR>
</font><BR>

targetname: but_reset <BR>
target: B6 <BR>
newtarget: but_reset <BR><BR>

<font color=red>
targetname: but_reset <BR>
target: B7 <BR>
newtarget: but_reset <BR>
</font><BR>

targetname: but_reset <BR>
target: B8 <BR>
newtarget: but_reset <BR><BR>

targetname: but_reset <BR>
target: B9 <BR>
newtarget: but_reset <BR><BR>

<p><hr color=black noshade width=75%><p>

<b>STEP 4: SETTING THE RESET FOR THE ENTER BUTTON</b><br><br>

The reset for "enter" button by:<BR><BR>

targetname: but_reset <BR>
target: BA <BR>
newtarget: sound_denied <BR><BR>

<p><hr color=black noshade width=75%><p>

<b>STEP 5: BUILDING THE CODE CHECK</b><br><br>

Now we create an 8 trigger_changetarget to update the codelock, if the correct code digit has been entered. <BR><BR>

<b>[GROUP 1] </b><BR><BR>
<font color=blue>
targetname: but_open1 <BR>
target: B5 <BR>
newtarget: but_reset <BR>
</font><BR>

<font color=red>
targetname: but_open1 <BR>
target: B7 <BR>
newtarget: but_open2 <BR>
</font><BR>

<b>[GROUP 2] </b><BR><BR>

<font color=red>
targetname: but_open2 <BR>
target: B7<BR>
newtarget: but_reset <BR>
</font><BR>

<font color=brown>
targetname: but_open2 <BR>
target: B3<BR>
newtarget: but_open3 <BR>
</font><BR>

<b>[GROUP 3]</b> <BR><BR>

<font color=brown>
targetname: but_open3 <BR>
target: B3<BR>
newtarget: but_reset <BR>
</font><BR>

<font color=green>
targetname: but_open3 <BR>
target: B4  <BR>
newtarget: but_open4 <BR>
</font><BR>

<b>[GROUP 4] </b><BR><BR>
<font color=green>
targetname: but_open4 <BR>
target: B4<BR>
newtarget: but_reset <BR>
</font><BR>

targetname: but_open4 <BR>
target: BA <BR>
newtarget: sound_granted <BR><BR>

<p><hr color=black noshade width=75%><p>

<b>STEP 6: CONNECTING THE CODE LOCK TO THE DOOR</b><br><br>

Connecting the code lock to the door is essential, else the codelock is completely useless. To do this you need to create two small button <i>OUTSIDE</i> the map. <BR><BR>

<b>The first button: </b><BR><BR>

targetname: sound_denied <BR>
target: but_reset <BR>
sound: Access Denied <BR>
wait: 0.1 <BR><BR>

<b>the second button: </b><BR><BR>

targetname: sound_granted <BR>
target: but_door <BR>
sound: Access Granted <BR>
wait: 0.1 <BR><BR>

<p><hr color=black noshade width=75%><p>

<b>STEP 7: TARGETING THE DOOR</b><br><br>

Now we target but_door to what we want when the correct code is entered. We target it to a single func_door: <BR><BR>

targetname: but_door <BR>
target: but_reset<BR><BR> 

<i><<< NOTE!! The but_reset is vital to reset the code when the door has been opened. For example, in multiplayer maps this means the next play can not open the door, without re-entering the code</i><BR><BR>

<p><hr color=black noshade width=75%><p>

<b>CONCLUSION</b><br><br>

The codelock can be used again and again. I believe this will be cool in multiplayer maps, where the developer can have a "code" to enter a protect-room, or full with weapons. Imagine a button to open a door with lava under all the other players. Why not a turret? use your imagination!<BR><BR>

Finally I have included an flow diagram of all the triggers and buttons reqyired to make this work. It doesn't display to well here, so click and download:<br><br>

<center><img border="0" width="450"  src="content/half-life/tutorials/passwdoors/code.jpg"></center><br><br>

Have fun with your code locks!<br><br>
</ul><h1 id="831" name="831" class="book-h3">Creating an Overview</h1><ul><h3>Half-Life</h3>
<blockquote>Overviews - by Andy</blockquote>
<p>Here is a really simple guide to producing professional looking overviews for your maps.<br>
Things you need to know before we start:<br><!--break-->
Keep in mind that we are not going to open the map to play the game, so forget about adding <span class="control">deathmatch 1</span> or <span class="control">-toconsole +sv_lan 1</span> that you might normally add. You must also be able to open the console while in your map with the <span class="r">~</span> tiald key.<br>Open your game and change the <code>Configuration>Video>Video Mode</code> to <span class="r">OpenGL</span> and a display size of <span class="r">1024 x 768</span>.<br>The command <b>dev_overview 1</b> will <span class="r">not</span> work in Software Mode.</p>

<p>Open the level you want to generate the Overview for and make sure there are no HUD icons showing, if you are in Counter-Strike, just move away from the buyzone or you can enter <span class="r">hud_draw 0</span> at the console.<br>
Bring up the console again and enter <span class="r">dev_overview 1</span> then close the console and you should be presented with a screen like this:</p>

<center><a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/content/half-life/tutorials/oview/overview_2.jpg" target="_blank"><img src="content/half-life/tutorials/oview/overview_2_small.jpg" alt="Screen Shot" width="400" height="300" border="0"></a></center><center>Click to Enlarge</center>

<p>Before we take our screenshot, we need to do a few adjustments. By using the the keys you have assigned for movement you can position the map in the center of the screen. The defaults for Half-Life and Counterstrike levels are <span class="r"> W </span>,<span class="r"> A </span>,<span class="r"> S </span> and <span class="r"> D </span>.  And if you are using a mouse, the mouse buttons will help you zoom in and out. The idea is to get the map in the center of the screen. <br>
Once you have your image centered, we need to have a look at the figures that are at the top of the screen before we go any further:</p>


<center><a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/content/half-life/tutorials/oview/overview_1.jpg" target="_blank"><img src="content/half-life/tutorials/oview/overview_1_small.jpg" alt="The Numbers" width="400" height="46" border="0"></a></center><center>Click to Enlarge</center>

<p>These are really important so either write down the string, or take a screenshot with the <span class="r">F5</span> key. You can't take the screenshot with <span class="r">PrtScr</span> because it won't include the numbers.<br>
Once you have written them down, bring up the console again and enter <span class="r">dev_overview 2</span> and this will get rid of the numbers. Now just hit <span class="r">F5</span>. You can shut the game down now, as we have everything we need to generate the overview.</p>

<p>Go into  the root of your game directory and select the .bmp files that were generated when you hit F5. They should be called something like <span class="r">yourmapname0000.bmp</span>, where yourmapname is the actual name of your map.<br>
Copy them into a working folder because we need to do some adjustments. </p>

<h4>The Overview Shot</h4>
<p>Open the screen shot (without the numbers) in MSPaint, Wally, Photoshop or the editor of your choice. If you want to, you can massage the screenshot with a simple paint editor to produce a more realistic overview shot. Take out any of the green lines that have invaded your shot. They will be visable if you leave them in. <br>
Now all you have to do is save the overview shot in <span class="r">1024</span> x <span class="r">768</span> 256 colour 8 BPP .bmp format. The screen shot you took originally will be in 24BPP resolution, so you need to adjust it to the new format.<i>I use the simple Batch conversion function of <span class="control">IrfanView</span></i>. This should leave you with a screen shot that is half the disk size of the original, usually about 700Kb.<br>
Save this into the overview folder of the game you are making the screenshot for.</p>

<h4>Now the Numbers</h4>
If we go back and look at the numbers, you should have something like this:<br>
Overview: Zoom <span class="r">3.58</span>, Map Origin (<span class="r">311.75</span>, <span class="r">997.75</span>,119.50), Z Min 311.00, Z Max <span class="r">-72.00</span>, Rotated <span class="r">0</span><br>
The figures in <span class="r">red</span> are the important ones.<br> 
Copy an existing Overview.txt file and open it. Rename it as yourmapname.txt.<br>
In this example I have chosen the .txt file from de_dust:<p>
<pre>
// overview description file for de_dust.bsp

global
{
	ZOOM		1.20
	ORIGIN		101	1071	-192
	ROTATED		0
}

layer
{
	IMAGE		"overviews/de_dust.bmp"
	HEIGHT		-192
}
</pre>

<p>First thing we need to do is change the map name to the name of your map. Then we need to replace the figures we got from the overview mode and add them to our new map text. So using the figures we have, replace them in your new map text:</p>

<pre>
// overview description file for <span class="r">yourmapname.bsp</span>

global 
{
	ZOOM	<b>	3.58</b>
	ORIGIN	<b>	311.75    997.75   -72</b>
	ROTATED	<b>	0</b>
}

layer 
{
	IMAGE		"overviews/<b>yourmapname.bmp</b>"
	HEIGHT		<b>-72</b>
}</pre>
<p>Ok, save this to the same overview folder that you saved the converted screenshot to, and were done.<br>
All you need to do now is to run your map in multiplayer mode and select the Overview mode, and the player icons will be running around on your newly created overview.</p>

<center><img src="/content/half-life/tutorials/oview/overview_3.jpg" alt="In Game" width="300" height="225"></center>

<p>Just a couple of other things. The overview mode only seems to take off the top layer of the map, If you have double floors then it won't see inside the room. You can solve this by removing the floors, but hey... why bother. You will find that if you zoom into your map, some of the floors will disappear.<br> If you are having problems with the lighting, and you don't want the overview to be shot in shadow mode, you can add <span class="r">r_fullbright 1</span> to the console before you take the screen shot and this will light up your map.</p></ul><h1 id="9" name="9" class="book-h3">Creating Environment Maps With Terragen</h1><ul><!-- by Merl (merlinis@bigpond.net.au) 2001
     by Gard (stephen@geol.uwa.edu.au) 2003
     Updated format Feb 05 Andy -->
	 
<h3>Half-Life</h3>
<blockquote>
Creating Environment Maps With Terragen - <a href="mailto:mithodiel@softhome.net">Mithodiel</a>
</blockquote>
&nbsp;
<p>
<span style="font-weight: bold">Preface:</span><br /> 
<span style="font-style: italic">This tutorial consists of two parts.  In Part I, we explain exactly what an environment map otherwise known as a &quot;sky&quot; is, and what it is used for in a Half-Life level. Then in Part II, we discuss how to make an environment map using <a href="http://www.planetside.co.uk/terragen/">Terragen</a>.
</span>
</p>
<p>
<span style="font-style: italic">Experienced mappers who already understand how a Quake-engine environment map works can skip Part I.  The rest of us should start with Part I.
</span>
</p>
<hr />
<h3>Part I: What Is an Environment Map?</h3>
<p>
An <span style="font-style: italic">environment map</span> is used in a Half-Life level to provide the the player with the illusion of being in an outdoor environment. Confining ourselves to the walls of some building would become quite boring after a while, but &quot;rooms&quot; (that is, areas enclosed by brushes) are the only player-space areas that the game engine understands. So, rather than forcing the player to be indoors all of the time, we use special brushes (<span style="font-style: italic">sky brushes</span>, covered all over with the SKY texture) wherever the player is capable of viewing the sky outdoors. The game engine paints sky brushes with special graphics that provide the illusion of being contained in a 3D outdoor environment. The whole idea is to convince the player that he or she is not simply contained inside some big box. :)
</p>
<p>
That said, let's get a bit more technical. An environment map takes the form of a hollow cube. The &quot;outdoors&quot; panorama is then painted on this cube so that it appears to be continuous in every direction, as far as the eye can see. Confused yet? What if I told you that the sky was the projection of a spherical picture on the environment cube? Oh well, no matter. For our purposes, it's not all that important anyway.
</p>
<hr />
<h3>Environment Maps In Half-Life</h3>
<p>
Since the &quot;outdoors&quot; is painted on a cube, this implies that there are six separate graphics that make up the sky, each of them the same size. In Half-Life, each environment map consists of six 256x256 graphics that make up the sky. The images are named <span style="font-style: italic">skyname</span>rt (right), <span style="font-style: italic">skyname</span>ft (front), <span style="font-style: italic">skyname</span>lf (left), <span style="font-style: italic">skyname</span>bk (back), <span style="font-style: italic">skyname</span>up (up), and <span style="font-style: italic">skyname</span>dn(down), where <span style="font-style: italic">skyname</span> is the name of the sky that you are creating. You must store your sky graphics in two formats: 8-bit uncompressed BMP (for those without 3D accelerators) and 24-bit compressed TGA (for those with 3D accelerators).
</p>
<p>
Hmmm. Perhaps a picture of an unfolded skybox would help:
</p>
<center>
<img src="content/half-life/tutorials/terragen/tgen_skybox.jpg" width="440"  height="332" alt="Sky Box" />
</center>
<p>
Wherever two sides of the skybox meet, you must take care to make the graphics  blend together seamlessly. These sides are denoted by colored bars in the  picture -- sides that touch are banded in the same color. If you do not take  care to match them up properly, then you will see a seam in the game where  the sides of the sky meet, and the player will realize that they are caught  inside some big box. That is a Bad Thing.
</p>
<hr />
<h3>Part II: Using Terragen to Make an Environment Map</h3>
<p>
Now that we understand the concept of an environment map, I can explain how to actually go about making one.
</p>
<p><a href="mailto:matt@planetside.co.uk">Matt Fairclough</a> has developed a nifty program called <a href="http://www.planetside.co.uk/terragen/">Terragen</a> that generates photo-realistic terrain images. These terrain images can include lighting, fogging, and other atmospheric effects. Of course, there are other programs out there that can do the same thing. (Bryce and 3D Studio MAX come to mind.) The best thing about using Terragen is that it is <span style="font-weight: bold">free</span> (for non-commercial use) and it is <span style="font-weight: bold">fast</span> (at 75&#37; detail, I was able to render the entire sky in about 30 minutes on a P-200 MMX machine with 32MB of RAM). These two qualities make generating environment maps with it easy for amateur mappers (like me).
</p>
<p>
First, if you don't have Terragen already, then you will need to <a href="http://www.planetside.co.uk/terragen/download.shtml">download Terragen from the Terragen site</a>. As of the time of this writing (21 July 2000), the latest version is 0.8.11. The examples and screen shots assume that you are using this version.
</p>
<p>
Once you have obtained Terragen and installed it, your next step is to generate  your sky environment. This tutorial is not designed to explain all of the  inner workings of Terragen, so I will have to leave you to generate your  own world. <a href="http://www.planetside.co.uk/terragen/">The main Terragen page</a> has links to the <a href="http://www.planetside.co.uk/terragen/guide/">official User's Guide</a> and to beginner tutorials to get you started. Use your imagination -- the  possibilities are endless.
</p>
<hr />
<h3>Rendering the Environment Map</h3>
<p>
After you create your environment, you are ready to render your sky. The  technique for doing this in Terragen is very similar to the technique for doing it in Bryce. You will first select an initial position and orientation for the camera, and then take 90-degree field-of-view snaps of the scene in each of the six cardinal directions (right, front, left, back, up, and down).
</p>
<p>
To set the initial camera position, bring up the <span style="font-weight: bold">Render Controls</span> window. An overhead map of your terrain appears at the bottom right-hand side of the window. Clicking on the map with the left mouse button sets the camera position; clicking on it with the right mouse button sets the camera target (that is, the point that the camera always looks toward). You can also enter numbers manually in the Camera Position fields if you prefer. I usually enter 128 for the camera position X and Y values, which sets the camera in the center of the map. You might want to adjust the Z coordinate for the camera position as well. Then set all three of the Camera Orientation values to 0 and do a render preview. If you are satisfied, then move on to the next step; otherwise, keep adjusting the camera position until you are satisfied.
</p>
<p>
Once you have set the camera position, click on the Camera Settings button and manually set the Zoom to 1. A Zoom value of 1 results in a 90-degree field of view, which is what we need for a Half-Life sky. The other settings are optional, but <span style="font-weight: bold">Zoom must be 1</span>, no more and no less. Once you have set the zoom value, exit the Camera Settings dialog.
</p>
<p>
Now, you need to decide what size that you want for the rendered images. Half-Life sky images are 256x256, so you can snap images at that size if you want to. Alternatively, you can snap the images at a larger size (say, 512x512) and resample them down to 256x256 using a paint program such as <a href="http://www.jasc.com/">Paint Shop Pro</a>. Doing this can give you greater graphical detail, but may require additional post-processing to make the graphics seamless. So for now, set the Image Size to 256x256. Also, set the Detail level to maximum for best image quality. (The example shots are done at 75&#37; detail, and it shows in the final result.)
</p>
<hr />
<h3>Snapping the Sky Images</h3>
<p>
Now we are ready to snap the sky images. Snapping each image involves adjusting the Camera Orientation values in order to point the camera in the proper direction, and pressing the Render Image button to snap the scene. The three Camera Orientation values control the camera as follows:<br />
</p>
<ul type="square">
<li>
<span style="font-weight: bold">Head</span>: This value controls the camera heading, or compass direction. This value represents degrees clockwise from &quot;north&quot;, and ranges from 0 to 360, where 0 is &quot;north&quot; (straight up) on the terrain map, 90 is &quot;east&quot;, and so on.
</li>
<li>
<span style="font-weight: bold">Pitch</span>: This value controls the camera pitch, or up-and-down tilt. This value represents some number of degrees above the horizon, and ranges from -90 (straight down) to 90 (straight up). A pitch of 0 makes the camera level.
</li>
<li>
<span style="font-weight: bold">Bank</span>: This value controls the bank of the camera, or its side-to-side tilt. This value should always be 0, unless you are using the bank to produce special sky effects (which are beyond the scope of this tutorial).
</li>
</ul>
<p>
For each of the six cardinal directions listed below, adjust the Camera Orientation values as shown, render the image, and then save it to disk using the proper file name convention. (Replace <span style="font-style: italic">skyname</span> with the name of our own sky in each file name.) Each direction has a thumbnail picture of the process, and you can click on the picture for a larger version of the image.
</p>
<table border="0" cellpadding="1" cellspacing="2">
  <tr>
    <td>
      <a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/content/half-life/tutorials/terragen/tgen_snap1.jpg">
      <img src="content/half-life/tutorials/terragen/tgen_thmb1.jpg" width="100" height="87" alt="Right" align="left" hspace="5" />
      </a>
    </td>
    <td>
      <b>Right (<i>skyname</i>rt.bmp)</b><br />
      Camera orientation: Head=0, Pitch=0, Bank=0<br />
      Large image size: 86K
    </td>
  </tr>
  <tr>
    <td>
      <a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/content/half-life/tutorials/terragen/tgen_snap2.jpg">
      <img src="content/half-life/tutorials/terragen/tgen_thmb2.jpg" width="100" height="87" alt="Front" align="left" hspace="5" />
      </a>
    </td>
    <td>
      <b>Front (<i>skyname</i>ft.bmp)</b><br />
      Camera orientation: Head=90, Pitch=0, Bank=0<br />
      Large image size: 83K
    </td>
  </tr>
  <tr>
    <td>
      <a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/content/half-life/tutorials/terragen/tgen_snap3.jpg">
      <img src="content/half-life/tutorials/terragen/tgen_thmb3.jpg" width="100" height="87" alt="Left" align="left" hspace="5" />
      </a>
    </td>
    <td>
      <b>Left (<i>skyname</i>lf.bmp)</b><br />
      Camera orientation: Head=180, Pitch=0, Bank=0<br />
      Large image size: 86K
    </td>
  </tr>
  <tr>
    <td>
      <a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/content/half-life/tutorials/terragen/tgen_snap4.jpg">
      <img src="content/half-life/tutorials/terragen/tgen_thmb4.jpg" width="100" height="87" alt="Back" align="left" hspace="5" />
      </a>
    </td>
    <td>
      <b>Back (<i>skyname</i>bk.bmp)</b><br />
      Camera orientation: Head=270, Pitch=0, Bank=0<br />
      Large image size: 88K
    </td>
  </tr>
  <tr>
    <td>
      <a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/content/half-life/tutorials/terragen/tgen_snap5.jpg">
      <img src="content/half-life/tutorials/terragen/tgen_thmb5.jpg" width="100" height="87" alt="Up" align="left" hspace="5" />
      </a>
    </td>
    <td>
      <b>Up (<i>skyname</i>up.bmp)</b><br />
      Camera orientation: Head=0, Pitch=90, Bank=0<br />
      Large image size: 78K
    </td>
  </tr>
  <tr>
    <td>
      <a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/content/half-life/tutorials/terragen/tgen_snap6.jpg">
      <img src="content/half-life/tutorials/terragen/tgen_thmb6.jpg" width="100" height="87" alt="Down" align="left" hspace="5" />
      </a>
    </td>
    <td>
      <b>Down (<i>skyname</i>dn.bmp)</b><br />
      Camera orientation: Head=0, Pitch=-90, Bank=0<br />
      Large image size: 83K
    </td>
  </tr>
</table>
<p>
Once you have snapped the scenes, you need to save them in the proper format. Terragen will save them in 24-bit BMP format. You will need to convert these images to 24-bit compressed TGA, and then also convert them to 8-bit uncompressed BMP format before you can use them with Half-Life.
</p>
<hr />
<h3>Testing the Sky in Half-Life</h3>
<p>
Once you have converted your sky into the proper formats, place them in the <span style="font-style: italic">half-life\valve\gfx\env</span> subdirectory (where <span style="font-style: italic">half-life</span> here is the directory where you installed Half-Life). Then load it up in the game. You can create your own test map, or you can <a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/content/half-life/tutorials/terragen/sky_test.zip">download this example map</a> that I created for this purpose. It consists of little more than an (unsealed!) skybox, a CLIP brush for the player to stand on, and a player start. This allows you to view the entire sky unobstructed by other map geometry. If you use the <a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/content/half-life/tutorials/terragen/sky_test.zip">example map</a>, then you will obviously want to edit it so that it loads your sky instead of trying to load my sky.
</p>
<center>
    <a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/content/half-life/tutorials/terragen/tgen_snap7.jpg">
    <img src="content/half-life/tutorials/terragen/tgen_thmb7.jpg" width="200" height="150" alt="In Game 1" hspace="5" /></a>
     <a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/content/half-life/tutorials/terragen/tgen_snap8.jpg">
    <img src="content/half-life/tutorials/terragen/tgen_thmb8.jpg" width="200" height="150" alt="In Game 2" hspace="5" /></a><br />
    <span style="font-style: italic">In-game screen 
    <a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/content/half-life/tutorials/terragen/tgen_snap7.jpg">shot #1</a> (115K) and
    <a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/content/half-life/tutorials/terragen/tgen_snap8.jpg">shot #2</a> (113K) of new environment map </span><br />
    <span style="font-style: italic">Click on a thumbnail to view a larger version of the image</span>
</center>
<p>
The first shot is especially significant, because the area shown crosses a sky image intersection (specifically, between the Right and the Back images). Notice how seamlessly the sky images blend together! Also, notice the importance of high detail (which the larger shots bring out much more clearly). This example sky would look <span style="font-style: italic">much</span> better in the game if I had rendered the images at 100&#37; detail level instead of at 75&#37;. So will yours.
</p>
<hr />
<h3>Tutorial Files</h3>
<ul type="square">
	    <li><a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/content/half-life/tutorials/terragen/sky_test.zip" target="_blank">Example map (sky_test.zip)</a> [1K]</li>
	    <li><a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/content/half-life/tutorials/terragen/tgen_snap1.jpg" target="_blank">Screen shot: Rendering the Right sky image</a> [86K]</li>
	    <li><a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/content/half-life/tutorials/terragen/tgen_snap2.jpg" target="_blank">Screen shot: Rendering the Front sky image</a> [83K]</li>
	    <li><a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/content/half-life/tutorials/terragen/tgen_snap3.jpg" target="_blank">Screen shot: Rendering the Left sky image</a> [86K]</li>
	    <li><a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/content/half-life/tutorials/terragen/tgen_snap4.jpg" target="_blank">Screen shot: Rendering the Back sky image</a> [88K]</li>
	    <li><a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/content/half-life/tutorials/terragen/tgen_snap5.jpg" target="_blank">Screen shot: Rendering the Up sky image</a> [78K]</li>
	    <li><a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/content/half-life/tutorials/terragen/tgen_snap6.jpg" target="_blank">Screen shot: Rendering the Down sky image</a> [83K]</li>
	    <li><a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/content/half-life/tutorials/terragen/tgen_snap7.jpg" target="_blank">Screen shot: In-game sky shot #1</a> [115K]</li>
	    <li><a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/content/half-life/tutorials/terragen/tgen_snap8.jpg" target="_blank">Screen shot: In-game sky shot #2</a> [113K]</li>
    </ul>
    <!--eof@195--></ul><h1 id="6" name="6" class="book-h3">Creating Proximity Doors</h1><ul><!-- by Merl (merlinis@bigpond.net.au) 2001
     by Gard (stephen@geol.uwa.edu.au) 2003
     by Andy Updated  Feb 2005 - Validated at W3C XHTML1.0 Transitional
 -->
<h3>
Half-Life
</h3>
<blockquote>
Creating Proximity Doors - <a href="mailto:mithodiel@softhome.net">Mithodiel</a>
</blockquote>
<span style="font-weight: bold">How do I create a proximity door ?<br />
(a door that stays open as long as the player remains in a certain area near the door)</span>
<p>
You've most likely seen the doors in the Half-Life single-player campaign that opened only as long as you turned a wheel, but which started to close after you let go of the wheel. Remember the underwater grates in &quot;Surface Tension&quot;? Those are the type of doors I am referring to. They are <span style="font-style: italic">momentary_door</span>   entities, and the controlling wheel is a <span style="font-style: italic">momentary_rot_button</span> entity.
</p><!--break-->
<p>
The <span style="font-style: italic">momentary_rot_button</span> entity, though, has an interesting property. Repeatedly triggering the entity has the exact same effect as if you hold down the +use key while standing near it! We will use this property to activate our proximity door.
</p>
Creating a proximity door requires the use of three entities:
<ul type="square">
<li><span style="font-style: italic; font-weight: bold"><b>momentary_door</b></span>, for the door itself;</li>
<li><span style="font-style: italic; font-weight: bold"><b>momentary_rot_button</b></span>, to control the up and down motion of the door; and</li>
<li><span style="font-style: italic; font-weight: bold"><b>trigger_multiple</b></span>, to define the proximity area and repeatedly trigger the <span style="font-style: italic">momentary_rot_button</span> in order to keep the door open</li>
</ul>
<p>
We will discuss each entity in turn.
</p>
<hr />
<p>
<span style="font-weight: bold">Step 1</span>: Creating the <span style="font-style: italic">momentary_door</span> entity.
</p>
<p>
If you are in any way familiar with creating normal <span style="font-style: italic">func_door</span> entities, then this will be easy for you to understand. Create your door in the usual way, except that instead of making it a <span style="font-style: italic">func_door</span>, make it into a <span style="font-style: italic">momentary_door</span>. Set the door's angle, speed, lip, etc., to the values you want.
</p>
<p>
Now we need to give the door a name, so that we can use a <span style="font-style: italic">momentary_rot_button</span> to activate it. The example map uses the name <code>proxim_door</code>.
</p>
<p>
Finally, we want the <span style="font-style: italic">momentary_door</span> to close automatically once we stop triggering the <span style="font-style: italic">momentary_rot_button</span>. To do this, set the door's <code>spawnflags</code> value to <code>32</code>. (In Worldcraft, this means to check only the "Toggle" spawnflag). Enabling this spawnflag allows the door to close automatically once the <span style="font-style: italic">momentary_rot_button</span> stops activating it.
</p>
<center>
<a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/content/half-life/tutorials/proxdoor/prox_snap1.jpg" style="text-decoration: none"><img src="content/half-life/tutorials/proxdoor/prox_thmb1.jpg" width="100" height="70" vspace="6" alt="Worldcraft Screen" title="Worldcraft Screen" /><br />
Screen shot of the<span style="font-style: italic">momentary_door </span>in Worldcraft</a><br /> [94K]
<br />
</center>
<hr/>
<p>
<span style="font-weight: bold">Step 2</span>: Creating the <span style="font-style: italic">momentary_rot_button</span> entity.
</p>
<p>
 If you've created a <span style="font-style: italic">func_rot_button</span> entity before, then this will be easy, too. Create your rotating button as usual (complete with origin brush!), but turn it instead into a <span style="font-style: italic">momentary_rot_button</span> entity. Set its speed, auto-return speed (<code>returnspeed</code>), and rotation distance (<code>distance</code>) as desired.
 </p>
 <p>
 For this tutorial, since the player doesn't have to &#43; use the button to activate it, the button does not have to be set up in a visible part of the level. Since the <span style="font-style: italic">momentary_rot_button</span> entity is brush-based, it can even be placed in the "void" outside of the map. The <a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/content/half-life/tutorials/proxdoor/proxdoor.zip">example map</a> places the button in full view of the player so that you can see that the button turns when triggered repeatedly.
 </p>
 <p>
 Now, set the <code>target</code> key (WC: &quot;Targetted object&quot;) to the name of your <span style="font-style: italic">momentary_door</span>. The example map sets it to <code>proxim_door</code>. This allows the button to open and shut the door.
 </p>
<p>
Now, set the spawnflags of the <span style="font-style: italic">momentary_rot_button</span>. The base value that you need to enter in the <code>spawnflags</code> key is <code>18</code>. (In WC, this is equivalent to checking only the &quot;Not useable&quot; and &quot;Auto Return&quot; spawnflags). Enabling Auto Return allows the door to close itself automatically once the button is no longer being activated. Add 64 to this value (WC: check &quot;X Axis&quot;) if the button rotates around the X-axis, or 128 to this value (WC: check &quot;Y Axis&quot;) if the button rotates around the Y-axis.
</p>
<p>
Finally, give the button a name, so that we can activate it via triggers. The example map uses the name <code>proxim_btn</code>.
</p>
<center>
<a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/content/half-life/tutorials/proxdoor/prox_snap2.jpg" style="text-decoration: none"><img src="content/half-life/tutorials/proxdoor/prox_thmb2.jpg" width="100" height="70" vspace="6" alt="Prox door" title="prox door" /><br />
Screen shot of the <span style="font-style: italic">momentary_rot_button </span>in Worldcraft</a><br /> [90K]
</center>
<hr />
<p>
<span style="font-weight: bold">Step 3</span>: Creating the <span style="font-style: italic">trigger_multiple</span> entity.
</p>
<p>
This is the most straightforward step, provided that you have created triggers before. Create a brush to define your proximity area and cover it in the AAATRIGGER texture. Then select it and turn it into a <span style="font-style: italic">trigger_multiple</span> entity.
</p>   
<p>
Set the trigger's <code>target</code> key (WC: &quot;Target&quot;) to the name of the <span style="font-style: italic">momentary_rot_button</span>. (For the example map, this is <code>proxim_btn</code>.)
</p>
<p>
Then set the trigger's <code>delay</code> key (WC: &quot;Delay before reset&quot;) to <code>0.1</code>. This causes the trigger to fire every tenth of a second while the player remains in the trigger area [unless you enable the &quot;No Clients&quot; (2) spawnflag -- see below]. Since the trigger targets the button, which in turn controls the door, the door will open and stay open as long as the player remains in the trigger area.
</p>   
The different spawnflags of the <span style="font-style: italic">trigger_multiple</span> allow you to customize which beings in the map get to use the proximity door:
<ul type="square">
<li>&quot;Monsters&quot; (1): If this spawnflag is enabled, then any monster which wanders into the trigger area will activate the door.</li>
<li>&quot;No Clients&quot; (2): If this spawnflag is enabled, then the player cannot activate the trigger. He/she would need to turn the button manually. If the button  is hidden from the player, then the door is off-limits to him/her. Too bad.</li>
<li>&quot;Pushables&quot; (4): If this spawnflag is enabled, then pushing a pushable object into the trigger area will activate the door and cause it to stay open.</li>
</ul>
<center>
<a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/content/half-life/tutorials/proxdoor/prox_snap3.jpg" style="text-decoration: none"><img src="content/half-life/tutorials/proxdoor/prox_thmb3.jpg" width="100" height="69" vspace="6" alt="Activate" title="activate" /><br />
Screen shot of the <span style="font-style: italic">trigger_multiple </span>in Worldcraft</a><br /> [99K] 
</center>
<hr />
<p>
<span style="font-weight: bold">Step 4</span>: Compile and run.
</p>
<p>
Compile and run your map. The door should begin to open when the player steps into the trigger area, and should stay open as long as he/she stays in the trigger area.
</p>
<p>
I've created a small example map that illustrates the concept. The first door you come to is a normal sliding <span style="font-style: italic">func_door</span> -- ignore this one. The second door is the proximity door. There is a wheel along the wall here -- this is the <span style="font-style: italic">momentary_rot_button</span> that controls the door. I decided not to hide it so that you can see the button rotate when it is triggered, and to allow you to +use the wheel yourself to open the door. The proximity area for the door is the area covered in the red and white stripes.
</p>
<center>
<a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/content/half-life/tutorials/proxdoor/prox_snap4.jpg"><img src="content/half-life/tutorials/proxdoor/prox_thmb4.jpg" width="100" height="75" vspace="6" alt="Door opening" title="Door Opening" /></a>&nbsp;&nbsp;&nbsp;&nbsp;<a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/content/half-life/tutorials/proxdoor/prox_snap5.jpg"><img src="content/half-life/tutorials/proxdoor/prox_thmb5.jpg" width="100" height="75" vspace="6" alt="Door Closing" title="Door Closing" /></a><br />
<a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/content/half-life/tutorials/proxdoor/prox_snap4.jpg"><span style="font-style: italic; text-decoration: none">Door Opening</span></a> [21K] and <a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/content/half-life/tutorials/proxdoor/prox_snap5.jpg"><span style="font-style: italic; text-decoration: none">Door Closing</span></a> [22K]<br />
<span style="font-style: italic">Click on thumbnails to view larger versions of the images</span>
</center>
<hr />
<span style="font-weight: bold">Example Files</span><br />
<ul type="square">
<li><a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/content/half-life/tutorials/proxdoor/proxdoor.zip">Example map (proxdoor.zip)</a> [8K]</li>
<!--li><a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/content/half-life/tutorials/proxdoor/prox_snap4.jpg" target="_blank">Screen shot of the proximity door opening</a> [21K]</li>
<li><a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/content/half-life/tutorials/proxdoor/prox_snap5.jpg" target="_blank">Screen shot of the proximity door closing</a> [22K]</li-->
</ul>
<p><span style="font-weight: bold">NOTE:</span> Special thanks to <a href="http://www.geocities.com/TimesSquare/Alley/7579/members/oddsock.html">[RPS]Odd Sock</a>, who came up with the basic mechanism for creating such a door, at least as far as I know.
</p>
<!--EOF@116-->
</ul><h1 id="5" name="5" class="book-h3">Customizing the lights.rad File</h1><ul><!-- 
by Merl (merlinis@bigpond.net.au) 2001
by Gard (stephen@geol.uwa.edu.au) 2003
XHTML Update Feb 05 Andy
 -->
	 
<h3>Half-Life</h3>
<blockquote>
Customizing the lights.rad File - <a href="mailto:mithodiel@softhome.net">Mithodiel</a>
</blockquote>
<span style="font-weight: bold">Why doesn't my texture lighting work? It was working fine under Worldcraft 2.0!</span>
<p>
It's because of a mix-up involving the <span style="font-style: italic">lights.rad</span> file. The RAD compile tool (named QRAD or HLRAD) reads and parses this file in order to determine which textures to consider as texture lights when it lights your map.
</p>
<p>
When Valve Software released Worldcraft 2.0 with Half-Life, they included  a <span style="font-style: italic">lights.rad</span> file that contained the texture lighting values they used when they created the maps included with the game. Some mappers, unaware of how texture lighting works, ended up getting unwanted texture lighting because they used textures that were referenced in the default <span style="font-style: italic">lights.rad</span> file. So when Valve released Worldcraft 2.1, they decided to include a (basically) blank <span style="font-style: italic">lights.rad</span> file so that users could set their own texture lighting values. And when Valve released WC 3.3, they kept the same blank <span style="font-style: italic">lights.rad</span> file in the distribution.
</p>
<p>
This means that when you upgraded from version 2.0 to version 2.1 or 3.3, all of the texture lighting values you were relying on from the old <span style="font-style: italic">lights.rad</span> file got nuked -- and if you didn't read the release notes that came with the upgrade, then you didn't notice anything until you compiled your map.
</p>
<hr />
<h4>So how do I fix my texture lighting?</h4>
<p>
Two ways, the easy way (in which you learn absolutely nothing) and the harder way (which is infinitely more rewarding).
</p>
<p>
First, the easy way: Valve didn't leave us mappers totally up the creek. They included the old <span style="font-style: italic">lights.rad</span> file as a new file called <span style="font-style: italic">valve.rad</span>. You can restore the old texture lighting values simply by renaming this file <span style="font-style: italic">lights.rad</span>. You can also add the parameter <span style="font-weight: bold">-lights valve.rad</span> to the RAD tool's command line. This tells the RAD tool to read its texture lighting data from <span style="font-style: italic">valve.rad</span> instead of <span style="font-style: italic">lights.rad</span>.
</p> 
<p>
Next, the harder way: You can insert custom texture lighting values into the <span style="font-style: italic">lights.rad </span>file yourself. You don't need a special editor for this -- any text editor, even Notepad, will do fine. Open up the <span style="font-style: italic">lights.rad</span> file. Each line in the file represents a texture that will be used as a texture light:
</p>
<code>
WHITE&nbsp;&nbsp;255 255 255 10000
YELLOW 255 255 0    10000
</code>
<p>
Let us examine the first entry in more detail:
</p>
<ul type="square">
<li>The first item in each line (WHITE) is the name of the texture you want to use as a texture light.</li><br />
<li>The next three items (255 255 255) are the red, green, and blue values of the light that will be emitted from this texture. All colors are made up of a red component, a green component, and a blue component. These values range from 0 (black) to 255 (full color).
An easy way to determine a light color is to open up a paint program and choose a color you want from the color picker dialog. Then write down the red, green, and blue color values and type them into the <span style="font-style: italic">lights.rad</span> file.</li><br />
<li>The last item (10000) is the brightness of the light. The higher the number, the brighter the light. Unfortunately, there is no tool (yet) that will help you pick the right number here, so you will need to play with this value in order to get the effect you want. </li>
</ul>
<p>
Repeat for as many new texture lights as you want. Note that the color of the emitted light doesn't have to correspond to the colors in the texture. You can make the &quot;SECURITY IS EVERYONE'S RESPONSIBILITY&quot; sign cast neon-green light all over your map if you want to. &lt;grin&gt; Then recompile your map, and <span style="font-style: italic">voil&aacute;</span>! Instant texture lighting.
</p>
<hr />
<h4>Example: Glowing Green Slime</h4>
<p>
I am creating a map where I want my Toxic Green Slime &trade; to glow a sickly bluish-green throughout my map. So I decide to add the green slime texture to my <span style="font-style: italic">lights.rad</span> file by adding the line:
</p>
<code>!TOXICGRN	84  207  48  100</code>
<p>
I choose the color values by bringing up Microsoft Paint, picking a color that I like from its custom color dialog, and copying the values to my lights.rad file. I set the brightness very low because I want the glow of the slime to be a subtle effect. Then I recompile. Soon, the poor hapless players are bathing in toxic green-blue light.
</p>
<center>
<a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/content/half-life/tutorials/lightsrad/light_snap1.jpg"><img src="content/half-life/tutorials/lightsrad/lght_thmb1.jpg" width="100" height="75" style="border: none" alt="light1" title="light1" /></a>&nbsp;<a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/content/half-life/tutorials/lightsrad/lght_snap2.jpg"><img src="content/half-life/tutorials/lightsrad/lght_thmb2.jpg" width="100" height="75" style="border: none" alt="light1" title="light2" /></a><br />
<a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/content/half-life/tutorials/lightsrad/lght_snap1.jpg">Before</a> (37K) and <a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/content/half-life/tutorials/lightsrad/lght_snap2.jpg">after</a> (43K) <br />shots of example map<br />
Click on thumbnails to view a larger version of the images<br />
</center>
<hr />
<h4>Tutorial Files</h4>
<ul type="square">
<li>Example map: <a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/content/half-life/tutorials/lightsrad/texlight.zip">texlight.zip</a> (3K)</li>
<li>Screen snap: <a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/content/half-life/tutorials/lightsrad/lght_snap1.jpg" target="_blank">Example map without green slime texture light</a> (37K)</li>
<li>Screen snap: <a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/content/half-life/tutorials/lightsrad/lght_snap2.jpg" target="_blank">Example map with green slime texture light</a> (43K)</li>
</ul>
<!--EOF@71--></ul><h1 id="596" name="596" class="book-h3">Dimensions</h1><ul><!--
Submitted by Andy Nov 2004, 
Updated  Feb 2005 - Validated at W3C, XHTML1.0 Transitional
-->
<h3>Half-Life</h3>
<blockquote>Dimensions - by Andy</blockquote>
<p>
These dimensions apply to levels created with most editors, as long as the code for the player entities has not been modified.<br />
If your using standard player models these dimensions apply.
</p>
<p>
<span style="font-weight: bold">What does <span style="color: #ff0000">1</span> unit equal?</span><br />
The answer is that <span style="color: #ff0000">1</span>  unit doesn't really equal anything. It is not a 'real' inch or centimeter. It is closer to a pixel.<br />
If you build your maps based on a unit actually representing a standard measurement, then Gordon will end up being a vertically challenged rotund person.
</p>

<center>
<img src="/content/half-life/tutorials/dimension/block1.jpg" width="350" height="200" vspace="6"  alt="Standing" title="Standing" />
</center>
<center>
Player Standing
</center>
<center>
<img src="/content/half-life/tutorials/dimension/block2.jpg" width="350" height="200" vspace="6" alt="Crouched" title="Crouched" />
</center>
<center>
Player Crouched
</center>
<p>
<span style="font-weight: bold">Ground Obstacle Height:</span><br />
This is the maximum height, in units, an object can be while still allowing the player to <span style="font-style: italic; font-weight: bold">walk over</span>&nbsp; it.
</p>
<center>
<img src="/content/half-life/tutorials/dimension/step.jpg" width="350" height="200" alt="Step" title="Step" />
</center>
<p align="center">
Crouched: <span style="color: #ff0000">18</span> units&nbsp;&nbsp; Standing: <span style="color: #ff0000">18</span> units 
</p>
<p>
<span style="font-weight: bold">Overhead Obstacle Height:</span><br />
This is the minimum distance, in units, that can be between the ground and an object while still allowing the player to <span style="font-style: italic; font-weight: bold">pass underneath it</span>.
</p>
<center>
<img src="/content/half-life/tutorials/dimension/head.jpg" width="350" height="200" alt="Headspace" title="Headspace" />
</center>
<p align="center">
Crouched: <span style="color: #ff0000">36</span>&nbsp;&nbsp; Standing: <span style="color: #ff0000">72</span>
</p>
<p>
<span style="font-weight: bold">Minimum Path Width:</span><br />
This is the minimum width, in units, that can be between two objects while still allowing the player to <span style="font-style: italic; font-weight: bold">pass between</span> them.</p>
<center>
<img src="/content/half-life/tutorials/dimension/between.jpg" width="350" height="200" alt="Between" title="Between" />
</center>
<p align="center">
Width: <span style="color: #ff0000">33</span>
</p>
<p>
<span style="font-weight: bold">Jump Height:</span><br />
This is the maximum height, in units, an object can be while still allowing the player to <span style="font-style: italic; font-weight: bold">jump on top</span> of it.
</p>
<center>
<img src="/content/half-life/tutorials/dimension/hop.jpg" width="350" height="200" alt="Hop" title="Hop" />
</center>
<p align="center">
Crouched: <span style="color: #ff0000"> 44 </span>&nbsp;&nbsp; Walking: <span style="color: #ff0000"> 44 </span>&nbsp;&nbsp; Running crouch-jump: <span style="color: #ff0000"> 62 </span>
</p>
<p>
<span style="font-weight: bold">Jump from - to</span>:<br />
This is the maximum distance, in units, that can be between two objects of the same height, while still allowing the player to <span style="font-style: italic; font-weight: bold">jump from one object to the other.</span></p>
<center>
<img src="/content/half-life/tutorials/dimension/jump.jpg" width="350" height="200" alt="Jump" title="Jump" />
</center>
<p align="center">
Crouched: <span style="color: #ff0000">99</span>&nbsp;&nbsp;Walking: <span style="color: #ff0000">109</span>&nbsp;&nbsp;Running: <span style="color: #ff0000">239</span>&nbsp;&nbsp;Running crouch-jump: <span style="color: #ff0000">259</span>
</p>
<p>
<span style="font-weight: bold">Eye Level</span>:<br />
Looking directly ahead, a brush will appear to be at eye level if it is about <span style="color: #ff0000"> 45 </span> - <span style="color: #ff0000"> 50 </span> units off the floor.
</p>
<hr />
<p>
<span style="font-weight: bold">Other Dimensions</span>:<br />
The <span style="font-weight: bold">smallest brush</span> you can walk on is <span style="font-weight: bold">A half of one unit</span>... if it's there you can walk on it.
</p>
<p>
<span style="font-weight: bold">Damage</span> recieved in a fall: (height in units)
</p>
<center>
<table cellpadding="0" cellspacing="0" border="0" width="224">
<tr valign="top" align="left">
<td>
<table border="0" cellspacing="0" cellpadding="0" width="112">
<tr valign="top" align="left">
<td width="16" height="8">&nbsp;</td>
<td width="16">&nbsp;</td>
<td width="64">&nbsp;</td>
<td width="16">&nbsp;</td>
</tr>
<tr valign="top" align="left">
<td>&nbsp;</td>
<td colspan="3" width="96">
<p align="center">
 Height Fallen
</p>
</td>
</tr>
<tr valign="top" align="left">
<td colspan="4" height="16">&nbsp;</td>
</tr>
<tr valign="top" align="left">
<td colspan="2">&nbsp;</td>
<td width="64">
<p align="center">
 200
</p>
</td>
<td>&nbsp;</td>
</tr>
<tr valign="top" align="left">
<td colspan="2">&nbsp;</td>
<td width="64">
<p align="center">
 250
 </p>
</td>
<td>&nbsp;</td>
</tr>
<tr valign="top" align="left">
<td colspan="2">&nbsp;</td>
<td width="64">
<p align="center">
 300
</p>
</td>
<td>&nbsp;</td>
</tr>
<tr valign="top" align="left">
<td colspan="2">&nbsp;</td>
<td width="64">
<p align="center">
 400
</p>
</td>
<td>&nbsp;</td>
</tr>
<tr valign="top" align="left">
<td colspan="2">&nbsp;</td>
<td width="64">
<p align="center">
 500
</p>
</td>
<td>&nbsp;</td>
</tr>
<tr valign="top" align="left">
<td colspan="2">&nbsp;</td>
<td width="64">
<p align="center">
  600
</p>
</td>
<td>&nbsp;</td>
</tr>
<tr valign="top" align="left">
<td colspan="2">&nbsp;</td>
<td width="64">
<p align="center">
 700
</p>
</td>
<td>&nbsp;</td>
</tr>
</table>
</td>
<td>
<table border="0" cellspacing="0" cellpadding="0" width="112" >
<tr valign="top" align="left">
<td width="16" height="8">&nbsp;</td>
<td width="16">&nbsp;</td>
<td width="64">&nbsp;</td>
<td width="16">&nbsp;</td>
</tr>
<tr valign="top" align="left">
<td>&nbsp;</td>
 <td colspan="3" width="96">
<p align="center">
 Health Left
</p>
</td>
</tr>
<tr valign="top" align="left">
<td colspan="4" height="16">&nbsp;</td>
</tr>
<tr valign="top" align="left">
<td colspan="2">&nbsp;</td>
<td width="64">
<p align="center">
  100
</p>
</td>
<td>&nbsp;</td>
</tr>
<tr valign="top" align="left">
<td colspan="2">&nbsp;</td>
<td width="64">
<p align="center">
  90
</p>
</td>
<td>&nbsp;</td>
</tr>
<tr valign="top" align="left">
<td colspan="2">&nbsp;</td>
<td width="64">
<p align="center">
 75
</p>
</td>
<td>&nbsp;</td>
</tr>
<tr valign="top" align="left">
<td colspan="2">&nbsp;</td>
<td width="64">
<p align="center">
  50
</p>
</td>
<td>&nbsp;</td>
</tr>
<tr valign="top" align="left">
<td colspan="2">&nbsp;</td>
<td width="64">
<p align="center">
 30
</p>
</td>
<td>&nbsp;</td>
</tr>
<tr valign="top" align="left">
<td colspan="2">&nbsp;</td>
<td width="64">
<p align="center">
  10
</p>
</td>
<td>&nbsp;</td>
</tr>
<tr valign="top" align="left">
<td colspan="2">&nbsp;</td>
<td width="64">
<p align="center">
 Death
</p>
</td>
<td>&nbsp;</td>
</tr>
</table>
</td>
</tr>
</table>
</center>
<p>&nbsp;</p>
<p>
<span style="color: #ff0000">Important</span>: If a player falls in water he will not suffer damage!! Even if the water is only one unit deep.<br />
If you require the Player to be damaged in a water fall, use a<span style="font-style: italic; font-weight: bold"> trigger_hurt </span> entity with the spawnflag 'falling damage' activated.
</p>
<hr />
If you have any other dimensions, please post a comment.
<p>
Thanks to Tiger for the information.
</p>
<!--EOF@271--></ul><h1 id="8" name="8" class="book-h3">How to Make a Sphere in Worldcraft</h1><ul><!-- 
by Merl (merlinis@bigpond.net.au) 2001
by Gard (stephen@geol.uwa.edu.au) 2003 
XHTML Update Feb 05 -Andy
-->
	 <h3>Half-Life</h3>
<blockquote>
How to Make a Sphere in Worldcraft - <a href="mailto:n_alger_@hotmail.com">Mazemaster</a>
</blockquote>
<h4>So you want to make a sphere, eh?</h4> 
<br />
<p>
Well there are several techniques to make one, but by far the easiest method in Worldcraft is called the &quot;cone slicing&quot; method. The basic principle of the cone slicing method is to take a cone, slice it into pieces and then scale the pieces up or down to give it a spherical shape.
</p>
<hr />
<p>
<a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/content/half-life/tutorials/sphere/sphere.zip">Download</a> the sample maps (rmf format) - 6.00 KB
</p>
<hr />
<p>
Lets get started. First you will need to fire up Worldcraft. To begin, select spike from the block tool make yourself a cone. It should have at least 8 sides if you want your sphere to look spherical, the more sides the more spherical it will look for a given size.
</p>
<center>
<img src="content/half-life/tutorials/sphere/sphere1.jpg" width="450" height="360" alt="Sphere1" title="Sphere1" />
</center>
<p>
Now you need to set up some template cylinders on the sides of the spheres to give you a guide of where to slice the cone. These template cylinders will not actually be in the final sphere, they are just there to guide you as you are messing with the cone. Since the cone will only be the top half of the sphere, you only really need half of the template cylinder.
</p>
<center>
<img src="content/half-life/tutorials/sphere/sphere2.jpg" width="450" height="360" alt="Sphere2" title="Sphere2" />
</center>
<p>
From now on, you will only need to deal in 1 2d window, the one that shows the profile of the template cylinder and the upright cone (y/z in this example). First resize your cone so that it is the height of the template cylinder.
</p>
<center>
<img src="content/half-life/tutorials/sphere/sphere3.jpg" width="450" height="360" alt="Sphere3" title="Sphere3" />
</center>
<p>
Now go into the 1 unit grid. Note that you should not use the 1 unit grid for 99% of mapping, only special situations such as making a sphere.
In the next step, you will determine WHERE to slice your cone and this is of critical importance. To find out where you should slice your cone, drop an imaginary line down from a point on your template cylinder and find where it intersects the cone. Use the clip tool to slice the cone horizontally at this location.
</p>
<center>
<img src="content/half-life/tutorials/sphere/sphere4.jpg" width="450" height="360" alt="Sphere4" title="Sphere4" />
</center>
<p>
Next, you will have to scale the pieces of the cone to match the form of the template. This is done using vertex manipulation. Now select all the &quot;middle&quot; verticies of the two pieces of the cone. This is most easily done by making a bounding box around all of them. If you click on verticie by vertecie then you will only select the verticies for 1 piece instead of both.
</p>
<center>
<img src="content/half-life/tutorials/sphere/sphere5.jpg" width="450" height="360" alt="Sphere5" title="Sphere5" />
</center>
<p>
Now to move the verticies up! Now that all of your verticies are selected, grab the CENTER verticie and drag it up until the shape fits the template. Be sure to grab verticies that are literally on grid units when dragging all of the verticies or else everything will snap to grid in weird ways which will make all of your objects invalid. )-:
</p>
<center>
<img src="content/half-life/tutorials/sphere/sphere6.jpg" width="450" height="360" alt="Sphere6" title="Sphere6" />
</center>
<p>
Now you have half of your sphere. All you have to do is turn it upside down and you'll have your full sphere. Be sure to delete the template cylinder as well. The sphere made in this tutorial only uses 4 rows and 8 columns, so it's kind of &quot;blocky&quot; looking, but its at least ok.
</p>
<center>
<img src="content/half-life/tutorials/sphere/sphere7.jpg" width="450" height="360" alt="Sphere7" title="Sphere7" />
</center>
<p>
Remember, the number of sides your initial cone has determines the number of columns the sphere will have, and the number of sides your template cylinder has determines the number of rows or &quot;stacks&quot; that your sphere will have.
Beware, if you resize your sphere and stretch it about, you may get invalid objects due to floating point errors so it is best to make your sphere the size you want it to be the first time instead of using a prefab sphere and resizing it. This is especially true with higher-poly spheres.
The following is a sphere I made with 12 stacks and 12 rows, you can see how much better it looks:
</p>
<center>
<img src="content/half-life/tutorials/sphere/sphere8.jpg" width="450" height="360" alt="Sphere8" title="Sphere8" />
</center>
<p>
If you are going to be making different parts of the sphere into different entities then you might consider putting the &quot;null&quot; texture on the inside faces of the sphere in conjunction with Merl's modified ZHLT (<a href="http://www.chatbear.com/uploaded/1011059245-nulltex.zip">http://www.chatbear.com/uploaded/1011059245-nulltex.zip</a>).
</p>			
<!--EOF@74--></ul><h1 id="196" name="196" class="book-h3">How to make respawnable glass</h1><ul><!-- 
by Koga73(koga73@msn.com) 2004 
Update- Validated XHTML - FEB 05 Andy
-->
	<h3>Half-Life</h3>
<blockquote>
How to make respawnable glass - by <a href="koga73@msn.com">Koga73</a>
</blockquote>
<p>
Have you ever wondered how to make respawnable glass in half-life or tfc? <br />
I have. I needed it for a map when I began mapping about 4 years ago... Now that I'm an advanced mapper I finally figured it out! (I'm not saying I was trying for 4 years to make respawnable glass or anything ... I have a real life!).
</p>
<hr />
<h4>Respawnable Glass</h4>
<p>
To make respawnable glass, do the following:
</p>
<ol>
<li> First make a polygon with a glass brush,</li> 
<li> Tie the polygon to an entity - func_wall_toggle,</li> 
<li> Set the properties for the func_wall_toggle too;</li> 
</ol>
<blockquote>
<span style="color: #ff0000; font-weight: bold">name:</span> glass
<span style="color: #ff0000; font-weight: bold">render mode:</span> texture
<span style="color: #ff0000; font-weight: bold">fx_amount:</span> 90
</blockquote>
<ol start="4">
<li> Create a brush of a crack and put it over the glass so when it is shot, it breakes.</li>
<li>Tie the crack to and entity - func_wall_toggle;</li> 
</ol>
<blockquote>
<span style="color: #ff0000; font-weight: bold">name:</span> glass
<span style="color: #ff0000; font-weight: bold">render mode:</span> solid
<span style="color: #ff0000; font-weight: bold">fx_amount:</span> 255
</blockquote>
<ol start="6">
<li> Create a brush of the AAA trigger texture and put it over the crack,</li> 
<li> Tie it to an entity of button_target and set it's properties too;</li> 
</ol>
<blockquote>
<span style="color: #ff0000; font-weight: bold">target:</span> multiglass
<span style="color: #ff0000; font-weight: bold">render mode:</span> solid (<span style="font-style: italic">this will make it invisible</span>)
</blockquote>
<ol start="8">
<li> Create the AAA brush over your button_target,</li>
<li> Tie it to an entity - func_wall_toggle and set too;</li>
</ol>
<blockquote>
<span style="color: #ff0000; font-weight: bold">name:</span> glass
<span style="color: #ff0000; font-weight: bold">render mode:</span> solid
<span style="color: #ff0000; font-weight: bold">under flags, check:</span> starts invisable.
</blockquote>
<ol start="10">
<li> Create an entity: ambient_generic and set to;</li> 
</ol>
<blockquote>
<span style="color: #ff0000; font-weight: bold">name:</span> glasswave
<span style="color: #ff0000; font-weight: bold">wav name:</span> glassbreak3 (or other sounds)
<span style="color: #ff0000; font-weight: bold">volume:</span> 10
<span style="color: #ff0000; font-weight: bold">start volume:</span> 10
<span style="color: #ff0000; font-weight: bold">under flags check:</span><span style="font-style: italic">start silent, not looped, with small radius</span>
</blockquote>
<ol start="11">
<li> Create a multi_manager and set too; </li> 
</ol>
<blockquote>
<span style="color: #ff0000; font-weight: bold">properties:</span> click - smart edit
add the folowing with values of zero:
<span style="color: #ff0000; font-weight: bold">glass:</span> 0
<span style="color: #ff0000; font-weight: bold">glasswave:</span> 0
add the folowing with values of 5 (<span style="font-style: italic">or how long you want until the glass restores</span>)
<span style="color: #ff0000; font-weight: bold">glass:</span> 60
</blockquote>
<p>
That should do it. Follow these instructions and your glass will constantly respawn when broken ... without having to call the repair_entity (that's a joke!)
</p>
<!--EOF@78--></ul><h1 id="4" name="4" class="book-h3">Making a Custom Console Background</h1><ul><!-- 
by Merl (merlinis@bigpond.net.au) 2001
by Gard (stephen@geol.uwa.edu.au) 2003 
Updated XHTML - FEB 05 Andy
-->
<h3>Half-Life</h3>
<blockquote>
Making a Custom Console Background - Created by Merl<br />
<a href="stephen@geol.uwa.edu.au">Updates contact RUST</a>
</blockquote>
<p>
<span style="font-weight: bold">Preface:</span><br />
This tutorial will show you how to make your own console background and loading images for your mod.
</p>
<span style="font-weight: bold">You will need:</span>
<ul>
<li> Valve's modified version of ID Software's Qlumpy.exe executable (available in the Half-Life SDK or <a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/content/half-life/tutorials/conback/qlumpy.zip">here</a> if you dont have the SDK)</li>
<li> A competent image editing program (I myself use Adobe PhotoShop for all my image editing needs. However, If you need a shareware editor fast, may I suggest Jasc Software's Paint Shop Pro- Available here: <a href="http://www.jasc.com/">http://www.jasc.com/</a> )</li>
<li> Notepad</li>
</ul>
<span style="font-weight: bold">Just a few notes:</span>
<ul>
<li> The console background and loading image are stored in a wad file in the mod's root directory called cached.wad. </li>
<li> I would advise that you make your own mod before you do this. Don't worry, making a new mod will only take about 30 seconds, and only requires the creation of 1 file. For more on this, go <a href="http://collective.valve-erc.com/index.php?go=howto_mod">here.</a></li>
<li> If you don't want to bother with that, then at least back up your current cached.wad file in your valve directory before changing it. You never know that may happen.</li>
</ul>
<p>
<span style="font-weight: bold">Making the images</span><br />
First of all, were going to have to make the images themselves. 
</p>
 <ol><!--1-->
<li> Fire up your image editor. Create a new image by going to File -> New.</li>

<li> You should now specify the dimensions for the new image. For the purposes of this tutorial, make the dimensions 320 x 200 pixels. You may choose to experiment with this size later.</li>

<li> Make it! Draw something, import an image relevant to your mod, whatever.</li>
</ol>
<ul>
<li><span style="font-weight: bold; font-style: italic">NOTE:</span> It would be illogical to make a console background that makes the text of the console unreadable. So, when designing the console background, be sure to keep in mind the colour of the console text.</li>
</ul>
<ol start="4"><!--4-->
<li> When your finished, save your image as <span style="font-weight: bold">conback.bmp</span> (note: the image must be a normal 8-bit 256 colour bitmap). You can actually name it whatever you want, but I'll use this for this tutorial.</li>
<li> Repeat steps 1-3 for the Loading image, and save it as <span style="font-weight: bold">loadback.bmp</span>. Again, make sure it is saved as an apropriate bitmap.</li>
 </ol>
<p>
Now that we have our images, we will compile them both into the cached.wad file using the Qlumpy.exe  tool. But, a few things need to be taken care of:
</p>
<ul>
<li> Make a new temporary folder on your hard drive. Something like <span style="font-style: italic">c:\temp\qlumpy\ </span> will work best and cause you less hassles later on.</li>
<li> Take qlumpy.exe out of the SDK (look in the Texture Wad Tools folder) and put it in the temp directory you just made. Also, put both your images in there.</li>
</ul>
<p>
<span style="font-weight: bold">Compiling your Cached.wad</span><br />
OK, Now were ready to compile your cached.wad file.
</p>
<ol start="1"><!--1-->
<li> Fire up Notepad. Enter the following lines exactly as they appear:</li>
</ol>	
<hr />
<code>
			$DEST &quot;cached.wad&quot;<br />

			$loadbmp &quot;<span style="color: #FF8000">c:\temp\qlumpy\conback.bmp</span>&quot;<br />
			conback qpic 0 0 <span style="color: #0000FF">320 200</span><br />

			$loadbmp &quot;<span style="color: #FF8000">c:\temp\qlumpy\loadback.bmp</span>&quot;<br />
			loading qpic 0 0 <span style="color: #0000FF">320 200</span><br />
</code>
<hr />
<blockquote>
<span style="font-weight: bold; font-style: italic">NOTE:</span> You will need to replace the <span style="color: #FF8000">Orange</span> lines above with the actual path to the images on your Hard Drive. If you have been using the exact paths and names I have been using in this tutorial, then you wont need to change anything.
<span style="font-weight: bold; font-style: italic">Advanced users note:</span> IF you are experimenting with different image sizes, then I suggest you modify the last two numbers in <span style="color: #0000FF">Blue</span> to reflect the dimensions of your two images. 
</blockquote>
<ol start="2">
<li> Save the file in your temporary directory (<span style="font-style: italic">c:\temp\qlumpy</span> in this tutorial) as <span style="font-style: italic">console.ls</span></li>
</ol>
<ul>
<li><span style="font-weight: bold; font-style: italic">NOTE:</span> the extension you should save under must be <span style="font-style: italic">.ls,</span> NOT <span style="font-style: italic">.txt,</span> as Notepad will save by default. Make sure you check after you have saved this file that the extension is correct before proceeding. To do this, make sure Windows is not hiding your file extensions.</li>
</ul>
<ol start="3">
<li> In Notepad, goto File -> New. This time, enter the following:</li>
</ol>
<hr />
<code>qlumpy console.ls</code>
<hr />
<ol start="4">			
<li> Save the file in your temporary directory as consolewad.bat.</li>
</ol>		
<ul>
<li><span style="font-weight: bold; font-style: italic">NOTE:</span> As above, make sure the extension is .bat, and not .txt. 	Also, you can actually name this file anything you want.</li>
</ul>
<p>
Now all that remains is to simply double-click on consolewad.bat, and a dos window should appear, think about all of this and eventually spit out a cached.wad file.
</p>
<p>
All you need to do is put this cached.wad file in your mod's root directory, and the changes *should* take effect.
</p>
<!-- eof @ 106 -->
</ul><h1 id="539" name="539" class="book-h3">Making New Buttons for Your MOD</h1><ul><!--
by Cheesemonster (http://rcbot.bots-united.com/emailuser.php?u=1) 2004 
Updated to  XHTML FEB 05 - Andy
-->
<h3>Half-Life</h3>
<blockquote>
<span style="font-weight: bold">Making New Buttons for Your MOD</span> by <a href="http://rcbot.bots-united.com/emailuser.php?u=1">Cheesemonster</a> .
</blockquote>
<h3>Introduction</h3>
<p>
Allows you to add custom buttons to your MOD
</p>
<hr />
<!--break-->
<h3>Step 1: open file input.cpp</h3>
<p>
you need to first create a variable, typically global to the file which is a "kbutton_t"
</p>
<p>
you'll find a lot of these declared at once in input.cpp, so add something like:
</p>
<span style="color: #ff0000">
<pre>
kbutton_t in_my_new_button;
</pre>
</span>
<p>
Or whatever you want to call it :p
</p>
<h3>Step 2: Specify the Command you want to use</h3>
<p>
Each button has a command, e.g. attack has +attack as a console command
</p>
<p>
You need to create a command in console from it as well, you can do this by using pfnAddCommand()
</p>
<p>
Although first you need to make a function which just makes the key down or up (pressed or released)
</p>
<p>
So you need to make TWO functions and TWO pfnAddCommand statements. Have a look...
</p>
<span style="color: #ff0000">
<pre>
// pressed button
void IN_My_New_Button_Down(void)
{
      KeyDown( &amp;in_my_new_button );
}

// released button
void IN_My_New_Button_Up(void)
{
      KeyUp( &amp;in_my_new_button );
}
</pre>
</span>
<p>
There is also a place in input.cpp where a lot of pfnAddCommand()'s are made. Add your commands there.
</p>
<p>
you need to specify the command you want it to be and the name of the function which deals with it that you just made above. For example:
</p>
<span style="color: #ff0000">
<pre>
      gEngfuncs.pfnAddCommand ("+my_button", IN_My_New_Button_Down);
      gEngfuncs.pfnAddCommand ("-my_button", IN_My_New_Button_Up);
</pre>
</span>
<p>
remember your button whatever you want.
</p>
<h3>Step 3: Giving the button an ID</h3>
 <p>
Each button has a cont=stant identification to know what buttons are pressed. e.g. Attack has the constant IN_ATTACK, we want to make our own.
</p>
<p>
Now you should make a new bit for your button that will work with 'pev->button' in entvars.
</p>
<p>
Define it in input.h, as follows:
</p>
<span style="color: #ff0000">
<pre>
#define IN_MY_NEW_BUTTON (1&lt;&lt;16)
</pre>
</span>
<h3>Step 4: Check if button is pressed</h3>
 <p>
That's your new button's bit mask set that you can check in game if it is pressed.
</p>
<p>
Now you've done that you can go down into the CL_ButtonBits() function. Like this:
</p>
<span style="color: #ff0000">
<pre>
int CL_ButtonBits( int bResetState )
</pre>
</span>
<p>
Add some new code to add your new bitmask to the bits pressed when your button in_my_new_button's state is 3 (i Think!)
</p>
<p>
Here is an example:
</p>
<span style="color: #ff0000">
<pre>
      if ( in_my_new_button.state &amp; 3 )
      {
            bits |= IN_MY_NEW_BUTTON;
      }
</pre>
</span>
<h3>Step 5: Resetting the button State</h3>
<p>
You also have to add the button when your resetting the state at the bottom of the function.. where it has all of this stuff..
</p>
<span style="color: #ff0000">
<pre>
      if ( bResetState )
      {
            in_attack.state &amp;= ~2;
            in_duck.state &amp;= ~2;
               ...
               ...
        }
</pre>
</span>
<p>
so now just add..
</p>
<span style="color: #ff0000">
<pre>
in_my_new_button.state &amp;= ~2;
</pre>
</span>
<h3>Finished</h3>
<p>
That's it. You have just codified your first button in Half-life. Congratulation!!!
</p>
<!--EOF@141--></ul><h1 id="1046" name="1046" class="book-h3">R_speeds</h1><ul><!--R_speeds, submitted by Andy APR 05 originally written for TWHL 2003-->
<h3>Half-Life</h3>
<blockquote>R_speeds -  by Andy<br />
This tutorial was first written late 2002 and predominantly deals with the original Half-Life, since then there has been a massive increase in the average household PC's ability to render games, HL2 is an example of that. Most of this information is still valid across all platforms but some of the quoted maximums might be severely outdated.<br />
Regardless of that the theory is still sound. 
</blockquote>
<h3>Contents</h3>
<ul>
<li><a href="/node/1046#speeds">What are 'r_speeds'</a></li>
<li><a href="/node/1046#limits">What is within 'limits'</a></li>
<li><a href="/node/1046#reduce">Reducing r_speeds</a></li>
<li><a href="/node/1046#corners">Corners, Mitering and molding</a></li>
<li><a href="/node/1046#texture">Sky Textures and Boxes</a></li>
<li><a href="/node/1046#brush">General brush building</a></li>
<li><a href="/node/1046#clip">Clipping, Carving and more VM</a></li>
<li><a href="/node/1046#vis">Vis Blockers</a></li>
<li><a href="/node/1046#summary">Summary</a></li>
<li><a href="/node/1046#read">Further Reading</a></li>
</ul>
<p>
My first level of any consequence lagged badly and I didn't understand why. I posted on a few well known and authorative sites, read all I could on the subject and ended up being more confused than when I started. <br />
So not to be left in the dark, I did some research and read all the articles written by the &quot;Experts&quot; on r_speeds, unfortunately and a lot of what I read contradicted itself, so I decided to test all the theories. 
</p>
<h3 id="speeds">What are 'r_speeds' ?</a></h3>
<p><span style="font-weight: bold;">OpenGl</span><br />
First let's have a look at what r_speeds are. Most sites I visited agreed that <span style="color: #ff0000">r_speed</span> stands for Render Speed. The speed at which the game engine draws the frames you see to the screen.<br /> 
If you open the <span style="font-weight: bold;"><a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/content/half-life/tutorials/speeds/r_speeds.zip">example map</a></span> it contains an RMF and a .map file that walks you through the some examples. The first thing you need to do is bring up the console by typing <span style="font-weight: bold;">~</span> (tilde key) and then type <span style="font-weight: bold;">r_speeds 1</span> you will be presented with 4 lines of numbers in the top left hand corner of the screen. If your Half-Life graphics options are set to use OpenGL, they should look something like this:
</p>
<div style="margin: 0px auto; padding: 1px; width: 268px; border: 1px solid #999; text-align: center; display: block;">
<img src="content/half-life/tutorials/speeds/r_speeds_6_small.jpg"  width="268" height="76" alt="OpenGL Numbers" title="OpenGL Numbers" />
</div>
<p class="clear: both;"></p>
<ul>
<li><span style="color: #ff0000">60fps</span>: the number of frames being drawn to the screen per second. The game should appear fluid at above about 25fps.</li>
<li><span style="color: #ff0000">0ms</span>: the time in milliseconds that it takes to execute one game cycle (or the time taken to draw this frame). </li>
<li><span style="color: #ff0000">112 wpoly</span>: the World Polygon count. This is the figure that people often talk about when they are describing r_speeds. This number is a result of the engine dividing the areas of the map that require a texture into polygons based on the scale of the texture to be rendered. It is not the number of brushes in the map.</li>
<li><span style="color: #ff0000">0 epoly</span> is the Entity Polygon count, but not the entities you're thinking of. It is the number of Model polygons (xxx.mdl) being rendered. Visible point-based entities like monsters, suits, weapons, shell casings, gibs are all models. An <span style="font-style: italic;">item_suit</span>, for example, will increase this figure to 960. </li>
</ul>
<p>Epolys do have an affect on the <span style="font-weight: bold;">fps</span> and <span style="font-weight: bold;">ms</span> counts, so keep this in mind when placing models, monsters and items. <br />
You can use up to 500 non-visible entities, such as path_corners, trigger_xxx and multi_managers in in your map and the epoly count (and the wpoly count) will not be affected. But beware of possible Entity Overflow errors.
</p>
<p><span style="font-weight: bold;">Software Mode</span><br />
If on the other hand you have your HL video properties set to Software mode, the figures will look like this:
</p>
<div style="margin: 0px auto; padding: 1px; width: 268px; border: 1px solid #999; text-align: center; display: block;">
<img src="content/half-life/tutorials/speeds/r_speeds_7_small.jpg" alt="Software Numbers" width="268" height="76" />
</div>
<p class="clear: both;"></p>
<p>And they mean.....</p>
<ul>
<li><span style="color: #ff0000">20.1ms</span>: the number of milliseconds it takes to execute one game cycle.</li>
<li><span style="color: #ff0000">205</span>: the total number of polygon surfaces in view.</li>
<li><span style="color: #ff0000">180</span>: the number of polygon surfaces in view that are drawn.</li>
<li><span style="color: #ff0000">155</span>: total visible polygons which aren't drawn.</li>
<li><span style="color: #ff0000">0 surf</span>: the number of dynamically lit surfaces.</li>
</ul>
<p>
The interesting thing about using software mode to check your r_speeds is that you can see how many polygons the software engine is trying to draw. The important figure is the 'polygon surfaces in view' (180) - this is the figure that you need to keep down.<br />
The software engine stops rendering textured polygons after it reaches <span style="color: #ff0000">800</span>, the brushes are still there, but the engine will not render texture on any more. So if you are designing a map that will be played on a machine that can only render in Software mode, this is worth remembering.
</p>
<p>
The other thing of interest is the surf reading. Basically this is the number of surfaces that have a changing light characteristic, such as a surface affected by a flashing light. Throw a few pulsating lights into your level and you will notice the difference. Muzzleflash from weapons also effects the surf reading, but not as drastically as Dynamic Lights.<br />
You must limit the number of Dynamic lights (Lights that have a custom or appearance property) to approximately 4 in one given viewable area or you will receive the error &quot; Too many light faces &quot; but once again there are exceptions to this rule.
</p>
<p>
So now you know what the figures represent...
</p>
<h3 id="limits">What is 'within limits'?</h3>
<p>
There are so many figures suggested in other forums, web sites and tutorials that it hard see what they are referring to. The reason for this is that it depends on what your map will be used for and what computer it will be run on. If it's multi-player map, 'what is the average speed of the connection to the server?' Questions like this, and their response will determine what you think is acceptable. [After all, it is up to you...]
</p>
<p>
As a really general rule of thumb, single-player maps can get away with a wpoly count of 600 to 800 without any appreciable lag. Having said this, if you were to run the same map on a 486DX66 with a 1Mb graphics card in software mode, it wouldn't run.... So the thing to remember here is what machine the map will eventually be used on. If you are distributing an SP Mod, then spare a thought for the guy who doesn't own a supercomputer.
</p>
<p>
A multi-player map or bot-filled map should be built with a wpoly count of 400 to 600 or less. Don't forget that the epoly count will increase rapidly as players (entity models) arrive in the same area (this is also seen in SP maps that have a large number of visible entity models in the same space, such as a lot of monsters or an Osprey). This will cause lag, but the reason I have not mentioned an acceptable figure here is that I really don't know. Some suggestions are for 10 000 max with the inclusion of all possible player entities. Personally I think this is a bit high, and some tutorials actually limit the areas by model count and max player count. Just remember that a high epoly count does increase lag. So the placing of static models is crucial. When everyone runs to grab the grenades, the epoly count will go through the roof. So in these areas, limit the number of wpolys belonging to static models such as cars, tanks, etc. and limit epolys belonging to any entities rendered visible that might be functional or not. 
</p>
<p>
As recent as March 2005, it is still good practice to limit your r_speeds to 800 in normal traffic areas of your map.
</p>
<h3 id="reduce">Reducing r_speeds</h3>
<p>
Building a huge box will not increase r_speeds until you add a visible texture. So build a box, 3008x256x3008 and add the <span style="color: #ff0000">crete3_wall01</span> texture to all faces with a scale of <span style="font-weight: bold;">X</span>: <span style="color: #ff0000">1</span> and <span style="font-weight: bold;">Y</span>: <span style="color: #ff0000">1</span>. Add an <span style="font-style: italic;">info_player_start</span> and a <span style="font-style: italic;">light</span> entity. Now compile it. You hate me don't you? Is your machine still trying to compile the map?...<br />
When your map finally compiles, bring up the console and enter <span style="font-weight: bold;">r_speeds 1</span>. We are going to have a look at how the engine divides your map into sections for texturing, so enter <span style="font-weight: bold;">gl_wireframe 2</span> (this will only work in OpenGL mode). You should have a wpoly figure of about 506. Also of interest is that the millisecond refresh speed may have jumped. The gl_wireframe mode will show you a set of white lines. Lots of them aren't there?<br />
Now go back to the texture properties and increase the scale of the texture to <span style="color: #ff0000">10</span> in both axes and recompile the map (faster this time wasn't it?) Enter <span style="font-weight: bold;">r_speeds 1</span> and <span style="font-weight: bold;">gl_wireframe 2</span> and you will see that the wpoly count has been reduced to <span style="color: #ff0000">16</span>; there are also a lot fewer white lines. In fact there are 16 boxes outlined by the white lines.<br />
Has the penny dropped?<br /> This is the big theory folks. The size of a visible texture rendered directly affects the wpoly count. The game engine divides the visible map into sections called world polygons based on the scale of the textures applied to brushes.<br /> 
So if the scale of your texture on a single surface is high the wpoly count will be low (above <span style="font-weight: bold;">X:Y:</span><span style="color: #ff0000">1</span>, but less than <span style="font-weight: bold;">X:Y:</span><span style="color: #ff0000"> 3</span> I will get to this a bit later...).<br />
Multiple textures on multiple brushes will also increase the wpoly count, but the wpoly count created by a single texture applied to multiple brushes that form a solid will be dependent on the scale of the texture chosen and not on the number of brushes in the solid.<br />
Have I lost anyone yet? <br />
It is <b>important</b> to mention at this stage, that the rescaling of the texture to a value of <span style="font-weight: bold;">X:Y:</span><span style="color: #ff0000">10</span> was only an example. It is not good practice to stretch your textures beyond <span style="color: #ff0000">2</span> , and I have noticed that the savings gained in the reduction of r_speeds seems to reverse when you resize above a scale of <span style="color: #ff0000">2</span>. Stretching beyond 3 times the normal texture size might cause compiling errors.
</p>
<p>
If you do follow this concept then great, but unfortunately no-one builds maps with a single texture, or without anything in them. So let's look at some ways to reduce r_speeds in a normal map. In the <span style="font-weight: bold;"><a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/content/half-life/tutorials/speeds/r_speeds.zip">example map</a></span> I have added boxes of similar construction. Basic blocks, hollowed and then a corridor carved into some of them. There are columns in most of the boxes.<br />
Actually the columns are borrowed from the original Help file that came with Hammer 3.4 and provide multiple faces to work with.<br /> 
The first one is a normal cylinder, and the rest are vertex manipulated columns. Also included is a teleporter between boxes for the first few, while you get used to the gl_wireframe picture. Print out the <span style="font-weight: bold;">'Tour.txt'</span> to guide you through the example map.
</p>
<h3 id="corners">Corners, Mitering and molding</h3>
<div style="margin: 0px auto; padding: 1px; width: 340px; border: 1px solid #999; text-align: center; display: block;">
<a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/content/half-life/tutorials/speeds/r_speeds_5.jpg"><img src="content/half-life/tutorials/speeds/r_speeds_5_small.jpg" width="340" height="235" alt="Corners 1" title="Corners 1" /></a>
<br />Click to enlarge 
</div>
<p class="clear: both;"></p>
<p>
Blending of corners has no affect on r_speeds, and sometimes leads to strange texture placement.<br />
Mitering is another form of Vertex manipulation (VM). VM of solids can sometimes increases the wpoly count, because you are adding additional faces to be textured, but it should only be by about 2 or so, if your reshaped solid is conventional (ie: block). As mentioned in most tutorial's on VM, it also takes care of those brushes that don't quite meet. There are a number of error codes associated with VM. 
</p>
<h3 id="texture">Sky Textures and Boxes</h4>
<p>
Sky texture is one of the few textures that doesn't require Scaling. You will get the same wpoly count using SKY texture with a Scale <span style="font-weight: bold;">X:</span><span style="color: #ff0000">1</span> and <span style="font-weight: bold;">Y:</span> <span style="color: #ff0000">1</span> as you would with <span style="font-weight: bold;">X:</span> <span style="color: #ff0000">10</span><br />
and <span style="font-weight: bold;">Y:</span> <span style="color: #ff0000">10</span>. The only brush that affects the r_speeds when sky is rendered is any other visible textured brush in the map. So if you had a massive box as in the example map and added sky to the walls and the ceiling and added a light_environment then compiled it, you should get a wpoly count based on the scale of the floor texture. (12 wpoly in the example map because the walls are textured at <span style="font-weight: bold;">X:</span> <span style="color: #ff0000">10</span> <span style="font-weight: bold;">Y:</span> <span style="color: #ff0000">10</span>.)<br />
It is important to understand the boundaries of your map. Building a huge skybox around it is not a good idea, because the engine will render texture on brushes underneath your map, and on the sides even though you will never see them. This will increase r_speeds. I use the &quot;build the map add the sky technique&quot; and end up filling in the gaps. This method basically caps off the sides of the map, and then adds the top.
</p>
<h3 id="brush">General brush building</h3>
<p>
If a brush that is textured touches another brush that is textured, the engine carves up one of the brushes into additional world polygons to correctly display the texture. This increases the wpoly count. You can work around this in two ways:
</p>
<ul>
<li> First is to leave a 1 unit gap between the brushes, although there are areas where this isn't possible.</li>
<li>The second way is to turn one of the brushes into a <span style="font-style: italic;">func_wall</span> entity (actually any entity that will render texture). An entity brush that touches a solid textured brush will not affect the way the solid brush is rendered, and this is why it is recommended that you use entity brushes for light fittings, and small objects.</li>
<li>Using entity brushes reduces r_speeds, but don't be fooled into thinking that entity brushes do not contribute to speed. Remember, any surface that is textured will increase the r_speeds of a map, regardless of wether it is an entity brush or not.</li>
</ul>
<p>
Entity Brushes also have an effect on the white lines in gl_wireframe view. It looks as though the entity brush is blocking the lines behind it, that might lead you to believe that the engine isn't rendering textures or brushes behind the entity brush. The truth is that Entity brushes dont block VIS, just the same as the light shining through them problem, that came before Zoners came up with a fix. SlayerA and I discovered this in a little test map with an arm chair behind a <span style="font-style: italic;">func_wall</span> and an armchair in the other same sized and textured room. When the map ran, it looked like a blank wall, but the r_speeds were similar in both rooms. The engine was rendering both chairs, but we could only see one with gl_wireframe enabled.
</p> 
<div style="margin: 0px auto; padding: 1px; width: 340px; border: 1px solid #999; text-align: center; display: block;">
<a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/content/half-life/tutorials/speeds/r_speeds_4.jpg"><img src="content/half-life/tutorials/speeds/r_speeds_4_small.jpg"  width="340" height="255" alt="Brushes" title="Brushes" /></a>
<br />Click to Enlarge 
</div>
<p class="clear: both;"></p>
<h3 id="clip">Clipping, Carving and more VM</h3>
<p>
If you build 4 cubes and piece them together to build a square, Select all of them, add texture and they will be rendered as 1 cube. Reduction in wpoly count, you bet.  However you have to apply the texture to the blocks when they are all selected (<span style="font-weight: bold;">Grouped</span>). The reason the blocks don't act as 4 separate cubes is because you have textured them together. This is where good texture Scaling and placement comes in. So if you can, Select the separate brushes and texture them as one, why can't you do that with brushes that touch each other? Because the cube becomes a solid for rendering purposes and the unseen areas are stripped out, where as the touching brushes form a &quot;T&quot; junction and require rendering differently.
</p>
<p>
Lot's of tutorials tell you not to Clip or Carve solids because it increases r_speeds, I haven't found any evidence of that unless the clipping is on a plane that is not square. So the trick is to stick to VM. If you are going to Carve, just be mindful that there can be problems. Test Carving until you get used to it, try the carve and then run the map to see if there have been any changes. Avoid carving with anything other than solid blocks.
</p>
<h3 id="vis">Vis Blockers</h3> 
<p>
In the example map, as you move between the boxes, you will come to a box with a corridor. You should see the wireframe extending into the next box, because the engine is rendering some of the textures in that box in advance. What you think you can see and what the engine thinks you should see are two different things. <br />
This is where vis blocking comes in. Entities do not block vis as you have probably found out (and I mentioned above). Lights on one side of a door will shine through a <span style="font-style: italic;">func_door</span> entity. So they cannot be used to stop the rendering of textures in another room. But a quick fix way is by building a blocking brush between boxes.
</p>
<div style="margin: 0px auto; padding: 1px; width: 340px; border: 1px solid #999; text-align: center; display: block;">
<a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/content/half-life/tutorials/speeds/r_speeds_1.jpg"><img src="content/half-life/tutorials/speeds/r_speeds_1_small.jpg"  width="340" height="317" alt="Wireframe" title="Wireframe" /></a>
<br />Click to Enlarge 
</div>
<p>
In the example you will see that the Vis blocking brushes are actually touching the wall. This creates fractures of the wall for texture rendering purposes, as did the columns, and increases the wpoly count. But you have to way up the benefits, try placing the brushes 1 unit away from the walls and floor, run the map and the try it again. If the 1 unit gap works then go with it. I tried this example with the brushes 1 unit away from the walls, and didn't get the reduction in the wpoly count that I had hoped for.<br />
By letting the brushes touch the walls I got the best reduction in wpoly count. The difference was about <span style="color: #ff0000">30</span>-<span style="color: #ff0000">40</span> wpoly.
</p>
<div style="margin: 0px auto; padding: 1px; width: 340px; border: 1px solid #999; text-align: center; display: block;">
<a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/content/half-life/tutorials/speeds/r_speeds_3.jpg"><img src="content/half-life/tutorials/speeds/r_speeds_3_small.jpg"  width="340" height="255" alt="Block out" title="Block out" /></a>
<br />Click to Enlarge 
</div>
<div style="margin: 0px auto; padding: 1px; width: 340px; border: 1px solid #999; text-align: center; display: block;">
<a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/content/half-life/tutorials/speeds/r_speeds_2.jpg"><img src="content/half-life/tutorials/speeds/r_speeds_2_small.jpg"  width="340" height="255" alt="Block in" title="Block in" /></a>
<br />Click to Enlarge 
</div>
<p class="clear: both;"></p>
<h3 id="summary">What have we learnt?</h3>
<p>
r_speeds increase in direct proportion to the amount of solid textured brushes in your map and their interaction with other solid visible textured brushes. The Scale of the texture drawn on those brushes can increase or decrease the wpoly count. Models, such as Monsters, other players, gib's and anything ending in &quot;.mdl&quot; will increase the epoly count. High epoly counts (above about 10,000) will increase overall r_speeds and refresh rates creating Lag. Entities that are not models do not affect the epoly count unless they are textured. <br />
If you're having trouble, run your map in OpenGL with <span style="font-weight: bold;">r_speeds 1</span> and <span style="font-weight: bold;">gl_wireframe 2</span> selected. Areas of high r_speeds will be visible then by the amount  of white gl_wireframe lines and High woply counts as you move around. Initial Design can save you some hassle but don't get too hung up on some of the old myths.<br />
It is basically all about how many visible brush faces the engine has to render...
</p>
<h3 id="read">Further Reading</h3>
<ul>
<li><a href="../node/266">BSP and the Visibility Process</a></li>
</ul>
<p>&nbsp;</p>
<hr />
<h4>Special mention and thanks go to:</h4>
<span style="font-weight: bold; font-style: italic;">FireBinders Test Chamber</span>: Issues, loved and hated it :-)<br />
<span style="font-weight: bold; font-style: italic;">Andrew C. Weldons Article on VERC</span>: Thanks Andrew,<br />
<span style="font-weight: bold; font-style: italic;">Handy Vandal's Site</span>: Thank's Karl<br />
Happy Mapping, and don't forget... <br />
If you have a question, post it in the forum.
<!--EOF@175--></ul><h1 id="541" name="541" class="book-h3">Sentry continued: adding Sentry-parts box and hud-icon</h1><ul><h3>Half-Life</h3>
<blockquote>
	<b>Adding Sentry-parts box and hud-icon to the Sentry Tutorial</b> by <a href="http://rcbot.bots-united.com/emailuser.php?u=1">Cheesemonster</a> .
</blockquote>

<h3>Introduction</h3>

<p>
This tutorial is to add a little more to the sentry tutorial. You are going to add a new entity which will be the "sentryparts" box you will use to make a sentry. Also a hud sprite will show up when you have the sentry parts. 
</p>
<hr noshade color="black">
<h3>Setting up the player</h3>

<p>
Each player must now need to know whether they have sentry parts or not so they can build the sentry.</p>
<p>
First you should add new variables in CBasePlayer class... open "player.h" and insert these into the CBasePlayer class, make them public or private if you want.</p>

<font color="red"><pre>
int m_iGotSentryParts; // is 1 when you have the parts. Initialise it to 0 at spawn 
int m_iPrevGotSentryParts; // Used to find out if we need to show the sprite on the HUD 
</pre></font>
 
<p>
Open up player.cpp and initialise these values at CBaseplayer::Spawn()... </p>

<font color="red"><pre>
   m_iPrevGotSentryParts   = 0; // Dont set this anywhere else except in UpdateClientData ONCE! 
   m_iGotSentryParts       = 0; 
</pre></font>

<p>
Just as a precaution, go into CBasePlayer::PreThink() and add this... </p>

<font color="red"><pre>

   if( !IsAlive() ) 
      m_iGotSentryParts = 0; 
</pre></font>

<p>
This is so the player loses the sentry parts when the player dies.
</p>

<h3>Making the sentry parts</h3>

<p>
Okay thats the variables set up. Now we need to make an entity that will be the sentry parts. The sentry parts will be a little box you have to pick up.</p>
<p>
Open up "MySentry.cpp" and add a new class at the end of the file. </p>

<font color="red"><pre>

class CMySentry_Pickup : public CBaseEntity 
{ 
public: 
   void Spawn(void); 
   void Precache(void); 
   void EXPORT PickupTouch(CBaseEntity *pOther); 
}; 

LINK_ENTITY_TO_CLASS( MySentry_parts, CMySentry_Pickup ); 

/*Dont forget this, 'MySentry_parts' will be the classname, 
you can change this, although they need to match up with the rest of the code. */
</pre></font>
 
<p>
Next we'll have the spawn function, where we call precache, initialise variables and set the touch function to PickupTouch() </p>

<h4>Sentry parts class methods</h4>

<font color="red"><pre>

void CMySentry_Pickup :: Spawn(void) 
{ 
   Precache(); 

   SET_MODEL(ENT(pev),"models/w_isotopebox.mdl"); // We'll use the isotope box model at the moment 

   UTIL_SetSize(pev,Vector(-16,-16,-16),Vector(16,16,16)); 
   UTIL_SetOrigin(pev,pev->origin); 

   pev->spawnflags        &= ~SF_NORESPAWN; 

   pev->gravity            = 1; 
   pev->solid              = SOLID_TRIGGER; // You can walk through it but you can touch it! 

   pev->health             = 100; 
   pev->max_health         = pev->health; 
   pev->takedamage           = DAMAGE_NO; 
   pev->deadflag      = DEAD_NO; 

   pev->movetype      = MOVETYPE_FLY; 
   pev->sequence      = 0; 
   pev->frame      = 0; 

   pev->nextthink          = gpGlobals->time + 0.1; 

   SetTouch(PickupTouch); 
    
} 
</pre></font>

<p>
The precahce funtion should be simple.. below 
</p>

<font color="red"><pre>

void CMySentry_Pickup :: Precache(void) 
{ 
   PRECACHE_MODEL("models/w_isotopebox.mdl"); 
} 
 
</pre></font>

<p>
The pickupTouch function is called when something touches the box, so we want to check if a player touches it, if so, set the sentry parts to 1 for that player and remove the box. </p>

<font color="red"><pre>

void CMySentry_Pickup :: PickupTouch (CBaseEntity *pOther) 
{ 
   if( pOther->pev->flags & FL_CLIENT ) 
   { 
      CBasePlayer *pPlayer = GetClassPtr((CBasePlayer*)pOther->pev); 

      if( pPlayer && !pPlayer->m_iGotSentryParts ) // Check if we can pick it up 
      { 
         pPlayer->m_iGotSentryParts = 1; 

         Killed(pev,GIB_NEVER); // Remove the parts 
      } 
   } 
} 
</pre></font>

<p>Save and build, You can now spawn this entity in the map by spawning the classname you specified in the LINK_ENTITY_TO_CLASS call. </p>

<h3>Build the sentry with sentry parts</h3>

<p>It isn't totally finished yet, we need to change the command to build the sentry and then add the HUD icon. </p>

<p>First, open up client.cpp and goto your "build_Sentry" command you have, and change it to this.. </p>

<font color="red"><pre>

   else if ( FStrEq(pcmd, "build_sentry" ) ) 
   {                            
      if( m_pPlayer->m_Sentry ) 
      { 
         ClientPrint( &pEntity->v, HUD_PRINTCENTER, "Sentry Already Built!\n"); 
      } 
      else 
      { 
         if( m_pPlayer->m_iGotSentryParts ) // got the parts? 
         { 
            Vector origin = UTIL_ForwardPosition(pEntity,64.0); 
             
            origin.z = m_pPlayer->pev->absmin.z + 24; 
             
            CBaseEntity *Sentry = CBaseEntity::Create( "MySentry", origin, pev->angles, pEntity ); 
             
            if( !FNullEnt(Sentry->edict()) ) 
            {                
               m_pPlayer->m_Sentry = Sentry; 
                
               Sentry->pev->owner  = pEntity; 
                
               ClientPrint( pev, HUD_PRINTCENTER, "Building Sentry...\n"); 
               m_pPlayer->m_iGotSentryParts = 0; // Set parts to zero since we've used them 
            } 
            else 
               ALERT(at_console,"Error allocating new edict for sentry!\n"); 
         } 
         else 
            ClientPrint( &pEntity->v, HUD_PRINTCENTER, "You don't have any sentry parts!\n"); 
      } 
   } 
</pre></font>

<h3>Setting up the HUD icon</h3>

<h4>Server-side</h4>

<p>
Thats the main stuff done, now the hud stuff, to do this we need to make a new user message and stuff in the client dll. </p>
<p>
First let's make the messages, open up player.h and look in the code where a lot of integer variables called gmsg[SOMETHING] are being declared, i.e. search for "gmsgGeigerRange" and you'll see the line.. <em>"int gmsgGeigerRange = 0;"</em>, put this underneath it... </p>

<font color="red"><pre>

int gmsgSentryParts = 0; 
</pre></font>

<p>
Now go into LinkUserMessages() in player.h and where there are a lot of variables being set to a REG_USER_MSG, add a new one underneath them liek this.. </p>

<font color="red"><pre>

   gmsgSentryParts = REG_USER_MSG("SentryParts",1); 
</pre></font> 

<p>Now staying in player.cpp, goto UpdateClientData() and after the HIDE_HUD stuff, add these lines </p>

<font color="red"><pre>

   if ( m_iPrevGotSentryParts != m_iGotSentryParts ) 
   { 
      int write_byte = 0; 

      if( m_iGotSentryParts ) 
         write_byte = 1; 

      MESSAGE_BEGIN( MSG_ONE, gmsgSentryParts, NULL, pev ); 
         WRITE_BYTE( write_byte ); 
      MESSAGE_END(); 

      m_iPrevGotSentryParts = m_iGotSentryParts; 
   } 
</pre></font>

<p>That should be all the message stuff figured out, now save all the files and build. </p>

<h4>Client-side</h4>

<p>Now open up the cl_dll workspace and open up hud.h and add the new HUD class (after the declaration of CHUDBase of course!) </p>

<font color="red"><pre>

class CHudSentryParts: public CHudBase 
{ 

public: 

   int Init( void ); 
   int VidInit( void ); 
   int Draw(float flTime); 
   int MsgFunc_SentryParts(const char *pszName,  int iSize, void *pbuf ); 

private: 

   HSPRITE m_hSpriteSentryParts1; 
}; 
</pre></font>

<p>
Go further down the hud.h file now and search for "GetSpriteIndex", below it you'll see a few lines declaring classess as variable structures, below them add the new line </p>

<font color="red"><pre>

   CHudSentryParts      m_SentryParts; 
</pre></font>

<p>
That should be all int hud.h, now open up "hud.cpp"... Search for ".Init()" and where you find it, add the new line below it.. </p>

<font color="red"><pre>

   m_SentryParts.Init(); 
</pre></font>

<p>
Now search for ".VidInit" and add the new line below one of the found lines </p>

<font color="red"><pre>

   m_SentryParts.VidInit(); 
 
</pre></font>

<p>
That is all in hud.cpp. Now we need to make our own file to contain the code for our SentryParts class. </p>

<h3>Client-side Sentry-parts code</h3>

<p>
Make a new file called something like "sentryparts.cpp" and add it to the cl_dll Source Files project (If the file doesnt appear in the workspace, press undo while the workspace window is selected and then just right click on the "Source Files" folder and "Add Files to folder", select the sentryparts.cpp file and OK). </p>
<p>In this new file we're going to add some code below.. </p>

<p>First we need to include some files... </p>

<font color="red"><pre>

#include "hud.h" 
#include "cl_util.h" 
#include "parsemsg.h" 
 
</pre></font>

<p>
Now declare the SentrtyParts message, this is the same name as the message name ("SentryParts") </p>

<font color="red"><pre>

DECLARE_MESSAGE(m_SentryParts, SentryParts) 
</pre></font>

<p>
Now declare the name of the sprite here, I've made my own sprite called sentryparts.spr (32x32 pixels), You can call it whatever you want, as long as the file exists so you can see it! </p>

<font color="red"><pre>

#define SPRITE_NAME "sprites/sentryparts.spr" 
 
</pre></font>
<p>
Note that the Init() Code below will hook the SentryParts message And make sure the class is called when we send the SentryParts net message </p>

<font color="red"><pre>

int CHudSentryParts ::Init(void) 
{ 
   HOOK_MESSAGE(SentryParts); 
   gHUD.AddHudElem(this); 

   return 1; 
} 
</pre></font>

<p>
The ViDInit part below will just initialise some variables or whever else you want to do, at the moment I've only got one variable to initialise so it looks very simple. </p>

<font color="red"><pre>

int CHudSentryParts ::VidInit(void) 
{ 
   m_hSpriteSentryParts1 = 0; 

   return 1; 
} 
 
</pre></font>

<p>
The draw funtion below will be called when the sprite is drawn on the hud. </p>

<font color="red"><pre>

int CHudSentryParts ::Draw(float flTime) 
{ 
   int r,g,b; 

   if ( !m_hSpriteSentryParts1 ) 
   { 
      m_hSpriteSentryParts1 = LoadSprite(SPRITE_NAME); 
   } 

   if( !m_hSpriteSentryParts1 ) 
      return 0; // Sprite doesn't exist, return 0 

   UnpackRGB(r, g, b, RGB_YELLOWISH); // "Yellowish" colour 
   SPR_Set(m_hSpriteSentryParts1, r, g, b); // Set these colours 

   int x = ScreenWidth - 64; // I've made my sprite 32 pixels wide so I just moved it 64 pixels from the edge of the screen 
   int y = ScreenHeight - (ScreenHeight/2); // I made it centre vertically. 

   // X and Y are positions on the HUD. 

   SPR_DrawAdditive(0, x, y, NULL); // Draw the sprite on X,Y 

   return 1; 

} 
 
</pre></font>

<p>The last bit is called when the message "SentryParts" is made, the READ_BYTE() will be the state of the sprite being shown (i.e. if it's 1, draw the sprite on the hud, if not then stop drawing it) </p>

<font color="red"><pre>

int CHudSentryParts ::MsgFunc_SentryParts(const char *pszName,  int iSize, void *pbuf ) 
{ 
   BEGIN_READ( pbuf, iSize ); 

   int flag = READ_BYTE(); 

   if (flag == 0) 
      m_iFlags &= ~HUD_ACTIVE;  // turn off the Draw function 
   else 
     m_iFlags |= HUD_ACTIVE; // else Draw it! 

   return 1; 
} 
 
</pre></font></ul><h1 id="538" name="538" class="book-h3">Sentry Tutorial</h1><ul><!-- by Cheesemonster (http://rcbot.bots-united.com/emailuser.php?u=1) 2004 -->
	 
<h3>Half-Life</h3>
<blockquote>
	<b>Sentry Tutorial</b> by <a href="http://rcbot.bots-united.com/emailuser.php?u=1">Cheesemonster</a> .
</blockquote>

<h3>Introduction</h3>

<p>This is a simple "Make you own sentry" tutorial, at the moment I haven't bothered about animations (it's just a CBaseEntity at the moment, not a CBaseMonster) so It looks quite simplistic, but you'll get the idea on how to set their animations once you get your own model for your own sentry.</p>

<p>There isn't MUCH explanation here, so just remember the Sentry is pretty basic, so you will be okay!</p>

<p>This tutorial is for a team multiplayer game, where the sentry will have its own Team name and will shoot players whose team doesn't match it's own (Hopefully!). I haven't tested all of this because I made my own sentry with a different name and fought different enemies so I had to change that, and don't know if everything will work okay.</p>

<p>The final sentry will look and work something like the sentries in TFC that the engineers build, we are going to have a phase when a player builds the sentry and can give it ammo and rockets.</p>

<p>Another addition to this is another tutorial that I done, which will allow you only to build a sentry when you pick up "sentry parts", when you have the sentry parts a Hud icon will show aswell. The sentry-parts tutorial is a follow-up from this one.

<hr noshade color="black">
<!--break-->
<h3>Setting up UTIL functions</h3>

<p>I've made my own UTIL functions to help with this, these are useful functions that will be used later. To make them, you will need to go into "UTIL.H" file and add these lines first for the function prototypes...</p>

<font color="red"><pre>
Vector UTIL_RelationToWorld(edict_t *player, Vector relation);
Vector UTIL_LengthFromVector(Vector relation, float length);
Vector UTIL_FixAngles( Vector vec );
float UTIL_FixFloatAngle(float vec);
</pre></font>

<p>Now open "UTIL.CPP" and add these functions...</p>

<font color="red"><pre>
Vector UTIL_FixAngles( Vector vec )
{
	vec.x = UTIL_FixFloatAngle(vec.x);
	vec.y = UTIL_FixFloatAngle(vec.y);
	vec.z = UTIL_FixFloatAngle(vec.z);

	return vec;
}

float UTIL_FixFloatAngle(float vec)
{
	if (vec > 180.0) vec -= 360.0;	
	if (vec < -180.0) vec += 360.0;

	return vec;
}

Vector UTIL_RelationToWorld(edict_t *player, Vector relation)
{
	if( !player )
		return Vector(0,0,0);

	Vector v_src,v_dest,v_forward,v_viewpoint,v_origin;
	
	v_origin = player->v.origin;	
	v_src = v_origin + player->v.view_ofs;
	
	v_viewpoint = player->v.v_angle + player->v.punchangle;	
	UTIL_MakeVectors(v_viewpoint);	
	v_forward = v_viewpoint + (relation * 8192.0);	
	v_dest = v_src + v_forward;

	return v_dest;
}

Vector UTIL_LengthFromVector(Vector relation, float length)
{
	return ( (relation / relation.Length()) * length );
}
</pre></font>

<h3>Setting up the sentry code</h3>

<p>For the sentry, make a new file called "MySentry.cpp" or whatever you want and add it to your project.</p>

<p>Note: All of this code is in order from start of the file to the end of the file.</p>

<p>Okay for the start of the sentry code we need some included files to use, these are the ones we need below:</p>

<font color="red"><pre>
#include "extdll.h"
#include "util.h"
#include "cbase.h"
#include "weapons.h"
#include "player.h"
#include "gamerules.h"
#include "explode.h" // for effects
#include "teamplay_gamerules.h" // for knowing teams
</pre></font>

<h4>Constants</h4>

<p>Next, we want to set some constants that might come in useful...</p>

<font color="red"><pre>
#define SENTRY_MAX_PITCH 10.0
</pre></font>

<p>This is the maximum angle the sentry will look up and down, you can change this totally if you want, because I've just been using pev->angle to make it easier but when you change the pev->angle.x to a high value, the sentry looks weird!</p>

<p>Now we need some more constants, such as fire rates and maximum amount of shells/rockets this Sentry can have...</p>

<font color="red"><pre>
#define SHOOT_ROCKET_TIME 2.0
#define SHOOT_SHELL_TIME 0.1

#define SENTRY_MAX_SHELLS  400
#define SENTRY_MAX_ROCKETS 50
</pre></font>

<p>Okay that's nearly all of the constants, we just need one more. I've added "build" functions to my sentry so this means it will take SENTRY_BUILD_TIME seconds for it to finish being built and start working. This is defined like this below:</p>

<font color="red"><pre>
#define SENTRY_BUILD_TIME  4.0 // 4 Seconds to build sentry
</pre></font>

<h4>Sentry Class</h4>

<p>Right now that's all the constants we need, let's get into the grips of the sentry class. As you'd probably know, we need our own Precache() and Spawn() function. I've also added my own Think functions for different events such as Build, Aim/Shoot, and when Killed, remember that your own Think/Touch/Use functions (etc.) should be set if you want to use them (By using SetThink(FUNCTION) for example).</p>

<font color="red"><pre>
class CMySentry : public CBaseEntity
{
public:
	void Spawn		( void );
	void Precache	( void );

	int AddShells  ( int l_iNewShells );  // Returns the amount of shells USED...
	int AddRockets ( int l_iNewRockets ); // Returns the amount of rockets USED...

	void EXPORT SentryThink	( void );
	void EXPORT SentryBuildThink( void );

	void EXPORT MySentryDeath ( void );

	void Dismantle ( void );

	virtual int TakeDamage(entvars_t *pevInflictor, entvars_t *pevAttacker, float flDamage, int bitsDamageType);

private:

	void Aim		( void );
	void Shoot		( void );
	void FireShell	( void );
	void FireRocket	( void );

	void RemoveFromPlayer ( void );

	CBaseEntity *GetBestEnemy ( void );

	int m_iRockets;
	int m_iShells;

	float m_fLastShootRocket;
	float m_fLastShootShell;

	float m_fLastAimTime;

	float m_fShellPercentFull;
	float m_fRocketPercentFull;

	float m_fBuildTime; // Time the sentry was BUILT...

	float m_fLastCheckVisibleEnemy; // Last checked to see if enemy was visible

	char m_szTeamName[MAX_TEAMNAME_LENGTH];

	CBaseEntity *m_pEnemy; // Current enemy

	Vector m_vBarrel; // Barrel position (gun point) NOT USED!
};
</pre></font>

<h4>Classname link</h4>

<p>Don't forget this bit below!</p>

<font color="red"><pre>
LINK_ENTITY_TO_CLASS( MySentry, CMySentry );
</pre></font>

<p>This makes the class (CMySentry) link to the classname of "MySentry" you can change this to whatever you want.</p>

<h4>Sentry Class Methods</h4>

<p>Now here comes the BuildThink() function, this is continously called while the Sentry is being built. All this function will do is wait until the SENTRY_BUILD_TIME is up, and make the sentry visible (as it was invisible whilst building because we set that in ::Spawn() )</p>

<font color="red"><pre>
void CMySentry :: SentryBuildThink( void )
{
	pev->nextthink = gpGlobals->time + 0.1;

	if( (m_fBuildTime + SENTRY_BUILD_TIME) <= gpGlobals->time )
	{
		EMIT_SOUND(ENT(pev), CHAN_BODY, "turret/tu_spinup.wav", 1.0, ATTN_NORM); // Spin up sound (when built)

		pev->effects &= ~EF_NODRAW; // Make visible again

		SetThink(SentryThink); // Change think function to normal sentry think function
	}
}
</pre></font>

<p>This is the main think function below. What this does is basically checks if the current enemy is still visible, if yes, aim and shoot at it, if not remove the enemy.</p>

<font color="red"><pre>
void CMySentry :: SentryThink ( void )
{
	pev->nextthink = gpGlobals->time + 0.1;
	
// BEGIN -- UPDATE BARREL POSITION (NOT USED!!)

	UTIL_MakeVectors(pev->angles);

	Vector v_End = UTIL_RelationToWorld(ENT(pev),gpGlobals->v_forward);
	m_vBarrel = UTIL_LengthFromVector((v_End - pev->origin),4);
	m_vBarrel.z += 32;

// END -- UPDATE BARREL POSITION (NOT USED!!)

	if( m_pEnemy && (m_fLastCheckVisibleEnemy <= gpGlobals->time) )
	{
		TraceResult tr;

		UTIL_TraceLine(pev->origin,m_pEnemy->pev->origin + m_pEnemy->pev->view_ofs,ignore_monsters,ENT(pev),&tr);

		if( tr.flFraction < 1.0 )
			m_pEnemy = NULL;

		m_fLastCheckVisibleEnemy = gpGlobals->time + 0.5; // Re-check visible enemy again in 0.5 seconds
	}

	if( (m_fLastAimTime + 0.2) <= gpGlobals->time ) // re-Aim every  0.2 seconds
	{
		m_fLastAimTime = gpGlobals->time;
		Aim(); // Aim at Nearest Enemy
	}

	if ( m_pEnemy ) // if got an enemy
	{
		if( m_pEnemy->IsAlive() )
			Shoot(); // Shoot Enemy (Should be facing enemy from Aim() )
		else
			m_pEnemy = NULL;
	}	
}
</pre></font>

<p>Next should be the spawn function, this is where we initialise stuff and call ONLY call Precache() here. Also the sentry is set to invisible (using EF_NODRAW bitset) and the Think function is set to the BuildThink function so it will wait SENTRY_BUILD_TIME before functioning and returining visible to the player. (See the BuildThink function explanation)</p>

<font color="red"><pre>
void CMySentry :: Spawn ( void )
{
	Precache( );

	pev->movetype = MOVETYPE_FLY;
	pev->health = 100;
	pev->max_health = pev->health;
	pev->armorvalue = 100;

	m_iRockets = SENTRY_MAX_ROCKETS / 2; // 
	m_iShells = SENTRY_MAX_SHELLS / 2;

	pev->gravity = 1;

	SET_MODEL(ENT(pev), "models/MySentry.mdl"); // the name of the model YOU want to use.

	UTIL_SetOrigin( pev, pev->origin );
	
	UTIL_SetSize(pev, Vector(-24, -24, -20), Vector(24, 24, 20));

	pev->nextthink		= gpGlobals->time + 0.1;
	pev->movetype		= MOVETYPE_FLY;
	pev->sequence		= 0;
	pev->frame			= 0;
	pev->solid			= SOLID_SLIDEBOX;
	pev->takedamage		= DAMAGE_AIM;

	SetBits (pev->flags, FL_MONSTER);

	m_fBuildTime = gpGlobals->time + 0.1;
	
	pev->effects |= EF_NODRAW;

	if( pev->owner )
      {
		if( pev->owner->v.flags & FL_CLIENT )
			strcpy(m_szTeamName,GetClassPtr((CBasePlayer*)pev)->m_szTeamName); // Initialise the team ID of the sentry
      }
	else
		strcpy(m_szTeamName,""); // Initialise the team ID of the sentry

	EMIT_SOUND(ENT(pev), CHAN_BODY, "sentry/building.wav", 1.0, ATTN_NORM);	

	SetThink(SentryBuildThink);
}
</pre></font>

<p>The m_szTeamName string is the TeamName of the player who built it. Once the player builds the sentry, set the TeamName to the pev->owner's</p>

<font color="red"><pre>
void CMySentry :: Precache ( void )
{
	PRECACHE_MODEL("models/MySentry.mdl"); // The name of the model YOU want to use (NOTE: this MUST be the same as the model you set the sentry to)

	PRECACHE_SOUND("turret/tu_fire1.wav");
	
	PRECACHE_SOUND("turret/tu_die.wav");
	PRECACHE_SOUND("turret/tu_die2.wav");
	PRECACHE_SOUND("turret/tu_die3.wav");

	PRECACHE_SOUND("turret/tu_spinup.wav");

	PRECACHE_SOUND("sentry/building.wav"); // Building sound
}
</pre></font>

<p>We need the aim function to aim at its enemy so the rockets etc wikll face in the correct direction.</p>

<font color="red"><pre>
void CMySentry :: Aim ( void )
{
	if( m_pEnemy )
	{
		Vector v_Comp = (m_pEnemy->pev->origin + pev->view_ofs) - (pev->origin + pev->view_ofs);
		Vector v_IdealAngles = UTIL_VecToAngles(v_Comp);

		pev->angles = UTIL_FixAngles(v_IdealAngles);

		pev->angles.x = -pev->angles.x; // Must invert pitch

		pev->angles.z = 0;

		if (pev->angles.x > SENTRY_MAX_PITCH) 
			pev->angles.x = SENTRY_MAX_PITCH;

		if( pev->angles.x < -SENTRY_MAX_PITCH)
			pev->angles.x = -SENTRY_MAX_PITCH;		
	}
	else // Focus on one enemy at a time
	{
		m_pEnemy = GetBestEnemy();
	}
}
</pre></font>

<p>Simple function below is to get the best enemy. If The TeamNames don't match with a found enemy, it will set it as its enemy. This function is called by ::Aim()</p>

<font color="red"><pre>
CBaseEntity *CMySentry :: GetBestEnemy (void)
{
	CBaseEntity *l_pFoundEnemy = NULL;
	CBaseEntity *l_pBestEnemy = NULL;
	CBasePlayer *l_pFoundPlayer = NULL;

	TraceResult tr;

	float min_distance = 9999.0;
	float distance = 0.0;

	while ( (l_pFoundEnemy = UTIL_FindEntityByClassname( l_pFoundEnemy, "player")) != NULL )
	{
		if( !l_pFoundEnemy->IsAlive() )
			continue;

		if( l_pFoundEnemy->pev->flags & FL_CLIENT )
		{
			l_pFoundPlayer = GetClassPtr((CBasePlayer *)l_pFoundEnemy->pev);

			if( strcmp(l_pFoundPlayer->m_szTeamName,m_szTeamName) ) // If this is an enemy
			{
				UTIL_TraceLine((pev->origin + pev->view_ofs),l_pFoundEnemy->pev->origin,ignore_monsters,dont_ignore_glass,pev->pContainingEntity,&tr);

				if( tr.flFraction >= 1.0 )
				{
					distance = (l_pFoundPlayer->pev->origin - pev->origin).Length();

					if( distance < min_distance )
					{
						min_distance = distance;

						l_pBestEnemy = l_pFoundEnemy;
					}
				}
			}
		}		
	}

	return l_pBestEnemy;
}
</pre></font>

<p>Now, The shoot function. This will check if it's time to fire another shell/rocket, and check if there is enough ammo, and then shoot a shell or rocket using FireRocket() and/or FireShell().</p>

<font color="red"><pre>
void CMySentry :: Shoot ( void )
{
	if( m_iRockets > 0 )
	{
		if( (m_fLastShootRocket + SHOOT_ROCKET_TIME) <= gpGlobals->time )
		{				
			m_fLastShootRocket = gpGlobals->time;

			FireRocket();
		}
	}
	
	if( m_iShells > 0 )
	{
		if( (m_fLastShootShell + SHOOT_SHELL_TIME) <= gpGlobals->time )
		{
			m_fLastShootShell = gpGlobals->time;

			FireShell();
		}
	}	
}
</pre></font>

<p>The fire rocket and fire shell functions (below) should be pretty similar except a rocket or shell is fired in the facing direction.</p>

<font color="red"><pre>
void CMySentry :: FireRocket ( void )
{
	UTIL_MakeVectors(pev->angles);

	CBaseEntity *m_Rocket = CBaseEntity::Create( "rpg_rocket", pev->origin, pev->angles, edict() );
	
	UTIL_SetOrigin(m_Rocket->pev,(pev->origin + m_vBarrel));
	
	UTIL_MakeVectors(m_Rocket->pev->angles);
	m_Rocket->pev->angles = pev->angles;
	
	Vector v_Forward = UTIL_RelationToWorld(pev->pContainingEntity,gpGlobals->v_forward);
	
	m_Rocket->pev->velocity = ( (v_Forward - pev->origin) / (( v_Forward - pev->origin ).Length()) ) * 200.0;
	
	m_iRockets --;
}

void CMySentry :: FireShell ( void )
{
	TraceResult tr;

	UTIL_MakeVectors( pev->angles );
	Vector vecSrc = pev->origin + pev->view_ofs;
	Vector vecDir = gpGlobals->v_forward * 8192.0;

	UTIL_TraceLine(vecSrc, vecSrc + vecDir, dont_ignore_monsters, ENT(pev), &tr);

	//if( tr.pHit )
	//	ALERT(at_console,"%s\n",STRING(tr.pHit->v.classname));

	FireBullets(1,vecSrc,vecSrc + vecDir,VECTOR_CONE_3DEGREES,4096.0,BULLET_MONSTER_12MM,4,5,pev);

	EMIT_SOUND(ENT(pev),CHAN_BODY,"turret/tu_fire1.wav",1.0,ATTN_NORM); // Emit turret shoot sound

	m_iShells --; // reduce shells
}
</pre></font>

<p>Your own Take Damage function. You'll need this to add shells/rockets to it at a later time.</p>

<font color="red"><pre>
int CMySentry::TakeDamage(entvars_t *pevInflictor, entvars_t *pevAttacker, float flDamage, int bitsDamageType)
{
	if ( !pev->takedamage )
		return 0;

	if ( pev->owner && (pev->Attacker == &pev->owner->v))
      {
          // Do stuff in here to add shells/rockets from the player perhaps...

         if( CVAR_GET_FLOAT("mp_friendlyfire") < 1.0 )
           return;
      }

	pev->health -= flDamage; // Remove this damage

	if (pev->health <= 0)
	{
		pev->health = 0; 
		pev->takedamage = DAMAGE_NO; // Don't take anymore damage
		pev->dmgtime = gpGlobals->time; // Set damage time

		ClearBits (pev->flags, FL_MONSTER);

		SetThink(MySentryDeath); // Change think funtion so I don't try to shoot etc.

		pev->nextthink = gpGlobals->time + 0.1; // Think again in 0.1 seconds

		return 0;
	}
	else
	{
		if (RANDOM_FLOAT( 0, 10 ) > 5)

		UTIL_Sparks( pev->origin );   // Some Sparks
	}

	return 1;
}
</pre></font>

<p>This death function is continously called while the sentry is "dying", give it a funky death! I took some code from the turret.cpp file and made the turret look as tho it malfunctions by setting the avelocity (angle velocity)/yaw angles to +/- randomly and the speed of the angle velocity will slow down after time. Also sparks and smoke will appear!</p>

<font color="red"><pre>
void CMySentry :: MySentryDeath ( void )
{

	pev->nextthink = gpGlobals->time + 0.1;

	if (pev->deadflag != DEAD_DEAD)
	{
		pev->deadflag = DEAD_DEAD;

		float flRndSound = RANDOM_FLOAT ( 0 , 1 );

		if ( flRndSound <= 0.33 )
			EMIT_SOUND(ENT(pev), CHAN_BODY, "turret/tu_die.wav", 1.0, ATTN_NORM);
		else if ( flRndSound <= 0.66 )
			EMIT_SOUND(ENT(pev), CHAN_BODY, "turret/tu_die2.wav", 1.0, ATTN_NORM);
		else 
			EMIT_SOUND(ENT(pev), CHAN_BODY, "turret/tu_die3.wav", 1.0, ATTN_NORM);

		//EMIT_SOUND_DYN(ENT(pev), CHAN_STATIC, "turret/tu_active2.wav", 0, 0, SND_STOP, 100);


		pev->solid = SOLID_NOT;

	}

	float f_time = (pev->dmgtime + 5) - gpGlobals->time;

	if( f_time > 0.0 )
	{
		if( RANDOM_LONG( 0, 100 ) <= 50 )
			pev->avelocity.y = f_time * 100;
		else
			pev->avelocity.y = -f_time * 100;
	}
	else
		pev->avelocity.y = 0;

	Vector vecSrc, vecAng;

	vecSrc = pev->origin;

	if (pev->dmgtime + RANDOM_FLOAT( 0, 2 ) > gpGlobals->time)
	{
		// lots of smoke
		MESSAGE_BEGIN( MSG_BROADCAST, SVC_TEMPENTITY );
			WRITE_BYTE( TE_SMOKE );
			WRITE_COORD( vecSrc.x + RANDOM_FLOAT( -16, 16 ) );
			WRITE_COORD( vecSrc.y + RANDOM_FLOAT( -16, 16 ) );
			WRITE_COORD( vecSrc.z - 32 );
			WRITE_SHORT( g_sModelIndexSmoke );
			WRITE_BYTE( 15 ); // scale * 10
			WRITE_BYTE( 8 ); // framerate
		MESSAGE_END();
	}
	
	if (pev->dmgtime + RANDOM_FLOAT( 0, 8 ) > gpGlobals->time)
	{
		UTIL_Sparks( vecSrc );
	}

	if ( (pev->dmgtime + 5) < gpGlobals->time)
	{
		ExplosionCreate(pev->origin,pev->angles,NULL,50,0);

		RemoveFromPlayer();

		Killed(pev,GIB_NEVER);

		SetThink( NULL );
	}
}
</pre></font>

<p>I've made a dismantle function which just kills the sentry, and remove from player function which will set the m_Sentry in CBasePlayer to NULL.</p>

<font color="red"><pre>
void CMySentry :: Dismantle ( void )
{
	RemoveFromPlayer();

	Killed(pev,GIB_NEVER);
}

void CMySentry :: RemoveFromPlayer ( void )
{
	if( pev->owner )
	{
		if( pev->owner->v.flags & FL_CLIENT )
		{
			CBasePlayer *pPlayer = GetClassPtr((CBasePlayer*)&pev->owner->v);
			
			pPlayer->m_Sentry = NULL;
		}
	}
}
</pre></font>

<p>Now the adding shells and rockets...</p>

<font color="red"><pre>
//------------------------------
// ADD ROCKETS / SHELLS
//-----------------------------
// Adds rockets/shells to the sentry and returns the difference from the new rockets/shells for use when taking rockets/shells from a player into the sentry

int CMySentry :: AddShells  ( int l_iNewShells )
{
	int l_iOldShells = 0;

	if( m_iShells == SENTRY_MAX_SHELLS )
	{
		return l_iOldShells;
	}
	else if ( (m_iShells + l_iNewShells) >= SENTRY_MAX_SHELLS )
	{
		l_iOldShells = SENTRY_MAX_SHELLS - m_iShells;

		m_iShells = SENTRY_MAX_SHELLS;

		return l_iOldShells;
	}
	else
	{
		m_iShells += l_iNewShells;

		return l_iNewShells;
	}

	return 0;
}

int CMySentry :: AddRockets ( int l_iNewRockets )
{
	int l_iOldRockets = 0;

	if( m_iRockets == SENTRY_MAX_ROCKETS )
	{
		return l_iOldRockets;
	}
	else if ( (m_iRockets + l_iNewRockets) >= SENTRY_MAX_ROCKETS )
	{
		l_iOldRockets = SENTRY_MAX_ROCKETS - m_iRockets;

		m_iRockets = SENTRY_MAX_ROCKETS;

		return l_iOldRockets;
	}
	else
	{
		m_iRockets += l_iNewRockets;

		return l_iNewRockets;
	}

	return 0;
}
</pre></font>

<p>Now that's all the sentry code. To build a sentry, open up CLIENT.CPP and look in the ClientCommand Function. You'll need to add your own command to build a sentry.</p>

<p>Stick this code in between some client commands, You will also need to add a "CBaseEntity *m_Sentry" in Player.h in CBasePlayer, and set it to NULL when you spawn.</p>

<font color="red"><pre>
else if ( FStrEq(pcmd, "build_sentry" ) )
{							
	if( m_pPlayer->m_Sentry )
	{
		ClientPrint( &pEntity->v, HUD_PRINTCENTER, "Sentry Already Built!\n");
	}
	else
	{
		Vector origin = UTIL_ForwardPosition(pEntity,64.0);
				
		origin.z = m_pPlayer->pev->absmin.z + 24;
				
		CBaseEntity *Sentry = CBaseEntity::Create( "avp_sentry", origin, pev->angles, pEntity );
				
				
		if( !FNullEnt(Sentry->edict()) )
		{					
			m_pPlayer->m_Sentry = Sentry;
			Sentry->pev->owner = pEntity;
					
			ClientPrint( pev, HUD_PRINTCENTER, "Building Sentry...\n");
					
		}
		else
			ALERT(at_console,"Error allocating new edict for sentry!\n");	
	}
}
</pre></font>

<hr noshade color="black">
<!--break-->
<h3>Known Problems:</h3>

<p>For some reason when the Sentry is built by the player, you can walk through the sentry and the shells don't seems to hit anything (The trace line doesn't seem to work) But it works okay when spawned by the map for some reason... although the rockets work okay.</p>

<hr noshade color="black">

<h3>Follow-ups</h3>

      <font color=red>
      <blockquote>
      1. <a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/view/541">Adding Sentry Parts + Hud icon</a></br>
      </blockquote>
      </font>



 <h3>Interesting Sentry Discussion on the RUST Forums:</h3>

      <font color=red>
      <blockquote>
      1. <a href="http://forums.gamedesign.net/viewtopic.php?t=3702&start=0">Sentry Tutorial?</a></br>
      </blockquote>
      </font>
     
</ul><h1 id="558" name="558" class="book-h3">Skies</h1><ul><!-- 
by Andy 17 Nov 2004  
Updated Feb 2005 - Validated at W3C XHTML1.0 Transitional
-->
<h3>Half-Life</h3>
<blockquote>Skies by Andy</blockquote>
<p>
This is a Visual Guide of the different sky textures included in Half-Life and how to add them to your map.
</p>
<hr /><!--break-->
<h4>
The Texture
</h4>
<p>
The sky texture is included in the <span style="color: #ff0000; font-weight: bold">halflife.wad</span> and represented by a  light blue colour texture named <span style="color: #ff0000">sky</span>. <br />
Simply select the brush you want to have as sky and add the sky texture to it. In most editors, the brush will remain blue and you will not be able to see the actual sky in the 3D or texture window of the editor.<br /> 
To define the type of sky you want, you will have to change the <span style="font-weight: bold">Worldspawn</span> properties and add the skyname.<br /> 
Most editors achieve this by adding a Key and a Value, such as:
</p>
<blockquote>
	Key:	skyname
	Value:	The name of the sky you want to use.
</blockquote>
<p>
Hammer allows you to enter the skyname directly into the worldspawn properties, but don't be fooled by the <span style="font-weight: bold">cl_</span> tag, just enter the skies short name.
</p>
<p>
<span style="font-weight: bold">Where the sky comes from</span>:<br />
The in-game skies are located in the <span style="font-weight: bold; font-style: italic">Half-Life\valve\gfx\env</span> folder. If they are not there then you will have to unpack your <span style="font-weight: bold">Pak0.pak</span> file. They are presented in two formats, <span style="font-weight: bold">.bmp</span> and or <span style="font-weight: bold">.tga</span>
</p>
<p>
<span style="font-weight: bold">Notes for making your own sky</span>:<br />
If you want to make your own evn sky set you need to follow these guidelines:<br />
The size of the picture files:</p>
<ul>
<li>Width&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 256 pixels</li>
<li>Height&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 256 pixels</li>
<li>Resolution&nbsp;&nbsp;= 72 DPI</li>
<li>Format is &nbsp;&nbsp;*.bmp and *.tga</li>
</ul>
<p>The Names of the images:</p>
<ul>
<li>The ground&nbsp;&nbsp;=&nbsp;&nbsp;<span style="font-style: italic"> name</span><span style="font-weight: bold">dn</span></li>
<li>The ceiling&nbsp;&nbsp;&nbsp;=&nbsp;&nbsp;<span style="font-style: italic"> name</span><span style="font-weight: bold">up</span></li>
<li>Front side&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;&nbsp;<span style="font-style: italic"> name</span><span style="font-weight: bold">ft</span></li>
<li>Left side&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;=&nbsp;&nbsp;&nbsp;<span style="font-style: italic"> name</span><span style="font-weight: bold">lf</span></li>
<li>Back side&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;&nbsp;&nbsp;<span style="font-style: italic"> name</span><span style="font-weight: bold">bk</span></li>
<li>Right side&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;&nbsp;<span style="font-style: italic"> name</span><span style="font-weight: bold">rt</span></li>
</ul>
<p>
And they have to be placed in the same folder as all the other skies, <span style="font-weight: bold; font-style: italic">Half-Life\valve\gfx\env</span>. You will find more information on creating custom skies in the tutorial: &nbsp;<a href="book/view/9">Environment Mapping</a>
</p>
<h4>A visual reference to Half-Life Skies</h4>
<center>
    <img style="border-style: solid; border-width: 1px;" src="content/half-life/tutorials/hlskies/2des_full.jpg" width="400" height="100" alt="2desert" />
</center>
<p align="center">
<span style="font-weight: bold">2desert</span>
</p>
<center>
    <img style="border-style: solid; border-width: 1px;" src="content/half-life/tutorials/hlskies/morn_full.jpg" width="400" height="100" alt="morning" />
</center>
<p align="center">
<span style="font-weight: bold">morning</span>
</p>
<center>
    <img style="border-style: solid; border-width: 1px;" src="content/half-life/tutorials/hlskies/desert_full.jpg" width="400" height="100" alt="desert" />
</center>
<p align="center">
<span style="font-weight: bold">desert</span>
</p>
<center>
    <img style="border-style: solid; border-width: 1px;" src="content/half-life/tutorials/hlskies/dusk_full.jpg" width="400" height="100" alt="dusk" />
</center>
<p align="center">
<span style="font-weight: bold">dusk</span>
</p>
<center>
    <img style="border-style: solid; border-width: 1px;" src="content/half-life/tutorials/hlskies/night_full.jpg" width="400" height="100" alt="night" />
</center>
<p align="center">
<span style="font-weight: bold">night</span>
</p>
<center>
    <img style="border-style: solid; border-width: 1px;" src="content/half-life/tutorials/hlskies/cliff_full.jpg" width="400" height="100" alt="cliff" />
</center>
<p align="center">
<span style="font-weight: bold">cliff</span>
</p>
<center>
    <img style="border-style: solid; border-width: 1px;" src="content/half-life/tutorials/hlskies/city_full.jpg" width="400" height="100" alt="city" />
</center>
<p align="center">
<span style="font-weight: bold">city</span>
</p>
<center>
    <img style="border-style: solid; border-width: 1px;" src="content/half-life/tutorials/hlskies/space_full.jpg" width="400" height="100" alt="space" />
</center>
<p align="center">
<span style="font-weight: bold">space</span>
</p>
<center>
    <img style="border-style: solid; border-width: 1px;" src="content/half-life/tutorials/hlskies/black_full.jpg" width="400" height="100" alt="black" />
</center>
<p align="center">
<span style="font-weight: bold">black</span>
</p>
<center>
    <img style="border-style: solid; border-width: 1px;" src="content/half-life/tutorials/hlskies/alien1_full.jpg" width="400" height="100" alt="alien1" />
</center>
<p align="center">
<span style="font-weight: bold">alien1</span>
</p>
<center>
    <img style="border-style: solid; border-width: 1px;" src="content/half-life/tutorials/hlskies/alien2_full.jpg" width="400" height="100" alt="alien2" />
</center>
<p align="center">
<span style="font-weight: bold">alien2</span>
</p>
<center>
    <img style="border-style: solid; border-width: 1px;" src="content/half-life/tutorials/hlskies/alien3_full.jpg" width="400" height="100" alt="alien3" />
</center>
<p align="center">
<span style="font-weight: bold">alien3</span>
</p>
<center>
    <img style="border-style: solid; border-width: 1px;" src="content/half-life/tutorials/hlskies/neb1_full.jpg" width="400" height="100" alt="neb1" />
</center>
<p align="center">
<span style="font-weight: bold">neb1</span>
</p>
<center>
    <img style="border-style: solid; border-width: 1px;" src="content/half-life/tutorials/hlskies/neb2b_full.jpg" width="400" height="100" alt="neb2b" />
</center>
<p align="center">
<span style="font-weight: bold">neb2</span>
</p>
<center>
    <img style="border-style: solid; border-width: 1px;" src="content/half-life/tutorials/hlskies/neb6_full.jpg" width="400" height="100" alt="neb6" />
</center>
<p align="center">
<span style="font-weight: bold">neb6</span>
</p>
<center>
    <img style="border-style: solid; border-width: 1px;" src="content/half-life/tutorials/hlskies/neb7_full.jpg" width="400" height="100" alt="neb7" />
</center>
<p align="center">
<span style="font-weight: bold">neb7</span>
</p>
<center>
    <img style="border-style: solid; border-width: 1px;" src="content/half-life/tutorials/hlskies/xen8_full.jpg" width="400" height="100" alt="xen8" />
</center>
<p align="center">
<span style="font-weight: bold">xeno8</span>
</p>
<center>
    <img style="border-style: solid; border-width: 1px;" src="content/half-life/tutorials/hlskies/xen9_full.jpg" width="400" height="100" alt="xen9" />
</center>
<p align="center">
<span style="font-weight: bold">xeno9</span>
</p>
  <center>
<img style="border-style: solid; border-width: 1px;" src="content/half-life/tutorials/hlskies/xen10_full.jpg" width="400" height="100" alt="xen10" />
</center>
<p align="center">
<span style="font-weight: bold">xeno10</span>
</p>
<hr />
 <!--EOF@169--></ul><h1 id="613" name="613" class="book-h3">Skies (2)</h1><ul><!-- 
submitted by Andy, heavily modified from  Original text by Tiger of Qeradient
Updated  Feb 2005 - Validated at W3C XHTML1.0 Transitional
-->
<h3>
Half-Life
</h3>
<blockquote>Skies (Part 2) - by Andy</blockquote>
<p>
This tutorial is designed to give you some general information on the sky properties in Half-Life. <br />
In the last tutorial we looked at the file names of the skies available in Half-Life and where to find your skies (<span style="font-style: italic">half-life/valve/gfx/env</span>).<br />
This time we are going to look at placement of the sky in game and shadow effects. 
</p><!--break-->
<p>
Recapping on the last tutorial, here is a visual representation of the desert series of skies:
</p>
<img src="http://www.gamedesign.net/content/half-life/tutorials/hlskies2/desertbk.jpg" width="100" height="100" alt="BK" /><img src="http://www.gamedesign.net/content/half-life/tutorials/hlskies2/desertrt.jpg" width="100" height="100" alt="RT"  /><img src="http://www.gamedesign.net/content/half-life/tutorials/hlskies2/desertft.jpg" width="100" height="100" alt="FT" /><img src="http://www.gamedesign.net/content/half-life/tutorials/hlskies2/desertlf.jpg" width="100" height="100" alt="LF" /><br />
<table cellspacing="0" border="0" width="400">
<tr><td width="25%" valign="top" height="19">
<p align="center">
North = BK<br />
desert<span style="font-weight: bold">bk</span>.bmp
</p></td>
<td width="25%" valign="top" height="19">
<p align="center">
East = RT<br />
desert<span style="font-weight: bold">rt</span>.bmp
</p></td>
<td width="25%" valign="top" height="19">
<p align="center">
South = FT<br />
desert<span style="font-weight: bold">ft</span>.bmp
</p></td>
<td width="25%" valign="top" height="19">
<p align="center">
West = LF<br />
desert<span style="font-weight: bold">lf</span>.bmp
</p></td>
</tr>
</table>
&nbsp;
<img src="http://www.gamedesign.net/content/half-life/tutorials/hlskies2/orient.jpg" align="left" hspace="6" vspace="2" width="199" height="176"  alt="Orient" />
<p>
The game engine places the sky texture on brushes that are orientated in the directions above, but it is easier to understand if you have an idea of how this is done in the editor. The picture above is representative of the Top (x,y) view in most editors. This will give you an idea of what sky texture the 'player' will see, but more importantly it allows you to add shadows. 
</p>
<img src="http://www.gamedesign.net/content/half-life/tutorials/hlskies2/morningft.jpg" align="right" hspace="6" vspace="2" width="110" height="110" alt="Morningft" />
<p>
Most Half-Life skies have the sun positioned directly above, but the morning series has the sun just rising above the South brush. If you positioned your light_environment without any modification to the default settings, then there wouldn't be any shadows cast by the sun and it wouldn't look right. Careful positioning of the light_environment will enhance the 'feel' and look of your maps by achieving a cast shadow that fit's the sky.
</p>
<p>
For a more in depth look at creating skies have a look at <a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/9">Creating Environment Maps with Terragen</a> by Mithodeil.</p>
<hr />
<span style="font-weight: bold">Shadows and the Light_environment</span>.<br />
<img src="http://www.gamedesign.net/content/half-life/tutorials/hlskies2/angle.jpg" align="left" hspace="12" vspace="2" width="199" height="147"  alt="Angle" />
<p>
The light_environment controls the style of light emitted from the sky.<br />
It only works when there are brushes textured with <span style="color: #ff0000">sky</span> in your map.<br />
You can place the entity anywhere in the map, but to help out, it is usually a good idea to place it next to the brush face that you have identified as the one that will represent the sun in game.<br /> In the case of the morning series of textures this will be the brush that is placed at the 'South' direction in the editor.<br />
If you place it near this face, then changing the properties of the entity will correspond to the editor window.
</p>
<p>
<span style="font-weight: bold">Pitch Yaw Roll (Y Z X)</span>:<br />
One of the properties of the light_environment is angles or &quot;Pitch Yaw Roll (Y Z X)&quot;. Looking down on the 2D editor window above, setting the Yaw property will direct the light out into your map.<br />
If you set the Yaw to  <span style="color: #ff0000">&nbsp;90&nbsp; </span>  then the sun will appear 'ingame' to be coming directly from the 'South Brush' and going to the 'North Brush'.<br />
The shadows in the morning series of skies are slightly angled again, and to make all the brushes in your map give off a shadow that it is consistent with the sky, you have to increase the YAW slightly. <span style="color: #ff0000">100</span> seems to be right.<br /> 
This is very much trial and error.
</p>
<p>
<span style="font-weight: bold">Pitch</span>:<br />
The &quot;Pitch property&quot; of the light-environment, (<span style="font-style: italic">not to be confused with the Pitch of the angles mentioned above</span>) is the property that will provide the shadows created by the brushes in your map.<br />
A setting of <span style="color: #ff0000"> 0 </span> will not produce any shadow as the light will be emitted horizontally across the roof of your map.<br /> 
A setting of <span style="color: #ff0000"> minus 90 </span>will simulate the sun shining straight down. To cast a long shadows enter a figure around <span style="color: #ff0000"> minus 35 </span>, and for a short shadow <span style="color: #ff0000"> minus 70 </span>.
</p>
<p>
<span style="font-weight: bold">Brightness</span>:<br />
One more thing worth considering is the &quot;Brightness&quot; setting of the light_environment. You can soften the light by adjusting the fourth figure in the RBG values of the Brightness property as that will increase of decrease the luminosity.<br />
The default is <span style="color: #ff0000">200</span>, so a figure of <span style="color: #ff0000">150</span> will be lees bright. If you set the luminosity to <span style="color: #ff0000"> 0 </span>you will not get a dark map, instead you will get a medium lit map.<br /> 
Changing the colour of the light is also beneficial. You can choose the colour of the 'sun' from by changing the RBG and softening the colour.</p>
<center>
<img src="http://www.gamedesign.net/content/half-life/tutorials/hlskies2/map.jpg" width="350" height="262" alt="Shadow map" />
</center>
<br />
<hr />
<!--EOF@85--></ul><h1 id="687" name="687" class="book-h3">Sprites</h1><ul><!--
by Andy Nov 2004 
Validated Mar 05, XHTML 1.1, since I don't have access to the CSS to add a few style lines, I just put them in here, but  a thumbnail <div> would be nice
 -->
<h3>Half-Life</h3>
<blockquote>Visual Sprite list - by Andy</blockquote>
<p><span style="font-weight: bold">
Sprites</span> - A visual representation of 128 sprites. <br />
</p>
<!--break-->
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/aexplo.jpg" height="64" width="64" alt="aexplo" /><br />
&nbsp;&nbsp;&nbsp;aexplo
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/bexplo.jpg" height="64" width="64" alt="bexplo" /><br />
&nbsp;&nbsp;&nbsp;bexplo
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/blueflare2.jpg"  height="64" width="64" alt="blueflare2" /><br />
blueflare2
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/b-tele1.jpg" height="64" width="64" alt="b-tele1" /><br />
&nbsp;&nbsp;b-tele1
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/c-tele1.jpg" height="64" width="64" alt="c-tele1" /><br />
&nbsp;&nbsp;c-tele1
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/eexplo.jpg" height="64" width="64" alt="eexplo" /><br />
&nbsp;&nbsp;eexplo
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/explode1.jpg" height="64" width="64" alt="explode1" /><br />
&nbsp;explode1
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/flare4.jpg" height="64" width="64" alt="flare4" /><br />
&nbsp;&nbsp;&nbsp;flare4
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/glow04.jpg" height="64" width="64" alt="glow04" /><br />
&nbsp;&nbsp;&nbsp;glow4
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/mushroom.jpg" height="64" width="64" alt="mushroom" /><br />
mushroom
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/muz4.jpg" height="64" width="64" alt="muz4" /><br />
&nbsp;&nbsp;&nbsp;muz4
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/muz8.jpg" height="64" width="64" alt="muz8" /><br />
&nbsp;&nbsp;&nbsp;muz8
</p>
<p style="float: left; width: 60px; border: none; margin:0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/muzzleflash3.jpg" height="64" width="64" alt="muzzleflash3" /><br />
<span style="font-size: 75%">muzzleflash3</span>
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/poison.jpg" height="64" width="64" alt="poison" /><br />
&nbsp;&nbsp;poison
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/tile.jpg" height="64" width="64" alt="tile" /><br />
&nbsp;&nbsp;&nbsp;&nbsp;tile
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/wexplo.jpg" height="64" width="64" alt="wexplo" /><br />
&nbsp;wexplo
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/xflare1.jpg" height="64" width="64" alt="xflare1" /><br />
&nbsp;&nbsp;&nbsp;xflare
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/yelflare2.jpg" height="64" width="64" alt="yelflare2" /><br />
&nbsp;yelflare2
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/animglow.jpg" height="64" width="64" alt="animglow" /><br />
animglow
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/dexplo.jpg" height="64" width="64" alt="dexplo" /><br />
&nbsp;&nbsp;&nbsp;dexplo
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/enter.jpg" height="64" width="64" alt="enter" /><br />
&nbsp;&nbsp;&nbsp;enter
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/explode2.jpg" height="64" width="64" alt="explode2" /><br />
explode2
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/flare1.jpg" height="64" width="64" alt="flare1" /><br />
&nbsp;&nbsp;&nbsp;flare1
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/flare5.jpg" height="64" width="64" alt="flare5" /><br />
&nbsp;&nbsp;&nbsp;flare5
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/glow01.jpg" height="64" width="64" alt="glow01" /><br />
&nbsp;&nbsp;glow01
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/gwave1.jpg" height="51" width="64" alt="gwave" /><br />
&nbsp;&nbsp;gwave1
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/muz1.jpg" height="64" width="64" alt="muz1" /><br />
&nbsp;&nbsp;&nbsp;muz1
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/muz5.jpg" height="64" width="64" alt="muz5" /><br />
&nbsp;&nbsp;&nbsp;muz5
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/muzzleflash.jpg" height="64" width="64" alt="muzzelflash" /><br />
<span style="font-size: 75%">muzzelflash</span>
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/nhth.jpg" height="64" width="64" alt="nhth" /><br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nhth
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/portal1.jpg" height="64" width="64" alt="portal1" /><br />
&nbsp;&nbsp;portal1
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/richo2.jpg" height="64" width="64" alt="richo2" /><br />
&nbsp;&nbsp;richo2
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/shellchrome.jpg" height="64" width="64" alt="shellchrome" /><br />
<span style="font-size: 75%">shellchrome</span>
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/wsplash.jpg" height="64" width="64" alt="wsplash" /><br />
&nbsp;&nbsp;wsplash
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/xfire.jpg" height="64" width="64" alt="xfire" /><br />
&nbsp;&nbsp;&nbsp;&nbsp;xfire
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/xflare2.jpg" height="64" width="64" alt="xflare2" /><br />
&nbsp;xflare2
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/bloodspray.jpg" height="64" width="64" alt="bloodspray" /><br />
<span style="font-size: 75%">bloodspray</span>
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/bm1.jpg" height="64" width="64" alt="bm1" /><br />
&nbsp;&nbsp;&nbsp;&nbsp;bm1
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/cexplo.jpg" height="64" width="64" alt="cexplo" /><br />
&nbsp;&nbsp;&nbsp;cexplo
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/e-tele1.jpg" height="64" width="64" alt="e-tele1" /><br />
&nbsp;e-tele1
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/flare6.jpg" height="64" width="64" alt="flare6" /><br />
&nbsp;&nbsp;&nbsp;flare6
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/glow02.jpg" height="64" width="64" alt="glow02" /><br />
&nbsp;&nbsp;glow02
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/ballsmoke.jpg" height="64" width="64" alt="ballsmoke" /><br />
ballsmoke
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/blast.jpg" height="64" width="64" alt="blast" /><br />
&nbsp;&nbsp;&nbsp;&nbsp;blast
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/blueflare1.jpg" height="64" width="64" alt="blueflare1" /><br />
blueflare1
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/cnt1.jpg" height="64" width="64" alt="cnt1" /><br />
&nbsp;&nbsp;&nbsp;&nbsp;cnt1
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/d-tele1.jpg" height="64" width="64" alt="d-tele1" /><br />
&nbsp;&nbsp;d-tele1
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/exit1.jpg" height="64" width="64" alt="exit1" /><br />
&nbsp;&nbsp;&nbsp;exit1
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/fexplo1.jpg" height="64" width="64" alt="fexplo1" /><br />
&nbsp;fexplo1
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/glow03.jpg" height="64" width="64" alt="glow03" /><br />
&nbsp;glow02
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/hotglow.jpg" height="64" width="64" alt="hotglow" /><br />
&nbsp;hotglow
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/muz2.jpg" height="64" width="64" alt="muz2" /><br />
&nbsp;&nbsp;&nbsp;muz2
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/muz6.jpg" height="64" width="64" alt="muz6" /><br />
&nbsp;&nbsp;&nbsp;muz6
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/muzzleflash1.jpg" height="64" width="64" alt="muzzleflash1" /><br />
<span style="font-size: 75%">muzzleflash1</span>
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/oriented.jpg" height="64" width="64" alt="oriented" /><br />
oriented
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/redflare1.jpg" height="64" width="64" alt="redflare" /><br />
redflare
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/rjet1.jpg" height="64" width="64" alt="rjet1" /><br />
&nbsp;&nbsp;rjet1
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/shockwave.jpg" height="64" width="64" alt="shockwave" /><br />
<span style="font-size: 75%">shockwave</span>
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/spotlight01.jpg" height="64" width="64" alt="spotlight01" /><br />
<span style="font-size: 75%">spotlight01</span>
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/streak.jpg" height="64" width="64" alt="streak" /><br />
&nbsp;&nbsp;streak
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/wallpuff.jpg" height="64" width="64" alt="wallpuff" /><br />
&nbsp;wallpuff
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/xfire2.jpg" height="64" width="64" alt="xfire2" /><br />
&nbsp;&nbsp;xfire2
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/xflare3.jpg" height="64" width="64" alt="xflare3" /><br />
&nbsp;&nbsp;xflare3
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/muz3.jpg" height="64" width="64" alt="muz3" /><br />
&nbsp;&nbsp;&nbsp;muz3
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/muz7.jpg" height="64" width="64" alt="muz7" /><br />
&nbsp;&nbsp;&nbsp;muz7
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/muzzleflash2.jpg" height="64" width="64" alt="muzzleflash2" /><br />
<span style="font-size: 75%">muzzelflash2</span>
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/redflare2.jpg" height="64" width="64" alt="redflare2" /><br />
redflare2
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/spotlight02.jpg" height="64" width="64" alt=" spotlight02" /><br />
<span style="font-size: 75%">spotlight02</span>
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/tele1.jpg" height="64" width="64" alt="tele1" /><br />
&nbsp;&nbsp;&nbsp;tele1
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/xfireball3.jpg" height="64" width="64" alt="xfireball3" /><br />
&nbsp;xfireball3
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/yelflare.jpg" height="64" width="64" alt="yelflare" /><br />
&nbsp;yelflare
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/zerogxplode.jpg" height="64" width="64" alt="zerogxplode" /><br />
zerogxplode
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/laserbeam.jpg" height="64" width="32" alt="laserbeam" /><br />
laserbeam
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/smoke.jpg" height="64" width="32" alt="smoke" /><br />
smoke
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/xffloor.jpg" height="64" width="32" alt="xffloor" /><br />
xffloor
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/xsmoke3.jpg" height="64" width="32" alt="xsmoke3" /><br />
xsmoke3
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/xsmoke4.jpg" height="64" width="32" alt="xsmoke4" /><br />
xsmoke4
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/bluejet1.jpg" height="64" width="32" alt="bluejet1" /><br />
bluejet1
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/flare2.jpg" height="64" width="32" alt="flare2" /><br />
flare2
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/lgtning.jpg" height="64" width="32" alt="lgtning" /><br />
lgtning
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/bolt1.jpg" height="64" width="32" alt="bolt1" /><br />
bolt1
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/xssmke1.jpg" height="64" width="32" alt="xssmke1" /><br />
xssmke1
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/plasma.jpg" height="64" width="32" alt="plasma" /><br />
plasma
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/wdrip2.jpg" height="64" width="32" alt="wdrip2" /><br />
wdrip2
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/xenobeam.jpg" height="64" width="32" alt="xenobeam" /><br />
xenobeam
</p>
<p style="clear: both"></p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/xsmoke1.jpg" height="32" width="32" alt="xsmoke1" /><br />
xsmoke1
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/xspark2.jpg" height="32" width="32" alt="xspark2" /><br />
xspark2
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/richo1.jpg" height="32" width="32" alt="richo" /><br />
richo
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/xspark3.jpg" height="32" width="32" alt="xspark" /><br />
xspark
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/mommaspit.jpg" height="32" width="32" alt="mommaspit" /><br />
mommaspit
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/stmbal1.jpg" height="32" width="32" alt="stmbal1" /><br />
stmbal1
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/bigspit.jpg" height="32" width="32" alt="bigspit" /><br />
bigspit
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/xspark4.jpg" height="32" width="32" alt="xspark" /><br />
xspark
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/mommaspout.jpg" height="32" width="32" alt="momaspout" /><br />
momaspout
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/flare3.jpg" height="32" width="32" alt="flare3" /><br />
flare3
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/gargeye1.jpg" height="32" width="32" alt="gargeye1" /><br />
gargeye1
</p>
<p style="clear: both"></p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/zbeam4.jpg" height="64" width="16" alt="zbeam4" /><br />
zbeam4
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/zbeam3.jpg" height="64" width="16" alt="zbeam3" /><br />
zbeam3
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/xbeam3.jpg" height="64" width="16" alt="xbeam3" /><br />
xbeam3
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/xbeam4.jpg" height="64" width="16" alt="xbeam4" /><br />
xbeam4
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/zbeam1.jpg" height="64" width="16" alt="zbeam1" /><br />
zbeam1
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/zbeam5.jpg" height="64" width="16" alt="zbeam5" /><br />
zbeam5
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/arrow.jpg" height="64" width="16" alt="arrow" /><br />
arrow
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/xbeam1.jpg" height="64" width="16" alt="xbeam1" /><br />
xbeam1
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/xbeam5.jpg" height="64" width="16" alt="xbeam5" /><br />
xbeam5
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/zbeam2.jpg" height="64" width="16" alt="zbeam2" /><br />
zbeam2
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/zbeam6.jpg" height="64" width="16"  alt="zbeam6" /><br />
zbeam6
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/xbeam2.jpg" height="64" width="16" alt="xbeam2" /><br />
xbeam2
</p>
<p style="clear: both"></p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/blood.jpg" height="16" width="16" alt="blood" /><br />
blood
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/bhit.jpg" height="16" width="16" alt="bhit" /><br />
bhit
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/blooddrop.jpg" height="16" width="16" alt="blooddrop" /><br />
blooddrop
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/bubble.jpg" height="16" width="16" alt="bubble" /><br />
bubble
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/laserdot.jpg" height="16" width="16" alt="laserdot" /><br />
laserdot
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/tinyspit.jpg" height="16" width="16" alt="tinyspit" /><br />
tinyspit
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/dot.jpg" height="16" width="16" alt="dot" /><br />
dot
</p>
<p style="clear: both"></p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/fire.jpg" height="64" width="21" alt="fire" /><br />
fire
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/gexplo.jpg" height="64" width="53" alt="gexplo" /><br />
gexplo
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/fexplo.jpg" height="64" width="53" alt="fexplo" /><br />
fexplo
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/steam1.jpg" height="64" width="42" alt="steam1" /><br />
steam1
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/hexplo.jpg" height="64" width="42" alt="hexplo" /><br />
hexplo
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/spark1.jpg" height="40" width="40" alt="spark1" /><br />
spark1
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/xspark1.jpg" height="32" width="32" alt="xspark1" /><br />
xspark1
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/moths.jpg" height="16" width="32" alt="moths" /><br />
moths
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/rope.jpg" height="32" width="16" alt="rope" /><br />
rope
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/sdrip1.jpg" height="64" width="8" alt="sdrip" /><br />
sdrip
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/mommablob.jpg" height="16" width="64" alt="mommablob" /><br />
mommablob
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/logo.jpg" height="12" width="64" alt="logo" /><br />
&nbsp;&nbsp;logo
</p>
<p style="float: left; width: 60px; border: none; margin: 0 15px 15px 0; padding 1px">
<img src="content/half-life/tutorials/hlsprites/small_logo.jpg" height="12" width="64" alt="small_logo" /><br />
small_logo
</p>
<p style="clear: both"></p>
<h3>Notes</h3>
<p>
There are 180 Sprites in the original Half-Life folder. Some of these are game specific and have not been listed here, others are 'fillers' or blank.<br /> 
Here are the ones not listed:<br />
White, vp_parallel, vp_parallel_oriented, voice_icon, camera, crosshairs, spot3 and spot 4, agrunt1<br />
glow5. In addition to those, there are &quot;16&quot; txt files, 19 Hud Sprites and 7 Multiplayer icons in the folder.
</p>
<!--EOF@534--></ul><h1 id="7" name="7" class="book-h3">Taming the Speaker Entity</h1><ul><!-- 
by Merl (merlinis@bigpond.net.au) 2001
by Gard (stephen@geol.uwa.edu.au) 2003 
Updated XHTML FEB 05 Andy
-->
<h3>Half-Life</h3>
<blockquote>
Taming the Speaker Entity - <a href="mailto:mithodiel@softhome.net">Mithodiel</a>
</blockquote>
<p>
The &quot;speaker&quot; entity creates the effect of having a public-address system in your  level. It is designed to make random announcements every 3 to 10 minutes while it is active.  What many Half-Life level editors fail to realize is that this entity is completely customizable!
</p>
<p>
There is a file in your half-life\sounds directory called <span style="font-style: italic">sentences.txt</span>. This is the file that Half-Life reads in order to play sentences (named strings of wave files).  The <span style="font-style: italic">sentences.txt</span> file defines the sentences spoken by the PA announcer and the monsters in the game. If this file is not located in your half-life\sounds directory, then you will need to extract it from the <span style="font-style: italic">pak0.pak</span> file using a utility such as <a href="ftp://ftp.gamedesign.net/halflife/Tools_and_Utilities/Pak_Utilities/pakexplr.zip">PakExplorer</a>  or <a href="http://home.telefragged.com/wally">Wally</a> (a texture editor that also features the ability to handle Windows long file names in PAK files). You will need to edit the <span style="font-style: italic">sentences.txt</span> file in order to add your own custom annoucements.  Once extracted, your custom <span style="font-style: italic">sentences.txt</span> file will now override the version in the PAK file.
</p>
<p>
Once you have extracted <span style="font-style: italic">sentences.txt</span> from the PAK file, open it up in a text editor, such as Notepad.  Scroll down to where the lines begin with one of the Valve single-player map names (such as <span style="font-style: italic">C1A1</span>).  Notice that the sentences are <b>grouped</b>.  In each group, the sentences all have the same name, except that they are numbered sequentially from 0 to 9.  The name of the sentences without the number is called the <span style="font-style: italic">sentence group name</span>, and you will need that information when you create your custom announcements.
</p>
<p>
Scroll all the way down to the end of the file.  It is a good idea to add any custom sentences to the end of the file, so that you do not mess up established sentences (unless you are into that sort of thing).
</p>
<p>
Now add your custom sentences. First, come up with a name for the sentence group. The speaker entity will play sentences randomly from this group. For the purposes of this tutorial, use <code>TUTOR</code>. Then create the sentences in the group.  They will be sequentially named <code>&lt;group name&gt;0</code> through <code>&lt;group name&gt;9</code>.  You can make up to 10 custom sentences per sentence group, as long as they are numbered in order.
</p>
<p>
<span style="text-decoration: underline">Example:</span><br />
<code>
TUTOR0 vox/buzwarn buzwarn unauthorized access detected in sector thirty two<br />
TUTOR1 vox/buzwarn buzwarn warning freeman is armed and danger us<br />
(yadda yadda yadda)<br />
TUTOR9 vox/deeoo doctor freeman please report topside for questioning
</code>
</p>
<p>
Note that all sentences in <span style="font-style: italic">sentences.txt</span> must appear on one line each -- don't be fooled by the example formatting above!
</p>
<p>
Next, open your level up in your favorite editor and create a &quot;speaker&quot; entity. Set the <span style="font-style: italic">preset</span> (WorldCraft: <span style="font-style: italic">Announcement Presets</span>) field to 0 (WC: &quot;None&quot;) -- any other setting will play hard-coded announcements (I found this out the hard way!).  Enter the name of your custom sentence group (in this case, <code>TUTOR</code>) under the <span style="font-style: italic">message</span> (WC: <span style="font-style: italic">Sentence Group Name</span>) field.  Then set an appropriate volume level in the <span style="font-style: italic">health</span> (WorldCraft: <span style="font-style: italic">Volume</span>) field.
</p>
<p>
Now compile your map and load it into Half-Life.  The speaker should start spewing your custom sentences as soon as the level loads.
</p>
<p>
If you want more control over the speaker, note that it can be triggered on and off.  Give the speaker a name in the <span style="font-style: italic">targetname</span> (WC: &quot;Name&quot;) field, and then you can use external triggers to turn the speaker on and off.  If you want the speaker to be quiet at first, set its <span style="font-style: italic">spawnflags</span> to 1 (in WC, Check the &quot;Start Silent&quot; flag).
</p>
<p>
You can force the speaker to make a single announcement by making it reference a single-sentence sentence group.  Otherwise, you would need a scripted_sentence and an associated &quot;dummy&quot; monster to accomplish the same thing; the custom speaker thus ends up saving you an entity.
</p>
<p>
<span style="font-weight: bold">NOTE:</span><br />
This method is not particularly well suited to multi-player maps, unless they are part of a Half-Life mod that has its own <span style="font-style: italic">sentences.txt</span> file.  Many players are uncomfortable with others mucking around with their <span style="font-style: italic">sentences.txt</span> file (myself included).  Thus, for multi-player maps, a better choice would be to string a series of ambient_generic entities together using a multi_manager, since you do not have to distribute any files other than the map itself if you do this.
</p>
<!--EOF@53--></ul><h1 id="267" name="267" class="book-h3">The BSP Process and Visibility</h1><ul>This is a link to a tutorial that was originally written for Quake II but largely applies to all Quake engine games including Half-Life.<p>

<A href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/266">Click to view the tutorial</A></ul><h1 id="303" name="303" class="book-h3">Ways to Prevent Leaks</h1><ul><!-- 
by Cheat_McSlick(no email address provided) 2001
by Gard (stephen@geol.uwa.edu.au) 2003 
Updated XHTML - FEB 05 Andy
-->
<h3>Half-Life</h3>
<blockquote>
Ways to Prevent Leaks - Created by <a href="http://forums.gamedesign.net/profile.php?mode=viewprofile&amp;u=8">Cheat_McSlick</a><br />
for updates contact <a href="stephen@geol.uwa.edu.au">RUST</a>
</blockquote>
<p>
<span style="font-weight: bold">Preface:</span>
</p>
<p>
 If your level doesn't compile because it has a leak, then you need to find the leak and delete. This tutorial helps define methods to find and eliminate leaks
</p>
<hr />
<h3>Prevent leaks</h3>
<p>
The best way to fix a leak is to prevent it in the first place. Better map building is the solution. The ways to prevent leaks are:<br />
</p>
<ol>
<li><span style="font-weight: bold">Don't make a big box around your level.</span> Ever. Let me repeat that, because it bears repeating. Don't make a big box around your level. That is the wuss way out, and it has so many bad effects on your map (like high r_speeds) that it's probably one of the worst mapping habits ever.</li>
<li><span style="font-weight: bold">Don't carve.</span> Unless you really know what you're doing, carving causes a lot more problems than it solves. Avoid carving and you'll avoid leaks. Some times WC will split up a carved block so crazy-like it will cause a leak.</li>
<li><span style="font-weight: bold">Don't work in grid size 1.</span> To the common n00b, grid size 1 might look like the best size to work in because it allows the most freedom. Wrong! You will make so many mistakes in grid size 1 that you'll end up having more leaks than you know what to do with. I'm talking about things like connecting a floor and a wall. In grid size 1, you'll probably miss and there will be a crack between them. You should work in grid size 8 or 16 most of the time.</li>
</ol>
<h3>Finding leaks:</h3>
<p>
Well none of the above worked, or you didn't pay attention and now you have a leak. I tried to warn you! Here are some helpful ways to finding a rogue leak:<br />
</p>		
<ol>
<li><span style="font-weight: bold">The point file.</span> In WC, you may load the point file of a leaky map. It will show a crazy red line in the 2d views, and this line can be traced to the source of the leak. If there is no red line when you load the point file, then you probably have a point entity outside the map.</li>
<li><span style="font-weight: bold">Look at the log.</span> The compile log will tell you the name and coordinates of the closest point entity to the leak. Use this to narrow down your search.</li>
<li><span style="font-weight: bold">Big Block method.</span> Surround part of your map with a big, solid block and compile. If the leak errors are gone, then the leak must be in that area of the map. If not, move the block to another area and compile again. This will really help you narrow down your search.</li>
<li><span style="font-weight: bold">Big Purple Sky method.</span> Surround your map with a giant hollow block with the sky texture, and make your light_enviroment bright purple (or other noticeable color). Compile the map and run it. Walk around every nook and cranny of the map. If you see a space in the map where purple light shines through, then a leak is there. It also might help to temporarily get rid of all your other lights so the purple light is more noticeable.</li>
<li><span style="font-weight: bold">3-D view method.</span> (Suggested by <a href="http://forums.gamedesign.net/profile.php?mode=viewprofile&amp;u=390">Yesukai</a>) In worldcraft, make the 3D view nice and big(i use independant window configs). Put it on solid. Fly around the outside of your map, looking for the spot were the colors change strangly or the perspective is screwed up. Now, this may sound like a bad method, but combined with experience, I can locate any leak in minutes and be on my way while you are still flying down a pointfile</li>
<li><span style="font-weight: bold">Advanced method.</span> (Suggested by <a href="http://forums.gamedesign.net/profile.php?mode=viewprofile&amp;u=32">RoyelEF</a>) The pointfile can get quite large and I find the 2d-only pointfile in WC is useless. To get around this:</li>
</ol>
<blockquote><ol start="1">
    <li>Copy the broken bsp and pts files into Halflife and load your map.</li>
    <li>In worldcraft,In the console type POINTFILE to load it. If it complains about not enough particles then add <br /><code>-particles 65000</code> to your halflife launch for debugging. This is easily done in WC compiler settings.</li>
    <li>However, the pointfile can still be outrageously long and take some patience to trace.</li>
    <li>The pointfile stops when it encounters a pointbased entity (light, playerstart, monster, weapon, ammo, etc). For the compiler this is the very definiton of a leak, a point-based entity is encountered by the pointfile. It passes through brush based ones unnoticed.</li> 
    <li>You can shorten your pointfile by increasing the number of point-based entities in the map. Player deathmatch starts or gman around. Place them in each major room, hallway. When the pointfile enters it will encounter an entity sooner and will stop closer to the actual problem.</li>
    <li>Having gmen around also gives you a perspective of what player will look like in a room.</li>
 </ol> </blockquote>
 <p>&nbsp;</p>
 <p>
 So the next time someone asks you how to fix a leak, you point them to the old Cheat_McSlick &quot;How to fix a Leak&quot; Tutorial.
 </p>
<hr />
<h3>Interesting Leak Discussions on the RUST Forums:</h3>
<blockquote>
<span style="color: #ff0000">
1. <a href="http://forums.gamedesign.net/viewtopic.php?t=497&amp;highlight=leaks">Cheat_McSlick's original post?</a><br />
2. <a href="http://forums.gamedesign.net/viewtopic.php?t=497&amp;highlight=leaks">Typical Leak problems?</a><br />
3. <a href="http://forums.gamedesign.net/viewtopic.php?t=2868&amp;highlight=leaks">VIS and Leaks</a><br />
4. <a href="http://forums.gamedesign.net/viewtopic.php?t=5675&amp;highlight=leaks">Entities don't stop leaks</a><br />
 </span>
 </blockquote>
<!--EOF@62--></ul><h1 id="628" name="628" class="book-h3">WorldCraft/Hammer 3.4 Editing</h1><ul><!-- Submitted by Andy Nov 04-->

<b>What is Hammer v3.4 :</b><br>
<p >Hammer is a revised version of WorldCraft, it includes useful tools and options that were not available in the initial release.<br><br>
WorldCraft 2.1 came with a set of tutorials that gave step by step instructions for people new to the editor, but for some reason they were not updated when Hammer was released.</p>
<p></p>
<b>Tutorials:</b><br>
<p>The first three tutorials listed here are a recreation of the original information, and take into account most of the changes introduced by Valve Hammer 3.4.<br><br>
Simple Doors is our own home grown tutorial, and there will be more to follow.<br> 
If there is a topic you would like to see a tutorial on...<br> Just add a comment at the bottom of the page and we will try to add it to the growing list.</p>
<!--break-->
</ul><h1 id="651" name="651" class="book-h4">Getting Started</h1><ul><!--
Submitted by Andy Oct 04 
Updated  Feb 2005 - Validated at W3C, XHTML1.0 Transitional
 -->
<h3>Hammer 3.4</h3>
<blockquote>Getting Started - by Andy</blockquote>
<h3>
Getting Started with Hammer
</h3>
<p>
<span style="font-weight: bold">It's important</span> to get used to referring to the Help Section in Hammer 3.4 as that's where the Setup Guide is located.
</p> 
<p>
When you first load Hammer, it'll ask you if you want to view the help files. Use these to assist you in the initial Setup of Hammer.<br />
Once you have Hammer set up, go to the File menu and click New.
</p><!--break-->
<p>
If you left the defaults in for the options General, 2D Views and 3D Views during setup then you should be presented with 4 windows: <br />
Camera View, Top (x/y), Front (y/z) and Side (x/z). I prefer having the scroll bars option checked in 2D Views. 
</p>
<center>
<a href="http://www.gamedesign.net/content/half-life/tutorials/wchbasic/itb_fig1.jpg"><img src="http://www.gamedesign.net/content/half-life/tutorials/wchbasic/itb_fig1_small.jpg" height="240" width="320" alt="Fig 1" title="Fig 1" style="border: none" /><br />
<small>Click to enlarge</small></a>
</center>
<p>
You should have something that looks like the screen shot above, without the blue green and red lines in it. I have drawn back in camera mode to show you the centre of the map. The lines intersect at the centre, also shown in the other windows by the darker green lines. 
</p>
<p>
<span style="font-weight: bold">The editing screen</span>:
<br />
The 2D Views on your screen have white Grid Lines on them. The outer edges of the grid represent the largest possible map size that the engine can handle (<span style="font-style: italic">actually you need to stay within about 128 units of the edge</span>). So when you get around to creating your first brush, try to start on the centre. The centre is designated by a crossed set of dark green lines.
</p>
<p>
The most common problem for new mappers is that their imagination is bigger than what the engine can handle.<br />
To get an understanding of what a map is all about, think of it as a shoebox. Everything inside the box is the map, or what the engine will render, everything outside the box (including the outer faces of the box) is the Void. No mans land, space, nothingness. This means that the engine will not render it.<br />
The biggest single problem for new mappers occurs when they build a box. The brushes must mate or touch each other creating an area inside the box that is &quot;airtight&quot; to the outside Void. 
</p>
<p>
Care taken during the initial brushwork saves the trouble later of re-doing the whole thing. If there is a hole in your box, there will be a problem when you run it. An error will occur called a LEAK. And that is just what it is! a LEAK. <br />
The engine can see from the inside of the box to the outside of the box, and this can lead to other important compiling programs not being run. Apart form bad building technique, the other most common problem is having Entity Types and Brushes in the Void. <br />
When placing monsters and entities, always make sure they are inside your &quot;airtight&quot; shoebox.<br />
As you get better at level design, you will find that there are exceptions to these rules... Just stick with this for the time being.
</p>
<p>
<span style="font-weight: bold">Brushes</span>:<br />
A Brush is just another name for a block created in the editor.<br />
Click on the Block Tool on the left-hand side of the screen, place your cursor on the Top (x/y) window and left click on the intersection of the dark green lines. Hold and drag your cursor diagonally up and to the right about 4 squares (this assumes that you have Snap: On Grid: 64 at the bottom-right) and let go. You now have a white dotted line that is starting to represent a rectangle. <br />
Click on the Selection Tool on the left-hand side of the screen and position the cursor over the centre of the white outlined brush in any of the 2D views. Right click and select Create Object. <br />
You should now have a rectangle in your 2D view.
</p>
<p>
<span style="font-weight: bold">2 and 3D Navigation</span>:<br />
Your rectangle should be visible in the Camera View. If it isn't then place your cursor on that view and hit the Z key. That should give you a cross cursor and all you need to do now is use the W,S,A and D keys to navigate around.<br />
To get out of Camera mode just hit the Z key again. <br />
While I am on the subject, you can navigate around the 2D views by placing the cursor over them and using the D and C keys to change the Zoom, and the Arrow Keys to move around. <br />
We need to do now is to make our rectangle a cube. 
</p>
<p>
In the Side (x/z) 2D View, click on the little cross in the centre of your rectangle. That should highlight the rectangle. <br />
Now click and hold the top centre little white square (handle) on the outline and drag it down or up so that you end up with a square box in that view. <br />
You should have a square in all the 2D views. 
</p>
<center>
<a href="http://www.gamedesign.net/content/half-life/tutorials/wchbasic/itb_fig2.jpg"><img src="http://www.gamedesign.net/content/half-life/tutorials/wchbasic/itb_fig2_small.jpg" height="240"  width="320" alt="Fig 2" title="Fig 2" style="border: none" /><br />
<small>
Click to enlarge
</small></a>
</center>
<p>
Clicking on your cube in the Camera or 2D Views will highlight it. When it is highlighted the whole object should change colour. Normally it will go red to indicate that is the item you are working with. <br />
Select Tools from the main menu bar and select Make Hollow. [Or right-click the object and select Hollow, or press Ctrl+H]. <br />
You should now have box asking what thickness you want the walls to be. <br />
The default is 32 units. It will not let you select 1 or -1. </p>
<p>
Here is what happens:<br />
When you select a number greater than 1 it will automatically carve a piece out of the centre of your cube and leave you with the internal wall thickness that you choose. <br />
If you select a negative number, it will leave a hollow the size of the original cube and build the walls externally to the thickness you have selected. <br />
For the purpose of this we will stay with the default (32) and click Ok.
</p>
<center>
<a href="http://www.gamedesign.net/content/half-life/tutorials/wchbasic/itb_fig3.jpg"><img src="http://www.gamedesign.net/content/half-life/tutorials/wchbasic/itb_fig3_small.jpg" height="240" width="320" alt="Fig 3" title="Fig 3" style="border: none" /><br />
<small>
Click to enlarge
</small></a>
</center>
<p>
As you can see from the above figure you now have a hollow cube. The hollow tool works well for simple things like cubes, but be careful when using it on anything that has non-perpendicular angles (i.e. anything that's not a cube ). 
</p>
<p>
To get inside your square and have a look, click on the Entity Tool, click in the middle of your square, and adjust the little green box so that it is in the middle of the space you have created in all the 2D views. <br />
The entity you want is info_player_start so make sure this is selected in the Object Bar. Hold the cursor over the green box, right click and select Create Object [or press Enter]. <br />
You should now have a green rectangle in your cube. (If you are using the Hammer 3.5 Beta, you will see Gordon) This is the player start information that the game engine uses to work out where the player will join the map at.<br />
Click on the Entity Tool again and as you did with the info_player_start and insert a light entity above your player start. 
</p>
<center>
<a href="http://www.gamedesign.net/content/half-life/tutorials/wchbasic/itb_fig4.jpg"><img src="http://www.gamedesign.net/content/half-life/tutorials/wchbasic/itb_fig4_small.jpg" height="240" width="320" alt="Fig 4" title="Fig 4" style="border: none" /><br />
<small>
Click to enlarge
</small></a>
</center>
<p>
What next... Hit F9 and if you have set up the compile programs correctly (<span style="font-style: italic">Hammer Setup</span>) you should end up standing in a really revolting pink room. <br />
The 'F9' key will take you to a compile screen. It is important to check the boxes next to Vis and Rad, as by default they are not checked.
</p>
<p>
Congratulations! More to follow - now that you have an ugly pink room (that isn't very big) we will explore some of the ways you can make it look good and expand on it. 
</p>
<hr /> 
<!--Original Submitted by Andy Oct 04-->
<p>
<span style="font-weight: bold">Part 2: Walls and Halls</span>
</p>
<p>
So you managed to compile the map from Part 1 and find yourself standing in an awful pink room. If you didn't, then I suggest you get aquainted with the Hammer Help file and Setup guide before you read any further.<br />
The most commonly asked questions on the forums always have something to do with Setup or Compiling Problems.<br />
Reopen that RMF file and let's go to work on it. First thing we need to do is change the grid size. 
</p>
<center>
<img src="http://www.gamedesign.net/content/half-life/tutorials/wchbasic/itb2_sog.jpg" height="23" width="234" alt="Snap to Grid" title="Snap to Grid" />
</center>
<p>
To do this use your <span style="color: #ff0000"> [ </span> and<span style="color: #ff0000">  ] </span> keys to adjust the setting. You should find that the cube you created fits exactly in four of the grids. 
</p>
<p>
Now for a texture. Select your cube. Only got one wall? Click on the <span style="color: #ff0000"> Ignore Group</span> button. You can call up your texture application tool by pressing <span style="color: #ff0000">Shift + A</span> or by clicking the button on the toolbar. 
</p>
<p>
<img src="http://www.gamedesign.net/content/half-life/tutorials/wchbasic/itb2_textures.jpg" align="left" height="303"  width="124" hspace="6" alt="Texture Application" title="Texture Application"  />You should be presented with the default <span style="color: #ff0000">aaatrigger</span>. Select the <span style="color: #ff0000">Browse</span> button and look for a texture you like. I have used <span style="color: #ff0000">crete3_wall01b</span>. When you have found the texture you want just double click on it to select. It should appear just above the <span style="color: #ff0000">Replace</span> button. Ok, playing with textures is a tutorial in it's own right, so for now just click <span style="color: #ff0000">Apply</span> and your cube should be that texture. Now create a second room. Do this by cloning. First, select the existing room. Then, while pressing the <span style="color: #ff0000">Shift</span> key, click and drag with the left mouse button. Place the second room <span style="color: #ff0000">128</span> units away from the first room.
Your top view should look like the one below. <img src="http://www.gamedesign.net/content/half-life/tutorials/wchbasic/itb2_topview1.jpg" align="right" height="231" width="300" vspace="8" alt="Top View" title="Top View" />
</p>
<p>
<span style="font-weight: bold">The Corridor</span>:<br />
Now, we need to make a hole in each room so we can connect them together. If you have read the hints and tips at various other sites you will know that carving is a mortal sin. The idea is that you should construct each brush individually. This makes sense, especially when you are dealing with more intricate work. But today we are going to carve... just remember to carve sparingly later on, and only when you are making holes in solid blocks. Carving cylinders can lead to all sorts of problems. First, create a brush that displaces the area that you want to carve. It's a good idea to make the brush big enough for the player to move through.
</p>
<p>
<span style="font-style: italic; font-weight: bold">TIP</span>: Have a look at the tutorial <a href="/node/596" target="_blank"><span style="font-weight: bold"> Half-life Dimensions</span></a>. The minimum height of an overhead object in the standing position is <span style="color: #ff0000">73</span> units and the minimum width is <span style="color: #ff0000">33</span> units. 
</p>
<p>
In this example I have created a brush that is <span style="color: #ff0000">200w&nbsp;&nbsp;64l&nbsp;&nbsp; 96h</span> and placed it so that it is just above the floor brush and is slightly off center and just pierces each of the walls. Now, click the selected object to highlight it, and select <span style="color: #ff0000">Carve</span> from the menu. This will cut out a hole from each wall, leaving the carving object in place. Click on the carving object again to select it and choose <span style="color: #ff0000">Make Hollow</span> from the tools menu. You will be asked to provide a wall thickness. I have used <span style="color: #ff0000">4</span> for this example because that will make the walls 4 units thick and still leave the corridor big enough to move through.
</p>
 <p>
 (<span style="color: #ff8040">Note</span>: don't use negative numbers for this as the parts of the corridor extending into the rooms will intersect the rooms' walls. You could optionally resize the carving block before hollowing so that it just touches the outside of each room, then holow to -32 or something).
 </p>
<p>
<img src="http://www.gamedesign.net/content/half-life/tutorials/wchbasic/itb2_topview2.jpg" align="left" hspace="8" vspace="6" height="211" width="272" alt="Top View 2" title="Top View 2" />Great, now we have a hollow object connecting both the rooms but if you look at the corridor in <span style="color: #ff0000">Camera</span> view, you won't be able to see through. To correct this just click on <span style="color: #ff0000">Ignore Group</span> and highlight the end brush of the new corridor and delete it. Do the same with the redundant wall brush and the other wall brush and end. Be really careful when you're doing this - make sure that the brush you delete is the right one. Use all the views to avoid problems. (This is where <span style="color: #ff0000">Undo Delete</span> comes in handy). Notice how the carving has removed the wall brushes from the original cube group and created several other brushes. This is one of the reasons that carving can be problematic. A 'leak error' reported during compiling, more often than not, will be caused by moving a brush that has been affected by a carve. I make a habit of extending brushes into walls after carving, to help with inadvertent shifts of the main group. Anyway that is it. You can compile and run the map. The second room will be dark unless the light was part of the original cube group. So while pressing the <span style="color: #ff0000">Shift</span> key select the light and drag it across to the new room. Great. Try resizing and making the corridor just big enough to move through. 
</p>
<center>
<img src="http://www.gamedesign.net/content/half-life/tutorials/wchbasic/itb2_corridor.jpg" height="240" width="320" alt="Final Product" title="Final Product" />
</center>
<p align="center">
<span style="font-style: italic">Next Part 3: Textures.</span>
</p>
<!--EOF@153--></ul><h1 id="652" name="652" class="book-h4">Texture and Lighting</h1><ul><!--
Submitted by Andy Oct 04 
Updated  Feb 2005 - Validated at W3C XHTML1.0 Transitional
 -->
<h3>Hammer 3.4</h3>
<blockquote>Texture - by Andy</blockquote>
Now that you've created a couple of rooms, it's time to think about textures. Open the rmf from the last tutorial. Firstly, what sort of playing area are you constructing? It's important to have a theme or at least know where you are going with this. Once you have a general idea of the type of environment you're creating, choosing textures becomes much easier. 
</p><!--break-->
<p>
For this tutorial I am using some basic room textures. Open the <span style="color: #ff0000">Texture Application</span> tool (unless you have it as part of your Screen Element Views) and click the <span style="color: #ff0000">Browse</span> button to have a look at what is available. 
</p>
<center>
<img src="http://www.gamedesign.net/content/half-life/tutorials/wchbasic/itb3_1.jpg" height="227" width="336" alt="Image 1" title="Image 1" />
</center><br />
<p>
The texture browser has some great features. Type <span style="color: #ff0000">floor</span> in the filter line and the browser will only show textures that have 'floor' as part of their name. Size set to <span style="color: #ff0000">1:1</span> will show you the actual size of the texture and what grid space it normally covers (128x128 in this example). If you select <span style="color: #ff0000">Only Used Textures</span>, it will show you all the textures you have used on your map so far. (<span style="font-style: italic">Useful, since using too many textures looks bad and also wastes the limited texture memory.</span>)
</p>
<p>
Textures have different functions based on the prefix in their name:
</p>
<blockquote>
<span style="color: #ff0000">{ </span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Transparent<br />
<span style="color: #ff0000">! </span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Water (a special texture that acts like water)<br />
<span style="color: #ff0000">~ </span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Light (Textures begining with this will emit light)<br />
<span style="color: #ff0000">+ </span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Animated (Triggering shows the next texture)<br />
<span style="color: #ff0000">+A </span>&nbsp;&nbsp; Animated Toggle (cycles through Max 10 frames)<br />
<span style="color: #ff0000">- </span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Random Tiling (there will be 3 or 4 in a set) 
</blockquote>
<p>
So <span style="color: #ff0000">!WATERBLUE</span> is a functional water texture and <span style="color: #ff0000">+0~ELEV1_PAN</span> is a the first in a sequence of special animated light emitting textures. You will find a mixture of the prefixes through out the <span style="color: #ff0000">.wad</span> files.
</p>
<p>
<span style="font-weight: bold">The Floor</span>:<br />
I have chosen <span style="color: #ff0000">c1a3floor02</span> for the floor. So in the <span style="color: #ff0000">Texture Browser</span> double click the texture you require and that texture should now be shown in <span style="color: #ff0000">Face Properties</span> box (or on the right hand side of your screen in the <span style="color: #ff0000">Texture Bar</span>.<br />
I have found that the easiest way to apply textures to entire brushes is to have the Texture Bar as part of your screen view. To select a brush click on the <span style="color: #ff0000">Ignore Group</span> button, as this will stop you from accidentally applying the texture to an entire group, and select the brush you want to apply the texture to, in this case the Floor. <br />
Use <span style="color: #ff0000">Ctrl + Left Click</span> to highlight the second floor in the map and with both the floors highlighted, just click on the <span style="color: #ff0000">Apply Current Texture</span> button. Both floors should now resemble concrete tiles. 
</p>
<p>
<span style="font-weight: bold">The Walls</span>
Using the same method as above, find a suitable texture for the walls such as <span style="color: #ff0000">c2a4e_w1c</span> and select all the wall brushes and apply the texture. Just to give you an idea of what can be achieved with textures, click on <span style="color: #ff0000">Browse</span> in either the Texture Bar or the Face Properties box. Check the box for Only Used Textures and type <span style="color: #ff0000">c2a</span> in the Filter line.<br />
You should have the <span style="color: #ff0000">c2a4e_w1c</span> texture as the only one showing in the Textures box. (If there is more than one texture showing, then all the textures showing will be marked).<br />
Now click on <span style="color: #ff0000">Mark</span> and this will select all the brushes in your map that have that texture (84 or so). </p>
<p>
Move the Face Properties box so that it isn't obstructing the <span style="color: #ff0000">Camera View</span> and move that view so that you have a clear perspective of the corridor, wall, floor and ceiling.
</p>
<center>
<img src="http://www.gamedesign.net/content/half-life/tutorials/wchbasic/itb3_2.jpg" height="281" width="381" alt="Image 2" title="Image 2" />
</center>
<p>
In the Face Properties box adjust the <span style="color: #ff0000">Y Scale</span> to <span style="color: #ff0000">0.60</span> and the <span style="color: #ff0000">Y Shift</span> to <span style="color: #ff0000">70</span> or <span style="color: #ff0000">71</span>. This should leave the walls with a dark line at the top and bottom accentuating the ceiling and floor.<br />
You can adjust the scale and shift to suit your needs and try the <span style="color: #ff0000">Align: World</span> or <span style="color: #ff0000">Face</span> check boxes. When you have got it looking how you want it, just close the Face Properties box. 
 </p>
<p>
I used the same method to apply <span style="color: #ff0000">fifties_ceil5</span> to the roof and then as with the walls I adjusted the ceiling to fit. Scale <span style="color: #ff0000">X</span>:<span style="color: #ff0000">1.00</span> and <span style="color: #ff0000">Y</span>:<span style="color: #ff0000">1.00</span>, Shift <span style="color: #ff0000">X</span>:<span style="color: #ff0000">16</span> and <span style="color: #ff0000">Y</span>:<span style="color: #ff0000">55</span> and the Align: World box checked. 
</p>
<p>
I have left the corridor as the original texture. You might want to create a border and apply a neutral texture to it. <br />There are heaps of ways to apply texture. Just remember that applying texture to the entire brush can avoid mixed texture errors when compiling.<br /> Try not to use too many textures and spend some time aligning your textures so they look good. For large areas use a large texture (128x128 or larger) and for outdoors or other huge areas make the scale high so that the texture isn't repeated too often. This also improves performance.<br /> Getting it to look right is really important. Experimenting with textures and the tools can produce great results. 
</p>
<center>
<img src="http://www.gamedesign.net/content/half-life/tutorials/wchbasic/itb3_3.jpg" height="252" width="336" alt="Image 2" title="Image 2" />
</center>
&nbsp;
<hr />
<p>
<span style="font-weight: bold">Part 4: Lighting</span>:<br />
In this tutorial we will look at the effects of lighting. Good lighting is great for atmosphere. It's also good to have a few dark places but not too many.
</p>
<p>
Before we go any further, when you compiled your Map did the light look as though there was a real light? By that I mean, did the map look as though there was a light where you placed it or did it look like the whole map was floodlit?. If it looked floodlit or really bright, then you might want to compile it again and look at the <span style="color: #ff0000">Error Log</span>. It is normally saved in the same area as your .rmf file. Look for a line that indicates an Error. If there is a LEAK in your map, then the map will be floodlit or "Fullbright". If you do not fix the LEAK, then the rest of this tutorial is pointless, because you will not see the lighting as it is meant to be.  <br />
Another way to check for a LEAK is to bring up the console with the <span style="color: #ff0000">~</span> tiald key and type in pointfile. If there is a LEAK, the pointfile will be generated and it will tell you the number of points read. If it is <span style="color: #ff0000">0</span> then your map doesn't LEAK..... yet.
</p>
<p>
<span style="color: #ff0000">The Properties</span> dialog (found by right-clicking the <span style="color: #ff0000">light</span> entity) allows you to customize the brightness, colour, appearance (flickering, fading, etc), target, and name of the light.
</p>
<center>
<img  src="http://www.gamedesign.net/content/half-life/tutorials/wchbasic/itb4_7.jpg" height="217" width="300" alt="Brightness" title="Brightness" />
</center>
<p>
Also, in the <span style="color: #ff0000">Flags</span> section, you have the option of indicating that the light should be <span style="color: #ff0000">Initially Dark</span>. In this case you'd also have to supply a name for the light so it could be "triggered" to turn on. 
</p>
<center>
<img src="http://www.gamedesign.net/content/half-life/tutorials/wchbasic/itb4_1.jpg" height="150" width="200" alt="Image 1" title="Image 1" />&nbsp;<img src="http://www.gamedesign.net/content/half-life/tutorials/wchbasic/itb4_2.jpg" height="150" width="200" alt="Image 2" title="Image 2" /> <br />
<img src="http://www.gamedesign.net/content/half-life/tutorials/wchbasic/itb4_3.jpg" height="150" width="200" alt="Image 3" title="Image 3" />
</center>
<p>
The effect created by just changing the colour is dramatic. The first figure uses the default settings. For the second room I have selected the light's properties and highlighted <span style="color: #ff0000">Brightness</span>. This will bring up an additional setting, <span style="color: #ff0000">Pick Color</span>. <img src="http://www.gamedesign.net/content/half-life/tutorials/wchbasic/itb4_4.jpg" align="left" vspace="8" hspace="8" height="200" width="300" alt="Image 4" title="Image 4" /><br /> 
Clicking on this option takes you to a colour palette where you can choose what suits you. The colour palette has an Add to <span style="color: #ff0000">Custom Colors</span> button - if you find a colour that suits the theme of your room, just click that bar to save the colour. It will appear under Custom Colors: this will remain set even when you close the map or compile it. Great for large levels that need consistency. You can see from the figure that I have saved the three Colours used above. The default Brightness setting is the yellow hue shown. <br />
Placement of the lights has a varied effect. The lights in the figures above are <span style="color: #ff0000">8</span> units below the ceiling. Adding a ceiling light fixture will enhance the effect. 
</p>
<p>
<span style="font-weight: bold">Working with Light Textures</span>:<br />
There are a lot of textures that can be used and the easiest way to find them is to open your texture browser and type <span style="color: #ff0000">+</span> in the filter [or have a look in the file lights.rad in your WorldCraft folder]. Create a brush <span style="color: #ff0000">64 x 80 x 4</span> units to apply your light texture to. In the example map I have used <span style="color: #ff0000">+0~fifts_lght01</span> (because the texture size is the same as the brush) and applied another texture to the border of the light. Place this brush in the centre of the room above the existing light. To add a little realism to the light you might want to change the light entity property Appearance to <span style="color: #ff0000">Flicker A</span>. The Fluorescent Flickersetting actually turns the light off and on, transitioning the room between light and dark. <br />
Most light textures can be used in conjunction with <span style="color: #ff0000">func_</span> entities, by setting the <span style="color: #ff0000">Minimum Light Level</span> in the entity properties to &gt; <span style="color: #ff0000">1</span>. This gives the appearance of the texture being lit, but adds no light to the actual room. If you add a light texture to the borders of your light brush, they will also light up and sometimes this lessens the effect and reduces the shadow, giving the light an unnatural look. 
</p>
<center>
<img  src="http://www.gamedesign.net/content/half-life/tutorials/wchbasic/itb4_5.jpg" height="188" width="250" alt="Image 5" title="Image 5" />&nbsp;<img src="http://www.gamedesign.net/content/half-life/tutorials/wchbasic/itb4_6.jpg" height="188" width="250" alt="Image 6" title="Image 6" />
</center>
<p>
Create a small brush using the <span style="color: #ff0000">exit1</span> texture on the front face and position it above the corridor (makes sense). Select the brush and change it to a func_wall entity with a Minimum Light Level of <span style="color: #ff0000">1</span> (you can make this value 500, but it doesn't make any difference. The range is 0 to 1, so 0.5 is half-lit). The figures above show the enhancement gained by applying an entity to the brush. If you don't have any light in the room, and there is a really inviting "EXIT" sign at the other end, it doesn't take a genius to work out where your player is going to go. Great place for a trap or monster trigger. 
</p>
<p>
<span style="font-weight: bold; font-style: italic">NOTE</span>:<br /> If you give the light a name to use with a trigger or switch, remember that the game engine can only cope with about 4 named lights or animated lights in the same visual area. More than that might produce weird effects and an error (<i>Warning to many direct lights...</i>) in some compiling programs. I am not sure how many unnamed lights the engine can cope with, but less is better. Try making use of texture lighting. The same applies with <span style="color: #ff0000">light_spot</span> entities. 
</p>
<p>
As I said in the first paragraph, if your map does not compile properly or VIS and RAD do not finish, then your map will be lit &quot;Fullbright&quot; and any changes you have made to the lights properties will not show in the final map. Be sure to check for LEAK's as this is the most common cause.
</p>
<p>
Experiment and try new things. The secret to a good level is in the texturing and the lighting. 
</p>
<p align="center"><span style="font-style: italic"> Next Part 5: Furniture Prefabs</span>
</p>
&nbsp;
<hr />
<!--EOF@116--></ul><h1 id="653" name="653" class="book-h4">Prefabs and Monsters</h1><ul><!--
Submitted by Andy Oct 04 
Updated Nov 04 
Updated Feb 2005 - Validated at W3C XHTML1.0 Transitional
-->
<h3>Hammer 3.4</h3>
<blockquote>Prefabs and Monsters - by Andy</blockquote>
<p>Now you should have a couple of rooms connected by a corridor with walls that look good and a little mood lighting. Remember the first level of Half-Life? Where you got to walk around and interact with the items in the rooms. Each of the areas was pretty much defined by what sort of additions were in the rooms such as desks, lamps or lab tables. Furniture is just as important as good lighting and texture, to give your level realism. <br /><!--break-->
Most of the work in this tutorial will be done using the <span style="color: #ff0000">Object Bar</span> and inserting items that are already available.
</p>
<p>
<span style="font-weight: bold">Prefab Objects</span>:<br />
One of the simplest ways to add details is through the use of prefabs. Prefabs are prefabricated objects that are stored in libraries. Let's add a number of prefabs to this level from the prefab library.
</p>
<img src="http://www.gamedesign.net/content/half-life/tutorials/wchbasic/itb5_1.jpg" align="right" height="337" width="154" vspace="20" hspace="8" alt="Image 1" title="Image 1"  /> 
<ol>
<li>Select <span style="color: #ff0000">Usable Objects</span> from the categories list, and <span style="color: #ff0000">File Cabinet,west</span> from the objects list (the use of entities in prefabs is a bit dated and sometimes pretty useless, as with this usable filing cabinet. If you want the draw to open, then all well and good, but you can't fit anything in it. One way around this is to change its properties to <span style="color: #ff0000">func_breakable</span> and set the properties to spawn something on break.)</li>
<li>On the lower part of the <span style="color: #ff0000">Objects</span> dialog is the <span style="color: #ff0000">Insert original   prefab</span> button. Press this now.</li>
<li>The prefab is now inserted in your room. Move it around the 2D views until you have it in a position you like. I have placed it in the first room, up against the wall. If you look at the example map you will see that the cabinet is about two units away from each wall but sitting on the floor. This will give it a more realistic lighting profile [and is good practice in cases where the object is not an entity - this way it won't split up the wall]. Move the cabinet hard up against the wall and look at the difference in shadow when you compile the map.</li>
<li>I have inserted another filing cabinet, a trash can, a black chair and an old desk, north from the random objects category. Note that the trashcan needs to be transformed by <span style="color: #ff0000">270</span> on the <span style="color: #ff0000">Z</span> axis so that the push sign aligns with the room and I have also scaled it to<span style="color: #ff0000"> 0.7</span> on all axes. </li>
</ol>
<p>
So now we have some things in our office, here are a few tips. The black chair created by the Prefab factory is a <span style="color: #ff0000">func_pushable</span> entity. If you leave it free in the room it can be pushed around. If you don't want it to move, then it's a good idea to select it and click <span style="color: #ff0000">to World</span>. By doing this you won't be able to push it and it won't make a moving sound every time you brush against it.
</p>
<img  src="http://www.gamedesign.net/content/half-life/tutorials/wchbasic/itb5_2.jpg" height="208" width="274" hspace="6" align="left" alt="Image 2" title="Image 2" />
<p>
In the second room I have added <span style="color: #ff0000">Modern shelves, south</span> and <span style="color: #ff0000">Metal shelves</span> (transformed <span style="color: #ff0000">180 Z</span> axis) from the random objects category. (The 'south' modern shelves are bound to a <span style="color: #ff0000">func_door</span> for some reason, so click <span style="color: #ff0000">to World</span> unless you actually want the shelves to act as a door.) The metal shelves have four boxes on them.<br />
You can adjust the <span style="color: #ff0000">Spawn on Break</span> properties with the Map -&gt; <span style="color: #ff0000">Entity Report</span> by selecting the properties of each box. If you choose to spawn any item other than a weapon, ammo for instance, then you will find that if you break the box the ammo will fall through the shelf (<span style="font-style: italic">this is because there is no world entity below the box - it doesn't happen when you build the prefab yourself</span>).
</p>
<p>
Have fun inserting prefabs. Just remember to check their properties as most of them are designed to function in one way or another. Practice transforming and scaling prefabs, so that they look right. What you're trying to achieve is playability balanced with good looks. There are numerous resource sites that have downloadable prefabs, but use caution and check them before putting them into your maps.
</p>
&nbsp;
<hr />
<!--Submitted by Andy Oct 04-->
<p>
<span style="font-weight: bold">Part 6: Monsters</span>:<br />
If you take a look at the entity list you will see that there are lots of 'monster' entities. Now that you have created a simple map you probably want to know how to get it to interact with the player (or in other words, put in something to blow away). While it can be fun running around looking at great scenery and impressive detail, it becomes boring after a while. So this tutorial is a really basic guide to placing monster entities.
</p>
<p>
First up, we are going to look at how a <span style="color: #ff0000">monster_barney</span> can make a map interesting. Use your entity tool to place a monster_barney in the second room. Leave all of his properties as default. Run the map, pick up the crowbar and go to Barney. First up try getting him to follow you into the other room with the <span style="color: #ff0000">Use</span> key. If that isn't successful give him whack on the forehead with the crowbar. Now run back into the other room. 
</p>
<p>
A couple of things you have probably noticed already:<br />
Getting him to follow you was like pulling teeth and then once you had banged him on the head, he pulled out his gun but didn't chase you. Main reason for this is that poor old Barney didn't know where to go.
</p>
<p>
<span style="font-weight: bold">Info_node Placement</span><br />
<img src="http://www.gamedesign.net/content/half-life/tutorials/wchbasic/itb6_infonodes.jpg" height="202" width="242" hspace="6" align="right" alt="Info Nodes" title="Info Nodes" /> Barney is one of the monster entities that will follow <span style="color: #ff0000">info_nodes</span> as well as <span style="color: #ff0000">path_corners</span>. To get Barney to chase you into the next room, he needs a map. Info_nodes provide Barney with a path to follow. Same as you would place a normal entity, place an info_node at the entrance to the corridor, one in the middle and one at the other end. Info_nodes are shown here as yellow squares.
</p>
<p>
It doesn't matter how high of the ground you put them as the game engine always drops them down to 8 units off the floor; what does matter is where you put them. I have placed these nodes just 3 units from each corridor wall. This really isn't a good thing as it is better to place them a minimum of 24 units from walls or any other brush in your map. Included in the download is a small text file that was part of the original Wordcraft tutorials, which includes good information about placement. 
</p>
<p>
If you compile the map now and talk to Barney with the Use key and move into the other room he should follow you down the corridor. If you hit him with the crowbar, he will draw his gun and come looking for you.<br /> (<span style="font-style: italic">Note: that info_nodes and path_corners are not interchangable: the former are used by all monsters that need to act on AI, and move dynamically, while the latter are used to specify movements - Barney will follow the path_corners until you bash him, and then he will rely on the info_nodes to hunt you down.</span>)
</p>
<span style="color: #ff0000">Info_air_nodes</span> work with flying monsters ie; <span style="color: #ff0000">monster_alien_controller</span>. 
<p>
<span style="font-weight: bold">Path_corners</span>:<br />
You can get Barney to follow path_corner entities as though he was checking security. Just place one at each end of the corridor (In their properties name them <span style="color: #ff0000">p1</span> and <span style="color: #ff0000">p2</span> and set their <span style="color: #ff0000">next stop targets</span>. In this case p1 with a next stop of p2 and p2 with a next stop of p1). In Barney's properties, change his <span style="color: #ff0000">Target</span> to p1. If you compile the map now and don't move, Barney will be walking up and down the corridor. If you approach him, he will stop following the path_corners. All monsters do this to some extent.
</p> 
<p>
<span style="color: #ff0000">Monster_scientists</span> behave in pretty much the same way and you can make them follow path_corners or info_nodes.
</p>
<p>
<span style="color: #ff0000">Monster_human_grunts</span> behave slightly differently. First of all you don't really interact with them, you try to kill them. So the main thing is to decide if you want them to chase after the player. If so, info_node placement is important (<span style="font-style: italic">and reading the file included with the example map for this tutorial will save time</span>). A good coverage of info_nodes (maximum 128 visible at any point) within a room will make it impossible for the player to hide. The grunts will attack until killed, or you get capped, whichever is first. 
</p>
<p>
<b>Monster Properties</b>:<br />
<img src="http://www.gamedesign.net/content/half-life/tutorials/wchbasic/itb6_flags.jpg" height="141" width="235" hspace="8" vspace="8" align="left" alt="Flags" title="Flags" /> In the Flag properties, checking <span style="color: #ff0000"> WaitTillSeen</span> will make the monster stand there until the player sees him, then he will revert to his normal AI (This will not work if the monster is following path_corners). Checking <span style="color: #ff0000">Gag</span> will shut them up. This means that the player will not know they are around the corner.
</p> 
<p>
Checking <span style="color: #ff0000">Prisoner</span> for any monster entity will stop the monster from attacking the player.
</p> 
&nbsp;
<img src="http://www.gamedesign.net/content/half-life/tutorials/wchbasic/itb6_properties.jpg" height="167" width="235" hspace="8" vspace="8" align="left" alt="Properties" title="Properties" />
<p>
You can use monsters to activate or deactivate things by entering the name of the target you want to trigger in <span style="color: #ff0000">Trigger Target</span>. There are <span style="color: #ff0000">Trigger Conditions</span> that can be set and are pretty much self-explanatory (<span style="font-style: italic">Ok, well maybe not, it seems that some of the conditions are redundant. So test each one.</span>)
</p>
<p>
One of the things that can be done is to trigger a <span style="color: #ff0000">monstermaker</span> entity. By using this trigger, the new monsters don't appear until the Trigger Condition is met. Monstermakers are a tutorial in their own right, there is so much you can do with them. If you try them out, just remember to change the <span style="color: #ff0000">Angle</span> of the entity so that the monsters it produces face the player or the info_node path when they appear. If you don't they will appear and end up looking at the walls, not doing much until the player attacks.
</p>
<p>
I have included a test room map to show how info nodes, Trigger Conditions and monstermaker entities work. Kill the first <span style="color: #ff0000">monster_houndeye</span> and watch the fun start. 
</p>
<center>
<img src="http://www.gamedesign.net/content/half-life/tutorials/wchbasic/itb6_houndeye.jpg" height="209" width="279" alt="Houndeye" title="Houndeye" />
</center>
<p>
One last note: There are so many things you can do with monsters. Some of them can be used in conjunction with <span style="color: #ff0000">scripted_sequences</span> and <span style="color: #ff0000">aiscripted_sequences</span> which is outside the scope of this tutorial, but set up a test map, and check out what the different flags and properties of monsters do. It pays to be in God Mode when working with monsters. Remember that monsters that wait to get shot at are boring so get them to do something! And also, too many monsters can ruin the pace of play.
</p>
&nbsp;
<hr />
<center>
Downloads :
</center><br />
<center>
<a href="http://www.gamedesign.net/content/half-life/tutorials/wchbasic/itb5.zip"><span style="text-decoration: none">Getting Started Final Map</span></a>
</center><br />
<center>
<a href="http://www.gamedesign.net/content/half-life/tutorials/wchbasic/itb6.zip"><span style="text-decoration: none">The Monster Map</span></a>
</center>
<br />
<hr />
<!--EOF@107--></ul><h1 id="669" name="669" class="book-h4">Simple Doors</h1><ul><!--
submitted by Andy Oct 04 
Updated Nov 04 
Updated Feb 2005 - Validated at W3C XHTML1.0 Transitional
-->
<h3>Hammer 3.4</h3>
<blockquote>Simple Doors - by Andy</blockquote>
<p>This is a guide to simple doors in Half-Life, and how to get them working using WorldCraft or Hammer 3.4<br /><br />
<a href="http://www.gamedesign.net/content/half-life/tutorials/wchbasic/simpledoors/sdoors.zip">Simple Doors</a>.zip file contains a small <b><span style="font-style: italic">.rmf</span></b> file and a <b><span style="font-style: italic">.map</span></b> file. The layout we are using has 9 doors, each with a different function.
</p><!--break-->
<p>
<b>Building the door</b>:<br />
The first thing we need to look at are the entities involved in creating a door. Have a look in the Entity Guide at&nbsp;&nbsp;<a href="book/view/619#func_door" target="_blank"> Func_door </a>&nbsp;&nbsp;as our first set of doors use the Func_door Entity.
</p>
<center>
<a href="http://www.gamedesign.net/content/half-life/tutorials/wchbasic/simpledoors/d1_large.jpg" target="_blank">
<img src="http://www.gamedesign.net/content/half-life/tutorials/wchbasic/simpledoors/d1_small.jpg" alt="Func_door" height="215" width="300" hspace="8" vspace="8" /><br />
<small>Click to enlarge</small></a>
</center>
<p>
To make the door, build a brush 64 x 96 units and about 8 units wide. (<span style="font-style: italic">The reason I use this size is that most of the generic door textures in Half-Life are 64 x 96.</span>)<br />
Choose the door texture you want to use by browsing through the texture window, and then right click on your brush and choose 'Create Object'.<br /> You should now have a textured door. Left click the Texture Application tool and then Left click the front of the door. Click <span style="color: #ff0000">FIT</span> and the texture will align with the brush.<br />(<span style="font-style: italic"> Do not do this with the whole door selected as it will shrink the texture on the edges of the door and could cause errors later on. You should only fit the texture to the front and rear faces of the door.</span>)
</p>
<p>
<b>Getting the door to work</b>:<br />
Select the brush and click <span style="color: #ff0000"> To Entity </span> or <span style="color: #ff0000"> Ctrl+T </span>. Scroll through the available entities in the Object Properties box until you come to Func_door. Click on Func_door to select it and now you can modify the properties of your door.<br />
The first thing we want to do is get the door to open. In the first example I have chosen a sliding door.<br /> Looking at the Object Properties box in the picture above, the thing we need to concentrate on is the direction that we want the door to move in.<br />
Hammer gives us two methods to achieve this, <span style="color: #ff0000">The Angle Compass</span> and the <span style="color: #ff0000">Pitch Yaw Roll (Y Z X)</span> attribute.
</p>
<p>
For this door I have aligned the compass to point in the direction I want the door to go, when looking at the door in the Top(x/y) view. The Angle setting next to the compass will then display 270.<br />
If I wanted to use the Pitch Yaw Roll attribute, I could manually type in 0 270 0. This means the door will move in the 'Z' axis at 270 degrees.
</p>
<p>
<span style="color: #ff0000">Note</span>:<span style="font-style: italic"> Top (x/y) is the 'Z' axis, Front (y/z) is the 'X' axis and Side (x/z) is the 'Y' axis.</span></p>
<p>
The only other attribute I have set for the first door is a <span style="color: #ff0000">Lip</span> value of <span style="color: #ff0000">5</span>. The Lip value tells the door how far to retract along it's width. When triggered the door will move in the chosen direction the same distance as it's width.<br /> Lip value subtracts the number used from the width making the door travel more or less depending on the value set. If I enter a Lip value of '5' then the door will protrude out of the door frame by 5 units. If I wanted it to disappear altogether, then i would use a negative number.<br /> Using a 'Lip' value is important, because 'In Game' the door edge texture will look bad if it ends flush with the door frame.<br />
Ok, so that is door one. The next two door in the sequence are not much different.
</p>
<p>
The <b>Second door</b> will rise vertically because the Angle drop down box next to the Compass has been set to <span style="color: #ff0000">Up</span>. <br />Manually, I could have set this in the Pitch Yaw Roll attribute by entering -90 0 0 where this instructs the door to move -90 degrees in the 'Y' plane. <br /> I have also increased the lip value to '10' so that when the door is open, a larger amount is visible at the top.
</p>
<p>
The <b>Third door</b> is just a reverse of the first to give you a better idea of how it all works, however I have set the <span style="color: #ff0000">Delay before Close</span> to -1 so that the door stays open.
</p>
<p>
<b>Rotating Doors</b>:<br />
For rotating doors have a look in the Entity Guide at: <a href="book/view/619#func_door_rotating" target="_blank"> Func_door_rotating </a>.<br />
Nearly all doors that move other than in a straight plane are made using the func_door_rotating entity.
</p>
<center>
<a href="http://www.gamedesign.net/content/half-life/tutorials/wchbasic/simpledoors/d4_large.jpg" target="_blank"><img src="http://www.gamedesign.net/content/half-life/tutorials/wchbasic/simpledoors/d4_small.jpg" alt="Func_door_rotating" height="215" width="300" hspace="8" vspace="8" /><br />
<small>Click to enlarge</small></a>
</center>
<p>
In the Second set of doors, 4 to 6, I have made use of the func_door_rotating entity and the Origin texture.<br />
Here is a step by step guide to making a rotating door:
</p>
<ul>
<li>Build you basic 64 x 96 brush and texture it.</li>
<li>Build a small square brush about 8 x 8 x 50</li>
<li>Texture the small brush with the Origin Texture</li>
<li>Align the small brush so that it overlaps the door brush as though you were adding a hinge</li>
<li>Select the Door Brush, and hold Ctrl and select the Origin Brush</li>
<li>With both the brushes highlighted, click To Entity or Ctrl+T.</li>
<li>Select func_door_rotating from the Object properties box</li>
</ul>
<p>
The door is finished!<br />
That is all you need to do to make a swinging door.<br /> The position of the Origin brush is important, but the size is not. It acts like a hinge and let's the game engine know which way the door should go.<br /> The biggest mistake people make is that they don't tie both the origin and the door to the func_door _rotating entity. 
</p>
<p>
<b>Door 5</b> is slightly different in that I have placed the origin at the top of the door. This will make it move up and away from the player.<br /> To get this to work, you need to decide what plane you want the door to move in. In the example map, I wanted the door to move in the 'Y' plane or side view.<br /> To make the door move in the 'Y' plane you need to change the <span style="color: #ff0000">Flag Property</span> of the door. One of the options is 'Y axis", check this and the door will move in the 'Y" axis.
</p>
<p>
<b>Door 6</b> operates in the 'X' axis. I have added a small Origin brush in the top corner of the door and selected the Flag "X axis". The door will hinge on the Origin and move up and away. Understanding how Origin's work is vital when using func_door_rotating.
</p>
<p>
<b> Doors and triggers</b>:<br />
<b>Door 7</b> is a simple sliding door very similar to door 1. The difference here is that we are going to use a button to open the door.<br />
To achieve this we need a <a href="book/view/619#func_button" target="_blank"> Func_button</a>.
</p>
<ul>
<li> Build a small brush next to the door and assign that to the func_button entity. (Ctrl+T)</li>
<li> In the Properties of your func_button, add a 'Target' of <span style="color: #ff0000">door_7</span>.</li>
<li> In the 'Flag properties' check <span style="color: #ff0000">Dont Move</span>.</li>
<li> Select your door and add a 'Name" of door_7.</li>
<li>Under 'Locked sound' choose 'Latch locked'.</li>
</ul>
<p>
I have added a 'Move Sound' and a 'Stop Sound' to this door just to give it a bit of ambience and given the door a negative 'Lip' value.<br /> The reason for the negative Lip value is that with the Latched Locked sound added, the door will produce a locked sound when the player touches it regardless of wether it is open or not. To fix this, just add the negative lip so the player can't touch it.
</p>
<p>
<b>Door 8</b> is a simple locked door. To achieve this all you need to do is 'Name' the door and assign a 'Locked Sound' to it.
</p>
<p>
<b>Door 9</b> is slightly more complicated. It is locked from the outside and when touched by the player makes the 'Latch Locked' sound, but it swings open when approached from the other side. Setting this up is simple when you start with the basic swinging door:
</p>
<ul>
<li>In the Object Properties of the Door assign a 'Name' of <span style="color: #ff0000"> door_9</span>.</li>
<li>Assign a 'Master' of <span style="color: #ff0000"> door_9_master</span>.</li>
<li>Assign a 'Locked Sound' of <span style="color: #ff0000"> Latch Locked </span>.</li>
</ul>
<p>
(<span style="font-style: italic">Flag choice will depend on where your door is, but for this door I needed to check 'Reverse Direction' and 'One Way'. This will ensure that the door does not swing toward the player</span>.)
</p>
<p>
Add a <a href="book/view/623#multisource" target="_blank"> Multisource</a> and a <a href="book/view/625#trigger_multiple" target="_blank"> Trigger_multiple</a> near the door and set the 'Multisource up like this:
</p>
<ul>
<li>'Name' <span style="color: #ff0000"> door_9_master</span>.</li>
<li>'Target' <span style="color: #ff0000"> door_9</span>.</li></ul>
<p>Set Up the Trigger_multiple like this:</p>
<ul>
<li>'Target' <span style="color: #ff0000"> door_9_master</span>.</li>
</ul>
<p>
Approaching the door from the locked side will play the 'Locked Latched' Sound. The door will not open even if the player presses the 'Use' key. It wont open because the 'Multisource' is waiting for the trigger to be activated before allowing the door to open. 
</p>
<p>
The download example map makes use of textured lighting. Make sure you include a 'lights.rad' in your root folder for compiling. Check the Half-Life tutorials for more info on <a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/5" target="_blank"> 'Lights.rad'</a>.
</p>
<p align="center">Download the <a href="http://www.gamedesign.net/content/half-life/tutorials/wchbasic/simpledoors/sdoors.zip">Simple Doors</a> .zip</p>
<!--EOF@125--></ul><h1 id="834" name="834" class="book-h4">Creating a dark environment.</h1><ul><!--
Submitted by Andy
Updated  Feb 2005 - Validated at W3C, XHTML1.0 Transitional
-->
<h3>Hammer 3.4</h3>
<blockquote>Creating a dark environment - by Andy</blockquote>
<p>
Not all of the maps in the original HL were daylight bright, but most of the outdoor maps were. Counter-Strike has enabled the player to use &quot;Nightvision goggles&quot; for the first time, and there is no point in running around with them on, in full daylight.<br />
Here we will try to cover the easiest method of adding darkness to your level.
</p>  <!--break-->
<p>
With your outdoor area open in Hammer go to the tool bar and select <span style="font-weight: bold">Map</span> and then <span style="font-weight: bold">Map properties...</span> you should be presented with the <span style="font-weight: bold">Worldspawn Object Properties</span> box below:
</p>
<center>
<img src="http://www.gamedesign.net/content/half-life/tutorials/darksky/darksky_1.jpg" width="400" height="317" alt="Dark Sky 1" title="Dark Sky 1" />
</center>
<center>
Hammer 3.5b shown
</center>
<p>
Change the <span style="color: #ff0000">environment map (cl_skyname)</span> to a suitable night type sky. <br />
The darker defaults in HL are:
</p>
<ul>
<li>night</li>
<li>space</li>
<li>black</li>
<li>dusk</li>
</ul>
<p>
You could use a day time sky texture, but it will look really odd, because the texture is not actually lit by the <span style="color: #ff0000">light_environment</span>. It will be bright and visible regardless of the settings you change. Changing the <span style="font-weight: bold">Default Light Level</span> in the Worldspawn Properties does not seem to do anything regardless of the figure entered.
</p>
<p>
<span style="font-weight: bold">Light_environment</span>:<br />
Add a light_environment (or a light_spot with FLAG: &quot;Is Sky&quot; checked) to your map. If you compile your map now, you will get something that looks like this:
</p>
<center>
<img src="http://www.gamedesign.net/content/half-life/tutorials/darksky/darksky_3.jpg" width="400" height="300" alt="Dark Sky 3" title="Dark Sky 3" />
</center>
<p>
This is because the light environment has a default brightness of 200.<br />
Open the properties for the light_environment and adjust the <span style="color: #ff0000">4th</span> number in the sequence to a lower figure. The example map is set to 2.
</p>
<p>
<span style="color: #ff0000; font-style: italic">NOTE:</span> &nbsp; If you change it to 0 it won't go black, it will actually appear like a medium lit map. The other three numbers in the sequence are Red, Green, Blue identifiers. Using the <span style="color: #ff0000"> Pick Color</span> option will change these figures, but will not change the 4th number.
</p>
<center>
<img src="http://www.gamedesign.net/content/half-life/tutorials/darksky/darksky_2.jpg" width="400" height="312" alt="Dark Sky 2" title="Dark Sky 2" />
</center>
<p>
You can change the Pick Color option to add atmosphere but you will notice that the actual brightness of the map is not effected by the Luminosity of the colour chosen. Changing the colour to a deep blue or red will give the map some more feel, if it is a bit lighter than the example map. 
</p>  
<center>
<img src="http://www.gamedesign.net/content/half-life/tutorials/darksky/darksky_4.jpg" width="400" height="300" alt="Dark Sky 4" title="Dark Sky 4" />
</center>
<p>
Great, Now we have a dark outdoor map just waiting for some action. I added a small texture light just to give the map some perspective, and some thing to look at..  </p>
<center>
<img src="http://www.gamedesign.net/content/half-life/tutorials/darksky/darksky_5.jpg" width="400" height="300" alt="Dark Sky 5" title="Dark Sky 5" />
</center>
<p>
If you have the SKY texture in other areas of your map, they will appear the same as this area. You only need <span style="font-weight: bold">one</span> light_environment in a single map regardless of where the sky textures are, however if you are using Zoners Half Life Tools 253 custom Build 1.7 then you can make use of the -noskyfix line for your RAD compile to make use of multiple light_environments.
</p>
<p>
There is a lot more you can do with the light_environment and skies, but this is just a really basic starter tutorial, If you are using ZHLT 253 1.7 then you have the option of adding <span style="color: #ff0000">-ambient</span> to your hlrad compile. Figures like:<br />
-ambient 0.0040 0.0040 0.0040<br />
Will add a small amount of ambient light to your shadows. The figures are very sensitive but the ones above seem to work best for general level design.
</p>
<!--EOF@67--></ul><h1 id="871" name="871" class="book-h4">Glass and Moving Doors</h1><ul><!--
Submitted by Andy  Dec 04
Updated  Feb 2005 - Validated at W3C XHTML1.0 Transitional
-->
<h3>Hammer 3.4</h3>
<blockquote>Glass and Moving Doors - by Andy</blockquote>
<p>
Most of the door textures available in Half-Life have areas that are just dying to be filled with glass and the problem for most new mappers seems to be getting the glass to move with the door.<br /> 
To get the most out of this tutorial, you should have an understanding of Glass Rendering and the basics of Doors.<br />
I have added a list of RUST tutorials below to help you on your way.
</p><!--break-->
<p>
To get started, let's look at the humble triggered sliding door on the left of the picture below.
</p>
<center>
<img src="http://www.gamedesign.net/content/half-life/tutorials/wchbasic/glassdoors/glassdoors_fig4.jpg" height="276" width="400" alt="Finished Product" title="Finished Product" />
</center>
<p>
<span style="font-weight: bold">A sliding door with moving glass</span>:
</p>
<p>
I started off with a brush textured C1A0B_DR4b as the basis for a simple sliding steel door. It isn't as well defined as some HL textures as to where the glass fits, but it does provide a good base for testing.<br />
Create a brush approximately the size you want your 'see through' glass panel to be. Size it against the door and position it so that it passes through the door.<br /> 
Things to consider are that the look ahead height is about 50 units, so you want your glass to be positioned in the door with the center around that height.<br /> 
I have positioned it just above the texture's buttons, and fitted it so that it looks as though it should be there. When you have your brush positioned correctly, create it <span style="color: #ff0000">(Enter)</span> and select the Carve <span style="color: #ff0000">(Shift+X)</span> tool to create a hole for the glass. When you Carve, remember never to Carve entities. <br />
Remove your newly created brush from the hole, as we are going to use that as the door glass later. Select all the parts of your door (NOT the glass piece) and assign them to the func_door entity. Open the door properties and adjust them to suit the direction and speed of the door and make sure that the FLAG &quot;Use Only&quot; is NOT checked. (<span style="font-style: italic">If you want your door to be &quot;Use Only&quot; then the properties of the glass and the door must be exactly the same.</span>)
</p>
<p>
<span style="font-weight: bold">The Glass</span>:
</p>
<p>
The piece you used to carve the hole in the door only needs a few modifications. First, assign it to a func_door entity and give it exactly the same attributes as your sliding door. Don't forget the angle, so that it moves in the same direction as the door. To make the glass see-through set the Render Mode to &quot;Texture&quot; and the Render FX to about 90 (<span style="font-style: italic">a setting of 0 is totally transparent and 255 is solid</span>).
</p>
<p>
An important part of setting up the glass is the &quot;lip&quot; value.  For sliding doors, the lip value of the glass should be equal to the size of the opening edge frame of the door. When you place the glass in the door, make sure that you stretch it to match up with the outer edge of the door that will move into the wall.<br />
Another way to acheive the same effect is to make the glass the same size as the hole and set the lip value to equal the right-hand frame thickness added to to the left-hand frame thickness.
</p>
<center>
<img src="http://www.gamedesign.net/content/half-life/tutorials/wchbasic/glassdoors/glassdoors_fig1.jpg" width="220" height="281" alt="Glass Lip" title="Glass Lip" />
</center>
<p>
<span style="font-weight: bold">Making it Work</span>:
</p>
<p>
To get everything going, add a simple button and set it to trigger the door. That's about all there is too it. You can set the FLAG properties of the door and button to &quot;toggle&quot;  if that's the effect you want to achieve. Just don't forget that whatever you use as door properties must be set for the glass as well.
</p>
<p>
On a final note, adjusting the texture inside the hole you cut for the glass is a good idea, as the area is now visible.
</p>
<p>
<span style="font-weight: bold">Wooden swinging (rotating) door with glass</span>
</p>
<p>
Based on the idea above, we need to add two glass panels with two &quot;origin&quot; brushes.<br />
Create a new wooden door (I used the FIFTIES_DR6A2 texture) with an Origin brush and assign it to the func_door_rotating entity. Create two new glass panels to fit so that they are thinner than the door but extend to the hinged side of the door. Add an Origin brush to each of the glass panels and assign the each panel to the func_door_rotating entity.<br /> 
The glass panels should have the same settings as the door, with the exception of the Render Mode and RenderFx for the glass.<br /> 
In the Top View make sure all the Origin brushes are all in line and reasonably centered on the edge of the panels. To trigger the door open I have used a simple trigger_multiple that runs through the door. Just set its Target to the name of the door and glass.
</p>
<p>
That is about it, but just a few things to consider, if you are going to assign locked or moving sounds to this door it is a good idea to make sure the doorframe and the large glass panel have the same properties selected.<br /> 
As for setting the Flag properties of the door and the glass panels, well it depends on what you want your door to look like and how you want it to behave. Just remember to set the flags for all three items and to make sure they all have the same Name(targetname).
</p>
<center>
<img src="http://www.gamedesign.net/content/half-life/tutorials/wchbasic/glassdoors/glassdoors_fig3.jpg" width="268" height="271" alt="Origin Placement" title="Origin Placement" />
</center>
<p>
The front shot of the door shows the two glass panels (white) grouped with their Origin brushes. It also shows the position of the original door and Origin brush (red).
</p>

I have included a small zip file containing an .rmf and .map file called<br /><center><a href="http://www.gamedesign.nethttp://www.gamedesign.net/content/half-life/tutorials/wchbasic/glassdoors/glassdoors.zip">Glassdoors.zip</a>
</center>
<hr />
<p>
<span style="font-weight: bold">Other Door and Glass related tutorials</span>:
</p>
<p>
<a href="http://www.gamedesign.net/book/view/6">Creating Proximity Doors</a><br />
<a href="http://www.gamedesign.net/book/view/669">Simple Doors</a><br />
<a href="http://www.gamedesign.net/book/view/196">How to make respawable glass</a>
</p>
<hr/>
<!--EOF@82--></ul><h1 id="875" name="875" class="book-h4">Rope, Water and Waterfalls</h1><ul><!--
Submitted by Andy 2004
Updated  Feb 2005 - Validated at W3C XHTML1.0 Transitional
-->
<h3>Hammer 3.4</h3>
<blockquote>Rope, Water and Waterfalls - by Andy<br />
Dripping water info, special thanks to 'yesukai'</blockquote>
<p>
<span style="font-weight: bold">ROPE</span><br />
There are a few ways to make ROPE, but I have found the easiest way is to create a brush <span style="color: #ff0000">1</span> unit by <span style="color: #ff0000">1</span> unit in the 2D top (x/y) view. No need to do anything special to it just yet, but stretch it out to the desired length.
</p><!--break-->
<p>
If you want to be able to walk up to the rope and begin to climb it, then it will have to be about <span style="color: #ff0000">66</span> units from floor level. Not much fun there, let's make it difficult and set it at about <span style="color: #ff0000">75</span> units from the floor, two things happen here. Firstly, your player will be able to walk under it, and secondly, they will have to jump to get on it.<br />
Back to the rope. You should have a perfectly formed square block. Let's texture it.
</p>
<p>
There are some textures that lend themselves to being ROPE, the main one I use is actually called that! <span style="color: #ff0000">ROPE</span> but the fun doesn't end there. If you apply the ROPE texture to your newly formed brush, then you will get what looks like a strange catapillar.<br />
To make the ROPE more realistic, reduce the <span style="font-weight: bold">Y</span> Scale to about <span style="color: #ff0000">0.30</span> and it should start looking more ropey, if there is such a thing.
</p>
<p>
Adjust the <span style="font-weight: bold">Rotation:</span> to around <span style="color: #ff0000">30</span> and that will make the ROPE spiral slightly. Just a few other things while we are at this, Click on the <span style="font-weight: bold">Justify:</span> buttons Left or Right, Bottom or Top, but whatever you do, don't click <span style="font-weight: bold">Fit:</span>, that makes the texture fit the brush, and might be Ok for doors, but is disasterous for ROPE.</p>
<p>
To make your ROPE climbable, you need to create another brush and assign it to the entity <span style="color: #ff0000">func_ladder</span> (If you turn the rope brush into a func_ladder, it wont show up when you compile, because there are no Render Modes with the ladder entity). The easiest way to do this is to copy the rope brush and extend it so that it is about a unit either side of the original textured rope brush. Select your new brush and move it away from the original rope brush and select <span style="font-weight: bold">To Entity</span>, choose func_ladder. Move your ladder brush back over the top of the rope brush. You now have a really good looking ROPE, with a ladder brush covering it. </p>
<p>
You might be wondering what the smallest unit is in Half-Life. Well it is half of one unit, because you can take your ROPE from the above example and use Vertex Manipulation to merge the corner verticies to create a little triangle that is half a unit in size. This shouldn't effect your texture, but you might like to tweak the rotation angle, or Scale again.<br />
Side by side, there really isn't much difference.<br />
</p>
<p>
<span style="font-weight: bold">What about swinging rope?</span><br />
We know that you can't have two entities assigned to the same brush, so how are we going to get a rope to swing, and be climbable at the same time? Your guess is as good as mine.... They did it in OpFor so it should be easy? Well after hours of testing the <span style="color: #ff0000">func_pendulum</span> and reading everything to do with rope in HL, I couldn't do it. <span style="font-weight: bold">KingNic</span> came good and provided the answer:<br />
<span style="font-style: italic">The ropes in Opposing force were a specially coded entity which used models to make the rope and had simple physics applied. You can't recreate the same effect in normal HL without coding.</span>
</p>
<p>
<span style="font-weight: bold">WATER</span><br />
Water type textures in HL begin with the <span style="color: #ff0000">!</span> symbol. To have a look at all the available water textures just open the texture browser and type <span style="color: #ff0000">!</span> in the <span style="font-weight: bold">Filter</span> box. You should be presented with about 40 different textures. While we are on the subject, here are the basic meanings behind the preface symbols for textures:
</p>
<blockquote>
<span style="color: #ff0000">{ </span>&nbsp;&nbsp;&nbsp;&nbsp; Transparent<br />
<span style="color: #ff0000">! </span>&nbsp;&nbsp;&nbsp;&nbsp; Water<br />
<span style="color: #ff0000">~ </span>&nbsp;&nbsp;&nbsp;&nbsp; Light<br />
<span style="color: #ff0000">+ </span>&nbsp;&nbsp;&nbsp;&nbsp; Animated<br />
<span style="color: #ff0000">+A </span>&nbsp; Animated Toggle (Max 10 frames)<br />
<span style="color: #ff0000">- </span>&nbsp;&nbsp;&nbsp;&nbsp; Random Tiling
</blockquote>
<p>
To make water, just add water! sorry couldn't help myself. Build a brush the size and shape you want, and assign a water texture to the whole brush. That is the most basic way of acheiving water. But it wont do things that the water in Half-Life normally does. For instance, it wont react correctly to light, it won't have any animated wave height and it wont be very realistic. To fix this we need to tie the water brush to an entity.
</p>
<p>
Get your brush the size and shape you want, and then assign it to the func_water entity. Select <span style="font-weight: bold">To Entity</span> and choose func_water.<br />
Remember that when you add a water texture to a brush, after compiling, only the top face of the brush will actually show the texture, so make sure that the visable part of your brush is the top face, any sides that show will be opaque and look a little weird. Great, now we have a water brush. You will also find that if you have a large block of water, and a large wave height that you will have to stretch the <span style="color: #ff0000">X : Y</span> Scale of the texture otherwise it will look as though it is breaking up. <br />Let's have a look at the entity properties of func_water.
</p>
<center>
<img src="http://www.gamedesign.net/content/half-life/tutorials/wchbasic/rope/rope_water.jpg" width="350" height="276" vspace="10" alt="Water 1" title="Water 1" />
</center>
<p>
The most useful attribute of func_water is the <span style="font-weight: bold">Wave Height</span> propety. This is set by default to <span style="color: #ff0000">3.2</span> This is the same default as assigned by the <span style="font-weight: bold">Worldspawn, Map Properties</span> function. But the good thing about using the func_water properties, is that you can assign different wave heights to seperate brushes. There is no need to change any of the other properties, as the defaults will give you acceptable water.
</p>
<p>
<span style="font-weight: bold">A Waterfall</span><br />
Moving water is a different story. If you assign a water texture to a vertical func_water brush, it wont flow. Even if you assign a Scrolling texture to the brush it still wont flow. The only way I have found to make the water flow is to assign the brush to a <span style="color: #ff0000">func_conveyor</span> entity. The default speed on a func_conveyor is 100, and that might be a bit quick, I find that 50 to 70 seems Ok. The added bonus in using the func_conveyour is that you can set it's Flag Property to Not Solid and that will allow you to walk through your waterfall.
</p>
<p>
To make it more realistic change the Render Mode to <span style="color: #ff0000">Texture</span> and the FX Amount to <span style="color: #ff0000">255</span>. It will still look a bit block like, so you can then select all the func_conveyor brushes and give them the { Blue texture. This will make them transpearent with the Render Mode settings mentioned above. Now for the water texture, select only the front faces of the water and assign the scrolling texture to them. In the example map I used the Xen Scrolling water texture <span style="color: #ff0000">SCROLLXEN1</span>.
</p>
<p>
I have also done a bit of the good 'ol Vertex Manipulation to to top brush so that it looks a bit more realistic. I added an Ambient_Generic and assigned the <span style="color: #ff0000">ambience/waterfall3.wav</span> sound to it. OK, so it doesn't look like real water, but it is as close as you are going to get in HL.<br /> 
If your water isn't flowing the way you want it to, adjust your textures rotation. Best advice I can give on this is to highlight the face of the texture with the Texure tool open. Notice that on the face of the texture (3D view) in the center there are three arms of an indicator Yellow, Blue and Red. If you change the Rotation of the texture until the Yellow arm is facing the direction you want the texture to scroll then it will scroll that way after compiling.
</p>
<p>
<span style="font-weight: bold">Dripping Water</span><br />
Dripping water is really easy to create, the main idea I follow comes from <span style="font-style: italic">Jeff 'Yesukai' Pritchard</span> who suggests using an <span style="color: #ff0000">evn_blood</span> to create the effect. Place an env_blood in your map and change it's attributes: <span style="font-weight: bold">Name</span>, I creatively called mine Drip.<br /> 
Pitch Roll Yaw (Y Z X) to <span style="color: #ff0000">90 0 0</span> or Down, and the <span style="font-weight: bold">Amount of blood (damage to simulate)</span> to <span style="color: #ff0000">1</span>. In the Flag Properties, Check Blood Stream
</p>
<p> 
Next we need a multi_manager. Assign the multi_manager a <span style="font-weight: bold">Name</span> and enter new Key value for Drip and the Name of your multi_manager (so that it reactivates itself), set the values of these to something like <span style="color: #ff0000">0.8</span>. Don't forget to check the Multithreaded Flag. Now a trigger, I just used a trigger_auto to target the multi_manager as I figured that the drips might as well start with the map.
</p>
<center>
<img src="content/half-life/tutorials/wchbasic/rope/rope_water2.jpg" width="450" height="337" alt="Rope 1" title="Rope 1" />
</center>
<hr />
<center>I have added a small RMF to help you out:<br />
<a href="http://www.gamedesign.net/content/half-life/tutorials/wchbasic/rope/rope.zip">Rope.zip</a>
</center>
<!--EOF@82--></ul><h1 id="876" name="876" class="book-h4">Texture Application</h1><ul><!--
Submitted by Andy Dec 04
Updated  Feb 2005 - Validated at W3C XHTML1.0 Transitional
-->
<h3>Hammer 3.4</h3>
<blockquote>Texture Application - by Andy</blockquote>
<p>
There is more than one way to apply texture so this isn't going to show you all of them, just the basics. What I am going to discuss is the best way to avoid the error <span style="color: #ff0000">Bad Surface Extents</span> and weird texture placement.
</p><!--break-->
<h4>
The Map
</h4>
<ul>
<li>Open Hammer 3.4</li>
<li>Open a new map.</li>
<li>On the top <span style="font-weight: bold">Tool Bar</span> click <span style="font-weight: bold">View</span>.</li> 
<li>Highlight <span style="font-weight: bold">Screen Elements</span> and make sure that <span style="font-weight: bold">Texture Bar</span> is ticked.</li>
</ul>
<p>
Your Screen should look something like this:
</p>
<center>
<img src="http://www.gamedesign.net/content/half-life/tutorials/wchbasic/textureapp/text_align1.jpg" width="400" height="235" alt="The Screen" title="The Screen" />
</center>
<p>
Using the <span style="color: #ff0000">Block Tool</span> draw a square <span style="color: #ff0000">256</span> x <span style="color: #ff0000">256</span> x <span style="color: #ff0000">128</span>, but do not create it yet.<br />
Now Click on the <span style="font-weight: bold">Browse</span> button in the Texture Group: shown above you should now be able to see all the textures you have listed in the Tools>Options>Texture Tab that you added when you set Hammer up.<br />
Every time you open a new map, you need to make sure that the textures listed in the setup are the one's you want to use. Hammer does not save previous texture listings, so you can't switch between them. (<span style="font-style: italic"> Lot's of people have asked for this to be included! Maybe in Hammer 4?</span>).<br />
If you want to Browse a single .wad file that is in your texture list, just click the down arrow where it say's <span style="font-weight: bold">All Textures</span> and choose the .wad file you want to browse.
</p>
<p>
To select one of the textures from the Browse screen (<span style="font-style: italic">I used OUT_HCW2A because it is a <span style="color: #ff0000">128</span> x <span style="color: #ff0000">128</span> texture</span>), just double click on it and you will be returned to the main map screen. Notice how the texture you double clicked on is now shown in the Texture group: It also tells you how big it is.<br />
Right Click on your white dotted box in the 2D views and select <span style="font-weight: bold">Create Object</span>. You are now the proud owner of a textured cube. Select the cube and hollow it to a wall thickness of 2.<br />
First thing to do is click on <span style="font-weight: bold">Ignore Group</span> and select each of the walls. Now bring up the <span style="font-weight: bold">Toggle Texture Application</span> by clicking the tool or using Shift+A.
</p>
<center>
<img src="http://www.gamedesign.net/content/half-life/tutorials/wchbasic/textureapp/text_align2.jpg" width="400" height="327" alt="The Walls" title="The Walls" />
</center>
<p>
This is where all the fun starts.<br />
Click on <span style="font-weight: bold">B</span> (Bottom), <span style="font-weight: bold">C</span> (Center) or <span style="font-weight: bold">T</span> (Top)  to align the texture. Sometimes it is useful to use the <span style="color: #ff0000">Hide Mask</span> button, to get rid of the red and see what your doing, the brushes will be identifyable by there own little orientation arrows. This texture works well with <span style="font-weight: bold">Top</span> or <span style="font-weight: bold">Bottom</span> keys because it is a 128 unit texture.<br />
With the <span style="color: #ff0000">Face Properties</span> box open, you can just click the floor and add your floor texture. But this will only change the face of the floor, not the whole brush. To texture the whole brush, close the Face Properties box and select the brush, then open it again and do the same as above.
</p>
<h4>
Doors
</h4>
<p>
The easy way to texture doors is to find a door texture you like, and build a brush the size of the texture. For this example I have chosen the <span style="color: #ff0000">LAB1_DOOR7</span> texture. Make a brush <span style="color: #ff0000">64</span> x <span style="color: #ff0000">96</span>, browse to the texture, and create the textured brush the same as you did before.<br />
Great, the texture is all over the place... Bring up the <span style="font-weight: bold">Texture Application Tool</span>. Notice how the texture is already shown in the tool, that is because you used the texture group Browse to find it. Now click on the face of the door so that only that face is higlighted. Click on the <span style="font-weight: bold">Fit</span> button, and the texture will fit the face. This is important way to get textures to look right if your door brush is not the same size as the texture.<br />
So why didn't I just FIT the whole door as one? becasue the texture tool will then fit the whole door texture onto <span style="font-weight: bold">each face</span>, so there will be a really weird door texture on the sides and top and bottom.
</p>
<center>
<img src="http://www.gamedesign.net/content/half-life/tutorials/wchbasic/textureapp/text_align3.jpg" width="226" height="237" vspace="8" alt="The alignment" title="The Alignment" />
</center>
<p>
To fix those, highlight the side and click <span style="font-weight: bold">L</span> (Left) or <span style="font-weight: bold">R</span> (Right). That normally makes it look ok, but you might want to fine tune the alignment with the <span style="color: #ff0000">Shift X : Y</span> settings. To fix the top and bottom, use the <span style="font-weight: bold">T</span> (Top) or <span style="font-weight: bold">B</span> (Bottom) buttons.
</p>
<h4>
Things to remember
</h4>
<p>
Try to apply texture at Scale 1:1 initially, and resize visible faces to reduce r_speeds, where possible.<br />
Don't use the <span style="font-weight: bold">Fit</span> button to texture to a whole brush, just do the face you need.<br />
Spend some time using the settings on the texture tool to find out what they do. Try selecting multiple faces and using the <span style="color: #ff0000">Treat as One </span> setting to do lot's of brushes at once. Great for getting Hallways to look good.<br />
If all else fails, read the Hammer Help file (Texture Application Mode). <span style="font-style: italic">Which is what you should have done in the first place!</span>
</p>
<hr />
<center>I have added a small RMF to help you out:<br />
<a href="http://www.gamedesign.net/content/half-life/tutorials/textureapp/text_align.zip" style="text-decoration: none">Text_Align.zip</a>
</center>
<!--EOF@70--></ul><h1 id="883" name="883" class="book-h4">Grunts and Gun's</h1><ul><!--
Submitted by Andy Dec 04
Updated  Feb 2005 - Validated at W3C XHTML1.0 Transitional
-->
<h3>Hammer 3.4</h3>
<blockquote>Grunts and Guns - by Andy<br/>
Special thanks to Raymond Talavera and Handy Vandal</blockquote>
<p>
Remember that rocket launcher in the Half-Life map <span style="font-weight: bold; font-style: italic">On a Rail</span>?&nbsp; The one that was at the end of the tunnel. You had to kill the grunt to get it to stop firing. 
</p><!--break-->
<center>
<img src="http://www.gamedesign.net/content/half-life/tutorials/wchbasic/gruntgun/gruntgun_1.jpg" width="400" height="300" vspace="6" alt="turret" title="turret" />
</center>
<p>
This tutorial assumes that you can already build a turret. In this example I have used the func_tank entity because you can set the Bullets to &quot;None&quot; and this saves you having to go into God Mode to test it.<br />
The turret I have used was built from scratch as I had a particular field gun theme in mind, but you don't have to limit yourself to the func_tank. This tutorial will work with the func_tanklaser, tankmortar or rocket.
</p>
<p>
Place your func_tank in the map and give it a name. I have used <span style="color: #ff0000">Gun1</span>. <br />
The only other thing you have to do is set Active on in its flag properties. Don't set the Controllable flag just yet, we will discuss that later.
</p>
<p>
Place a monster_grunt behind it and set the grunt properties to:<br />
Trigger Target: <span style="color: #ff0000">Gun1</span> (the name of the func_tank)<br />
Trigger Condition: <span style="color: #ff0000">Death</span> (<span style="font-style: italic">the reason I haven't set it to 50% is that I had trouble with the tank stopping if the grunt was killed outright on the first shot - sometimes the gun would continue to function</span>)
</p>
<p>
And in the monster_human_grunt Flag properties check &quot;Prisoner&quot; as this will stop the grunt from leaving the gun and attacking.<br />
You can also check Gag if you want the grunt to stay silent.<br />
Ok, run the map and you should have a functioning gun with a grunt behind it.<br />
Shoot the grunt, the gun stops! 
</p>
<p>
<span style="font-style: italic; color: #ff0000">Note</span>:<br />
If the gun doesn't stop when you kill the grunt, then go over the settings again. If it still doesn't work you can add a trigger_relay and get the grunt to Trigger Target the relay's name, and the relay to target the func_tank, with the Trigger State set to <span style="color: #ff0000">Off</span>.  Either way you now have a gun that will target the player.
</p>
<p>
<span style="font-weight: bold">What if you want to kill the grunt and then let the player use the gun?</span>
</p>
<p>
Taking what you have achieved above, copy your tank.
</p>
<ul>
<li>Give it a name of <span style="color: #ff0000">Gun2</span>.</li>
<li>Change the Render Mode attribute to <span style="color: #ff0000">Texture</span>.</li>
<li>Leave the FX Amount set at <span style="color: #ff0000">0</span>.</li>
<li>Set the Controllable flag on, and make sure Active is <span style="font-style: italic">not</span> checked.</li>
<li>Place gun 2 in the exact same place as gun 1, so that they look like one in all views.</li>
<li>Create a brush and tie it to a func_tankcontrols entity, Set the Tank Entity Name to <span style="color: #ff0000">Gun2</span> and place the brush so Gun2 will be controllable.</li>
</ul>
<p> 
Check out the <a href="http://www.gamedesign.net/content/half-life/tutorials/wchbasic/gruntgun/gruntgun.zip"><span style="font-weight: bold; text-decoration: none">Downloadable Example</span></a>:<br /> 
The func_tankcontrols is placed at the player end of the gun, but to make it useable a clip brush is added so the player won't get caught on the gun. Also in the initial trial the corpse of the grunt got in the way; Check Fade Corpse in the grunt's properties to fix this.
</p>
<p>
Add two env_render entities to your map. For ease of use I put them above and to the right of the gun.<br />
The first env_render:
</p>
<blockquote>
Name it <span style="color: #ff0000">unrend1</span>.<br />
Target is <span style="color: #ff0000">Gun1</span>.<br />
Set the Render Mode to <span style="color: #ff0000">Texture</span>.
</blockquote>
<p>
The second env_render:
</p>
<blockquote>Name it <span style="color: #ff0000">rend2</span>.<br />
Target is <span style="color: #ff0000">Gun2</span>.<br />
Leave the rest of the settings at their defaults.
</blockquote>
<p>
Add a multi_manager to your map. Name it <span style="color: #ff0000">rendermm</span>. With Smart Edit off, add the following keys and values:<br />
</p>
<blockquote>
unrend1 <span style="color: #ff0000">0.2</span><br />
rend2 <span style="color: #ff0000">0.2</span><br />
gun1 <span style="color: #ff0000">0</span>
</blockquote>
<p>
Click on your grunt, and change his Trigger Target property to <span style="color: #ff0000">rendermm</span>.
</p>
<span style="font-weight: bold">So what's happening?</span><br />
<p>
The gun will commence firing when it has the player in range.<br />
Shooting the grunt triggers <span style="color: #ff0000">rendermm</span> which instantly switches off <span style="color: #ff0000">Gun1</span>, then triggers <span style="color: #ff0000">unrend1</span> and <span style="color: #ff0000">rend2</span>.<br />
Unrend1 makes Gun1 disappear. Rend2 makes Gun2 appear and Gun2 is flagged as Controllable.<br />
The player can now use the gun!
</p>
<img src="http://www.gamedesign.net/content/half-life/tutorials/wchbasic/gruntgun/gruntgun_2.jpg" width="514" height="427" alt="Entity Setup" title="Entity Setup" />
<p>
Just a few things added to this map to make it more realistic, I have added another multimanager, an env_shake and an ambient_generic because the func_tank is set to <span style="color: #ff0000">No Bullets</span>. There is no need to add the ambient_generic if you set the gun to fire something as it is already included as part of the entity. 
</p>
<p>
multi_manager:<br />
Name set to <span style="color: #ff0000">mm2</span>.<br />
Smart edit off and keys and values added for bang, <span style="color: #ff0000">0</span> and shake, <span style="color: #ff0000">0</span>.
</p>
<p>
env_shake:<br />
Name set to <span style="color: #ff0000">shake</span>.
</p>
<p>
ambient_generic:<br />
Name set to <span style="color: #ff0000">bang</span>.<br />
WAV File Name set to <code>weapons/explode3.wav</code>.
</p>
<p>
To get this part of it to work, you need to set Gun1 and Gun2 to Target <span style="color: #ff0000">mm2</span>. 
That way mm2 will turn the sound and shake on for Gun1 when it fires, and turn it on again when Gun2 is fired by the player.
</p>
&nbsp;
<!--EOF@109--></ul><h1 id="1044" name="1044" class="book-h4">Security Cards</h1><ul><!--submitted by Andy 01 Apr 05-->
<h3>Hammer 3.4</h3>
<blockquote>
Security Cards - by Andy<br />
</blockquote>
<p>Here's a really quick tutorial about getting a key to open a door (there might be an easier way to do this but I found that this method works pretty well).  You can also use the key in other levels by just cloning the door, trigger and multisource.
</p>
<p>The idea here is to make sure that the door will not open until you have the key. First up place an <a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/958#item_security">item_security</a> entity, an <a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/954#env_global">env_global</a> entity and a <a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/959#multisource">multisource</a> in your map. Oh yeah, don't forget the door and the card scanner.
</p>
<p>In the properties of the item_security entity, set the 'Target' to the name of the env_global.<br />
I have used the name card to make things easy. [ Something of interest here is that you could also use a world_items entity because it does the same thing.]
</p>
<p> In the properties of the env_global entity, set the Name to card, Global State to Set to cardtaken, Trigger Mode to On and Initial State to Off.
</p>
<p>In the properties of the multisource set the Name to Cardms and Global State Master to cardtaken. 
</p>
<p>You need to set the properties of the door and the door's <a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/955#func_button">func_button</a> (card scanner) so that it actually works. The card scanner does not need a name; the only properties that really need 
setting are the Target, in this case door2 (the name of the door) and 
Master, cardms (the name of the multisource). If you want the door to close behind the player, make sure that Toggle is not checked in the flag properties and that the door has the same flag.
</p>
<b>So What's Going On?</b>
<p>Picking up the security card calls the global (card) which sets the state to cardtaken. 
The multisource will not let the func_button operate until the cardtaken 
state has been called and now that it has, it allows the func_button to operate.
</p>
<p>There are <a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/content/half-life/tutorials/wchbasic/secards/securitycard.zip"><b>two maps provided</b></a> because I wanted to prove the Global.</p>
<center><img src="content/half-life/tutorials/wchbasic/secards/securitycard.jpg" width="250" height="188" alt="Final map" title="Final Map" /></center>
<p>
So this is what it looks like. Someone has bashed poor old Barney on the head, and the key is by his side . Try using the card scanner on the table before you get the card. The set of entities used lend themselves to endless possibilities, so have fun and if you find more uses then let us know through the forum.</p>
<hr>
<blockquote>This tutorial first appeared at <a href=http://www.twhl.co.za/index.php?">TWHL</a> in 2002, as an attempt to duplicate a tutorial I once read. I believe the original article was written by Venomus @ The SpawningTank and all credit for the initial guide should go to him.</blockquote></ul><h1 id="1084" name="1084" class="book-h2">Day of Defeat Tutorials</h1><ul><!--Submitted by Andy on behalf of Nick Robins-->
<h1>Day of Defeat</h1>
<blockquote>Mapping Day of Defeat - by Nick Robins<br />
The information in this series of tutorials is compatible with DoD v1.3 and I am hoping to provide all the functionality of Nick's original site, while adding some of my own information.<br /> Happy DoD mapping - Andy
</blockquote>
<h1>DoD mapping tutorials</h1>
<p>Below are direct links to all the tutorials and guides for DoD. If you are a first time DoD level designer without Half-Life level design experience, it is suggested that you get the hang of making simple levels for Half-Life first, as that will give you excellent grounding and a better understanding of the information provided.</p>
<p>If you are a long time HL level designer, and thought you would give DoD a try :-) then the most important tutorial in this lot is <b><a href="/node/1090">Required Entities</a></b> which outlines the basic Entity setup and provides instructions on how to get the map running in Steam.</p>
<p>Also listed under the References is a simple <a href="../content/dod/dodtest.zip">Example Map</a> showing the basic setup for a three flag system. This map also provides examples of clipping using special textures, creating sandbags walls with a dod_trigger_sandbag and using dod_object for non scoring objectives (Blowing a wall).</P>
			<h3>Creating Objective Systems</h3>
			<ul>
				<li><a href="/node/1085">Using DoD's flag capture system</a></li>
				<li><a href="/node/1086">Using DoD's object system</a></li>
			</ul>
			<h3>Player Spawns</h3>
			<ul>
				<li><a href="/node/1087">Moving spawns</a></li>
				<li><a href="/node/1088">Protecting spawns</a></li>
			</ul>
			<h3>Design Tutorials</h3>
			<ul>
				<li><a href="/node/1090">Required entitys</a></li>
				<li><a href="/node/1091">Using masters in DoD maps</a></li>
				<li><a href="/node/1092">Placing models in DoD maps</a></li>
				<li><a href="/node/1093">Class limits</a></li>
				<li><a href="/node/1094">Packaging maps for release</a></li>
			</ul>
				<h3>References</h3>
		<p><a href="/node/1089">DoD Entity Reference</a></p>
		<p>A link to: <a href="http://www.mardymouse.co.uk/modules.php?name=Downloads&d_op=viewdownloaddetails&lid=5&ttitle=Haircut's_Hammer_fgd_file">Haircut's fgd file</a></p>
		<p>Direct download  <a href="../content/dod/dodv4mod.zip">Andy's modified fgd file</a>
		<p>Download the <a href="../content/dod/dodtest.zip">Example Map</a></p>
	<br />
	<hr /></ul><h1 id="1101" name="1101" class="book-h3">Objective Systems</h1><ul><h1>Objective Systems</h1>
<p><b>Flag Systems</b> - covers the requirements for creating a level based on the Capture The Flag principles. It covers setup of entities, flags and scoring.</p>

<p><b>Object Systems</b> -  covers levels requiring the player to obtain an 'Object' to complete the map. It also deals with the use of 'TnT' to blow walls.</p></ul><h1 id="1085" name="1085" class="book-h4">Flag System</h1><ul><!--Submitted by Andy on behalf of Nick Robins-->
<blockquote>Mapping Day of Defeat - by Nick Robins</blockquote>
<h1>DoD Flag Objectives</h1>
<p>Most DoD maps use CTF or <span style="font-weight: bold;">C</span>ontrol <span style="font-weight: bold;">T</span>he <span style="font-weight: bold;">F</span>lags as the primary mission objective. This example will consist of five flags, the central flag will require two players five seconds to cap.</p>
	<p>Entitys used:</p>
	<ul>
		<li><a href="/node/1096#flag">dod_control_point</a></li>
		<li><a href="/node/1096#area">dod_capture_area</a></li>
		<li><a href="/node/1097#master">dod_control_point_master</a></li>
		<li><a href="/node/1097#score">dod_score_ent</a></li>
	</ul>
<hr />
<p><span style="font-weight: bold;">Step one</span>: Set up the scoring.</p>
<p>Select the point entity tool (shift-e) and select <a href="/node/1097#score">dod_score_ent</a> from the drop down menu in the sidebar on the right. Place two of these entitys somewhere suitable (this entity has no visible presence in game so place them somewhere convenient for you, such as near where the central flag will be).</p>
<center>
<img src="content/dod/tables/flag1.jpg" width="379" height="164" alt="Scoring Setup" title="Scoring Setup" />
</center>	
<p><span style="font-weight: bold;">&nbsp;&nbsp;&nbsp;&nbsp;tweaking</span>:<br />
<span style="font-style: italic;">points</span> - this specifys points awarded for mission completion (in this example a map capture).</p>
	<hr />
<p><span style="font-weight: bold;">Step two</span>: Adding the master.</p>
<p>Select the point entity tool (shift-e) and select <a href="/node/1097#master">dod_control_point_master</a> from the drop down menu in the sidebar on the right. Place the entity somewhere suitable (this entity has no visible presence in game so place it somewhere convenient for you, such as near where the central flag will be).</p>
<center>
<img src="content/dod/tables/cpmaster.jpg" width="335" height="164" alt="CP master setting" title="CP master setting" />
</center>		
<p><span style="font-weight: bold;">&nbsp;&nbsp;&nbsp;&nbsp;tweaking</span>:<br />
<span style="font-style: italic;">time between point gives</span> - one of the functions of the <b>dod_control_point_master</b> is to award points to the teams for each of the flags they hold. The interval is set here.</p>
	<hr />
<p><span style="font-weight: bold;">Step three</span>: Adding the flags</p>
<center>
<a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/content/dod/reference/flaglocation.jpg"><img src="content/dod/reference/flaglocation_small.jpg" width="123" height="108" alt="placing flags" /></a><br />
click to enlarge
</center>
<p>Select the point entity tool (ctrl-e) and select <a href="/node/1096#flag">dod_control_point</a> from the drop down menu in the right-hand sidebar. Place five of these. One where you want each of the flags to appear.</p>
<p><span style="font-weight: bold; color: #FF0000">Note</span>: to prevent the flag from &quot;levitating&quot; make sure that the brush face forming the ground bisects the entity box of the dod_control_point (see picture above).</p>
<center>
<img src="content/dod/tables/dcp.jpg" width="218" height="101" alt="dod_control_point" title="dod_control_point" />
</center>	
<p>Group name is the only field required for the flag(s) to function, however the central flag (which is to be captured via an area) needs more fields adjusting).</p>
<center>
<img src="content/dod/tables/dcp2.jpg" width="264" height="166" alt="dod_control_point" title="dod_control_point" />
</center>	
	<p>This flag will still require the &quot;can [team] touch?&quot; fields setting even if it is to be inaccesible (like the central flag in dod_thunder) in order to make the capture area progress display correctly.</p>
<p><span style="font-weight: bold;">&nbsp;&nbsp;&nbsp;&nbsp;tweaking</span>:</p>
	<ul>
		<li><span style="font-style: italic;">control point name</span> - the name that the players will see in-game eg; &quot;Church&quot;</li>
		<li><span style="font-style: italic;">time based points value</span> - how many points the team holding the flag will receive for each time period specified in the <span style="font-weight: bold;">dod_control_point_master</span></li>
		<li><span style="font-style: italic;">points to capturer</span> - how many points the player who caps the flag is awarded</li>
		<li><span style="font-style: italic;">control point index</span> - the location of the control point tell-tale in the players HUD. 1 is the far left, counting up to n which is the right hand end, -1 (default) is random placement. </li>
	</ul>
		<hr />
<p><span style="font-weight: bold;">Step four</span>: Adding the capture area</p>
<p>Create a brush completely covered with the &quot;aaatrigger&quot; texture. place this brush where you want the capture area to be. To make the brush into a capture area select it then click &quot;tools - tie to entity&quot; (ctrl+t) then select <a href="/node/1096#area">dod_capture_area</a> from the drop down list in object properties (alt+enter).</p>
<center>
<img src="content/dod/tables/dcp3.jpg" width="317" height="199" alt="dod_control_point" title="dod_control_point" />
</center>	
<p>For testing purposes it might be convenient to change the &quot;number required to cap&quot; fields to 1.</p>
</ul><h1 id="1086" name="1086" class="book-h4">Object System</h1><ul><!--Submitted by Andy on behalf of Nick Robins-->
<blockquote>Mapping Day of Defeat - by Nick Robins</blockquote>
<h1>Object Objectives</h1>
<p><a href="/node/1096#object">dod_object</a> and <a href="/node/1096#goal">dod_object_goal</a> combinations can be used for both primary and secondary objectives.</p>
<h1>DoD v1.X</h1>
<p>In DoD v1.X a <span style="font-weight: bold">dod_object_goal</span> is no longer required to make a simple wall that can be demolished with TnT (<span style="font-weight: bold">dod_object</span>) as all the settings required such as &quot;objective group&quot;, &quot;time delay&quot;, &quot;trigger when tnt is set&quot; can all be made directly on the <a href="/node/1099#break">func_breakable</a> representing the wall. My original &quot;object objective&quot; tutorial on setting up demolishable walls can be found <a href="/node/1100">here</a>. This tutorial will create a simple &quot;Capture the Documents&quot; <span style="font-weight: bold">primary</span> objective for the allied team.</p>
<p>The difference between a primary and a secondary objective is the final target entity for the completion of the objective. For a primary objective the target entity will be a <a href="/node/1097#score">dod_score_ent</a> (possibly via another entity such as a <span style="font-weight: bold">multi_manager</span>) which will end the round when the objective is completed. For a secondary objective the target entity can be virtually anything depending on the desired result of completion.</p>
<p>Entitys to trigger on completion can be specified in the properties of either the object or the goal. For a primary objective (such as &quot;capture the documents&quot;) the entity to trigger on completion should probably be named in the properties of the <span style="font-weight: bold">dod_object</span> since this is the key item, this also allows you to specify mutiple &quot;delivery sites&quot;.</p>
<p><span style="font-weight: bold">dod_object_goal</span> has no team specific function, if you wish to make team specific object objectives then the objects / goals should be separated into two objective groups (one for each team), and the team specific options set on the <span style="font-weight: bold">dod_object</span>.</p>
<p>It is possible to have a mixture of team specific objects and non team specific objects in a single group, it is also possible to have some of the objects in a group specific to one team and others specific to the other team. Caution is advised when mixing teams in this way, especially in regard to how objective completion is triggered.</p>
<p>Entitys used:</p>
	<ul>
		<li><a href="/node/1096#object">dod_object</a></li>
		<li><a href="/node/1096#goal">dod_object_goal</a></li>
		<li>multi_manager</li>
		<li><a href="/node/1097#score">dod_score_ent</a></li>
	</ul>
<p>Optional</p>
	<ul>
		<li>ambient_generic</li>
	</ul>
<p>See <a href="/node/1086#docs">related documents</a> for non DoD entity references</p>
<hr />
<p><span style="font-weight: bold">Step one</span>: Place the <span style="font-weight: bold">dod_score_ent</span></p>
<p>Select the point entity tool (shift-e) and select <a href="/node/1097#score">dod_score_ent</a> from the drop down menu in the sidebar on the right. Place the entity somewhere suitable (this entity has no visible presence in game so place it somewhere convenient for you). Select the dod_score_ent and open object properties (alt+enter) and give it a suitable name such as <i>allies_win</i>. </p>
<center>
<img src="content/dod/tables/dscer.jpg" width="195" height="165" alt="Dod Score Ent" title="Dod Score Ent" />&nbsp;&nbsp;
<img src="content/dod/tables/dsceo.jpg" width="205" height="165" alt="Dod Score Ent" title="Dod Score Ent" />
</center>	
<p>dod_score_ent (with the standard FGD) will automatically assign 10 points as the winners award. The &quot;message&quot; feild is the text that appears in large letters in the center of the screen when the objective is completed.</p>
<p>The &quot;reset X&quot; feilds are not usually used, they may be needed if you have a complex setup with multiple missions using masters, in order to make sure that things are correctly reset before they are disabled.</p>
<p><span style="font-weight: bold; font-style: italic">DO NOT</span> set &quot;end game&quot; to yes</span>, doing so will cause the server to exit when the entity is triggered.</p>
<hr />
<p><span style="font-weight: bold">Step two</span>: Add a &quot;controler&quot;</p>
<p>Select the point entity tool (shift-e) and select <a href="/node/1086#docs">multi_manager</a> from the drop down menu in the sidebar on the right. Place the entity somewhere suitable (this entity has no visible presence in game so place it somewhere convenient for you, next to the dod_score_ent is good). Select the multi_manager and open object properties (alt+enter) and give it a suitable name such as <span style="font-style: italic">allies_capture</span>. Next click the button in the object properties window labled <span style="font-weight: bold">smartedit</span>, this enables you to add keys to the entity. Click <span style="font-weight: bold">new key</span> and enter these values:</p>
<center>
<img src="content/dod/tables/mm1.jpg" width="162" height="101" alt="Controller" title="Controller" />
</center>	
<p>this means that &quot;allies_win&quot; (the dod_score_env) will be immediately the multi_manager is fired. This function could be carried out by a trigger_relay but using a multi_manager allows other effects to be triggered as well, such as extra text (in addtion to the text provided by the dod_score_ent) and victory music.</p>
<hr />
<p><span style="font-weight: bold">Step three</span>: Adding the target zone</p>
<p>Create a brush completely covered with the &quot;aatrigger&quot; texture. Place this brush covering the volume where you want the documents to be delivered</p>
<p>To make the brush into a target select it then click &quot;tools - tie to entity&quot; (ctrl+t) then select <a href="/node/1096#goal">dod_object_goal</a> from the drop down list in object properties (alt+enter). Other properties to be modified are:</p>
<center>
<img src="content/dod/tables/dogr.jpg" width="258" height="267" alt="Dod Object Goal" title="Dod Object Goal" />&nbsp;&nbsp;
<img src="content/dod/tables/dogo.jpg" width="257" height="153" alt="Dod Object Goal" title="Dod Object Goal" />
</center>	
<p>By default dod_object_goal displays a TNT sprite if you are in the zone without the required object, a simple &quot;allies target&quot; sprite could be substituted if there is no &quot;documents&quot; sprite avaliable.</p>
<hr />
<p><span style="font-weight: bold">Step four</span>: Adding the documents</p>
<p>Select the point entity tool (shift-e) and select <a href="1096#object">dod_object</a> from the drop down menu in the sidebar on the right. place the entity where you want it to appear.<br /> <span style="font-weight: bold">Note</span>: dod_object(s) are affected by gravity so if placed above the desired point, it will drop to the ground when the map starts.</p>
<p>Select the dod_object and open object properties (alt+enter).</p>
<center>
<img src="content/dod/tables/do.jpg" width="370" height="197" alt="Dod Object" title="Dod Object" />
</center>	
<p>This is now a functional mission, to create a similar mission for the axis all you have to do is replace &quot;allies&quot; with &quot;axis&quot; in all the entitys.</p>
<hr />
<h3>Optional</h3>
<p>Adding victory music</p>
<p>Select the point entity tool (shift-e) and select <a href="/node/1086#docs">ambient_generic</a> from the drop down menu in the sidebar on the right. The music will apear to be coming from the location where you place the entity so putting it somewhere near the center of the map is probably best.</p>
<center>
<img src="content/dod/tables/ambient.jpg" width="326" height="262" alt="Ambient Generic" title="Ambient Generic" />
</center>
<p>Next select the multi_manager and add a new key.</p>
<center>
<img src="content/dod/tables/mm2.jpg" width="183" height="103" alt="Multi Manager" title="Multi Manager" />
</center>
<hr />
<h4>Related documents</h4>
<a name="docs"></a>
<p>Half-Life entity references:</p>
<p><span style="font-weight: bold"><a href="/node/959#multimanager">multi_manager</a></span></p>
<p><span style="font-weight: bold"><a href="/node/959#ambient_generic">ambient_generic</a></span></p>
<p>Many of the standard Half-Life entitys have additional functionality added from <a href="http://spirit.valve-erc.com">Spirit of Half Life</a>. Check the SoHL entity guide for details of these, but bear in mind that the entity guide is for the latest version of Spirit whereas DoD incorporates version 0.4 (SoHL version 0.4 is still avaliable for download at the Spirit homepage and will include the relevant entity guide).</p>
<p><a href="http://spirit.valve-erc.com/guide/EntityGuide.html">http://spirit.valve-erc.com/guide/EntityGuide.html</a></p>
</ul><h1 id="1100" name="1100" class="book-h5">Old Objects</h1><ul><blockquote>Mapping Day of Defeat - by Nick Robins</blockquote>
<h1>Old Object Objectives</h1>
<p><a href="/node/1096#object">dod_object</a> and <a href="/node/1096#goal">dod_object_goal</a> combinations can be used for both primary and secondary objectives.</p>
<h4>DoD v1.0</h4>
<p>In DoD v1.0 the process outlined here is no longer required to make a simple wall that can be demolished with TnT (<span style="font-weight: bold;">dod_object</span>) as all the settings required such as &quot;objective group&quot;, &quot;time delay&quot;, &quot;trigger when tnt is set&quot; can all be made directly on the <a href="/node/1099#break">func_breakable</a>. This process will still work but requires more entitys.</p>
<p>The difference between a primary and a secondary objective is the final target entity for the completion of the objective. For a primary objective the target entity will be a <a href="1097#score">dod_score_ent</a> (possibly via another entity such as a <span style="font-weight: bold;">multi_manager</span>) which will end the round when the objective is completed. For a secondary objective the target entity can be virtually anything depending on the desired result of completion.</p>
	<p>Entitys to trigger on completion can be specified in the properties of either the object or the goal. in this example the objective is to blow a wall up as a secondary objective. Since there can be multiple walls and bombs the completion target is specified in the properties of the <span style="font-weight: bold;">dod_object_goal</span>. For a primary objective (such as &quot;capture the documents&quot;) the entity to trigger on completion should probably be named in the properties of the <span style="font-weight: bold;">dod_object</span>.</p>
	<p><span style="font-weight: bold;">dod_object_goal</span> has no team specific function, if you wish to make team specific object objectives then the objects / goals should be separated into two objective groups (one for each team), and the team specific options set on the <span style="font-weight: bold;">dod_object</span>.</p>
	<p>It is possible to have a mixture of team specific objects and non team specific objects in a single group, it is also possible to have some of the objects in a group specific to one team and others specific to the other team. Caution is advised when mixing teams in this way, especially in regard to how objective completion is triggered.</p>
	<p>entitys used:</p>
	<ul>
		<li><a href="/node/1096#object">dod_object</a></li>
		<li><a href="/node/1096#goal">dod_object_goal</a></li>
		<li>multi_manager</li>
		<li><a href="/node/1099#break">func_breakable</a></li>
	</ul>
	<p>optional:</p>
	<ul>
		<li>env_sprite</li>
	</ul>
<p>see <a href="/node/1100#docs">related documents</a> for non DoD entity references</p>
<hr />
<p><span style="font-weight: bold">Step one</span>: Making the wall</p>
<p>Place the wall that is going to be blown up, this may consist of more than one brush depending on situation but for now make a single brush and select it. To make the brush breakable select &quot;tools - tie to entity&quot; (ctrl+t) then select <a href="/node/1099#break">func_breakable</a> from the drop down list in object properties (alt+enter), then modify the properties of the entity as follows:</p>
<center>
<img src="content/dod/tables/funcbreak.jpg" width="200" height="198" alt="Func breakable required" title="Func breakable required" />&nbsp;&nbsp;
<img src="content/dod/tables/funcbreak2.jpg" width="256" height="185" alt="Func breakable optional" title="Func breakable optional" />
</center>
<p>If multiple brushes are used they can either all be tied to the same entity or all the entitys making up a wall should have the same name.</p>
<p><span style="font-weight: bold;">Note</span>: subsequent walls (in the same system) would be called wall_2, wall_3, etc.</p>
<p>The value of between 150 to 200 for <span style="font-weight: bold;">explode magnitude</span> is the size of the explosion that will accompany the wall breaking. This explosion is not required to remove the wall, it is the result of the wall breaking and will happen as long as the <span style="font-weight: bold;">explode magnitude</span> is greater than zero. Somewhere in the range 150 to 200 is large enough to be convincing for a demolition charge but not large enough to kill at unreasonable distances.</p>
<p>Selecting <span style="font-weight: bold;">material type</span> <i>cinderblock</i> will tell half-life to use the cinderblock gib model for the pieces of wall.</p>
<hr />
<p><span style="font-weight: bold;">Step two</span>: Add a &quot;detonator&quot;</p>
<p>Select the point entity tool (shift-e) and select <a href="/node/1100#docs">multi_manager</a> from the drop down menu in the sidebar on the right. Place the entity somewhere suitable (this entity has no visible presence in game so place it somewhere convenient for you, next to the wall is good). Select the multi_manager and open object properties (alt+enter) and give it a suitable name such as <span style="font-style: italic;">wall_1_det</span>. Next click the button in the object properties window labelled <span style="font-weight: bold;">smartedit</span>, this enables you to add keys to the entity. Click <span style="font-weight: bold;">new key</span> and enter these values:</p>
<center>
<img src="content/dod/tables/mm3.jpg" width="163" height="104" alt="multimanager" title="multimanager" />
</center>	
<p>This means that &quot;wall_1&quot; (the func_breakable) will be triggered five seconds after the multi_manager is fired. This function could be carried out by a trigger_relay but using a multi_manager allows other effects to be triggered as well, such as text, sound or a visual count-down.</p>
<hr />
<p><span style="font-weight: bold;">Step three</span>: Adding the target zone</p>
<center>
<a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/content/dod/reference/objectgoal.jpg"><img src="content/dod/reference/objectgoal_small.jpg" width="128" height="108" alt="trigger brush" title="trigger brush" /></a><br />
		click to enlarge
</center>
	<p>Create a brush completely covered with the &quot;aaatrigger&quot; texture. Place this brush next to the func_breakable wall, usually the best method is to make this brush the same size as the wall but protruding about 16 grid units out from it</p>
	<p>To make the brush into a target select it then click &quot;tools - tie to entity&quot; (ctrl+t) then select <a href="1096#goal">dod_object_goal</a> from the drop down list in object properties (alt+enter). Other properties to be modified are:</p>
	<center>
<img src="content/dod/tables/dodobjectgoal.jpg" width="305" height="230" alt="Dod_object_goal" title="Dod_object_goal" />
</center>
<hr />
	<p><span style="font-weight: bold;">Step four</span>: Adding the TNT</p>
	<p>Select the point entity tool (shift-e) and select <a href="1096#object">dod_object</a> from the drop down menu in the sidebar on the right. Place the entity where you want it to appear. <span style="font-weight: bold;">Note</span>: dod_object(s) are affected by gravity so if placed above the desired point, it will drop to the ground when the map starts.</p>
	<p>Select the dod_object and open object properties (alt+enter). the only field here that <span class="under">must</span> be completed is the <span style="font-weight: bold;">group</span> field. the other properties, such as restricting to a team are usually used in a &quot;proper&quot; map but are not required here.</p>
<center>
<img src="content/dod/tables/dodobject.jpg" width="195" height="102" alt="Dod_object" title="Dod_object" />
</center>
<p>Once you have one tnt set up, you can create as many as you like by shift-dragging it.</p>
<h3>Optional</h3>
	<p>Adding more walls</p>
	<p>Each wall consists of:</p>
		<ul>
			<li>dod_object_goal</li>
			<li>multi_manager</li>
			<li>func_breakable</li>
		</ul>
<p>In order to add more walls just repeat the process outlined in steps one to three above, renaming entitys (wall_1 => wall_2, wall_1_det => wall_2_det, etc) as appropriate. You can have more bombs (<a href="1096#object">dod_object</a>) than walls (<a href="1096#goal">dod_object_goal</a>) or more walls than bombs, this is one of the advantages of the DoD objective group system.</p>
<h3>Optional</h3>
	<p>Adding a visual (numeric) countdown</p>
	<center>
<a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/content/dod/reference/placesprite.jpg"><img src="content/dod/reference/placesprite_small.jpg" width="128" height="108" alt="sprite placement" title="sprite placement" /></a><br />
		click to enlarge
		</center>
<p>Select the point entity tool (shift-e) and select <a href="/node/1100#docs">env_sprite</a> from the drop down menu in the sidebar on the right. Place the entity where you want it to appear (see picture).</p>
	<p>Don't worry too much about precise placement at first as the entity box size will change when you specify the sprite.</p>
<center>
<img src="content/dod/tables/env_sprite.jpg" width="433" height="230" alt="Env_sprite" title="Env_sprite" />
</center>
<p>This sprite counts down from 5 to 1 in red. So it looks best with a five second delay on the explosion.</p>
<p>Next select the multi_manager for this wall and add a new key.</p>
<center>
<img src="content/dod/tables/mm4.jpg" width="189" height="101" alt="multimanager" title="multimanager" />
</center>	
<hr /><a id="docs">&nbsp;</a>
<h3>Related documents</h3>
	<p>Half-Life entity references:</p>
	<p><span style="font-weight: bold;"><a href="/node/959#multimanager">multi_manager</a></span></p>
	<p><span style="font-weight: bold;"><a href="/node/954#env_sprite">env_sprite</span></a></p>
	<p>Many of the standard Half-Life entitys have additional functionality added from <a href="http://spirit.valve-erc.com">Spirit of Half Life</a>. Check the SoHL entity guide for details of these, but bear in mind that the entity guide is for the latest version of Spirit whereas DoD incorporates version 0.4 (SoHL version 0.4 is still avaliable for download at the Spirit homepage and will include the relevant entity guide).</p>
<p><a href="http://spirit.valve-erc.com/guide/EntityGuide.html">Spirit Entity Guide</a></p>
</ul><h1 id="1102" name="1102" class="book-h3">Player Spawns</h1><ul><h1>Player Spawn info</h1>
<p><b>Spawn Advance</b> -  details the methods used to advance player spawn points based on completed objectives.</p>
<p><b>Protect Spawns</b> -  details methods used to make sure that 'enemy' players do not have access to your teams spawn points.</p></ul><h1 id="1087" name="1087" class="book-h4">Spawn Advance</h1><ul><!--Submitted by Andy on behalf of Nick Robins-->
<blockquote>Mapping Day of Defeat - by Nick Robins</blockquote>
<h1>Advancing Spawns</h1>
<p>DoD spawns do not actually move, the SoHL &quot;movewith&quot; feature does not work with the player start entitys. The spawns are &quot;moved&quot; by turning one set off and another set on, creating the illusion of movement.</p>
<p>Spawn activity is controlled by using <a href="/node/1091">masters</a>. There are two mastering methods available to a mapper for controlling whether a spawn point is active at a given point.</p>
<h3><a href="/node/1087#halflife">Using a Half-Life master</a></h3>
<p>A single half-life master can control two sets of spawns for each team by using the &quot;invert master&quot; SoHL function (more spawn stages can be set up but the entity set-up will be quite complex). This method also makes setting up spawn protection (using the modified <a href="/node/1099#hurt">trigger_hurt</a> or <a href="/node/1099#teleport">trigger_teleport</a> entitys) relativly simple as these can be set up to use the same master as the player spawn points.</p>
<h3><a href="/node/1087#dod">Using a DoD master</a></h3>
<p>DoD's &quot;spawn cp master&quot; function using a single &quot;master flag&quot; can control three sets of spawns for each team. This method is simpler to set up (for a basic system there are no extra entitys required other than the extra spawns), but spawn protection can be harder to set up.</p>
<p>It is possible to have more than three spawn stages using either method but this would require an entity set-up that could get quite complex. In addition to problems with complexity, each spawn set (for a single team) should consist of 20 info_player_[team]'s, thus for three spawn stages per side would mean a total of 120 (20 spawns x3 stages x2 teams) entitys are required for the player starts alone. This could cause the entity limit to be hit quite quickly.</p><hr /><a id="halflife">&nbsp;</a>
<h1>Half-Life master</h1>
	<p>Using an <span style="font-weight: bold;">env_state</span> as the master</p>
	<p>Entitys used:</p>
		<ul>
			<li><a href="/node/1095#dod">info_player_allies</a></li>
			<li><a href="/node/1095#dod">info_player_axis</a></li>
			<li>Env_state</li>
			<li>Trigger_relay</li>
			<li>Func_button</li>
		</ul>
	<p>See <a href="/node/1087#docs">related documents</a> for non DoD entity references</p>
	<hr />
<p><span style="font-weight: bold;">Step one</span>: Add the master</p>
<p>Select the point entity tool (shift-e) and select <span style="font-weight: bold;">env_state</span> from the drop down menu in the sidebar on the right. Place the entity somewhere suitable (this entity has no visible presence in game so place it somewhere convenient for you. Press alt+enter to bring up the properties.</p>
<center>
<img src="content/dod/tables/envstate.jpg" width="233" height="102" alt="Env_state" title="Env_state" />
</center>	
<hr />
<p><span style="font-weight: bold;">Step two</span>: Master controls</p>
<p>Select the point entity tool (shift-e) and select <span style="font-weight: bold;">trigger_relay</span> from the drop down menu in the sidebar on the right. Place two of these entitys somewhere suitable (this entity has no visible presence in game so place them somewhere convenient for you, such as either side of the master).</p>
<center>
<img src="content/dod/tables/triggerrelay.jpg" width="255" height="165" alt="Trigger Relay" title="Trigger Relay" />&nbsp;&nbsp;
<img src="content/dod/tables/triggerrelay2.jpg" width="257" height="167" alt="Trigger Relay" title="Trigger Relay" />
</center>
<hr />
<p><span style="font-weight: bold;">Step three</span>: Adding the spawns</p>
<p>Select the point entity tool (shift-e) and select <a href="/node/1095#dod">info_player_allies</a> from the drop down menu in the sidebar on the right. Place one of these entitys at one end of your map, place an <a href="/node/1095#dod">info_player_axis</a> next to it.</p>
<center>
<img src="content/dod/tables/ipa.jpg" width="232" height="101" alt="Info_player_allies" title="Info_player_allies" />&nbsp;&nbsp;
<img src="content/dod/tables/ipax.jpg" width="245" height="101" alt="Info_player_axis" title="Info_player_axis" />
</center>
<p>Note the tilde <span style="font-size: large; font-weight: bold;">~</span> in the master field for the <span style="font-weight: bold;">info_player_axis</span>, this inverts the master.</p>
<p>Add another <span style="font-weight: bold;">info_player_allies</span> and another <span style="font-weight: bold;">info_player_axis</span> at the other end of the map. These will need their masters set to the opposite state.</p>
<center>
<img src="content/dod/tables/ipa2.jpg" width="245" height="101" alt="Info_player_allies2" title="Info_player_allies2" />&nbsp;&nbsp;
<img src="content/dod/tables/ipax2.jpg" width="233" height="101" alt="Info_player_axis2" title="Info_player_axis2" />
</center>
<p>Once these four are in place the remaining desired player starts can be placed by copying.</p>
<hr />
<p><span style="font-weight: bold;">Step four</span>: Adding switches for testing</p>
<p>Normally in a playable map the spawns will be switched or moved by an event ocouring, usually the completion of an objective (major or minor) by one or other team. For testing purposes <span style="font-weight: bold;">func_buttons</span> can be used to alter the spawns.</p>
<p>Create two func_buttons, place the brushes and select <span style="font-style: italic;">tools</span> - <span style="font-style: italic;">tie to entity</span> (ctrl-t) change the entity type to func_button</p>
<center>
<img src="content/dod/tables/func_button.jpg" width="200" height="101" alt="Info_player_allies2" title="Info_player_allies2" />&nbsp;&nbsp;
<img src="content/dod/tables/func_button2.jpg" width="202" height="101" alt="Info_player_axis2" title="Info_player_axis2" />
</center>
<p>Testing moving spawn entity set-ups can be a pain as you have to operate the entitys, then kill yourself in order to make sure you respawn at the correct place, this process may have to be repeated over and over.</p><a id="dod">&nbsp;</a>
<hr />

<h1>DoD master</h1>
<p>Using a <span style="font-weight: bold;">dod_control_point</span> as the master.</p>
<p>Entitys used:</p>
<ul>
			<li><a href="/node/1095#dod">info_player_allies</a></li>
			<li><a href="/node/1095#dod">info_player_axis</a></li>
			<li><a href="/node/1096#flag">dod_control_point</a></li>
</ul>
<p><span style="font-weight: bold;">Step one</span>: Build a flag map.</p>
<p>See the <a href="/node/1085">DoD Flag Objectives</a> tutorial if required.</p>
<hr />
<p><span style="font-weight: bold;">Step two</span>: Name the control flag</p>
<p>Select the <span style="font-weight: bold;">dod_control_point</span> you want to use as the master, often this will be the central flag.</p>
<center>
<img src="content/dod/tables/dodcp.jpg" width="231" height="101" alt="Dod Control point" title="Dod Control point" />&nbsp;&nbsp;&nbsp;&nbsp;
<a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/content/dod/reference/flag_props.jpg"><img src="content/dod/reference/flag_props_small.jpg" width="130" height="77" alt="flag properties"  /></a>&nbsp;&nbsp;Click to enlarge
</center>
<p><span style="font-weight: bold;">Note</span>: This is the <span style="font-style: italic;">name</span> field and not <span style="font-style: italic;">control point name</span> (see picture above)</p>
<hr />
<p><span style="font-weight: bold;">Step three</span>: Add more player starts</p>
<p>Select the point entity tool (shift-e) and select <a href="/node/1095#dod">info_player_allies</a> from the drop down menu in the sidebar on the right. Place three of these entitys around your map, make sure that you have some way of telling where you have spawned when the points are active. Place three <a href="/node/1095#dod">info_player_axis</a> likewise. All the spawns need the <span style="font-weight: bold;">master control point</span> field specified (see image below).</p>
<center>
<img src="content/dod/tables/mcipa.jpg" width="255" height="119" alt="IPA Master" title="IPA MAster" />&nbsp;&nbsp;&nbsp;&nbsp;
<img src="content/dod/tables/mcipax.jpg" width="255" height="119" alt="IPAX Master" title="IPAX MAster" />
</center>
<p>For each state that the controlling flag can be in, the player start has a yes/no choice box to select whether or not this player start will be active for that flag state. These need to be set up as follows.</p>
<center>
<img src="content/dod/tables/flagstate.jpg" width="292" height="184" alt="Spawn flag state" title="Spawn flag state" />&nbsp;&nbsp;&nbsp;&nbsp;
<a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/content/dod/reference/spawn_props.jpg"><img src="content/dod/reference/spawn_props_small.jpg" width="130" height="77" alt="flag properties"  /></a>&nbsp;&nbsp;Click to enlarge
</center>
<p>This is now a functioning system very similar to the ones in dod_zafod and dod_heutau. Furthur spawns can be created by copying.</p>
<hr />
<h3>Optional</h3>
<p>Hiding the master control point</p>
<p>The <span style="font-weight: bold;">dod_control_point</span> that is controlling the spawns does not have to be one of those required for a mission objective. The master dod_control_point can be put into a separate objective group, and hidden (both visually and on a players HUD). The state of the dod_control_point can be controlled using <a href="/node/1097#flagrelay">dod_point_relay</a>(s).</p>
<p>A hidden master flag group should consist of one <a href="/node/1097#master">dod_control_point_master</a> and two hidden <a href="/node/1096#flag">dod_control_point</a>(s). The second <span style="font-weight: bold;">dod_control_point</span> should be set to be neutral. Its purpose is to prevent the groups (required) <span style="font-weight: bold;">dod_control_point_master</span> from constantly triggering when the master flag is &quot;held&quot; by a team.</p>
<p>These are the properties to change in order to hide a control point</p>
<center>
<img src="content/dod/tables/dodcphidden.jpg" width="497" height="325" alt="Hidden Control point" title="Hidden Control point" />
</center>
<p>It shouldn't be nessasary to set the &quot;can [TEAM] cap&quot; fields, just place the hidden control point(s) well out of the reach of the players.</p><a id="docs">&nbsp;</a><hr />
<h3>Related documents</h3>
<p>Half-Life Entity References:</p>
<p><span style="font-weight: bold;"><a href="/node/961#trigger_relay">trigger_relay</a></span></p>
<p><span style="font-weight: bold;"><a href="/node/959#func_button">func_button</a></span></p>
<p>Many of the standard Half-Life entitys have additional functionality added from <a href="http://spirit.valve-erc.com">Spirit of Half Life</a>. Check the SoHL entity guide for details of these, but bear in mind that the entity guide is for the latest version of Spirit whereas DoD incorporates version 0.4 (SoHL version 0.4 is still avaliable for download at the Spirit homepage and will include the relevant entity guide).</p>
<p><span style="font-weight: bold;"><a href="/node/954#env_state">env_state</a></span>&nbsp;</p></ul><h1 id="1088" name="1088" class="book-h4">Protect Spawns</h1><ul><!--Submitted by Andy on behalf of Nick Robins-->
<blockquote>Mapping Day of Defeat - by Nick Robins</blockquote>
<h1>Spawn Protection</h1>
<p>There are several methods and entitys that can be used to protect spawn areas in DoD. These fall into two broad categories.</p>
	<ul>
		<li>Physical - players cannot enter the spawn area from the outside without help.</li>
		<li>Punishment - punitive action is applied to players in a forbidden area.</li>
	</ul>
<p>Usually a combination of methods will be used. A normal set up is to attempt to exclude players physically and to have punishment as a back up for those people who succeed in geting past.</p>
<hr />
<h3>Physical protection</h3>
<h4>Ramps</h4>
<p>This is the simplest method and requires no entitys, simply arrange your spawn exits with ramps shaped such that a player can run up and over the ramp from the spawn side but not from the  map side. It may still be possible to access the spawn area via player boosting. This method also requires no extra work for maps where the teams change ends.</p>
<p style="font-style: italic;">Just a note from Andy..<br />
Too many DoD maps suffer from spawn areas that are easily attacked and the spawn area covered by direct fire of the opposite team. I have always thought that the best spawn area, was one that allowed spawning players the ability to exit several areas.</span></p>
<h4>Team only doors</h4>
<p><a href="/node/1099#doors">func_door</a> and <a href="/node/1099#doors">func_door_rotating</a> both have options to make the door team specific. This is relativly easy to set up. The team specific nature of the doors only prevents enemy players from opening the doors, it does not prevent enemy players from running in when the door is open (this can sometimes be solved by using double doors (similar to an airlock).</p>
<h4>Switching doors</h4>
<p>In order to protect a spawn that can be used by both sides (eg dod_schwetz) with team specific doors, it will be nessasary to set up the doors to only open when triggered, usually using a <a href="/node/1099#multi">trigger_multiple</a>. If the trigger is inside then the spawn will be mostly secure. Two team specific trigger_multiple(s) can also be used (the one that is not desired can be disabled using a master).</p>
<h4>Pushing players</h4>
<p>A <span style="font-weight: bold;"><a href="/node/961#trigger_push">trigger_push</a></span> placed in the spawn exit can prevent anybody from entering the spawn area from the map.</p>
<hr />
<h3>Punishment</h3>
<h4>Hurting offenders</h4>
<p>The entity <a href="/node/1099#hurt">trigger_hurt</a> in DoD has two flags added (&quot;don't hurt allies&quot; and &quot;don't hurt axis&quot;) enabling mappers to world kill (quickly or slowly) any enemy player who enters a spawn area. This entity can also be enabled and disabled using masters, allowing the spawn area to be used by either team if required.</p>
<h4>Teleporting offenders away</h4>
<p><a href="/node/1099#teleport">trigger_teleport</a> has two flags added (&quot;no allies&quot; and &quot;no axis&quot;) to make it team specific, enabling the rapid removal of a player from a spawn area (usually to a prison or somewhere very dangerous). Trigger_teleport can also have a master.</p>
<h4>Removing an offenders weapons</h4>
<p><a href="/node/959#player_weaponstrip">Player_weaponstrip</a> is a standard half-life entity which removes all of the triggering players weapons. Since players can pick up weapons in DoD 1.X this may not be a very effective method of punishment on it's own.</p>
<h4>Reducing an offenders score</h4>
<p><a href="/node/959#game_score">Game_score</a> is a standard half-life entity which alters the triggering players score. By specifiying a negative number in the &quot;points to add&quot; field then the players score will be reduced. there is also an &quot;allow negative&quot; flag.</p>
<h4>Blowing offenders away</h4>
<p>The various <a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/1099#tank">func_tank</a> entitys have been modified to allow them to be friendly to either allies or axis, this allows you to make &quot;autocannons&quot; that will attack any &quot;enemy&quot; that they see.</p>
<hr />
<h4>Punishment notes</h4>
<p><span style="font-weight: bold;">trigger_hurt</span> and <span style="font-weight: bold;">trigger_teleport</span> will affect a player as soon as they enter the trigger volume.</p>
<p><span style="font-weight: bold;">player_weaponstrip</span> and <span style="font-weight: bold;">game_score</span> require the player to trigger them. This is best acomplished using a team specific <a href="/node/1099#multi">trigger_multiple</a> if the map requires the teams to change ends then multiple triggers should be used with masters to control which trigger is active.</p></ul><h1 id="1103" name="1103" class="book-h3">Design Tutorials</h1><ul><h1>Design Tutorials</h1>
<p>This is a general series of tutorials designed to give the level designer some insight to using entities to get the most out of their levels.</p>
<p><b>Required Entities</b> lists the entities that are required to get your DoD level up and running. Without these entities, a DoD level will not be recognised.</p>
<p><b>Using Masters</b> enhances your level design and introduces master usage in DoD</p>
<p><b>Placing Models</b> discusses common ways of including Models in your level.</p>
<p><b>Class Limits</b> allows the designer to limit the number of players with access to Player classes.</p>
<p><b>Map Release notes</b> is a generic style tutorial covering the things you need to know before releasing your brilliant level on the world.</p></ul><h1 id="1090" name="1090" class="book-h4">Required Entities</h1><ul><!--Submitted by Andy on behalf of Nick Robins-->
<blockquote>Mapping Day of Defeat - by Nick Robins</blockquote>
<h1>Required Entitys</h1>
	<p>A DoD map must contain the required entitys in order for the map to load and play.</p>
	<p><a href="/node/1095#player">info_player_start</a></p>
	<p><a href="/node/1095#observer">info_player_observer</a></p>
	<p>Prior to DoD beta 3.0 these entitys were required for HLTV (and possibly for the in game cut-scenes). Since DoD beta 3.0 these entities are provided by the DoD library (dll or so) and it is not necessarily required to include them any longer. However if you wish to play your map using a beta version of dod you will probably require them.</p>
<p>Note: Since Hammer 3.4 was designed for DoD 3.0, you will constantly receive error warnings when you check the map for problems is you don't include an info_player_start. These warnings are insignificant and do not effect the level you are designing.</p>
<p>&nbsp;</p>
	<p><a href="/node/1095#dod">info_player_allies</a></p>
	<p>This is the entity looked for by a server to see if the map is a valid DoD map.</p>
<p>&nbsp;</p>
	<p><a href="/node/1095#dod">info_player_allies</a></p>
	<p><a href="/node/1095#dod">info_player_axis</a></p>
	<p>These entitys are required to allow the player to spawn. To prevent telefragging the dod spawn system hunts for an empty spawn location, if the are no vacant spawns available in the map the player may not be able to spawn, or may spawn at an odd location, (often the world grid origin).</p>
	<p>For a map large enough to hold 32 players you should ensure that there are always 20 active player starts for each team.</p></ul><h1 id="1091" name="1091" class="book-h4">Using Masters</h1><ul><!--Submitted by Andy on behalf of Nick Robins-->
<blockquote>Mapping Day of Defeat - by Nick Robins</blockquote>
<h1>Masters</h1>
	<p>The Half-Life master system is a method of enabling and disabling entities based on the status (on or off) of another entity. Generally this will mean that if the master is in state <span class="font-style: italic;">off</span> then the entity will be disabled (but see below on using Spirit of Half Life <a href="/node/1091#prefix">prefixes</a>). An entity which is disabled will not fire if triggered but will complete a sequence if it was triggered before its master was disabled.</p>
	<h3>Master entities</h3>
	<p>A master in half life will usually be a <span style="font-weight: bold;">multisource</span>, in DoD multisources can be used and in some cases will be the only way of achieving the desired effect.</p>
	<h1>Multisource</h1>
	<p>As its name implies a multisource can have a number of inputs. These are tested using logical <span style="font-weight: bold;">AND</span>, that is the multisource will only be active if all of its inputs are active. in this respect the multisource has been made obsolete by the SoHL entity <span style="font-weight: bold;">multi_watcher</span> which allows a choice of logic tests to be applied.</p>
	<p><span style="font-weight: bold;">Note</span> problems with <span class="font-style: italic;">multisource</span> and <span class="font-style: italic;">multi_watcher</span>: Neither of these entities appears to unset (for re-triggering) at the start of a new round. This is possibly due to them being implemented for a single player game.</p>
	<p>A multisource can also have its state set by a <span style="font-weight: bold;">global variable</span> set by an <span style="font-weight: bold;">env_global</span>, the important point here is that a global variable does not reset when a new round is started. This means that if you wish to have different spawn locations or mission objectives in different rounds you must use an env_global/multisource combination somewhere in the control sequence.</p>
	<p><span style="font-weight: bold;">Note</span>: The global variable does not reset when a new map loads, as long as the server remains running the global variable will remain. If the &quot;set initial state &quot; flag is not set then the global variable can affect the map when (or if) the server rotates back to the map where it was set.</p>
	<h4>RUST references</h4>
	<p><a href="/node/959#multisource">multisource</a><br />
	<a href="/node/954#env_global">env_global</a><br /></p>
<hr />
	<h1>Env_state</h1>
	<p><a href="http://spirit.valve-erc.com">Spirit of Half Life</a></p>
	<p>Env_state is an entity included in DoD from SoHL. It is designed to be used as a master. At the simplest level the job of an env_state is to be either off or on and to toggle between these two states, although there are additional features available, eg an env_state can fire another entity on state changes.</p>
	<p>A useful trick with an env_state is explicitly setting its state. By creating a trigger_relay (or other entity) targeting the env_state, with "trigger to send" set correctly ("on" or "off") you can create an entity which will force the env_state into the state you desire (if the env_state is already in the desired state, the trigger will still fire the env_state but will have no effect). This can also be achieved by using a <a href="/node/1091#prefix">prefix</a></p>
<hr />
	<h1>Other entitys</h1>
	<p><a href="http://spirit.valve-erc.com">Spirit of Half Life</a></p>
	<p>Using Spirit <span style="font-weight: bold;">ANY</span> entity can be a master.</p>
	<p>The majority of the time either a <span class="font-style: italic;">multisource</span> or an <span class="font-style: italic;">env_state</span> will be the preferred option as a master. However in some circumstances this SoHL feature can allow a significant reduction in the number of entities required for an effect and/or be much more convenient.</p>
<h4>SoHL prefixes</h4>
	<p><a id="prefix">&nbsp;</a><a href="http://spirit.valve-erc.com">Spirit of Half Life</a></p>
<ul>
	<li>Prefixing the name of a target entity with <span style="font-size: large; font-weight: bold;">+</span> produces a 'turn on' trigger, eg <span style="font-weight: bold;">+light1</span> will only set light1 into state &quot;on&quot;.</li>
	<li>Prefixing the name of a target entity with <span style="font-size: large; font-weight: bold;">-</span> produces a 'turn off' trigger, eg <span style="font-weight: bold;">-light1</span> will only set light1 into state &quot;off&quot;.</li></ul>
	<p><span style="font-weight: bold;">Note</span>: I have had some problems using this feature; it does not always seem to work</p>
	<p>If the entity is already in the required state then the trigger request will still go through but will have no effect.</p>
<ul>
	<li>Using tilde <span style="font-size: large; font-weight: bold;">~</span> as a prefix to an entity named as a <span style="font-weight: bold;">master</span> will invert the master relationship, the entity will only be active when the master is <span class="font-style: italic;">inactive</span>. For example an entity with a master named as follows:</li>
</ul>
	<p>Master: ~group_master</p>
	<p>Will only trigger if 'group_master' is in state &quot;off&quot;.</p>
	<p>This is a imensely useful feature. Often it is the case that you want to have two systems, only one of which can be active at a time, previously this would require two masters and extra entities to keep them in sync and opposed in state, now just the one master entity is required and much simpler control gear which just has to toggle the master on and off.</p>
<hr />
<h1>Masters in DoD</h1>
	<p><a id="dod">&nbsp;</a>DoD also has two areas of interest when using masters.</p>
<ol>
<li>Using a master with a <a href="/node/1097#master">dod_control_point_master</a></li>
</ol>
	<p>The master named for a <span style="font-weight: bold;">dod_control_point_master</span> applies to <span class="font-style: italic;">all</span> the <a href="/node/1096#flag">dod_control_point</a>(s) in the objective group that the dod_control_point_master acts for.</p>
	<p>If the master of the dod_control_point_master disables the entity then the whole objective group is disabled (and will have no visual presence in the game).</p>
	<p><span style="font-weight: bold;">Note</span>: A <span style="font-weight: bold;">dod_control_point</span> does not have a 'master' field, using the dod_control_point_master is the only way to disable this entity. Also this effect does not work with dod_object and dod_object_goal</p>
<ol start="2">
	<li>Using a <a href="/node/1096#flag">dod_control_point</a> as a master</li>
</ol>
	<p>This is only applicable to DoD player starts (<a href="/node/1095#dod">info_player_allies</a> and <a href="/node/1095#dod">info_player_axis</a>) and allows you to use a <span style="font-weight: bold;">dod_control_point</span> as a tri-state master (spawncpmaster or &quot;Master Control Point&quot;). Enter the name of the dod_control_point you wish to use as a master in the &quot;Master Control Point&quot; field. You can then select whether or not the spawn should be active for each of the three possible flag states.</p>
	<p><span style="font-weight: bold;">Note</span>: The name required is the <span style="font-weight: bold;">targetname</span> of the dod_control_point NOT the &quot;control point name&quot;.</p></ul><h1 id="1092" name="1092" class="book-h4">Placing Models</h1><ul><!--Submitted by Andy on behalf of Nick Robins-->
<blockquote>Mapping Day of Defeat - by Nick Robins</blockquote>
<h1>Placing Models</h1>
	<p>There are several entities that can be employed to place a model in your map.</p>
<ul>
		<li><a href="/node/1096#object">dod_object</a></li>
		<li><a href="/node/1096#flag">dod_control_point</a></li>
		<li>env_model - from <a href="http://spirit.valve-erc.com">Spirit of Half Life</a> (new in beta 3.0)</li>
	</ul>
	<p>Each entity has advantages and disadvantages.</p>
	<hr />
	<h1>dod_object</h1>
	<h4>Pros</h4>
<ul>
		<li>Simple</li>
		<li>Automatically drops to ground</li>
</ul>
	<h4>Cons</h4>
<ul>
		<li>Requires clipping to prevent players from picking up object</li>
		<li>Automatically drops to ground</li>
		<li>Default animation only</li>
</ul>
	<p><span style="font-weight: bold;">dod_object</span> is the simplest option for placing a model. A dod_object will always drop to the ground automatically which means that vertical placement need not always be 100% accurate but the object may require a &quot;platform&quot; to sit on (this can often be accomplished using clipping brushes).</p>
	<p>If a dod_object can be reached by players it <span style="font-style: italic;">must</span> be clipped or a player can pick up the object which could look rather odd.</p>
<hr />
	<h1>dod_control_point</h1>
	<h4>Pros</h4>
<ul>
		<li>Supports multiple models</li>
		<li>Configurable body</li>
		<li>Easily toggled to change model</li>
		<li>Unaffected by gravity</li>
		<li>Properties can prevent players from toggling the model</li>
</ul>
	<h4>Cons</h4>
<ul>
		<li>Can be difficult to place correctly</li>
		<li>Default animation only</li>
</ul>
	<p>A <span style="font-weight: bold;">dod_control_point</span> can have up to three models specified (one for each of the three states the flag can be in). <a href="/node/1097#flagrelay">dod_point_relay</a>(s) can be used to toggle the flag between states (which will change the displayed model).</p>
	<p>A dod_control_point can be hidden using either an <span style="font-weight: bold;">env_render</span> or by disabling the master of the relevant <a href="/node/1097#master">dod_control_point_master</a></p>
	<p>dod_control_point is not affected by gravity so to ensure the model is not levitating or submerged you may need to tweak the precise placement of the entity.</p>
	<p>Clipping is only required to prevent players from running through the model as by setting &quot;can allies cap&quot; and &quot;can axis cap&quot; to 'NO' players will be prevented from toggling the point (and therefore the model).</p>
<hr />
<h1>env_model</h1>
<h4>Pros</h4>
<ul>
		<li>Multiple animations</li>
		<li>Easily toggled to change animation</li>
		<li>Can be affected by gravity (mapper's choice)</li>
		<li>Configurable skin</li>
		<li>Configurable body</li>
</ul>
<h4>Cons</h4>
<ul>
		<li>None really</li>
</ul>
	<p><span style="font-weight: bold;">env_model</span> is an entity specifically designed for placing models and has options for configuring animations, skin and body.</p>
	<p>env_model can be either &quot;on&quot; or &quot;off&quot;, this does not mean present or not present. The on and off states are used to control the animation, env_model will play one animation while &quot;on&quot; and a second while &quot;off&quot;.</p>
	<p>Clipping is only required to prevent players from running through the model.</p>
<h3>Notes on positioning models.</h3>
<a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/content/dod/reference/hlmv.png"><img src="content/dod/reference/hlmv_small.png" width="128" height="108" alt="Half-Life Model Viewer" /></a>&nbsp;&nbsp;
<a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/content/dod/reference/flaglocation.jpg">	<img src="content/dod/reference/flaglocation_small.jpg" width="123" height="108" alt="placing flags" /></a><br />
		click to enlarge
		<p>If the entity you are using to display the model is unaffected by gravity (dod_control_point and env_state) then you need to make sure the model is not &quot;levitating&quot;.</p>
	<p>Load the model in HL model viewer and set the option to display &quot;bones&quot;, you will see a small red dot (see left picture). This is the models origin and will be at the &quot;point&quot; where the entity is. Usually (with a standard FGD) this is the center of the visible entity  box (the &quot;box&quot; you see in hammer is purely a visual aid).</p>
	<p>With most models this means you just make sure that the brush face forming the ground bisects the entity box (see right picture).</p>
<hr />
<h1>Clipping models</h1>
	<p>Models require clipping to prevent players running through them (and in the case of a dod_object to prevent the player picking the object up), if the model is located in an inaccessible place and is not required to be bullet proof then clipping can be omitted.</p>
<h4>Clipping with clip brushes</h4>
<p><img src="content/dod/reference/cliptex.jpg" width="32" height="32" alt="clip texture" />
A clip brush is a brush completely covered with the &quot;clip&quot; texture (found in valve/halflife.wad). This will prevent the player from running through the model but weapons (both bullets and grenades) will penetrate.</p>
<h4>Special Clipping Textures</h4>
<p>This is currently the best method of model clipping available. It involes the use of a func_wall.</p>
<p>Special textures are available in <b>hlbasics.wad</b> that make the use of func_buttons and ambient_generic's pretty much redundant.</p>
<ul>
		<li>&nbsp;&nbsp;cr_mathvymetal</li>
		<li>&nbsp;&nbsp;cr_matleaf</li>
		<li>&nbsp;&nbsp;cr_matmetal</li>
		<li>&nbsp;&nbsp;r_matsand</li>
		<li>&nbsp;&nbsp;cr_matwood</li>
	</ul>
	<p>This is not an exhaustive list as <b>all</b> textures listed in the materials.txt (found in your sound folder) can be used to produce a suitable clip type brush. The materials .txt also gives you the effect the texture will provide when used.</p>
<p>Build your brush textured with any of the textures above, to cover the object you want clipped. Assign the brush to func_wall and set the Render Mode to 'Texture' and the FX Amount to '0'. <br />
What this does is assign the brush a sound defined in the 'materials.txt' and also give the brush clipping properties aligned with the material type. If you chose 'cr_matmetal' then when that brush is shot it will produce a spark and a richochet sound. The brush textured with 'cr_matmetal' will not be penertrated by bullets.</p>
<hr />
<h4>Clipping with func_button entities</h4>
<p>To make a model bullet proof, it must be covered with a brush entity. Place a brush or brushes covered with a suitable texture over the model. In DoD v1.0 hit effects (bullet puffs, impact sounds etc) are controlled by the name of the texture being hit (even if rendered invisible) so for example to clip a tank model you would want to use a &quot;metal&quot; texture.<br />
Select the brush and go to <span style="font-style: italic;">tools</span> - <span style="font-style: italic;">tie to entity</span> (ctrl-t). Change the entity to <span style="font-weight: bold;">func_button</span> and alter the properties as follows.</p>
<center>
<img src="content/dod/tables/models_func_button.jpg" width="256" height="262" alt="Func_button" title="Func_button" />
</center>		
		<p>This means that any bullet hitting the func_button will be absorbed to trigger the button (this is one of the effects of the &quot;health&quot; value) effectively making the button bullet-proof. if you want a ricochet noise to sound when the model is shot, then place an ambient_generic in a suitable location and set the func_button's target to trigger it.</p>
<hr />
<h4>Notes:</h4>
	<p>If the model is going to change shape significantly, either from toggling a <span style="font-weight: bold;">dod_control_point</span> or by applying <span style="font-weight: bold;">env_render</span>(s) to multiple <span style="font-weight: bold;">dod_object</span> or <span style="font-weight: bold;">env_model</span> entities then <span style="font-weight: bold;">func_wall_toggle</span> may be required to ensure that the clipping always matches the shape of the model.</p>
	<p>Getting the clip(s) to coincide with the model is mostly down to trial and error as Hammer does not display the model (NB, <a href="http://collective.valve-erc.com/index.php?go=hammer_beta">Hammer 3.5 beta</a> can display models in the 3d veiw). the number of brushes to use to clip a model is also tricky. The more you use the closer the model will be clipped, however this will make your <span style="font-weight: bold;">clip node</span> count higher.</p>
<h3>Related documents</h3>
	<p><a id="docs">&nbsp;</a>Other entity references:</p>
	<p><a href="/node/955#func_button">func_button</a></p>
	<p><a href="/node/955#func_wall_toggle">func_wall_toggle</a></p>
	<p><a href="/node/954#env_render">env_render</a></p>
	<p><span style="font-weight: bold;">env_model</span> from the&nbsp;<a href="http://spirit.valve-erc.com/guide/EntityGuide.html">Spirit Entity Guide</a></p>

</ul><h1 id="1093" name="1093" class="book-h4">Class Limits</h1><ul><!--Submitted by Andy on behalf of Nick Robins-->
<blockquote>Mapping Day of Defeat - by Nick Robins</blockquote>
<h1>Class &amp; Weapon Limits</h1>
<p>Class limits are usually defined in a file named <span style="font-weight: bold;">&#60;mapname&#62;.cfg</span> in the servers DoD folder. This will be automatically executed by the server when the map is loaded (<span style="font-weight: bold;">note</span>: the map cfg file is exec'd <span style="font-style: italic;">before</span>the config file specified in the server cvar <span style="font-weight: bold;">mapchangecfgfile</span>). The map config file can be used to adjust any server cvar, but is most often used to provide map specific class limits. The file is also exec'd (if it exists) on the clients so it can be used to set client side behavior as well, such as the fog parameters set in the dod_dog1 config file.</p>
	<p>While you can set most cvars for your map on both the client and server using this file, some discretion is advised. Many clients and nearly all servers have quite finely tuned configs, if you change these you could make yourself unpopular.</p>
	<p>Setting a limit of <span style="font-weight: bold;">-1</span> makes the weapon unlimited. Setting a limit of <span style="font-weight: bold;">0</span> (zero) disables the class from being selected, with DoD v1.2 you can <a href="/node/1093#mapinfo">remove classes</a> from the selection screen altogether.</p>
	<p>You cannot have both the US and the UK in a map at the same time but it dosn't matter if a map's config file has cvars for limiting the unused team, so if you want to create a generic config and copy it to all the various map configs it will work fine. However if you are using the cvars to remove classes from the selection menu, you should make sure that you have the team selection correct.</p>
<hr />
<h1>Setting limits for Allied (US) weapons.</h1>
	<p>CVARS</p>
		<ul>
			<li>mp_limitalliesgarand</li>
			<li>mp_limitalliescarbine</li>
			<li>mp_limitalliesthompson</li>
			<li>mp_limitalliesgreasegun</li>
			<li>mp_limitalliesspring</li>
			<li>mp_limitalliesbar</li>
			<li>mp_limitallies30cal</li>
			<li>mp_limitalliesbazooka</li>
		</ul>
	<h1>Setting limits for Allied (UK) weapons.</h1>
	<p>CVARS</p>
		<ul>
			<li>mp_limitbritlight - Limits the LE No.4</li>
			<li>mp_limitbritassault - Limits the Sten</li>
			<li>mp_limitbritsniper - Limits the LE No.4(T)</li>
			<li>mp_limitbritmg - Limits the Bren</li>
			<li>mp_limitbritpiat - Limits the PIAT</li>
		</ul>
	<h1>Setting limits for Axis weapons.</h1>
	<p>CVARS</p>
		<ul>
			<li>mp_limitaxiskar - Limits the K98</li>
			<li>mp_limitaxisk43</li>
			<li>mp_limitaxismp40</li>
			<li>mp_limitaxismp44</li>
			<li>mp_limitaxisfg42 - Limits the Fg42 (Bipod)</li>
			<li>mp_limitaxisfg42s - Limits the Fg42 (Scope)</li>
			<li>mp_limitaxisscopedkar</li>
			<li>mp_limitaxismg34</li>
			<li>mp_limitaxismg42</li>
			<li>mp_limitaxispschreck</li>
		</ul>
<hr />
	<p>In addition to setting limits on weapons, with DoD v1.2 there are two additional cvars you can apply:</p>
<ul>
	<li>mp_combinemglimits (zero or one)</li>
</ul>
	<p>This has the effect of combining the limits for all MG classes (at the moment this only applies to the Axis as the only team with 2 mg's, the Mg 34 and the Mg 42), it creates a new limit by adding the individual class limits together, this is then applied to the team's Mg's as a whole.</p>
	<p>For example:</p>
	<p><span style="font-weight: bold;">mp_limitaxismg34 1<br />
	mp_limitaxismg42 1<br />
	mp_combinemglimits 1</span></p>
	<p>would allow either two Mg 42's <span style="font-style: italic;"> or</span>two Mg 34's <span style="font-style: italic;">or </span>one of each.</p>
<ul>
	<li>mp_spawnbazookas (zero or one)</li>
</ul>
	<p>This controls whether the bazookas on the ground in spawn areas will be present or not.</p>
	<p>Example:<br />
	This is a generic limit set up that could be applied to any map, It dosn't matter which &quot;sub-team&quot; the Allies are, you can apply limits to both.</p>
	<table>
		<tr>
			<td colspan="2">//Allies (US)</td>
		</tr>
		<tr>
			<td>mp_limitalliesgarand</td>
			<td>-1</td>
		</tr>
		<tr>
			<td>mp_limitalliescarbine</td>
			<td>-1</td>
		</tr>
		<tr>
			<td>mp_limitalliesthompson</td>
			<td>4</td>
		</tr>
		<tr>
			<td>mp_limitalliesgreasegun</td>
			<td>4</td>
		</tr>
		<tr>
			<td>mp_limitalliesspring</td>
			<td>2</td>
		</tr>
		<tr>
			<td>mp_limitalliesbar</td>
			<td>4</td>
		</tr>
		<tr>
			<td>mp_limitallies30cal</td>
			<td>2</td>
		</tr>
		<tr>
			<td>mp_limitalliesbazooka</td>
			<td>1</td>
		</tr>
		<tr>
			<td colspan="2">//Allies (UK)</td>
		</tr>
		<tr>
			<td>mp_limitbritlight</td>
			<td>-1</td>
		</tr>
		<tr>
			<td>mp_limitbritassault</td>
			<td>-1</td>
		</tr>
		<tr>
			<td>mp_limitbritsniper</td>
			<td>2</td>
		</tr>
		<tr>
			<td>mp_limitbritmg</td>
			<td>4</td>
		</tr>
		<tr>
			<td>mp_limitbritpiat</td>
			<td>1</td>
		</tr>
		<tr>
			<td colspan="2">//Axis</td>
		</tr>
		<tr>
			<td>mp_limitaxiskar</td>
			<td>-1</td>
		</tr>
		<tr>
			<td>mp_limitaxisk43</td>
			<td>-1</td>
		</tr>
		<tr>
			<td>mp_limitaxismp40</td>
			<td>-1</td>
		</tr>
		<tr>
			<td>mp_limitaxismp44</td>
			<td>3</td>
		</tr>
		<tr>
			<td>mp_limitaxisfg42</td>
			<td>3</td>
		</tr>
		<tr>
			<td>mp_limitaxisfg42s</td>
			<td>2</td>
		</tr>
		<tr>
			<td>mp_limitaxisscopedkar</td>
			<td>2</td>
		</tr>
		<tr>
			<td>mp_limitaxismg34</td>
			<td>2</td>
		</tr>
		<tr>
			<td>mp_limitaxismg42</td>
			<td>1</td>
		</tr>
		<tr>
			<td>mp_limitaxispschreck</td>
			<td>1</td>
		</tr>
	</table>
<hr />
<h1>Disabling Classes Completely</h1>
	<p><a id="mapinfo">&nbsp;</a>There are two extra cvars you can set in a cfg file to enable you to totaly disable classes (they will not even appear on the class selection menu)</p>
<ul>
	<li>mp_alliesclasses - a bitsum controling the avaliablity of classes for allies</li>
	<li>mp_axisclasses - a bitsum controling the avaliablity of classes for axis</li>
</ul>
<table cellspacing="0">
			<tr>
				<th colspan="2">Bitfield values for Allies (US)</th>
			</tr>
			<tr>
				<td>M1 Garand</td>
				<td>1</td>
			</tr>
			<tr>
				<td>M1 Carbine</td>
				<td>2</td>
			</tr>
			<tr>
				<td>Thompson</td>
				<td>4</td>
			</tr>
			<tr>
				<td>Grease Gun</td>
				<td>8</td>
			</tr>
			<tr>
				<td>Springfield</td>
				<td>16</td>
			</tr>
			<tr>
				<td>B.A.R.</td>
				<td>32</td>
			</tr>
			<tr>
				<td>30 cal MG</td>
				<td>64</td>
			</tr>
			<tr>
				<td>Bazooka</td>
				<td>128</td>
			</tr>
			<tr>
				<td style="color: #808080">Mortar</td>
				<td style="color: #808080">256</td>
			</tr>
			<tr>
				<td>Random</td>
				<td>512</td>
			</tr>
		</table>
<table cellspacing="0">
			<tr>
				<th colspan="2">Bitfield values for Allies (UK)</th>
			</tr>
			<tr>
				<td>Lee Enfield</td>
				<td>1</td>
			</tr>
			<tr>
				<td>Sten</td>
				<td>2</td>
			</tr>
			<tr>
				<td>Lee Enfield Sniper</td>
				<td>4</td>
			</tr>
			<tr>
				<td>Bren</td>
				<td>8</td>
			</tr>
			<tr>
				<td>P.I.A.T.</td>
				<td>16</td>
			</tr>
			<tr>
				<td style="color: #808080">Mortar</td>
				<td style="color: #808080">32</td>
			</tr>
			<tr>
				<td>Random</td>
				<td>64</td>
			</tr>
		</table>
<table cellspacing="0">
			<tr>
				<th colspan="2">Bitfield values for Axis</th>
			</tr>
			<tr>
				<td>Kar 98</td>
				<td>1</td>
			</tr>
			<tr>
				<td>Kar 43</td>
				<td>2</td>
			</tr>
			<tr>
				<td>Mp 40</td>
				<td>4</td>
			</tr>
			<tr>
				<td>Mp 44</td>
				<td>8</td>
			</tr>
			<tr>
				<td>Kar 98 Sniper</td>
				<td>16</td>
			</tr>
			<tr>
				<td>Fg 42 (Bipod)</td>
				<td>32</td>
			</tr>
			<tr>
				<td>Fg 42 (Scope)</td>
				<td>64</td>
			</tr>
			<tr>
				<td>Mg 34</td>
				<td>128</td>
			</tr>
			<tr>
				<td>Mg 42</td>
				<td>256</td>
			</tr>
			<tr>
				<td>Panzerschreck</td>
				<td>512</td>
			</tr>
			<tr>
				<td style="color: #808080">Mortar</td>
				<td style="color: #808080">1024</td>
			</tr>
			<tr>
				<td>Random</td>
				<td>2048</td>
			</tr>
		</table>
<h3>Notes:</h3>
<ul>
		<li>The &quot;Mortar&quot; classes have not been implemented yet (as of DoD v1.3).</li>
		<li>Both Varients of the Fg 42 are only avaliable on maps where the Axis are Paras.</li>
		<li>Both US allies and UK allies are controlled by the same cvar: <span style="font-weight: bold;">mp_alliesclasses</span> , make sure that the values in your config file are correct for the allies team on that map.</li>
</ul>
	<p>To calculate the value for the config file, add together the values for the classes that you want to <span style="font-weight: bold;">allow</span>, putting in a value of zero would not allow <span style="font-style: italic;">any</span>classes. Putting a value of -1 allows all classes.</p>
<p>For example:<br />
mp_alliesclasses 53<br />
mp_axisclasses 154</p>
<p>Would:</p>
<ul>
		<li>Only allow the (US) Allies to use: M1 Garand, Thompson, Springfield and BAR (1 + 4 + 16 + 32)</li>
		<li>Only allow the Axis to use: Kar 43, Mp 44, Kar 98 Sniper, Mg 34 (2 + 8 + 16 + 128)</li>
	</ul></ul><h1 id="1094" name="1094" class="book-h4">Map Release notes</h1><ul><!--Submitted by Andy on behalf of Nick Robins-->
<blockquote>Mapping Day of Defeat - by Nick Robins</blockquote>
<h1>Map Release Packaging</h1>
	<ul>
		<li><a href="/node/1094#compat">Server compatability issues</a></li>
		<li><a href="/node/1094#files">Which files to include</a></li>
		<li><a href="/node/1094#pack">Packaging files</a></li>
	</ul>
	<p>This information is correct up to DoD Version 1.0b (WON  and STEAM version).</p>
<hr />
	<h1>STEAM</h1>
	<p>STEAM clients can have custom content installed very easily. The directory structure to use is identical to the WON version, the only difference is the location of the &quot;<span style="font-weight: bold;">dod</span>&quot; folder.</p>
	<p>The dod folder in a default STEAM install is:</p>
	<p><span style="font-weight: bold;">C:\Program Files\Steam\SteamApps\&#60;email address&#62;\day of defeat\dod</span></p>
	<p>&#60;email address&#62; is the email address used to create the steam account.</p>
	<p>Custom content should be unpacked to this folder the same as the WON version's <span style="font-weight: bold;">C:\SIERRA\Half-Life\dod</span>.</p>
	<p><span style="font-weight: bold;">Note</span>: by default the steam &quot;<span style="font-weight: bold;">dod</span>&quot; folder dosn't contain all the subfolders you would find in a WON install of DoD. This is not an issue since they will be created as required by the installer / archive tool.</p><a id="compat">&nbsp;</a>
<hr />
	<h1>Server Compatability issues</h1>
<p><img src="content/dod/reference/tux.png" width="80" height="96" alt="Tuxedo T. Penguin" />	&#8592; This guy is your friend.</p>
	<p>More than half of the dedicated DoD servers (about 60% last time I checked) out there are classified as &quot;Linux&quot; servers (note that these are not all actually running GNU/Linux, many will be running one of the BSD distributions).</p>
	<p>When a server loads a map, it also loads all the required resource files (sound .wav, texture .wad, model .mdl etc) needed for the map. If the server cannot find one of these files, it dies.</p>
	<p>Microsoft&#174; Windows&#174; is not case sensitve with filenames. Unix (whether it be GNU/Linux, *BSD or a comercial UNIX) IS case sensitive with filenames. This means that if a filename in your map has a case error in it, a &quot;Linux&quot; server will be unable to find the file and therefore unable to run the map.</p>
	<p>A classic case (which I have found a fair few custom maps suffer from) is this:</p>
	<p>map requires: <span style="font-weight: bold;">dod/models/<span class="high">T</span>nt.mdl</span><br />
	actual filename: <span style="font-weight: bold;">dod/models/<span class="high">t</span>nt.mdl</span></p>
	<p>Most servers running custom maps have probably already implemented work-arounds to the more common examples (such as the TnT model mentioned above) but there can always be new ones. DoD v1.0 has re-shuffled most of the resource locations, which will likely remove most of the work-arounds implemented during the DoD beta's by the server operators.</p>
	<p>Pay particular attention to the capitialisation of resource filenames where they are specified in your map. Windows&#174; makes this slightly harder due to the fact that it auto-capitalises filenames when they are displayed (but doesn't actually change the filename itself).</p><a id="files">&nbsp;</a>
<hr />
	<h1>Which files to include</h1>
	<p>Chances are your map uses some resources which are not part of the standard fileset of DoD. Since Half-Life can't run the map without the required resources, you need to make sure that all resources your map requires will be present.</p>
	<p>An easy way to find out all the files your map requires is to use <a href="http://www.unitedadmins.com/resgen.php">RESGEN</a> (from <a href="http://www.unitedadmins.com/">United Admins</a>). When this is run on a BSP file it produces a RES file (plain text) listing all the required files. RES files (which should be located in the <span style="font-weight: bold;">maps</span> folder) are also used to tell the server which files a client needs to download from the server (if downloads are enabled) so it's a handy file to include with your map anyway.</p>
	<p>Make sure that you only include those files which are <span style="font-weight: bold;">NOT</span> part of a standard DoD install, otherwise your map installation may overwrite peoples customisations (such as regional flags and/or victory music).</p>
	<h1>Map specific files</h1>
	<p>(None of these files are required but form part of a &quot;complete&quot; distribution)</p>
	<p><span style="font-weight: bold;">dod/maps/&#60;mapname&#62;.txt</span></p>
	<p>This is the &quot;Mission Instructions&quot; that will be shown to the player when the map loads. Usually also used to credit people who's work is included in the map (such as textures, models, sounds etc).</p>
	<p><span style="font-weight: bold;">dod/&#60;mapname&#62;.cfg</span></p>
	<p>The config file for the map, usually used to set the <a href="/node/1093">class limits</a></p>
	<p><span style="font-weight: bold;">dod/overviews/&#60;mapname&#62;.bmp<br />
	dod/overviews/&#60;mapname&#62;.txt</span></p>
	<p>The HLTV overview files (graphic and configuration)</p>
	<p><span style="font-weight: bold;">dod/maps/&#60;mapname&#62;.res</span></p>
	<p>The resource file for the map.</p><a id="pack"></a>
<hr />
<h1>Packaging files</h1>
	<p>I use the following convention for distribution (these are merely my preferences, not the law):</p>
	<ul>
	<li>The archive is a ZIP file.</li>
	</ul>
<p>ZIP files are supported by default in the current generation of Windows&#174;, they also present few problems to Linux. Personally I dislike executable installers (unless they can be opened with an archive tool) due to the fact that it's a pain to then get all the files onto a Linux system.</p>
	<ul>
	<li>The &quot;root&quot; of the installation is the level above the &quot;dod&quot; folder.</li>
	</ul>
	<p>A ZIP file can (and in this case should) contain the folder information for each file. I prefer to make the archive so that the file locations are stored thus:</p>
	<p>dod/maps/&#60;mapname&#62;.bsp<br />
	dod/maps/&#60;mapname&#62;.txt<br />
	dod/&#60;mapname&#62;.cfg<br />
	etc</p>
	<p>This makes it clear, when opening the archive, which Half-Life Mod the map is intended for, and also allows equally easy installation to Half-Life or either of the &quot;retail&quot; (Counter-Strike and DoD) versions.</p>
</ul><h1 id="1089" name="1089" class="book-h3">Entity Reference</h1><ul><!--Submitted by Andy on behalf of Nick Robins-->
<blockquote>Mapping Day of Defeat - by Nick Robins</blockquote>
<h1>DoD Entities</h1>
		<h3>&nbsp;&nbsp;&nbsp;&nbsp;Player Starts</h3>
<ul>
		<li><a href="/node/1095#dod">info_player_allies</a></li>
		<li><a href="/node/1095#dod">info_player_axis</a></li>
		<li><a href="/node/1095#observer">info_player_observer</a></li>
		<li><a href="/node/1095#player">info_player_start</a></li>
</ul>
		<h3>&nbsp;&nbsp;&nbsp;&nbsp;Flag Objectives</h3>
<ul>		
		<li><a href="/node/1096#flag">dod_control_point</a></li>
		<li><a href="/node/1096#area">dod_capture_area</a></li>
</ul>
		<h3>&nbsp;&nbsp;&nbsp;&nbsp;Object Objectives</h3>
<ul>
		<li><a href="/node/1096#object">dod_object</a></li>
		<li><a href="/node/1096#goal">dod_object_goal</a></li>
		<li><a href="/node/1096#area">dod_capture_area</a></li>
</ul>
		<h3>&nbsp;&nbsp;&nbsp;&nbsp;Control / Scoring</h3>
<ul>
		<li><a href="/node/1097#dodinfo">info_doddetect</a></li>
		<li><a href="/node/1097#master">dod_control_point_master</a></li>
		<li><a href="/node/1097#score">dod_score_ent</a></li>
		<li><a href="/node/1097#flagrelay">dod_point_relay</a></li>
		<li><a href="/node/1097#timer">dod_round_timer</a></li>
</ul>
		<h3>&nbsp;&nbsp;&nbsp;&nbsp;Miscellaneous</h3>
<ul>
		<li><a href="/node/1098#sandbag">dod_trigger_sandbag</a></li>
		<li><a href="/node/1098#camera">dod_camera</a></li>
		<li><a href="/node/1098#corner">path_corner</a></li>
		<li><a href="/node/1098#location">dod_location</a></li>
		<li><a href="/node/1098#particle">particle_shooter</a></li>
		<li><a href="/node/1098#preround">dod_preround</a></li>
</ul>
		<h3>Half-Life Entities - modified in DoD</h3>
<ul>
		<li><a href="/node/1099#text">game_text</a></li>
		<li><a href="/node/1099#hurt">trigger_hurt</a></li>
		<li><a href="/node/1099#teleport">trigger_teleport</a></li>
		<li><a href="/node/1099#doors">func_door</a></li>
		<li><a href="/node/1099#doors">func_door_rotating</a></li>
		<li><a href="/node/1099#button">func_button</a></li>
		<li><a href="/node/1099#once">trigger_once</a></li>
		<li><a href="/node/1099#multi">trigger_multiple</a></li>
		<li><a href="/node/1099#auto">trigger_auto</a></li>
		<li><a href="/node/1099#break">func_breakable</a></li>
		<li><a href="/node/1099#tank">func_tank*</a></li>
		<li><a href="/node/1099#zone">game_zone_player</a></li>
	</ul>
</ul><h1 id="1095" name="1095" class="book-h4">Player_start</h1><ul><!--Submitted by Andy on behalf of Nick Robins--><a id="dod"></a>
<blockquote>Mapping Day of Defeat - by Nick Robins</blockquote>
<h1>Player Start Entites</h1>
<h4>&nbsp;&nbsp;&nbsp;&nbsp;Spawn related Entities</h4>
<h1>info_player_allies - info_player_axis</h1>
<p><span class="font-style: italic;">Point entities:</span><br />
These are the spawn entities for the two teams. They perform identical duties and have identical properties.</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Master</span> - This is the Standard Half-Life <a href="/node/1091">master</a></p>
<p><span style="font-weight: bold">Master control point</span> -  This is the <a href="/node/1091#dod">DoD master</a> using a <a href="/node/1096#flag">dod_control_point</a></p>
<p><span style="font-weight: bold">Active if neutral</span> - Specify spawn activity for each state of the dod_control_point</p>
<p><span style="font-weight: bold">Active if in control</span> -  </p>
<p><span style="font-weight: bold">Active if not in control</span> - Yes - No</p>
<p><span style="font-weight: bold">PYR (angles)</span> - Set the angle that the player will spawn facing.</p>
<h3>Flags</h3>
<blockquote>
None
</blockquote><a id="observer"></a>
<hr />
<h1>info_player_observer</h1>
<p><span class="font-style: italic;">Point entity:</span><br />
The point where observers spawn, normally when a player has just connected. This entity is required since DoD beta 3.0.</p>
	<p>While this entity includes the &quot;spawncpmaster&quot; (using a <a href="/node/1096#flag">dod_control_point</a>) field for controlling activity, I am unsure which team an observer is a member of, possibly it will be &quot;neutral&quot;.</p>
<h3>Properties</h3>
<p><span style="font-weight: bold">Master</span> - This is the Standard Half-Life <a href="/node/1091">master</a></p>
<p><span style="font-weight: bold">Master control point</span> -  This is the <a href="/node/1091#dod">DoD master</a> using a <a href="/node/1096#flag">dod_control_point</a></p>
<p><span style="font-weight: bold">Active if neutral</span> - Specify spawn activity for each state of the dod_control_point</p>
<p><span style="font-weight: bold">Active if in control</span> -  </p>
<p><span style="font-weight: bold">Active if not in control</span> - Yes - No</p>
<p><span style="font-weight: bold">PYR (angles)</span> - Set the angle that the player will spawn facing.</p>
<h3>Flags</h3>
<blockquote>
None
</blockquote><a id="player"></a>
<hr />
<h1>info_player_start</h1>
<p><span class="font-style: italic;">Point entity:</span><br />
This is the Half-Life entity to mark the spawn point for single player games. It is required in DoD maps for HLTV purposes since DoD beta 2.1. If this entity is not present then any client attempting to connect to a server running the map will crash to desktop (CTD). The entity currently has no other function in a multiplayer DoD game.<br /><br />
<b>Note</b>: In DoD beta 3.0 and beyond this appears to longer be the case, the entity will be &quot;provided&quot; by the DoD library (dll or so) if it is not present. However you will get a 'missing info_player_start' error when using Hammer's check for problems option.</p>
<p>If you don't have an info_player_start listed in the WC / Hammer entity list then you have two options:</p>
<ol>
<li>Add this to your dod .fgd file, and restart Hammer. info_player_start will be in the entity list.</li>
</ol>
<pre>
//
//  Half-Life Player start (for HLTV)
//
@PointClass base(PlayerClass) = info_player_start : "Player 1 start" [ ]
//
</pre>
<ol start="2">
		<li>place an info_player_observer entity and rename it info_player_start.</li>
</ol>

		</ul><h1 id="1096" name="1096" class="book-h4">Objectives</h1><ul><!--Submitted by Andy on behalf of Nick Robins-->
<blockquote>Mapping Day of Defeat - by Nick Robins</blockquote>
<h1>DoD Objectives</h1>	
<h3>&nbsp;&nbsp;&nbsp;&nbsp; Flag Objectives</h3>
	<ul>
		<li><a href="/node/1096#flag">dod_control_point</a></li>
		<li><a href="/node/1096#area">dod_capture_area</a></li>
	</ul>
<h3>&nbsp;&nbsp;&nbsp;&nbsp; Object Objectives</h3>
	<ul>
		<li><a href="/node/1096#object">dod_object</a></li>
		<li><a href="/node/1096#goal">dod_object_goal</a></li>
		<li><a href="/node/1096#area">dod_capture_area</a></li>
	</ul>
<a id="flag"></a>
<hr />
<h1>dod_control_point</h1>
		<p><span style="font-style: italic;">Point entity:<br /></span> Normally used to place and specify DoD's territorial control flags, but can be used to achieve other effects.</p>
<h3>Properties:</h3>
<p><span style="font-weight: bold">Name (targetname)</span> - This is the name that Half-Life uses to identify the entity</p>
<p><span style="font-weight: bold">Target</span> - </p>
			<p><span style="font-weight: bold">PYR (angles)</span> - Set the angle(s) for the displayed model (not included in official FGD)</p>
<p><span style="font-weight: bold">Control point name</span> - This is the name that Players see eg &quot;Church&quot;</p>
<p><span style="font-weight: bold">Can Allies touch this point?</span> - Can [TEAM] touch this point to capture. Note that if  set to NO, [TEAM] can still capture this point via other means such as a <a href="/node/1096#area">dod_capture_area</a></p>
<p><span style="font-weight: bold">Can Axis touch this point?</span> - </p>
<p><span style="font-weight: bold">Time based points value</span> - Number of points given per scoring interval (see <a href="/node/1097#master">dod_control_point_master</a>)</p>
<p><span style="font-weight: bold">Points to capturer</span> - Points given to player who captures</p>
<p><span style="font-weight: bold">Points given to Team</span> - Points given to capturers team</p>
<p><span style="font-weight: bold">Default owner of the control point</span> - Which team holds the point at the start of a round</p>
<p><span style="font-weight: bold">Sound made when axis capture</span> - Pathname of an appropriate wav file</p>
<p><span style="font-weight: bold">Sound made when allies capture</span> - </p>
<p><span style="font-weight: bold">Sound made when point resets</span> - </p>
<p><span style="font-weight: bold">Model when allies capture</span> - Pathname of an appropriate mdl file</p>
<p><span style="font-weight: bold">Model when axis capture</span> - </p>
<p><span style="font-weight: bold">Model when point reset</span> - </p>
<p><span style="font-weight: bold">Allies model bodygroup</span> - Choose which model body to use</p>
<p><span style="font-weight: bold">Axis model bodygroup</span> - </p>
<p><span style="font-weight: bold">Reset model bodygroup</span> - </p>
<p><span style="font-weight: bold">HUD icon when noone owns point</span> - These allow you to specify which HUD icon to use for the point, including flag, artillery, radio, custom etc.</p>
<p><span style="font-weight: bold">HUD icon when axis own point</span> - </p>
<p><span style="font-weight: bold">HUD icon when allies own point</span> - </p>
<p><span style="font-weight: bold">Target when allies capture</span> - Entitys to trigger when the point is captured</p>
<p><span style="font-weight: bold">Target when axis capture</span> - </p>
<p><span style="font-weight: bold">Target when point reset</span> - </p>
<p><span style="font-weight: bold">String to show when capped</span> - Can include vars, these include:</p>
<pre>
%p - player name
%n - "control point name"
%t - players team name
</pre>
<p><span style="font-weight: bold">Group name</span> - Name of the objective group this point is a member of (see <a href="/node/1097#master">dod_control_point_master</a>)</p>
<p><span style="font-weight: bold">Master</span> - Entity to use as <a href="/node/1091">master</a></p>
<p><span style="font-weight: bold">Index of this point (unique)</span> - Specifies HUD tell-tale position for this point, 1 is far left (counting up to the right), -1 is random</p>
<h3>Flags:</h3>
<p><span style="font-weight: bold">Hide control point on HUD</span> - Hide the HUD tell-tale for this flag</p>
<h3>Notes:</h3>
<p>A <b>dod_control_point</b> is usually used to place a flag in a map. The only field that <i>must</i> be filled in is the &quot;group name&quot; (see <a href="/node/1097#master">dod_control_point_master</a>) for the rest the defaults will serve to get things working.</p>
<p>This entity can be used for other purposes though, since it can have team ownership explicitly set via a <a href="/node/1097#flagrelay">dod_point_relay</a> and it will change it's displayed model when this happens, it can be used to switch models on the fly, this capability has been increased with the addtion of the &quot;bodygroup&quot; options in DoD v1.0. It would also be possible to use it as a multifunction game_text or ambient_generic using the &quot;string to show when captured&quot; or &quot;sound made&quot; functions.</p><a id="area"></a>
<hr />
<!--NEXT ENTITY-->
<h1>dod_capture_area</h1>
<p><span style="font-style: italic;">Brush entity:</span><br /> Defines a volume to be captured</p>
<h3>Properties:</h3>
<p><span style="font-weight: bold">Name</span> - Targetname</p>
<p><span style="font-weight: bold">Target</span> - Usually (but not always) set to point to a <a href="/node/1096#flag">dod_control_point</a></p>
<p><span style="font-weight: bold">Master</span> - Entity to use as <a href="/node/1091">master</a></p>
<p><span style="font-weight: bold">Can allies cap?</span></p>
<pre>
yes
no
</pre>
<p><span style="font-weight: bold">Can axis cap?</span> - </p>
<p><span style="font-weight: bold">Number of allies to cap</span> - Number of players on each team required to cap </p>
<p><span style="font-weight: bold">Number of axis to cap</span> - </p>
<p><span style="font-weight: bold">Time to cap</span> - The capture time in seconds</p>
<p><span style="font-weight: bold">Target when allies start capture</span> - These options allow you to trigger effects, for example text prompts or sounds, for all the possible outcomes of an attempted capture</p>
<p><span style="font-weight: bold">Target when allies capture broken</span> - </p>
<p><span style="font-weight: bold">Target when allies capture complete</span> - </p>
<p><span style="font-weight: bold">Target when axis start capture</span> - </p>
<p><span style="font-weight: bold">Target when axis capture broken</span> - </p>
<p><span style="font-weight: bold">Target when axis capture complete</span> - </p>
<p><span style="font-weight: bold">Sprite to show on HUD</span> - The sprite that will be displayed on a players HUD while in the capture area</p>
<p><span style="font-weight: bold">Requires object from this group</span> - Player must be carrying an object from this group in order to trigger the capture</p>
<h3>Flags:</h3>
<p><span style="font-weight: bold">Last man can cap</span> - Mainly used for Para maps, allows a single player to cap a multiplayer cap point if they are the only player alive on their team</p>
<h3>Notes:</h3>
<p>A <b>dod_capture_area</b> is usually used to provide a timed capture of a flag but can be used to trigger any event based on it's status. In dod_strand (Fakedawg) it is used to provide access up the side of a cliff, If the Allies stay in an area at the bottom for a few seconds, a scaleing ladder will appear.</p>
<p>The new feature should allow a <b>dod_capture_area</b> to function similarly to a <a href="/node/1096#goal">dod_object_goal</a> but with a capture time before triggering. I am unsure whether every player attempting to capture the area will be required to carry a relevant object or only one of them.</p>
<a id="object"></a>
<hr />
<!--NEXT ENTITY-->
<h1>dod_object</h1>
<p><span style="font-style: italic;">Point entity:</span><br /> An objective object that can be picked up and carried by players</p>
<h3>Properties:</h3>
<p><span style="font-weight: bold">Name</span> - Targetname</p>
<p><span style="font-weight: bold">Target</span> - Usually left bank</p>
<p><span style="font-weight: bold">PYR (angles)</span> - Set the angle(s) for the displayed model (not included in official FGD)</p>
<p><span style="font-weight: bold">Model</span> - Pathname of a suitable .mdl file</p>
<p><span style="font-weight: bold">Object name</span> - This is the name that the players see</p>
<p><span style="font-weight: bold">Team that can pick up</span> - Choose a team:</p>
	<pre>
both
axis
allies
</pre>
<p><span style="font-weight: bold">Group name</span> - Name of the objective group this object is a member of (see <a href="/node/1097#master">dod_control_point_master</a>)</p>
<p><span style="font-weight: bold">Sound when taken</span> -  These point to wav files which will play when the conditions occur. Note &quot;captured&quot; means delivered to a valid goal</p>
<p><span style="font-weight: bold">Sound when captured</span> - </p>
<p><span style="font-weight: bold">Sound when dropped</span> - </p>
<p><span style="font-weight: bold">Sound when returned</span> - </p>
<p><span style="font-weight: bold">Carry speed</span> - This is a multiplier, to make people move at half speed enter 0.5, 1 is normal movement rate</p>
<p><span style="font-weight: bold">Reset on touch</span> - </p>
<pre>
yes
no
</pre>
<p><span style="font-weight: bold">Reset time</span> - How long the object will stay on the map after being dropped</p>
<p><span style="font-weight: bold">Points to capturer</span> - Points awarded to player delivering the object</p>
<p><span style="font-weight: bold">Points for teammates</span> - Points awarded to capturers team</p>
<p><span style="font-weight: bold">Target when complete</span> - For using tnt to blow walls, this can be ignored, it is only used when you want an event to occur for this specific object</p>
<p><span style="font-weight: bold">Sprite to show above player when carried</span> - Can make the player very easy to see</p>
<p><span style="font-weight: bold">Sprite to show on HUD when carried</span> - </p>
<p><span style="font-weight: bold">Master</span> - Entity to use as <a href="/node/1091">master</a> (see note)</p>
<h3>Flags:</h3>
<p><span style="font-weight: bold">Report pickups and drops</span> - Allow or supress &quot;(1)Private picked up / lost the TnT&quot;</p>
<h3>Notes:</h3>
<p>A <b>dod_object</b> can be used to perform a variety of tasks, in addition to any object based objective (capturing docs or enigma machine, blowing things up, delivering dispatches etc) it can also be used to place models in maps (the model will have to be clipped to prevent a player picking the object up).</p>
<p>Masters for dod_object and dod_object_goal. While these two entitys have a &quot;master&quot; field (specified from the FGD) they do not appear to be affected by the state of the master if one is named.</p><a id="goal"></a>
<hr />
<!--NEXT ENTITY-->
<h1>dod_object_goal</h1>
<p><span style="font-style: italic;">Brush entity:</span><br /> A target volume for a <a href="#object">dod_object</a></p>
<h3>Properties:</h3>
<p><span style="font-weight: bold">Name</span> - Targetname</p>
<p><span style="font-weight: bold">Target</span> - Usually left blank</p>
<p><span style="font-weight: bold">Group name</span> - Name of the objective group this goal area is a member of (see <a href="/node/1097#master">dod_control_point_master</a>)</p>
<p><span style="font-weight: bold">Target when complete</span> - Trigger objective completion events</p>
<p><span style="font-weight: bold">Sprite to show on HUD if in zone without object</span> - Lets players know there is a trigger present</p>
<p><span style="font-weight: bold">Master</span> - Entity to use as <a href="/node/1091">master</a> (see note)</p>
<h3>Flags:</h3>
<p><span style="font-weight: bold">Don't multicap</span> - If this flag is unchecked the dod_object_goal will only trigger when <i>ALL</i> of the dod_object(s) in the appropriate objective group have been delivered</p>
<p><span style="font-weight: bold">Cap once per round</span> - </p>
<h3>Note:</h3> 
<p>Masters for dod_object and dod_object_goal. While these two entitys have a &quot;master&quot; field (specified from the FGD) they do not appear to be affected by the state of the master if one is named.</p>
</ul><h1 id="1097" name="1097" class="book-h4">Scoring</h1><ul><!--Submitted by Andy on behalf of Nick Robins-->
<blockquote>Mapping Day of Defeat - by Nick Robins</blockquote>
<h1>DoD Entities</h1>
<h3>&nbsp;&nbsp;&nbsp;&nbsp;Control / Scoring</h3>
<ul>
		<li><a href="/node/1097#dodinfo">info_doddetect</a></li>
		<li><a href="/node/1097#master">dod_control_point_master</a></li>
		<li><a href="/node/1097#score">dod_score_ent</a></li>
		<li><a href="/node/1097#flagrelay">dod_point_relay</a></li>
		<li><a href="/node/1097#timer">dod_round_timer</a></li>
</ul>	
<a id="dodinfo"></a>
<hr />
<h1>info_doddetect</h1>
<p><span style="font-style: italic;">Point entity:</span><br />
DoD &quot;game rules&quot; - sets team spawn status and troop type</p>
<h3>Properties:</h3>
<p><span style="font-weight: bold">Master</span> - Entity to use as <a href="/node/1091">master</a> - </p>
<p><span style="font-weight: bold">Give allied team infinite respawns</span> - </p>
<pre>
yes
no
</pre>
<p><span style="font-weight: bold">Give axis team infinite respawns</span> - </p>
<p><span style="font-weight: bold">Make allied team paratroopers</span> - </p>
<pre>
yes
no
</pre>
<p><span style="font-weight: bold">Make axis team paratroopers</span> - </p>
<p><span style="font-weight: bold">Country for allied team</span> - </p>
<pre> 
United States
British
</pre>
<p><span style="font-weight: bold">Points for wiping out allied team</span> - points awarded to the surviving team </p>
<p><span style="font-weight: bold">Points for wiping out axis team</span> - </p>
<p><span style="font-weight: bold">Target when allies are eliminated</span> - Trigger events when a team is eliminated</p>
<p><span style="font-weight: bold">Target when axis are eliminated</span> - </p>
<p><span style="font-weight: bold">Use built in timer</span> - </p>
<pre>
yes
no
</pre>
<p><span style="font-weight: bold">Target when timer expires</span> - </p>
<p><span style="font-weight: bold">Team that wins when timer expires</span> - </p>
<pre>
neither
allies
axis
</pre>
<p><span style="font-weight: bold">Points given when timer expires</span> - </p>
<p><span style="font-weight: bold">Allies Respawn delay factor</span> - Adjust the spawning rates for the teams, defaults to 1.0</p>
<p><span style="font-weight: bold">Axis Respawn delay factor</span> - </p>
			<p><span style="font-weight: bold">Wind X velocity</span> - Adjust wind direction and speed, presumably affects weather (see below) and smoke FX</p>
<p><span style="font-weight: bold">Wind Y velocity</span> - </p>
<p><span style="font-weight: bold">Weather Type</span> - </p>
<pre>
none
rain
snow
</pre>
<h3>Flags:</h3>
<p>None - </p>
<h3>Notes:</h3>
<p><b>info_doddetect</b> defines the &quot;game rules&quot; and enviroment for the map. Notably this entity has a <a href="/node/1091">master</a> field, implying that the &quot;game rules&quot; can be changed mid-mission. In DoD beta 3.x this required a round re-start to take effect.</p><a id="master"></a>
<hr />
<!--next entity-->
<h1>dod_control_point_master</h1>
<p><span style="font-style: italic;">Point entity:</span><br />
Objective / scoring group controller</p>
<h3>Properties:</h3>
<p><span style="font-weight: bold">Name</span> - Will usually be left blank  </p>
<p><span style="font-weight: bold">Target</span> - Usually left blank </p>
<p><span style="font-weight: bold">Time between point gives</span> - Time interval in seconds between points awards for holding flags </p>
<p><span style="font-weight: bold">Target when allies capture</span> Entity to fire when team captures, usually a <a href="#score">dod_score_ent</a> </p>
<p><span style="font-weight: bold">Target when axis capture</span> - </p>
<p><span style="font-weight: bold">Master</span> - Entity to use as <a href="/node/1091">master</a> (see below)</p>
<p><span style="font-weight: bold">Group name</span> - Name of objective group that this dod_control_point _master acts for </p>
<h3>Flags:</h3>
<p> None -</p>
<h3>Notes:</h3>		
<p><b>dod_control_point_master and objective groups</b><br />
Since beta 2.0 DoD has had the facility to have objective groups which allows much easier control of mission objectives and sub-objectives. The two most important points about groups and the <b>dod_control_point_master</b> are:</p>
<ol><li>Each flag (<a href=" /node/1096#flag">dod_control_point</a>) objective group <i>must</i> have a <b>dod_control_point_master</b>.</li>
<li>Disabling a groups <b>dod_control_point_master</b> (by switching it's <a href="/node/1091">master</a> off) will disable the whole group.</li>
</ol>
<p>A flag groups <b>dod_control_point_master</b> dosn't necessarily need to perform any function for the group but the flag group needs it to be there. Normally the only time this is a problem is when using hidden flags to control spawns or events.</p>
<p>Disabling the group means that none of the groups entitys will trigger and all signs of them (such as models) will be hidden. This allows a map to have several objective systems, which can be switched on and off on the fly. Pre DoD v1.0 this was the only way to disable a <b>dod_control_point</b> as this entity did not have a 'master' field (added DoD v1.0).</p>
<p>A group consisting of <a href=" /node/1096#object">dod_object</a>(s) and <a href=" /node/1096#goal">dod_object_goal</a>(s) does <i>not</i> require a dod_control_point_master.</p><a id="score"></a>
<hr />
<!--NEXT ENTITY-->
<h1>dod_score_ent</h1>
<p><span style="font-style: italic;">Point entity:</span><br />
Awards mission completion points and restarts round</p>
<h3>Properties:</h3>
<p><span style="font-weight: bold">Name</span> - Targetname</p>
<p><span style="font-weight: bold">Target</span> - Usually left blank</p>
<p><span style="font-weight: bold">for team</span> - Choose a team:</p>
<pre>
both
allies
axis
</pre> 
<p><span style="font-weight: bold">Points</span> - For mission completion </p>
<p><span style="font-weight: bold">Reset items time</span> - Time in seconds </p>
<p><span style="font-weight: bold">Reset players time</span> - Time in seconds</p>
<p><span style="font-weight: bold">Reset group</span> - Leave blank to reset all objective groups </p>
<p><span style="font-weight: bold">End game?</span> - <b>DO NOT SET THIS TO &quot;YES&quot;</b></p>
<p><span style="font-weight: bold">Message</span> - Text message </p>
<p><span style="font-weight: bold">Move to next map</span> - Change to another map. This allows a campaign map structure to be built</p>
<p><span style="font-weight: bold">Change level delay</span> - Time in seconds</p>
<h3>Flags:</h3>
<p>None - </p>
<h3>Notes:</h3>				
<p>A <b>dod_score_ent</b> is triggered to end a round and reset everything for the next round, it can also award points for mission completion.</p><a id="flagrelay"></a>
<hr />
<!--NEXT ENTITY-->
<h1>dod_point_relay</h1>
<p><span style="font-style: italic;">Point entity:</span><br />
Used to explicitly set which team holds a <a href=" /node/1096#flag">dod_control_point</a></p>
<h3>Properties:</h3>
<p><span style="font-weight: bold">Name</span> - The targetname of the relay</p>
<p><span style="font-weight: bold">Target</span> - The targetname of the <a href=" /node/1096#flag">dod_control_point</a></p>
<p><span style="font-weight: bold">Relay trigger point with team?</span> - choose a team:</p>
<pre>
Allies
Axis
Reset
</pre>
<h3>Flags:</h3>
<p>None - </p>
<h3>Notes:</h3>			
<p>The <b>dod_point_relay</b> can be useful in a variety of situations, such as where the target flag cannot be touch-capped (either due to position or configuration). It is also useful for setting the status of a hidden flag in order to control scoring or spawn positions.</p><a id="timer"></a>
<hr />
<!--NEXT ENTITY-->
<h1>dod_round_timer</h1>
<p><span style="font-style: italic;">Point entity:</span><br />
Mission timer</p>
<h3>Properties:</h3>
<p><span style="font-weight: bold">Name</span> - Targetname</p>
<p><span style="font-weight: bold">Target</span> - Entity to trigger when timer reaches zero</p>
<p><span style="font-weight: bold">Master</span> - Entity to use as <a href="/node/1091">master</a></p>
<p><span style="font-weight: bold">Timer length</span> - Time in seconds</p>
<h3>Flags:</h3>
<p><span style="font-weight: bold">Shown on HUD</span> - Defaults to yes</p>
<p><span style="font-weight: bold">Start off</span> - Trigger the timer by name later on</p>
<h3>Notes:</h3>		
<p>A <b>dod_round_timer</b> is a useful clock usually displayed on the players HUD to let them know exactly how long they have left to complete their objective. Note that once a timer is running it cannot be stopped, in order to prevent effects from triggering when the timer expires you will have to disable the effects.</p>
</ul><h1 id="1098" name="1098" class="book-h4">Misc</h1><ul><!--Submitted by Andy on behalf of Nick Robins-->
<blockquote>Mapping Day of Defeat - by Nick Robins</blockquote>
<h1>DoD Entities</h1>
<h3>&nbsp;&nbsp;&nbsp;&nbsp;Miscellaneous</h3>
<ul>
<li><a href="misc.html#sandbag">dod_trigger_sandbag</a></li>
<li><a href="misc.html#camera">dod_camera</a></li>
<li><a href="misc.html#corner">path_corner</a></li>
<li><a href="misc.html#location">dod_location</a></li>
<li><a href="misc.html#particle">particle_shooter</a></li>
<li><a href="misc.html#preround">dod_preround</a></li>
</ul>
		<a name="sandbag"></a>
<hr />
		<h1>dod_trigger_sandbag</h1>
<p><span style="font-style: italic;">Brush entity:</span><br />
Allows machine gunners to deploy their bipod while standing</p>
<h3>Properties:</h3>
<p><span style="font-weight: bold">Name</span> - Targetname</p>
<p><span style="font-weight: bold">Target</span> - Usually left blank</p>
<p><span style="font-weight: bold">Master</span> - Entity to use as <a href="/node/1091">master</a></p>
<p><span style="font-weight: bold">PYR</span> - Note: the default DoD FGD may not include this</p>
<p><span style="font-weight: bold">Degrees in either direction</span> - Arc of fire either side of the set centreline</p>
<h3>Flags:</h3>
<p>None -</p>
<h3>Notes:</h3>
<p>Set the centreline of the arc that the player must face in to deploy, using the dial in object properties, note that this may cause VHE to report that &quot;<b>dod_trigger_sandbag</b> has unused keyvalues&quot;. However if you change this line in your DoD FGD:</p>
<pre>
@SolidClass base(Targetname,Target,Master) = dod_trigger_sandbag : "Sandbag Trigger"
</pre>
		<p>to this:</p>
<pre>
@SolidClass base(Targetname,Target,Master,Angles) = dod_trigger_sandbag : "Sandbag Trigger"
</pre>
<p>Then the error (which is not really an error) will no longer be reported.</p><a name="camera"></a>
<hr />
<!--NEXT ENTITY-->
<h1>dod_camera</h1>
<p><span style="font-style: italic;">Point entity:</span><br />
<p>This is a modified trigger_camera</p>
<h3>Properties:</h3>
<p><span style="font-weight: bold">Target</span> - Name of the entity the camera will look at</p>
<p><span style="font-weight: bold">Delay before target</span> - </p>
<p><span style="font-weight: bold">Killtarget</span> - </p>
<p><span style="font-weight: bold">Name</span> - Targetname</p>
<p><span style="font-weight: bold">Zoom FOV</span> - Set camera zoom</p>
<p><span style="font-weight: bold">dod_camera View</span> - </p>
<pre>
normal
scope
binoculars
widescreen
</pre>
<p><span style="font-weight: bold">Dod_camera Fade:</span></p>
<pre>
normal
black (instant)
fast fade out (2 seconds)
fast fade in (2 seconds)
slow fade out (4 seconds)
slow fade in (4 seconds)
</pre>
<p><span style="font-weight: bold">Subtitle</span> - </p>
<p><span style="font-weight: bold">Hold time</span> - Length of time of the camera view</p>
<p><span style="font-weight: bold">Trigger on Start</span> - </p>
<p><span style="font-weight: bold">Trigger on End</span> - </p>
<p><span style="font-weight: bold">Path corner</span> - Name of the first path_corner for moving cameras</p>
<p><span style="font-weight: bold">Initial speed</span> - For moving cameras</p>
<p><span style="font-weight: bold">Acceleration</span> - </p>
<p><span style="font-weight: bold">Stop Deceleration</span> - </p>
<p><span style="font-weight: bold">Team that is bound to</span> - choose a team:</p>
<pre>
allies
axis
both
</pre>
<h3>Flags:</h3>
<p><span style="font-weight: bold">Start at player</span> - Camera starts at players eye position</p>
<p><span style="font-weight: bold">Follow player</span> - Camera uses the player as target</p>
<p><span style="font-weight: bold">Freeze player</span> - Prevent player actions during camera scene</p>
<h3>Notes:</h3>
<p><b>dod_camera</b> like <b>trigger_camera</b> is / will be used for cut scenes, which are usually only found in single player games, however DoD beta 3.0 will include them as a method of telling the player(s) about their mission objectives.</p>
<p>DoDv1.X doesn't use the DoD camera although it is still functional.</p><a name="corner"></a>
<hr />
<!--NEXT ENTITY-->
<h1>path_corner</h1>
<p><span style="font-style: italic;">Point entity:</span><br />
This is a modified Entity</p>
<h3>Properties:</h3>
<p><span style="font-weight: bold">Name</span> - Targetname</p>
<p><span style="font-weight: bold">Pitch,Roll,Yaw (XYZ)</span> - PYR settings </p>
<p><span style="font-weight: bold">Zoom FOV</span> - Change zoom at this point</p>
<p><span style="font-weight: bold">dod_camera View</span> - </p>
<pre>
normal
scope
binoculars
widescreen
</pre>
<p><span style="font-weight: bold">Dod_camera Fade:</span></p>
<pre>
normal
black (instant)
fast fade out (2 seconds)
fast fade in (2 seconds)
slow fade out (4 seconds)
slow fade in (4 seconds)
</pre>
<p><span style="font-weight: bold">Subtitle</span> - </p>
<p><span style="font-weight: bold">Next stop target</span> - </p>
<p><span style="font-weight: bold">New train speed</span> - </p>
<p><span style="font-weight: bold">New train rot speed</span> - </p>
<p><span style="font-weight: bold">Fire on pass</span> - </p>
<p><span style="font-weight: bold">Wait here(secs) </span> - </p>
<h3>Flags:</h3>
<p><span style="font-weight: bold">Wait for retrigger</span> - </p>
<p><span style="font-weight: bold">Teleport</span> - </p>
<p><span style="font-weight: bold">Fire once</span> - </p>
<h3>Notes:</h3>
<p><b>path_corner</b> has been modified to allow mappers to change the properties of a <b>dod_camera</b></p>
<a name="location"></a>
<hr />
<!--BEXT ENTITY-->
<h1>dod_location</h1>
<p><span style="font-style: italic;">Point entity:</span><br />
Specify a named location in your map</p>
<h3>Properties:</h3>
<p><span style="font-weight: bold">Master</span> - Entity to use as <a href="/node/1091">master</a></p>
<p><span style="font-weight: bold">Name of this location</span> -</p>
<h3>Flags:</h3>
<p>None -</p>
<h3>Notes:</h3>
<p>A <b>dod_location</b> placed in a map will allow players to bind a key to say &quot;i'm near %l&quot; (for example) and the &quot;%l&quot; will be substituted for the relevant dod_location.</p><a name="particle"></a>
<hr />
<h1>particle_shooter</h1>
<p><span style="font-style: italic;">Point entity:</span><br />
Used to place particle effects in a map</p>
<h3>Properties:</h3>
<p><span style="font-weight: bold">Name</span> - Targetname</p>
<p><span style="font-weight: bold">Target</span> - </p>
<p><span style="font-weight: bold">Angles</span> - PYR (will probably control direction particles are &quot;shot&quot; in).</p>
<p><span style="font-weight: bold">Group Id</span> - ?</p>
<p><span style="font-weight: bold">Number of Particles ( -1 = infinite )</span> - Number of particles per trigger?</p>
<p><span style="font-weight: bold">Delay between shots</span> - </p>
<p><span style="font-weight: bold">Particle life</span> - How long a particle persists for</p>
<p><span style="font-weight: bold">Particle velocity</span> - </p>
<p><span style="font-weight: bold">Velocity variance</span> - </p>
<p><span style="font-weight: bold">Spin ( degrees per sec )</span> - Spin applied to particles?</p>
<p><span style="font-weight: bold">Gravity</span> - Gravity level on particles? (ie; set this low to create snowflakes etc)</p>
<p><span style="font-weight: bold">Damping time</span> - ?</p>
<p><span style="font-weight: bold">Damping velocity</span> - ?</p>
<p><span style="font-weight: bold">Sprite</span> - Filename of the sprite to use for the particles</p>
<p><span style="font-weight: bold">Particle size</span> - Scaling factor applied to sprites?</p>
<p><span style="font-weight: bold">Color: red ( 0 - 255 ) - </span>Adjust the color balance of the particles</p>
<p><span style="font-weight: bold">Colour: green ( 0 - 255 )</span> - </p>
<p><span style="font-weight: bold">Colour: blue ( 0 - 255 )</span> - </p>
<p><span style="font-weight: bold">Brightness</span> - </p>
<p><span style="font-weight: bold">Fade speed</span> - ?</p>
<p><span style="font-weight: bold">Scale speed</span> - ?</p>
<p><span style="font-weight: bold">Framerate</span> - For aninmated sprites?</p>
<p><span style="font-weight: bold">Render mode</span> - Select sprite rendermode:</p>
<pre>
Normal
Trans color
Trans texture
Glow
Indexed alpha
Additive
</pre>
<h3>Flags:</h3>
<p><span style="font-weight: bold">Repeatable</span> - </p>
<p><span style="font-weight: bold">Spiral</span> - ?</p>
<p><span style="font-weight: bold">Collide with world</span> - PParticle collisions with walls / roofs / floors ?</p>
<p><span style="font-weight: bold">Affected by force</span> - Wind (see <a href="/node/1097#dodinfo">info_doddetect</a>) and gravity effects on particles?</p>
<p><span style="font-weight: bold">Animate</span> - Animate particles</p>
<p><span style="font-weight: bold">Start on</span> - Shooter active initialy or requires trigger</p>
<p><span style="font-weight: bold">Kill on collide</span> -Particle removed on collsion with world?</p>
<p><span style="font-weight: bold">Ripple when hitting water</span> - Water ripples? sprite ripples?</p>
<h3>Notes:</h3>	
<p>None -</p><a name="preround"></a>
<hr />
<!--NEXT ENTITY-->
<h1>dod_preround</h1>
<p><span style="font-style: italic;">Point entity:</span><br />
Triggers at the start of each round based on the previous rounds ending</p>
<p><b>EXPERIMENTAL</b></p>
<h3>Properties:</h3>
<p><span style="font-weight: bold">Name</span> - Targetname</p>
<p><span style="font-weight: bold">Trigger if allies won last round - </span>Entitys to trigger</p>
<p><span style="font-weight: bold">Trigger if allies lost last round</span> -</p>
<p><span style="font-weight: bold">Trigger if axis won last round</span> -</p>
<p><span style="font-weight: bold">Trigger if axis lost last round</span> -</p>
<p><span style="font-weight: bold">Trigger if last round was draw</span> -</p>
<h3>Flags:</h3>
<p>None -</p>
<h3> Notes:</h3>
<p>None -</p></ul><h1 id="1099" name="1099" class="book-h4">Half-Life common</h1><ul><!--Submitted by Andy on behalf of Nick Robins-->
<blockquote>Mapping Day of Defeat - by Nick Robins</blockquote>
<h1>DoD Entities</h1>
<h3>Half-Life Entities - Modified in DoD</h3>
<p>The entitys here are standard Half-Life entitys which behave differently or have extra functions in Day of Defeat. Most of these extra functions are to apply restrictions on which teams can and cannot trigger or be affected by the entity.</p>
<p>All entity properties have <b>not</b> been listed, but a link to the Half-Life original entity has been provided.</p>
<p>Other entitys (not listed here) may have properties modified by the <a href="http://spirit.valve-erc.com">Spirit of Half-Life</a> mod codebase as a version of SoHL (0.42)  was included into DoD beta 2.0. for more information on these see the SoHL entity guide. <a href="http://spirit.valve-erc.com/guide/EntityGuide.html">Spirit Entity Guide</a> (this will be for the latest version of SoHL and will include some entitys and functionality not included in DoD).</p>
<ul>
<li><a href="/node/1099#text">game_text</a></li>
<li><a href="/node/1099#hurt">trigger_hurt</a></li>
<li><a href="/node/1099#teleport">trigger_teleport</a></li>
<li><a href="/node/1099#doors">func_door</a></li>
<li><a href="/node/1099#doors">func_door_rotating</a></li>
<li><a href="/node/1099#button">func_button</a></li>
<li><a href="/node/1099#once">trigger_once</a></li>
<li><a href="/node/1099#multi">trigger_multiple</a></li>
<li><a href="/node/1099#auto">trigger_auto</a></li>
<li><a href="/node/1099#break">func_breakable</a></li>
<li><a href="/node/1099#tank">func_tank</a></li>
<li><a href="/node/1099#zone">game_zone_player</a></li>
</ul><a id="text"></a>
<hr />
<h1>game_text</h1>
<p><span style="font-style: italic;">Point entity:</span></p>
<p>RUST Entity reference:<br />
<a href="/node/956#game_text">game_text</a></p>
<h3>Properties added:</h3>
<p>None - </p>
<h3>Flags added:</h3>
<p><span style="font-weight: bold">Allies only</span> - Only allow allies to see this message</p>
<p><span style="font-weight: bold">Axis only</span> - Only allow axis to see this message</p>
<p><span style="font-weight: bold">Allies player only</span> - Allied triggering player only</p>
<p><span style="font-weight: bold">Axis player only</span> - Axis triggering player only</p>
<a id="hurt"></a>
<hr />
<!--NEXT ENTITY-->
<h1>trigger_hurt</h1>
<p><span style="font-style: italic;">Brush entity:</span></p>
<p>RUST Entity reference:<br />
<a href="/node/961#trigger_hurt">trigger_hurt</a></p>
<h3>Properties added:</h3>
<p>None -</p>
<h3>Flags added:</h3>
<p><span style="font-weight: bold">Don't hurt allies</span> -</p>
<p><span style="font-weight: bold">Don't hurt axis</span> -</p>
<h3>Notes:</h3>
<p>Team specific <b>trigger_hurt</b>(s) is primarily used for spawn protection.</p>
<a id="teleport"></a>
<hr />
<!--NEXT ENTITY-->
<h1>trigger_teleport</h1>
<p><span style="font-style: italic;">Brush entity:</span></p>
<p>RUST Entity reference:<br />
<a href="/node/961#trigger_teleport">trigger_teleport</a></p>
<h3>Properties added:</h3>
<p>None -</p>
<h3>Flags added:</h3>
<p><span style="font-weight: bold">No allies</span> - Don't teleport allies</p>
<p><span style="font-weight: bold">No axis</span> - Don't teleport axis</p>
<h3>Notes:</h3>	
<p>Team specific <b>trigger_teleport</b>(s) are also very useful for protecting areas (such as spawns).</p>
<a id="doors"></a>
<hr />
<!--NEXT ENTITY-->
<h1>func_door and func_door_rotating</h1>
<p><span style="font-style: italic;">Brush entity:</span></p>
<p>RUST Entity references:<br />
<a href="/node/955#func_door">func_door</a><br />
<a href="/node/955func_door_rotating">func_door_rotating</a></p>
<h3>Properties added:</h3>
<p><span style="font-weight: bold">Team specific door</span> - Choose a team:</p>
<pre>
both
allies only
axis only
</pre>
<h3>Flags added:</h3>
<p>None - </p>
<h3>Notes:</h3>			
		<p>Also useful for protecting areas</p>
<a id="button"></a>
<hr />
<!--NEXT ENTITY-->
		<h1>func_button</h1>
<p><span style="font-style: italic;">Brush entity:</span></p>
<p>RUST Entity reference:<br />
<a href="/node/955#func_button">func_button</a></p>
<h3>Properties added:</h3>
<p>None -</p>
<h3>Flags added:</h3>
<p><span style="font-weight: bold">Allies can't activate</span></p>
<p><span style="font-weight: bold">Axis can't activate</span></p>
<a id="once"></a>
<hr />
<!--NEXT ENTITY-->
<h1>trigger_once</h1>
<p><span style="font-style: italic;">Brush entity:</span></p>
<p>RUST Entity reference:<br />
<a href="/node/961#trigger_once">trigger_once</a></p>
<h3>Properties added:</h3>
<p><span style="font-weight: bold">Team affected</span> - </p>
<pre>
both
allies only
axis only
</pre>	
<h3>Flags added:</h3>
<p><span style="font-weight: bold">Reset at round restart</span> - Allows the entity to trigger once each round rather than once per map</p>
<a id="multi"></a>
<hr />
<!--NEXT ENTITY-->
<h1>trigger_multiple</h1>
<p><span style="font-style: italic;">Brush entity:</span></p>
<p>RUST Entity reference:<br />
<a href="/node/961#trigger_multiple">trigger_multiple</a></p>
<h3>Properties added:</h3>
<p><span style="font-weight: bold">Team affected</span> - </p>
<pre>
both
allies only
axis only
</pre>		
<h3>Flags added:</h3>
<p><span style="font-weight: bold">Reset at round restart</span> - Will reset the trigger delay timer a the start of each round</p>
<a id="auto"></a>
<hr />
<!--NEXT ENTITY-->
<h1>trigger_auto</h1>
<p><span style="font-style: italic;">Point entity:</span></p>
<p>RUST Entity reference:<br />
<a href="/node/961#trigger_auto">trigger_auto</a></p>
<h3>Properties added:</h3>
<p>None -</p>
<h3>Flags added:</h3>
<p><span style="font-weight: bold">Trigger at every round start</span> - Entity will trigger it's target at each round start rather than just on map load</p>
<a id="break"></a>
<hr />
<!--NEXT ENTITY-->
<h1>func_breakable</h1>
<p><span style="font-style: italic;">Brush entity:</span></p>
<p>RUST Entity reference:<br />
<a href="/node/955#func_breakable">func_breakable</a></p>
<h3>Properties added:</h3>
<p><span style="font-weight: bold">TnT group name (if used)</span> - These options imply that is is no longer nescasary to set up a <a href="/node/1096#goal">dod_object_goal</a> to make a wall that can be removed with TnT (<a href="/node/1096#object">dod_object</a>).</p>
<p><span style="font-weight: bold">Trigger when TnT set (if used)</span> - </p>
<p><span style="font-weight: bold">Delay before breaking with TnT</span> - </p>
<p><span style="font-weight: bold">Sprite to show on HuD if in zone without object</span> - </p>
<h3>Flags added:</h3>
<p>These options allow you to control how the breakable can be broken, combinations of team and/or weapon/object restriction can be set up.</p>
<p><span style="font-weight: bold">Only grenades</span> - </p>
<p><span style="font-weight: bold">Allies only</span> - </p>
<p><span style="font-weight: bold">Axis only</span> - </p>
<p><span style="font-weight: bold">Object cap only</span> - </p>
<p><span style="font-weight: bold">Bazooka or grenades</span> - </p>
<p><span style="font-weight: bold">Bazooka only</span> -</p>
<a id="tank"></a>
<hr />
<!--NEXT ENTITY-->
<h1>func_tank, func_tankmortar, func_tankrocket</h1>
<p><span style="font-style: italic;">Brush entities:</span></p>
<p>RUST Entity references:<br />
<a href="/node/955#func_tank">func_tank</a><br />
<a href="/node/955#func_tankmortar">func_tankmortar</a><br />
<a href="/node/955#func_tankrocket">func_tankrocket</a></p>
<h3>Properties added:</h3>
<p><span style="font-weight: bold">Behave as</span> - </p>
<pre>
normal
allies friendly
axis friendly
</pre>
<h3>Flags added:</h3>
<p>None -</p>
<h3>Notes:</h3>			
<p>The func_tank entitys can now be used to make &quot;autocannons&quot; for protecting spawn areas.</p>
<a id="zone"></a>
<hr />
<!--NEXT ENTITY-->
<h1>game_zone_player</h1>
<p><span style="font-style: italic;">Brush entity:</span></p>
<p>RUST Entity reference:<br />
<a href="/node/956#game_zone_player">game_zone_player</a></p>
<h3>Properties added:</h3>
<p>None -</p>
<h3>Flags added:</h3>
<p><span style="font-weight: bold">Ignore allies</span> - Don't count allies</p>
<p><span style="font-weight: bold">Ignore axis</span> - Don't count axis</p>
<h3>Notes:</h3>				
<p><b>game_zone_player</b> can be used to set a counter to the number of players inside (or outside) the &quot;zone&quot;, alternatively (or also) it can force all players inside (or outside) the &quot;zone&quot; to trigger an entity.<br />There are many ways this could be used, for example by setting a large &quot;zone&quot; triggering a <b>game_score</b> around a <a href="/node/1096#goal">dod_object_goal</a> it could give points to all players who were assisting or escorting the player with the <a href="/node/1096#object">dod_object</a> being captured.</p>
</ul><h1 id="1023" name="1023" class="book-h2">Modelling</h1><ul><p>Modelling for Half-Life is normally associated with Milkshape.</p>
<p>Currently, two articles are available:</p>
<ol>
<li>How To: Cut up blueprints for use in Milkshape</li>
<li>How To: Prepare for your first model (Point Modeling)</li>
</ol>
<p>For more information, check out the <a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/533"><strong>Milkshape</strong></a> articles in the 3D Modelling section.</p>
</ul><h1 id="128" name="128" class="book-h1">Kingpin</h1><ul><!-- by Gard (stephen@geol.uwa.edu.au) 2004 -->
	 
<h3>Kingpin</h3>

</p>The Kingpin sections covers the tutorials, Entity descriptions, Frequently Asked Questions (FAQ) stored on the RUST web pages. Further contribution is greatly welcomed.</p>

</p>If you have any immediate questions check out the <a href="http://forums.gamedesign.net/viewforum.php?f=12">RUST Kingpin Forums</a> for fast feedback on any Kingpin Questions, Chat, Gossip ... etc. What these guys don't know isn't worth knowing</p>
<!--break-->
      </ul><h1 id="130" name="130" class="book-h2">FAQ</h1><ul>Frequently Asked Questions about Kingpin.</ul><h1 id="157" name="157" class="book-h3">Common KP FAQ</h1><ul><!-- by Method (yanostrestov@yahoo.com) 2004 -->
	 
<h3>KINGPIN</h3>
<blockquote>
		COMMON KINGPIN FAQ - by [DS]Method<br>
		<a href="yanostretsov@yahoo.com">Updates contact RUST</a>
</blockquote>
<br><br>

<b>Preface:</b><br>
<p>Here's a bunch of KP frequently asked questions.
Including mapping, gameplay and common questions.</p>

<hr noshade color="black"><br>

<h3>MAPPING</h3>
<blockquote>
  <p><b>When I try to compile a map, the DOS screen flashes fast and closes.</b><br>
To compile your map you need to copy <font color = "red">kpbsp.exe</font>, <font color = "red">kprad.exe</font> and <font color = "red">kpvis.exe</font> into Kingpin/main/maps folder. You can find those files in the Kingpin/kprad folder.</p>

  <p><b>When I set texture light flag in kprad's Surface Inspector, no matter what the color of texture light is always white.</b><br>
When Xatrix was working on KP, they didn't have time to update ArgRad, and since KP based on Quake2 engine, it used wal files. After finishing KP, Xatrix recompiled textures to tga format, but forgot about wal lighting. You need to search the net for Kingpin wal textures.</p>

  <p><b>I made Deathmatch/Bagman map and when I try to load it, it loads in SinglePlayer mode.</b><br>
To load DM/BM map, you need to type in console "<font color=red>deathmatch 1</font>", or start game with shortcut parameter "<font color=red>+deathmatch 1</font>".</p>

  <p><b>If I want to check the map design, do I have to wait all the rad and vis time?</b><br>
You can pick "<font color=red>Bsp | bsp_only (novis/norad)</font>" in kprad toolbar. It'll take less than a minute to compile, but you won't see lights and shadows in your map, it'll be fullbright.</p>

  <p><b>If I created entity, is it possible to undo it?</b><br>
Select your entity and pick "<font color=red>Selection | Ungroup entity</font>" in kprad toolbar.</p>

  <p><b>Is it possible to preview how func_door, func_train, etc works in game?</b><br>
Select your entity and press "<font color=red>Ctrl-A</font>", it won't work for specific KP entities, only Quake2 entities.</p>

  <p><b>When I hire guys in my map they can't follow me.</b><br>
You need to have navdata file in navdata folder. Load your map and type in console "<font color=red>nav_debug 1</font>" and "<font color=red>nav_dynamic 1</font>", now run everywhere you want your hired guys to follow. When you're done quit the game and navdata file will save itself in navdata folder.</p>
</blockquote>



<h3>GAMEPLAY</h3>
<blockquote>
  <p><b>When I shoot at func_explosive or blow up characters, my KP crashes.</b><br>
You need to install the latest <a href="http://www.gamedesign.net/content/kingpin/kingpin_v121_patch.exe">KP patch - v1.21.</a></p>

  <p><b>How can you zoom in KP?</b><br>
You need to use "<font color=red>fov</font>" - field of view. <font color = "red">fov 90</font> is the default fov.
<font color = "red">fov 180</font> is the highest fov. The smaller the number the more you zoom. Some players like to play with <font color = "red">fov 120</font> cause you can see alot more than with the default fov.</p>

  <p><b>What's doublejump?</b><br>
Doublejump is a kind of jump. To do it, you need to find something small (less then 64 * 64 brush), then run toward it and before touching it, press jump twice fast. If you did it correctly you should jump higher than normal jump.</p>

  <p><b>What's bunnyhopping?</b><br>
Bunnyhopping is another kind of jump. To do it, you should press right strafe and turn your mouse 45 degrees to the right side, then press jump, keep jumping and cirle, you'll gain speed. You can use right or left strafe to bh or you can use them in combination. Don't press forward, the bunnyhop won't work, use only left or right strafe.</p>

  <p><b>Is there a weapon against bazooka?</b><br>
Flamethrower is a great weapon against bazooka, flame kills rockets, so if you aim at the enemy's bazooka he'll blow himself up.</p>
</blockquote>



<h3>COMMON</h3>
<blockquote>
  <p><b>What voices Cypress Hill did in KP?</b><br>
They did voices of bartender, Momo and Jesus.</p>

  <p><b>What things didn't make into final version of KP?</b><br>
There was different kinds of mods for weapons. Three kinds of armor, chemical, flamable and bulletproof. Bumpmapping and drivable car, etc.</p>

  <p><b>Was there any movies, which inspired KP?</b><br>
Some of KP dialog was inspired by Pulp Fiction and
Big Lebowski.</p>
</blockquote></ul><h1 id="158" name="158" class="book-h2">Info</h1><ul>Here you can find some info on KP, links and files.</ul><h1 id="189" name="189" class="book-h3">Console Commands</h1><ul><!-- (c)2004 [DS]Kingpn_Xatrix -->

<h3>CONSOLE COMMANDS</h3>

To enable the ability to bring up the console during play<br>add <font color = "red">"+set developer 1"</font> to the command line in you<br>windows shortcut.<br><br>

<h4>CHEATS</h4>
<b>immortal</b> - god mode<br>
<b>give all</b> - gives every item, weapon, etc.<br>
<b>notarget</b> - enemies can't see you.<br><br>

<h4>MAPPING</h4>
<b>r_speeds 1(0)</b> - shows r_speeds and fps.<br>
<b>gl_showtris 1(0)</b> - shows polygons, won't work if you don't<br> have the full OpenGL support graphics card.<br>
<b>nav_debug 1(0)</b> - debug the map's navdata.<br>
<b>nav_dynamic 1(0)</b> - enables to make navdata.<br><br>

<h4>OTHER</h4>
<b>noclip</b> - fly through walls.<br>
<b>map xxx</b> - load map (xxx.bsp or xxx), load demo <br>(xxx.dm2) or picture (xxx.tga), where xxx is the name of the map.<br>
<b>exec xxx</b> - execute config, where xxx is the config name.<br>
<b>fov xxx</b> - field of view, where xxx is the number. Default fov is 90.<br>
<b>record xxx</b> - record demo, where xxx is the demo name.<br>
<b>stop</b> - stop recording demo.<br>
<b>togglecam</b> - toggle chase-cam mode.<br>
<b></b></ul><h1 id="160" name="160" class="book-h3">Files</h1><ul><!-- (c) 2004, [DS]Kingpin_Xatrix -->

<h3>FILES</h3>

<b>
<a href = "http://gamedesign.net/content/kingpin/kingpin_v121_patch.exe">KP patch v1.21</a></b><br>
Few maps and a bunch of bug fixes. <br><br>

<b>
<a href = "http://gamedesign.net/content/kingpin/kpsdk.zip">KP sdk</a></b><br>
SDK includes source code, program to make mdx files and<br>a couple of map examples.<br><br>

<b>
<a href = "http://gamedesign.net/content/kingpin/XatrixTEXTURES.zip">Xatrix unreleased textures</a></b><br>
Additional KP textures, which weren't released with KP.<br><br>

<b>
<a href = "http://gamedesign.net/content/kingpin/kp_starter_pack.zip">KP starter pack</a></b><br>
You need this pack if you want to play online, includes<br> MonkeyMod, a good program for blocking cheats and hacks.</ul><h1 id="159" name="159" class="book-h3">Links</h1><ul><!-- (c) 2004, [DS]Kingpin_Xatrix -->

<h3>LINKS</h3>

<b>
<a href = "http://www.gmistudios.com/">Gray Matter Studios, Inc.</a></b><br><br>
Former Xatrix Entertainment, Inc.<br><br>

<b><a href = "http://www.gamedesign.net/content/kingpin/kingpin_xatrix/index.htm">Kingpin_Xatrix's Turf</a><br><br></b>

Here's the link to my website, where you can find <br>everything about Kingpin:Final Crime and [DS] or Da <br>Scumbags, including news, files, scrnshots, faq, <br>tutorials and links.<br><br>

<b>
<a href = "http://www.cypressonline.com/">Cypress Hill</a></b><br><br>
A group, who brought us official KP soundtrack and their voices.<br><br>

<b>
<a href = "http://www.kingpinforever.com/">KP4EVER</a></b><br><br>
KP info, news, maps, skins, models, etc.<br><br>

<b>
<a href = "http://www.planetkingpin.com/">PlanetKingpin</a></b><br><br>
KP info, news, and some old KP scrnshots.<br><br>

<b>
<a href = "http://forums.gamedesign.net/viewforum.php?f=12&sid=46717628251764220e3ee1967f2abb53">Rust KP Forum</a></b><br><br>
Rust KP Forum, news and info.<br><br>

<b><a href = "http://prefabs.gamedesign.net/game.php3?game_id=11&num=0">KP prefabs</a></b><br><br>
Rust KP prefab website.</ul><h1 id="204" name="204" class="book-h2">Kingpin:Final Crime</h1><ul><h3>METHOD'S TURF</h3>
<p><b><a href = "http://method.gamedesign.net">Method's Turf</a><br><br></b></p>
<p>Here's the link to the Method's Turf, where you can find everything about Kingpin: Final Crime, Doom 3 maps, articles, tutorials and interviews.</p></ul><h1 id="131" name="131" class="book-h2">Tutorials</h1><ul>Miscellaneous Kingpin Tutorials</ul><h1 id="548" name="548" class="book-h3">Compiling Maps In KPRadiant</h1><ul><h3>Compiling Maps In KPRadiant </h3>
- by Zirco<br><br>

<b>Introduction:</b><br><br>

Compiling is probably the most important thing you must learn in mapping. This tutorial will show you how to compile your map to bsp format in QERadiant.<br><br>

<b>Step 1:</b><br><br>

If you have Kingpin installed to a custom directory or on a different hard drive letter:<br><br>


<b>Step 2:</b><br><br>

By this time, you should have a map with a light entity in it. If not build one now. Remember, if your map does not have any light entities or light brushes in it, all you will see is dark when it comes to play your map.<br><br>

Save your map to .../Kingpin/main/maps, the directory may not exist so you will have to make a new folder called 'maps' in your 'main' folder. Next save your map to the .../Kingpin/KPRad directory when it comes time to compile and test your map. It is important that both maps are the exact same thing. Now go to the 'bsp' menu and click 'bsp_FullVis'. A DOS window should pop up then everything should run okay, if you get any errors and the compile process stops, it means your project file settings is not correct.<br><br>

Although it may seem useless and a little time consuming to save your map to two different locations, it is required for it to work.<br><br>

<b>Step 3:</b><br><br>

When the compile process is done, close the window and QERadiant if you want then run Kingpin. Type in the console "map x" without quotation marks and x being the name of your map. If you do not have the console enabled, startup shortcut with "+set developer 1" without the quotation marks.<br><br>

<b>Step 4 (optional):</b><br><br>

Other BSP compile types:
If 'bsp_FullVis' takes too long or if you're map is huge, then try 'bsp_FastVis' or if you want to see your map with full brightness which takes only a second to compile then try 'bsp_only (novis/norad)'. When releasing a final map, use bsp_FullVis.<br><br>

</ul><h1 id="138" name="138" class="book-h3">How to create character witch cigar, fedora hat, etc.?</h1><ul><h3>COUNT</h3>

by Method
<p>

<p><i>Count</i> defines character items and is used to assign a charatcter with different hat's and cigar's</p>

<hr noshade color="black"><br>

<p>The <i>count</i> defines four types of characters items and is set with the enitity inspector. A <i>count</i> value of zero will assign no character item. The four types of character items are:</p>

<blockquote>
<b>1</b>: Cigar,<br>
<b>2</b>: Fedora hat,<br>
<b>4</b>: Stetson hat; and<br>
<b>8</b>: Cap.<br>
</blockquote>

<p><b>Example 1:</b><br>
Open entity inspector for any selected character and set</p>

<blockquote>
<font color = "red">
Key	count</br>
Value	9</br>
</font>
</blockquote>

<p>The character entity will be assigned both a cap (<b>8</b>) and cigar(<b>1</b>). Where a value of 9 = 8 + 1.</p>

<p><b>Example 2:</b><br>
Open entity inspector for any selected character and set</p>

<blockquote>
<font color = "red">
Key	count</br>
Value	5</br>
</font>
</blockquote>

<p>The character entity will be assigned both a stetson hat (<b>4</b>) and cigar (<b>1</b>). Where a value of 5 = 4 + 1.</p>

<p><b>Example 3:</b><br>
Open entity inspector for any selected character and set</p>

<blockquote>
<font color = "red">
Key	count</br>
Value	2</br>
</font>
</blockquote>

<p>The character entity will be just assigned a Fedora hat and will not have a cigar (poor guy!!!)</p>
<div class="book"><div class="nav"> <div class="links"><div class="prev"><a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/548" title="View the previous page.">previous</a></div><div class="next"><a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/137" title="View the next page.">next</a></div><div class="up"><a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/131" title="View this page's parent section.">up</a></div></div> <div class="titles"><div class="prev">Compiling Maps In KPRadiant</div><div class="next">How to create character's combattarget?</div></div></div></div></ul><h1 id="137" name="137" class="book-h3">How to create character's combattarget?</h1><ul><h3>COMBATTARGET</h3>

by Method
<p>

<b>
When the cast reaches this marker, they'll take on this combattarget.
</b><br><br>

Example use: Select a character and open Entity inspector.<br><br>
<font color = "red">
Key	combattarget<br>
Value	combat1<br><br>
</font>
Value is the targetname of path_corner_cast.<br><br>

Select path_corner_cast and open Entity inspector.<br><br>
<font color = "red">
Key	targetname<br>
Value	combat1<br><br>
</font>

Value is the targetname of path_corner_cast.<br><br>

Place it away from the character.<div class="book"><div class="nav"> <div class="links"><div class="prev"><a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/138" title="View the previous page.">previous</a></div><div class="next"><a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/140" title="View the next page.">next</a></div><div class="up"><a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/131" title="View this page's parent section.">up</a></div></div> <div class="titles"><div class="prev">How to create character witch cigar, fedora hat, etc.?</div><div class="next">How to create character's deathtarget?</div></div></div></div></ul><h1 id="140" name="140" class="book-h3">How to create character's deathtarget?</h1><ul><h3>DEATHTARGET</h3>
by Method
<p>
<b>
Deathtarget used with characters to trigger other entities.
</b><br><br>
Example use: select a character and open Entity inspector.<br><br>
<font color = "red">
Key	deathtarget<br>
Value	startmovie<br>
</font><br>
Value is the targetname of the entity, which will activate after<br>
you kill character.<br><br>
You can enter any targetname for the entity.
<div class="book"><div class="nav"> <div class="links"><div class="prev"><a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/137" title="View the previous page.">previous</a></div><div class="next"><a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/142" title="View the next page.">next</a></div><div class="up"><a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/131" title="View this page's parent section.">up</a></div></div> <div class="titles"><div class="prev">How to create character's combattarget?</div><div class="next">How to create characters with different kinds of head?</div></div></div></div></ul><h1 id="142" name="142" class="book-h3">How to create characters with different kinds of head?</h1><ul><h3>HEAD</h3>
by Method
<p>
<b>
Head used with characters for different kinds of head.<br><br>

Bitch's head:<br><br>

Bald		1<br>
Pony tail	2<br>
Default		0 or anything else<br><br>

Punk's head:<br><br>

Bald		1<br>
Ski		2<br>
Weld		3<br>
Default		0 or anything else<br><br></b>

Example use: select a character and open Entity inspector.<br><br>
<font color = "red">
Key	head<br>
Value	1<br><br>
</font>
This character will spawn bald.

</ul><h1 id="153" name="153" class="book-h3">How to create characters with different scale?</h1><ul><h3>SCALE</h3>
by Method
<p>
<b>
Scale used as size of the character.<br>
</b><br>
Example use:<br><br>
<font color = "red">
Key	scale<br>
Value	1.05<br><br>
</font>
Value is the size of a character. This scale is Nicki
Blanco size. So if you want to create a small size,
use scale 0.85.
</ul><h1 id="148" name="148" class="book-h3">How to create cutscene?</h1><ul><h3>How to create cutscene?</h3>
by Method
<p>
<p>This is an example of how to use a camera to be targeted from a misc_cutscene_trigger.<p> 

<p><hr color=black noshade width=75%><p>

<h3>Misc_cutscene_trigger Options:</h3>

<b>targetname</b> - camera target ID.<br><br>
<b>cameraorigin</b> - X Y Z camera start position.<br><br>
<b>cameraangle</b> - X Y Z start angles.<br><br>
<b>rotate</b> - X Y Z rotational velocity during cut scene.<br><br>
<b>cameravel</b> - [forward] [right] [up] speed to move from initial angle.<br><br>
<b>cameravelrel</b> - [forward] [right] [up] speed to move relative to current frame angle.<br><br>
<b>wait</b> - cut scene length in seconds (default 5).<br><br>
<b>target</b> - next camera to target.<br><br>
<b>target2</b> - [NOT WORKING!!] camera angle points to this entity (overides other angle commands).<br><br>
<b>deadticks</b> - fov for this camera.<br><br>
<b>duration</b> - fade out time.<br><br>
<b>reactdelay</b> - time into camera to start fading out.<br><br>

<p><hr color=black noshade width=75%><p>

<h3>Example:</h3>

Create misc_cutscene_trigger and open Entity inspector.<br><br>

<font color = "red">
Key	duration<br>
Value	1<br><br>
</font>
Value is the fade out time.<br><br>
<font color = "red">
Key	target<br>
Value	cam_1<br><br>
</font>
Value is the targetname of misc_cutscene_camera.<br><br>

Create misc_cutscene_camera and open Entity inspector.<br><br>
<font color = "red">
Key	targetname<br>
Value	cam_1<br><br>
</font>
Value is the camera target ID.<br><br>
<font color = "red">
Key	name<br>
Value	cut_scene/cut1.wav<br><br>
</font>
Value is the sound name to play.<br><br>
<font color = "red">
Key	cameraangle<br>
Value	52 35 0<br><br>
</font>
Value is the X Y Z start angles.<br><br>
<font color = "red">
Key	cameraorigin<br>
Value	-2071 2534 263<br><br>
</font>
Value is the X Y Z camera start position.<br><br>
<font color = "red">
Key	cameravel<br>
Value	7 50 -48<br><br>
</font>
Value is the [forward] [right] [up] speed to move from <br>initial angle.<br><br>
<font color = "red">
Key	cameravelrel<br>
Value	0 10 0<br><br>
</font>
Value is the [forward] [right] [up] speed to move relative <br>to current frame angle.<br><br>
<font color = "red">
Key	reactdelay<br>
Value	5<br><br>
</font>
Value is the time into camera to start fading out.<br><br>
<font color = "red">
Key	wait<br>
Value	15<br><br>
</font>
Value is the cut scene length in seconds (default 5).<br>
<font color = "red">
Key	target<br>
Value	cam_2<br><br>
</font>
Value is the next camera to target.<br><br>
<font color = "red">
Key	target2<br>
Value	cam_1_viewtarget<br><br>
</font>
Value is the targetname of path_corner_cast.<br><br>
<font color = "red">
Key	delay<br>
Value	5<br><br>
</font>
Value is the time into camera to start fading out.<br><br>
<font color = "red">
Key	accel<br>
Value	0.3<br><br>
</font>
Value is the camera acceleration.<br><br>
<font color = "red">
Key	decel<br>
Value	0.3<br><br>
</font>
Value is the camera deceleration.<br><br>

Create info_player_start and open Entity inspector.<br><br>
<font color = "red">
Key	angle<br>
Value	225<br><br>
</font>
Value is the opening direction.<br><br>
Place info_player_start inside misc_cutscene_trigger.<br><br>

Create path_corner_cast and open Entity inspector.<br><br>
<font color = "red">
Key	targetname<br>
Value	cam_1_viewtarget<br><br>
</font>
Value is the path_corner_cast target ID.<br><br>

I used sr1.map cutscene as an example.</ul><h1 id="154" name="154" class="book-h3">How to create fixed size trigger?</h1><ul><h3>TRIGGER_RELAY</h3>
by Method
<p>
<b>
This fixed size trigger cannot be touched, it can only be <br>fired by other events.</b><br><br>


Example use: create func_button and open Entity inspector.<br><br>
<font color = "red">
Key	angle<br>
Value	0<br><br>
</font>
Value determines the opening direction.<br><br>
<font color = "red">
Key	lip<br>
Value	5<br><br>
</font>
Value is the override the default 4 pixel lip remaining at<br> end of move.<br><br>
<font color = "red">
Key	sounds<br>
Value	4<br><br>
</font>
Value is the sound number.<br><br>
<font color = "red">
Key	target<br>
Value	t86<br><br>
</font>
Create trigger_relay and open Entity inspector.<br><br>
<font color = "red">
Key	targetname<br>
Value	t86<br><br>
</font>
Value is the trigger_relay target ID.<br><br>
<font color = "red">
Key	target<br>
Value	t88<br><br>
</font>
Value is the targetname of target_speaker.<br><br>

Create target_speaker and open Entity inspector.<br><br>
<font color = "red">
Key	spawnflags<br>
Value	4<br><br>
</font>
Value is the flag reliable.<br><br>
<font color = "red">
Key	targetname<br>
Value	t88<br><br>
</font>
Value is the target_speaker target ID.<br><br>
<font color = "red">
Key	noise<br>
Value	world/pawnbuzz<br><br>
</font>
Value is the path for the sound.<br><br>

You can also add delay to trigger_relay.<br><br></ul><h1 id="134" name="134" class="book-h3">How to create gang territory?</h1><ul><h3>AI_TERRITORY</h3>
by Method
<p>
<b>
Marks the boundary of a gang's territory.<br>
A character touching this will be deemed inside<br>
the gang's territory. This means war if sighted.<br><br>
</b>
Example use: select ai_territory and open Entity<br>
inspector<br><br>
<font color = "red">
Key	cast_group<br>
Value	2<br><br>
</font>
Cast_group is the group that owns this territory.<br><br>
<font color = "red">
Key	angle<br>
Value	270<br><br>
</font>
Angles points to the direction of the territory.<br><br>
<font color = "red">
Key	moral<br>
Value	4<br><br>
</font>
Only characters with an equal or lower moral<br>
level will be effected by this brush.<br><br>

Place it near enemy turf.
</ul><h1 id="133" name="133" class="book-h3">How to create gang war?</h1><ul><h3>AI_EVENT_HOSTILE</h3>
by Method
<p>
<b>
Character touching this brush will become a<br>
hostile enemy to all other characters in LOS, that have<br>
the same "cast_group" as the brush.<br><br>
</b>
Example use: select 2 characters and open Entity inspector.<br><br>
<font color = "red">
Key	cast_group<br>
Value	153<br><br>
</font>
Value is the number of their cast_group.<br><br>
<font color = "red">
Key	localteam<br>
Value	postbattery1<br><br>
</font>
Value is the name of their localteam.<br><br>
<font color = "red">
Key	targetname<br>
Value	119<br><br>
</font>
Value is the targetname of the character.<br><br>

Select another 2 cast_ entities and open Entity inspector.<br><br>
<font color = "red">
Key	cast_group<br>
Value	152<br><br>
</font>
Value is the number of their cast_group.<br><br>
<font color = "red">
Key	localteam<br>
Value	postbattery2<br><br>
</font>
Value is the name of their localteam.<br><br>
<font color = "red">
Key	targetname<br>
Value	119<br><br>
</font>
Value is the targetname of the character.<br><br>

Create ai_event_hostile brush with x: 64 y: 64 z: 32 and<br> place it on the ground. Select it and open Entity <br>inspector.<br><br>
<font color = "red">
Key	cast_group<br>
Value	152<br><br>
</font>
Place it inside character with cast_group 153.<br>
That means that this cacharacter and members of his <br>localteam is enemy of cast_group 152.<br><br>

Create another ai_event_hostile brush with X: 64 y: 64 z: <br>32 and place it on the ground. Select it and open <br>Entity inspector.<br><br>
<font color = "red">
Key	cast_group<br>
Value	153<br><br>
</font>
Place it inside character with cast_group 152. That means <br>that this character and members of his localteam is <br>enemy of cast_group 153.<br><br>

Create trigger_once brush with x: 32 y: 288 z: 128 (or x: <br>128 y: 16 z: 128)<br><br>
<font color = "red">
Key	target<br>
Value	t119<br><br>
</font>
Value is the target of character.<br><br>

Place this brush away from characters.<br>
So when player trigger trigger_once, characters will start<br> blasting.<br><br>
To see this tutorial load sr2.bsp, get bike battery and <br>watch Rats and Scorps waste each other.


</ul><h1 id="144" name="144" class="book-h3">How to create killtarget?</h1><ul><h3>KILLTARGET</h3>
by Method
<p>
<b>
Killtarget used with trigger_relay to kill entities.<br><br>
</b>
Example use: select trigger_relay and open Entity<br>
inspector.<br><br>
<font color = "red">
Key	killtarget<br>
Value	guards1<br><br>
</font>
Value is targetname of entity, which will be killed after<br>
you trigger trigger_relay. You can enter any name for<br>
killtarget value.


</ul><h1 id="152" name="152" class="book-h3">How to create pathtarget?</h1><ul><h3>PATHTARGET</h3>
by Method
<p>
<b>
Pathtarget used with path_corner. Any entity which will<br>
follow this path_corner will activate entity with targetname<br>
of pathtarget value.<br><br>
</b>
Example use: select path_corner and open Entity inspector.<br><br>
<font color = "red">
Key	pathtarget<br>
Value	opengate<br><br>
</font>
Value is targetname of entity which will activate after any<br>
entity will follow this path_corner. You can enter any name<br>
for pathtarget value.


</ul><h1 id="141" name="141" class="book-h3">How to divide the world into areas?</h1><ul><h3>FUNC_AREAPORTAL</h3>
by Method
<p>
<b>
This is a non-visible object that divides the world into<br>
areas that are seperated when this portal is not activated.<br>
Usually enclosed in the middle of a door.<br><br>
</b>
Example use: select func_door_rotating and open<br>
Entity inspector. Find fields with "key" and "value".<br><br>
<font color = "red">
Key	target<br>
Value	t94<br><br>
</font>
Value is the targetname of func_areaportal.<br><br>

Select func_areportal and open Entity inspector.<br><br>
<font color = "red">
Key	targetname<br>
Value	t94<br><br>
</font>
Targetname of func_areaportal.<br><br>
<font color = "red">
Key	style<br>
Value	1<br><br>
</font>
Style used as areaportal number.<br><br>

Place func_areaportal in the middle of a door<br>(func_door_rotating).</ul><h1 id="147" name="147" class="book-h3">How to group characters in gang?</h1><ul><h3>LOCALTEAM</h3>
by Method
<p>
<b>
Localteam used to group AI in gangs. Like gang, Sewer Rats<br>
in Skidrow. They're your enemies, but sometimes they warn<br>
you like "What the f*ck you lookin' at?". If you kill<br>
gang member they start blasting you without saying anything.<br><br>
</b>
Example use: select all characters, which you want to be<br>
in the gang and open Entity inspector.<br><br>
<font color = "red">
Key	localteam<br>
Value	sewer_rats<br><br>
</font>
Value is the name of the gang. You can change it on whatever
you want.
</ul><h1 id="146" name="146" class="book-h3">How to light props?</h1><ul><h3>LIGHTIT</h3>
by Method
<p>
<b>
Lightit used to light props (props_trashwall,
<br>props_trashbottle, etc.)<br><br>
</b>
Example use: select props and open Entity inspector.<br><br>
<font color = "red">
Key	lightit<br>
Value	8<br><br>
</font>
Value is light of props. You can enter any value you want.
</ul><h1 id="145" name="145" class="book-h3">How to make character follow another character?</h1><ul><h3>LEADER_TARGER</h3>
by Method
<p>
<b>
Leader_target used to follow the characters. Like in<br>
sr2 map, dog is following Lamont.<br><br>
</b>
Example use: select a character and open Entity inspector.<br><br>
<font color = "red">
Key	leader_target<br>
Value	Lamont<br><br>
</font>
Value is the name of the character, which this entity<br>
will follow. You can put any name of the entity.
</ul><h1 id="151" name="151" class="book-h3">How to make character head towards path_corner_cast?</h1><ul><h3>PATH_CORNER_CAST</h3>
by Method
<p>
<b>
Character will head towards the specified path_corner_cast.<br>
Pathtarget: gets used when an entity that has this <br>path_corner targeted touches it. Could be used to <br>trigger a button, or a character. (see pathtarget tutorial)<br>
Combattarget: when the cast reaches this marker, they'll <br>take on this combattarget. (see combattarget tutorial)<br><br>
</b>
Example use: Select character entity and open <br>Entity inspector.<br><br>
<font color = "red">
Key	target<br>
Value	t24<br><br>
</font>
Value is the targetname of path_corner_cast.<br><br>

Select path_corner_cast and open Entity inspector.<br><br>
<font color = "red">
Key	targetname<br>
Value	t24<br><br>
</font>
Value is the targetname of path_corner_cast.<br><br>
<font color = "red">
Key	target<br>
Value	t25<br><br>
</font>
Value is the targetname of another path_corner_cast.<br><br>

Select another path_corner_cast and open Entity <br>inspector.<br><br>
<font color = "red">
Key	targetname<br>
Value	t25<br><br>
</font>
Value is the targetname of path_corner_cast.<br><br>

If you want to make a loop, add this to the last <br>path_corner.<br><br>
<font color = "red">
Key	target<br>
Value	t24<br><br>
</font>
After character touches last path_corner, he'll go to the <br>first path_corner.</ul><h1 id="132" name="132" class="book-h3">How to set character's accuracy?</h1><ul><h3>ACC</h3>
by Method
<p>
<b>
Acc is a weapon accuracy. It used only with characters<br>
(cast_bitch, cast_punk, etc.). There is 5 kinds of accuracy<br> for AI.<br><br>

ACC_GREEN	0<br>
ACC_POOR	1<br>
ACC_NORMAL	2<br>
ACC_SEASONED	3<br>
ACC_VETERAN	4<br>
ACC_ELITE	5<br><br>
</b>
Example use: select a character in KPRadiant and hit "n".<br>
You'll open Entity inspector. Find fields with "key" <br>and "value".<br><br>
<font color = "red">
Key	acc<br>
Value	3<br><br>
</font>
This AI will have accuracy of ACC_SEASONED.<br>
Accuracy also used with melee weapons.
</ul><h1 id="136" name="136" class="book-h3">How to set character's calibur?</h1><ul><h3>CAL</h3>
by Method
<p>
<b>
Cal is damage caused by weapon - calibur.<br><br>
</b>
Example use: select a character and open Entity inspector.<br><br>
<font color = "red">
Key	cal<br>
Value	4<br><br>
</font>
The only characters I saw used cal in Kingpin was cast_punk.

</ul><h1 id="139" name="139" class="book-h3">How to set character's currentcash?</h1><ul><h3>CURRENTCASH</h3>
by Method
<p>
<b>
Currentcash is how much money entity has. You can put any<br>
value for money. Used with characters.<br><br>
</b>
Example use: select a character and open Entity inspector.<br><br>
<font color = "red">
Key	currentcash<br>
Value	8<br><br>
</font>
It also used with cast_group 1 (friendly AI). Select entity<br>
with cast_group 1 and open Entity inspector.<br><br>
<font color = "red">
Key	currentcash<br>
Value	-10<br><br>
</font>
You need to pay $10 to hire him.
</ul><h1 id="143" name="143" class="book-h3">How to set character's health?</h1><ul><h3>HEALTH</h3>
by Method
<p>
<b>
Health is used for health of AI. If you create a character<br>
without health, Kingpin engine will give the default health.<br><br>
</b>
Example use: select a character and open Entity inspector.<br><br>
<font color = "red">
Key	health<br>
Value	300<br><br>
</font>
For health value you can enter any value.
</ul><h1 id="149" name="149" class="book-h3">How to set character's moral?</h1><ul><h3>MORAL</h3>
by Method
<p>
<b>
Moral is effect willingness to fight until death,<br>
attack unprovoked, etc. Used with characters.<br>
There are 7 kinds of moral.<br><br>

MORAL_RANDOM		0<br>
MORAL_COWARD		1<br>
MORAL_HAPPY		2<br>
MORAL_NORMAL		3<br>
MORAL_AGGRESSIVE	4<br>
MORAL_BESERK		5<br>
MORAL_HEROIC		6<br>
MORAL_PSYCOTIC		7<br><br>
</b>
Example use: select a character and open Entity<br>
inspector.<br><br>
<font color = "red">
Key	moral<br>
Value	5<br><br>
</font>
Moral also used with ai_boundary and ai_territory.
</ul><h1 id="150" name="150" class="book-h3">How to set character's name?</h1><ul><h3>NAME</h3>
by Method
<p>
<b>
Name used as name of a character. Also when you talk to AI,<br>
on the screen you'll see "stranger : ", but if you enter the<br>
name it'll be "name : ", where name is the name you <br>entered.<br><br>
</b>
Example use: select a character and open Entity inspector.<br><br>
<font color = "red">
Key	name<br>
Value	Lamont<br><br>
</font>
Value is the name. You can enter any name for the character.

</ul><h1 id="135" name="135" class="book-h3">How to set character's skins?</h1><ul><h3>ART_SKINS</h3>
by Method
<p>
<b>
Art_skins used as a skin for a model. Art_skins hold 3 -<br>digit skins for head, torso and legs.<br><br>
</b>
Example use: select a character and open Entity inspector.<br><br>
<font color = "red">
Key	art_skins<br>
Value	041 026 010<br><br>
</font>
Value is skin number. To find all skins go to <br>main\models\actors.<br><br>
Look in thug, runt and bitch folder.
</ul><h1 id="155" name="155" class="book-h3">How to unlock a targeted door?</h1><ul><h3>TRIGGER_UNLOCK</h3>
by Method
<p>
<b>
Player will unlock a targeted door when this brush is <br>touched<br><br>

Can be triggered also!<br>
door's "key" should equal -1<br>
"target" target ID to match door<br><br>
</b>
Example use: create func_door and open Entity inspector.<br><br>
<font color = "red">
Key	angle<br>
Value	-1<br><br>
</font>
Value determines the opening direction.<br>
-1 opens up, -2 opens down.<br><br>
<font color = "red">
Key	key<br>
Value	-1<br><br>
</font>
Value is the key number.<br>
If key is -1, that means door is closed.<br><br>
<font color = "red">
Key	sounds<br>
Value	6<br><br>
</font>
Value is sound number.<br><br>
<font color = "red">
Key	targetname<br>
Value	t120<br><br>
</font>
Value is the func_door target ID.<br><br>
<font color = "red">
Key	wait<br>
Value	6<br><br>
</font>
Value is the time to wait before returning (3 default, -1 =<br> never return)<br><br>

Create trigger_unlock and open Eintity inspector.<br><br>
<font color = "red">
Key	target<br>
Value	t120<br><br>
</font>
Value is the targetname of func_door.<br><br>

Place trigger_unlock behind a func_door.</ul><h1 id="547" name="547" class="book-h3">Setting Up QERadiant</h1><ul><h3>SETTING UP QERADIANT</h3> - by Zirco<br><br>

<b>Introduction:</b>

This tutorial will help you to setup QERadiant that was <br>installed with Kingpin.<br><br>

<b>Step 1:</b><br><br>

If you have Kingpin installed to its default directory (c:\program files\Kingpin):
With it installed to it's default directory, only the preferences should be modified, and not the project file which points everything to its correct places. First, startup QERadiant, it should ask you for the project file, locate kingpin.qe4 in Kingpin/KPRadiant then click 'open'.<br><br>

If you have Kingpin installed to a custom directory or on a different hard drive letter:
With it installed to a foreign directory, you will need to change the Kingpin project settings and the QERadiant preferences. First, startup QERadiant, it should ask you for the project file, locate kingpin.qe4 in Kingpin/KPRadiant then click 'open'. This is the file we must modify, but to make it easy, we will do it within QERadiant. Go to the 'File' menu then click the 'Project Settings' submenu. Everything should be pointing to the default directories (c:\program files\kingpin...). Change the paths so they match the location you installed Kingpin to.<br><br>

<b>Step 2:</b><br><br>

Go to the 'Edit' menu then click the 'Preferences' submenu. This will load up the common settings for QERadiant. Though some fields are not filled in, they are not required or needed.<br><br>

<b>Step 3 (optional):</b><br><br>

Color Settings:<br><br>

When you have finished steps 1 and 2, you should by now have noticed the black grid on white background. It helps to change the colors to white grid on black background. We will use preset colors by going to the 'Misc' menu, 'Colors' submenu, then 'Themes', and finally click on 'Black and Green'.<br><br>

You will notice that it has made the minor grid disappear. This is because it's actually now black, so change it by going to the 'Misc' menu, 'Colors' submenu, then 'Grid Minor' to a dark gray color of your choice, I recommend the RGB to be 25,25,25.
</ul><h1 id="268" name="268" class="book-h3">The BSP Process and Visibility</h1><ul>This is a link to a tutorial that was originally written for Quake II but largely applies to all Quake engine games including Kingpin.

<A href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/view/266">Click to view the tutorial</A></ul><h1 id="1147" name="1147" class="book-h1">Quake 4</h1><ul>Quake 4 Section</ul><h1 id="1186" name="1186" class="book-h2">Quake 4 Ambient Light</h1><ul><h3>Quake 4 Ambient Light</h3>
<p>
by Method
<p>
<div style = "background-color: darkgray"><b>INTRO</b></div>
<p>
I was wondering how Raven achieved that ambient light in their maps. So I looked through the levels and checked to see how many light entities overlap by using <i>"r_showlightcount 1"</i> command. I noticed that there's no black color, that means that every surface is lit with a light. I hid the light entities in the editor and tested to see if the level would still be lit. It wasn't, so the next thing I did, was enable light boundaries, which revealed a huge light box that covered the whole map. I looked at the Light Editor and noticed that the light entity has an ambient texture.
<p>
<div style = "background-color: darkgray"><b>CREATING AMBIENT LIGHT</b></div>
<p>
Make a light entity and resize it, so it covers the whole level. Then select it and press <i>"J"</i> to go into the Light Editor. Uncheck Cast checkboxes, except <i>Cast Diffuse</i>. In the texture scrollbox, pick <i>"lights/ambientlight_nofall"</i>. Next you need to pick an ambient color, but make sure to lower the value scale on the right, so it'll be close to black. Play around with it, to see how it lights the level.
<p>
<div style = "background-color: darkgray"><b>EXAMPLE</b></div>
<p>
I'll use a map, which I recently begun designing as an example:
<p>
<center>
<img src = "http://www.gamedesign.net/content/quake4/ambient1.jpg">
<p>
<i>Without ambient light (ambient light color set to black)</i>
</center>
<p>
<p>
<center>
<img src = "http://www.gamedesign.net/content/quake4/ambient2.jpg">
<p>
<i>With ambient light (ambient light set to dark grey)</i>
</center>
<p>
<div style = "background-color: darkgray"><b>AMBIENT LIGHT SHADER</b></div>
<p>
Here's the shader for the ambient light:
<pre>
lights/ambientLight_nofall
{
	ambientLight

	lightFalloffImage	_white

	{
		map _white
		colored
		zeroClamp
	}
}
</pre>
<div style = "background-color: darkgray"><b>OUTRO</b></div>
<p>
You can extract .map files from q4base/pak002.pk4 with WinZip and load those files in the editor. Look through the maps to see Raven's lighting techniques.</ul><h1 id="1188" name="1188" class="book-h2">Quake 4 LD FAQ</h1><ul><h3>Quake 4 Level Design FAQ</h3>
by Method
<p>
<div style = "background-color: darkgray; font-weight: bold">GENERAL</div>
<p>
<b>Q:</b> Where is Q4Radiant and how do I load it?<br>
<b>A:</b> The editor is inside Quake 4 executable. You can load it by typing <i>'editor'</i> in console. Make sure to switch into windowed mode before running the editor by hitting Enter+Alt. Also you might want to lower the brightness by typing <i>'r_brightness 1'</i> in console.
<p>
<b>Q:</b> How do I pull down the console?<br>
<b>A:</b> You can pull down the console by hitting Ctrl-Alt-~ and typing <i>'seta com_allowConsole 1'</i>, so in the future you could use it simply by hitting ~ key. 
<p>
<div style = "background-color: darkgray; font-weight: bold">TECHNICAL</div>
<p>
<b>Q:</b> How to turn the green light outlines when previewing level in the editor?<br>
<b>A:</b> Type <i>'g_editEntityMode 0'</i> in console.
<p>
<b>Q:</b> What does 'Detail Level' in Light Editor does?<br>
<b>A:</b> It could speed up low end PCs by not rendering some lights depending on their detail level number.
<p>
<b>Q:</b> What are some of the new features in Q4Radiant?<br>
<b>A:</b> You can set origin for entities by right clicking the top down view and selecting Set Origin. That saves a lot of time, instead of doing it manually through Entity Inspector.
<p>
<b>Q:</b> What about new things for the entities?<br>
<b>A:</b> You can freely group existing entities by turning them into func_static, without getting 'Invalid Entity' message.
<p>
<div style = "background-color: darkgray; font-weight: bold">BUGS</div>
<p>
<b>Q:</b> How come when I compile multiple times in the editor and spawnserver in F2 window some of my work disappears?<br>
<b>A:</b> It's a known bug. To test map in F2 window, use <i>'devmap'</i> command instead of spawnserver. You can also adjust the speed by typing <i>'pm_speed 320'</i>, which will feel just like in MP. If you lost some of your work and autosave file is outdated, then you can look for .tmp file and rename it to .map, which will have your latest work in it.
<p>
If you have a question that hasn't been answered yet, please register and post in our <a href = "http://forums.gamedesign.net/viewforum.php?f=83">Quake 4 Forum</a>.</ul><h1 id="1148" name="1148" class="book-h2">Quake 4 MP - QuakeCon 2005</h1><ul><h3>Quake 4 MP - QuakeCon 2005</h3>
by Method
<p>

<div style = "background-color:darkgray; font-weight:bold">INTRO</div>
<p>
I've seen enough footage to say that Quake 4 indeed does have a Quake 3 feeling and movement to it. Most of the people who played MP didn't try to do any jumps, so it's unknown at this time if Q4 will feature trickjumps such as doublejump, strafejump, etc. It looks nice and moves smooth, though I'm sure QuakeCon has high-end PCs that run Q4.
<p>

<div style = "background-color:darkgray; font-weight:bold">HUD</div>
<p>
HUD (Heads Up Display) is self explanatory, but I decided to place a brief description of each item anyways.
<p>
<center>
<img src = "content/quake4/q4_hud.jpg">
<p>
<i>Q4DM1 - The Fragging Yard</i>
</center>
<p>

<div style = "background-color:darkgray; font-weight:bold">WEAPONS</div>
<p>
Majority of people who played Q4 MP enjoyed the weapons and the only criticism was that RL (Rocket launcher) might be too powerful.
<p>
<center>
<img src = "content/quake4/q4_weapons.jpg">
</center>
<p>
1. Gauntlet<br>
2. Machinegun<br>
3. HyperBlaster<br>
4. Grenade Launcher<br>
5. Nailgun<br>
6. Rocket Launcher<br>
7. Railgun
<p>

<div style = "background-color:darkgray; font-weight:bold">MULTIPLAYER MENU</div>
<p>
MP Menu had these options:
<pre>
- MAIN MENU
- JOIN GAME
- PLAYERS
- VOTE
- SETTINGS
	+ Name
	+ Clan Tag
	+ Model
	+ Data Rate
	+ PunkBuster
- SERVER INFO
- ADMIN
</pre>

Currently Q4 has a good selection of models, which players can use. Such as members of Rhino squad, Stroggified Kane, Stroggs and various Corpses.
<p>

<div style = "background-color:darkgray; font-weight:bold">OUTRO</div>
<p>
The game looks very promising. It has Doom 3 graphics and Quake 3 MP. Keep up the good work id and Raven!
<p></ul><h1 id="532" name="532" class="book-h1">3D Modeling</h1><ul><!--Submitted by pepper, organised by G.A.R.D-->
<h3>3D Modeling</h3>
<p>Learn how to create models.</p>
<!--break--></ul><h1 id="1049" name="1049" class="book-h2">G-max</h1><ul><br />
</ul><h1 id="1050" name="1050" class="book-h3">G-max, Things you need to know.</h1><ul><!-- by Pepper (casdewit@xs4all.nl)  2004 -->

<h3>GMAX</h3>
<blockquote>
Getting Started: A Guide to Basic  Modeling - <a href="mailto:casdewit@xs4all.nl"> Pepper</a>
</blockquote>
<br><br>

<p>In this tutorial an introduction to <a href="http://www4.discreet.com/gmax/"><b>G-Max</b></a> is provided, an a beginners guide to getting started modeling</p>

<hr noshade color="black">

<p><b>What is G-Max?</b> The best way to explain it is to ask Discreet, the creatos of G-max, here is what they say:</p>

<p><i>"Gmax® is a free 3D modeling and animation tool based on Discreet's award-winning 3ds max® software. Built for gamers to create their own in-game content for gmax ready games, a gamer can produce everything from characters and vehicles to landscapes and props. Not only do you get to customize your games, you also learn 3D design within a professional-level tool.</i></p>

<p>Or put simply (in my words), G-Max is a stripped down version of 3dstudiomax. You wont be able to render scenes, create movies etc. But it is a very powerfull modeling tool, if used properly. And i will explain how the need-to-know things work. Before i start to tell what everthing does you need a registration key to be able to use G-max. Get it here: <a href="http://www4.discreet.com/gmax/"><b>G-Max</b></a>.</p>

<p>You will need to register your copy of G-Max, but dont worry! Its free!.</p>

<p>In the rest of the tutorial i will asume you have a fully working copy of the latest version of G-Max on your computer.</p>

<p>As soon as you open up G-Max you might be overwhelmed by the complex interface, this is also one of the reasons people think it has a very high learning curve. In reality it isnt  that hard, just learn the basic functions first, and where you want you can fiddle around with the other tools to find out what they do.</p>

<p>Here is a list of the tool we will use. I wont go in-depth with the other tools, since discreet supplied a few dodgy tutorials with G-max that explain some of the other functions.</p>
<br>
Here is a picture of the default layout of G-max.<br>
<br>
<IMG SRC="http://img127.echo.cx/img127/4884/overview5ae.jpg" HEIGHT="650" WIDTH="1000">
<br>
Most of the things we will ignore, I'll explain the functions you need to know.<br>
<br>
<img src="http://img127.echo.cx/img127/9075/viewtools5eb.jpg"><br>
With these buttons you control the <b>viewport</b>(view your working in),from left to right:<br>
<br>
red: You use this to zoom in, click and drag in a viewport and it will zoom in.<br>
green: Use this to move the view, click and drag in a viewport and it will move.<br>
bleu: In your active viewport a yellow circle will appear, click and drag in the circle and you can move the view.<br>
<br>
Next: The <b>creation tab</b>, in this box we will create objects. Most of the tools you will use are located there. I will only explain the tools we will use.<br>
<br>
<b>Creation tab</b><br>
<img src="http://img127.echo.cx/img127/2720/creationtab4an.jpg"><br>
<br>
<b>Object type</b>:In this box you select the primitives you want to create, a primitive is a basic shape, a box, cone or plane. Click on the box and drag in the viewport of your chose. If you did everything right you created a box!<br>
See below for a small explenation in pictures.<br>
<br>
<b>Name and color</b>: In this box you specify the colour in the viewport and the object name, if you leave it blank it will name a box box1, box2 etc.<br>
<br>
A small explenation of creating objects:<br>
<br>
<img src="http://img127.echo.cx/img127/7494/box12qz.jpg"><br>
<br>
<img src="http://img127.echo.cx/img127/7857/box22wu.jpg"><br>
<br>
<img src="http://img127.echo.cx/img127/8028/box37iq.jpg"><br>
<br>
Now that was easy isnt it?<br>
<br>
Lets make out standard house out of it. We will do this by using a edit mesh, there are serval ways to go around editing primitives in G-max but il explain my personal favorite.<br>
<br>
Remember our creation tab? With the box still selected move on to the second tab, this is how it looks when selected:<br>
<br>
<img src="http://img186.echo.cx/img186/3276/modifietab4yr.jpg"><br>
<br>
As you can see there is not much to do in there yet, that is because we need to convert our primitive to a editeble model, i prefer using a <b>edit mesh</b>, here is how we do that:<br>
<br>
1. Still in the <b>modify tab</b> you should see a box with the words <b>modifier list</b> in it and a small arrow pointing down on the right of it.<br>
Click on the arrow, a list with all sort of words appears, these words are modifiers. We use this to edit a primitive in a way we enjoy.<br>
Scroll down up to <b>edit mesh</b>. And click on it.<br>
<br>
If you did everything as i told then there should be a whole list of new options, i wont explain all of the option.<br>
<br>
<img src="http://img176.echo.cx/img176/4441/editmesh1fz.jpg"><br>
<br>
This is what you should get, i always minimalize the selection box, that is the upper one in the list. To select a vertex or polygon i always use the <b>editmesh</b> properties, you can open those by clicking on the small + in front of the <b>edit mesh</b>.<br>
<br>
<img src="http://img176.echo.cx/img176/5879/editmesh25bd.jpg"><br>
<br>
At first the words vertex , polygon and face may b confusing, but its quiet simple.
<br>
<b>polygon</b>:A polygon, also know as a triangle always consists of 3 points, the so called vertexes. Between these 3 points it will create a solid surface that is visible to the human eye.<br>
<br>
<b>face</b>: A face is the same as a polygon, except that a face is 3 or more vertexes and can have a unlimited amount of vertexes.<br>
<br>
<b>vertex</b>: a point in space, this defines the edge of a polygon/face.<br>
<br>
If this still confuse you i can help you out quikly.<br>
Back in G-max we go to the <b>perspective viewport</b>. Right click on the perspective word and a menu should pop-up.<br>
Scroll down to edged faces and click on it. Now we can see the edges of the polygons and faces.<br>
<br>
<img src="http://img294.echo.cx/img294/7629/perspective3rj.jpg"><br>
<br>
Back to the <b>edit mesh</b>, click on vertex. As soon as you click on it the viewport changed, it shows 4 bleu points on the outer edges of our box. This is what the vertexes are.<br>
<br>
But, i promised that we would create a house, so lets get on with it.<br>
<br>
In the edit mesh modifier select the face mode.<br>
In the viewport click on the top of the box, the edges of the selected face should turn red.<br>
<br>

We want a angled roof, so we need to extrude it, this is how we do it:
1. we will need to switch to the selection mode, do thos by clicking on the 4-way arrow on the top of your screen.<br>
2. Select the top polygon of your box.
3. In the edit geometry tab click on <b>extrude</b>.
4. Back in your viewport click and drag the select face, it should move up and create 5 new faces.<br>
<br>
Here is how i did it:<br>
<br>
<img src="http://img291.echo.cx/img291/7453/select5cb.jpg"><br>
<br>
<img src="http://img291.echo.cx/img291/9413/polygon9ko.jpg"><br>
<br>
<img src="http://img291.echo.cx/img291/5552/extrude7jt.jpg"><br>
<br>
All we need to do now is to make a angled roof of it. Here is how we are going to do that.<br>
<br>
Earlier i told you to go into polygon mode, now we are going to use vertex mode, in the same tab we used to select the polygon mode we can select the vertex mode, do that.<br>
<br>
We need to weld the top vertexes to create a roof. To weld go back to the <b>edit geometry</b> tab. Scroll down to weld, we will use the target weld, but 0,1 is much to small to reach the other vertex, most of the time i change this to 1000. select the first 2 of the upper vertexes to weld. You can select a vertex by dragging a box around it. To add something to your selection hold <b>control</b> and click, to remove from your selection repeat the step wiht <b>alt</b>. When you got the vertexes selected weld them, repeat these steos for the other end of the roof. Here are pictures to help you understand the welding:<br>
<br>
<img src="http://img284.echo.cx/img284/6682/weld16ez.jpg"><br>
<br>
<img src="http://img284.echo.cx/img284/7675/weldr7ib.jpg"><br>
<br>
Look!! A house!! But, with a bit of imagination you can do a lot more. watch this:<br>
<br>
<img src="http://img284.echo.cx/img284/9230/housee1yr.jpg"><br>
<br>
Here is how i did this, i selected the 2 roof parts, i extruded them, Then i select the new sides of the roof and extruded them again. Thats all!!

As most people you want to get your models into game, but discreet tryed to make it as hard as possible for people to get there models into the game if there isnt a game pack.

To find out wich games are supported by G-max look here:



</ul><h1 id="533" name="533" class="book-h2">Milkshape</h1><ul>All topics related to the use of Milkshape</ul><h1 id="674" name="674" class="book-h3">How To: Cut up blueprints for use in Milkshape</h1><ul>This tutorial wil tell you how to cut up your blueprint for use in a modelling program like <a href=http://www.swissquake.ch/chumbalum-soft/ms3d/index.html><b>Milkshape</b></a>, but you should be able to apply the same technique to any other modeling program like <b><a href=http://www4.discreet.com/3dsmax/><b>3d studiomax</b></a> </b>or<b> <a href=http://www4.discreet.com/gmax/><b>g-max</b></a></b>.<br>
<br><!--break-->
First, we need to choose a blueprint. There are a few sites where you can get them for free.<br>
<br>
Onno van Braam:<br>
<a href=http://www.onnovanbraam.com><b>http://www.onnovanbraam.com</b></a><br>
<br>
Suurland:<br>
<a href=http://www.suurland.com><b>http://www.suurland.com</b></a><br>
<br>
Pick one you like, I chose this f360 from onno van(atm this picture is down, it will be up asap) braam. <a href=><b>ferrari 360</b></a>.<br>
<br>
Next where going to need <b>irfanview</b> to cut the blueprint in 4 pieces.<br>
You can get it here:<br>
<b><a href=http://www.irfanview.com/>irfanview</a><br></b>
<br>
Save the blueprint of your choice to your computer and open it up in Irfanview.<br>
<br>
You can draw a box around the blueprint, make sure it fits exactly around one view of the car, ex.: the top of the car <b>ONLY</b>.<br>
After you have drawn a box around one of the sides of the car, go to:<br>
<i>Edit-Crop selection</i><br>
<img src="content/modeling/imagecutting/example1.jpg"><br>
<br>
Now you should ony have the top-view of the car.<br>
We need the width and height of the image. To do this go to:<br>
<i>Image-Resize Resample</i><br>
<br>
This window should pop-up:<br>
<img src="content/modeling/imagecutting/example2.jpg" ><br>
<br>
If you have done everything right there should be 2 boxes with width and height. Remember those numbers and save them in the name of the jpg/bmp.<br>
In my case that would be:<br>
f360_top_433x213.jpg<br>
<br>
Repeat the steps with all the views and save them with the name you want.<br>
<br>
You can close <b>Irfanview</b> now and open up <b>milkshape</b><br>
<br>
In <b>Milkshape</b> put your mouse in one of the viewports. Do a right-mouse click and move down to:<br>
<i>Choose background image</i><br>
<br>
Now you can pick your refrence image of the car.<br>
Remember to check for the right image. You can put in the width and height of the images in the box that pops up.<br>
<br>
Got any questions?? Post them in the <b><a href=http://forums.gamedesign.net/viewforum.php?f=46>forums</a></b></ul><h1 id="534" name="534" class="book-h3">How To: Prepare for your first model (Point Modeling)</h1><ul><!-- by Pepper (casdewit@xs4all.nl)  2004 -->

<h3>Milkshape</h3>
<blockquote>
Making and texturing your first Model - <a href="mailto:casdewit@xs4all.nl"> Pepper</a>
</blockquote>
<br><br>
<h3>Making and texturing your model</h3>

<p>This tutorial will show you the basics of modelling and if you follow everything right in this tutorial you will be able to produce a splendid looking Half-Life model that represents a Car.</p>

<hr noshade color="black">
<!--break-->

<p>We will need a few things for making a model. Obviously we need a modelling program, a picture editing program and some patience.</p>
<p>For the Modelling Program, I suggest <b>Milkshape</b><br>
You can get a 30 day free trial of Milkshape here: <a href="http://www.swissquake.ch/chumbalum-soft/">Chumbalum-soft</a></p>
<p>For the Picture editing program, the choice is large.<br>
You can use programs like Adobe Photoshop or Paint Shop Pro for the textures but you have to pay for them so I  recommend: <a href="http://www.thegimp.org"> TheGimp </a> and <a href="http://www.irfanview.com/"> IrfanView </a> for re-scaling and changing the format of images.</p>

<p>Once you have your Editing Suite we are ready to go.</p>

Don't forget to save your work regular

<p>Open up milkshape and you see a 4 lovely viewports just sitting there doing nothing.<br>
First we will need to change some things, go to <b>window</b>, click on it once, then go to <b>show viewport captation</b>.<br>
You should have a bar above all viewports with information about the grid size and the view axis.</p>
<center>
    <img border="0" width="241" src="content/half-life/modelling/imgs/viewport.jpg">
</center><br>

<center>
    <img border="0" width="200" src="content/half-life/modelling/imgs/tabs.jpg">
</center>
<br>

<p>I will explain what each function does.</p>
<blockquote>
<b>select</b>:<br>
With this function you can select the vertexes, faces groups and joints. One of the most used functions. This is all self explanatory.<br>
<b>move</b>:<br>
With this function you can move the faces vertexes groups and joints. First you have to select them.<br> 
<b>rotate</b>:<br>
With this tool you can rotate a face, group of vertex's joints or groups on the all the axis.<br>
<b>scale</b>:<br>
With this you can scale groups faces and groups of joints.<br>
<b>vertex</b>:<br>
This will create a vertex if you click in one of the views (viewports). One of the important things to know is that you can not select anything in 3d view.<br>
<b>face</b>:<br> 
This function will create a face between 3 specified vertexes. <b>ALWAYS</b> make those counter-clockwise. (turning a circle to the left)<br>
<b>sphere</b>,<b> geosphere</b>,<b> box</b>,<b> cylinder</b>:<br> 
These are all the basic objects. We will not use this much. I personally prefer working with plane vertexes but some people model a whole weapon from one box.<br>
<b>extrude</b>:<br> 
This will extrude the selected face. Its pushing out a new face of an already existing one.<br>
<b>joint</b>:<br>
This will create the so called joint. Each and every model needs to have at least one joint, this joint defines the centre of the model. This is the point that the Model will be aligned in Hammer. These joints are also used to define the animation of a model.<br>
</blockquote>

<p>Now we have the tools we need to get started.</p>


<p>I took the liberty of extracting the textures from the Half-Life wad. If you want to do it yourself, search for textures with <font color=red> trk2 </font> in the name.<br>
I converted all textures to a texture format which Milkshape uses to compile the models and are used by the Half-Life engine.<br>
The format you need is an 8 bit bmp, you can convert these with <font color=orange>Irfanview</font> to the right format. I am not going to cover texture conversion in this tutorial since most of you know how to convert a image to the right format and scale. If you still don't get it, I have already made the textures and they are available in the download. I also included one .jpg file and  it's called: <font color=red>trk2_side.jpg</font></p>

<p>Next, open up Milkshape. And go to the upper-right viewport. Right mouse click in the view port and choose background image. Go to the .jpg image I included in the zip.<br>
Now we have our viewport set-up we can start adding the vertexes. Go to the model tab and select vertex.<br>
Look at the picture below, it shows you how it added the vertexes. Although it's a smart thing to do it on your own way to develop your own style.<br>
Use this picture as a reference image for the model.</p>
<center>
    <img border="0" width="404" src="content/half-life/modelling/imgs/vertexes.jpg">
</center><br>

<p>Once you have outlined your reference picture with the vertexes you can make the faces between them.<br>
<b><i>ALWAYS MAKE A FACE COUNTER-CLOCKWISE</i></b>. If you don't you will get a backfaces which are not shown in-game and which will look as if there is a hole in you model.<br>
A face always consists of 3 vertexes, go to the face tool in the models tab and select 1 vertex to start with, then move to the second one counter-clockwise.<br>
Select the last and third vertex and you should have a face. If you did it right it should show up in the 3d view as a grey coloured face and the other side should be black.<br>
Finish the total model with faces, as shown in the image above. Then select all of the faces with the select tool. <br>
Make sure you set it on face, and then you need to extrude the model. I do this because I believe there are not enough good views of the car we are making.<br>
So you now have a flat looking model but its getting the shape of a car?? good. <br>
Select the upper vertexes which forms the side of the roof, I have included a picture of it below.<br>
To select on the front vertexes and those behind it you need to de-select them, hold shift and draw a box around those vertexes you want to de-select with the right mouse button.<br>
Now you have done this you should be able to move the upper-roof vertexes back so you get a angled side of the car. Do the same with the hood and the bottom of the car, don't be afraid to experiment, you can always undo any mistakes you make.</p>

<p> Now for the wheel cases. Select the faces from ABOVE wheelcases. Go to extrude again, but now drag it back and delete the faces from the bottom of the car which would block the wheels.<br>
We will need to make a few faces on the under side of the model to make sure it is all closed, because when we extrude the wheels back we created a new gap.<br>
Select all the faces of the models and go to edit/duplicate selection. Then go to vertexes/mirror left< >right<br>
Hey, look at that we got a real car!!</p>

<p>A real car without wheels, that's ok, because we first need to texture it. Before we do that we need to divide the models in useful groups.<br>
Select the whole model from the side.<br>
Then de-select all the things in a front-back view which do not belong to the side of the car but to the roof or windshield.<br>
Then go to the groups tab with the model selected. Now press regroup, and go down to the rename tab and fill in: <font color=red>side</font> and press rename. Now your group is renamed and regrouped.<br>
Press the hide button a little bit above the rename button and voila, your sides are hidden. Now you can easily select the roof, back, windshield, front, hood, and the bottom. <br>
In the bottom group I included the wheelcases because there also black so why should we give them a different group??.<br>
The next bit is the bit I really like, we are going to give our model a really nice paint job. As you can see in the groups tab  there are no materials assigned.<br>
Go to the materials tab and click on new.<br>
Do this 6 times.<br>
Rename all those materials into logical names like side, hood, top ,etc. Then you can assign a texture to your material by clicking on the new button, the upper one because you should see 2 of them. Now for the side you pick the <font color=red>trk2_side.bmp</font> its important to pick the bmp version because that one is supported by the Half-Life game engine.</p>
<br>
<b>materials are the textured used on a model</b>
<br>
<br>
Next, you need to assign all the materials to a group, this can be used as much as you want you can use a material for more then 1 group<br>
First press control+shift+h to unhide all of your faces and groups.<br>
Select the side group by going to the groups tab. When your there go to select. Now we have our side selected.
Go back to the materials tab and select the side material, at the bottom of the tab you will find a button to assign
a material, click it. Your material is assigned. Do this with all the groups. As you can see the textures are not aligned at all and do not look good yet. To solve this we will need to align the textures.<br>
Select your group, in my case the side group and press control+t.<br>
A new window opens with the name: texture coordinate editor. Woa, there is our texture again. At the right side you see several tabs again, all self explanatory.<br>
At the first drop down menu select the group side. At the second select the remap side, that is in this case left or our right, but when you do a front of a car it is obviously the front.</p>

<p>With the Group selected and remap site press the remap button.<br>
OOOOH, our model is getting placed into the texture.<br>
You will need to match up your model with the texture show in the picture. When you switch back to the 3d view and click your right mouse button in it and select textured then you should see your model with a texture!!!
Repeat this step to all the groups. When you have done this the only thing we need are wheels.<br>
We will make them by making a cylinder in the model tabs with 1 stack and 12 or 8 sides, pick for yourself.<br>
You need to rotate it, Use the rotate button in the models tab and rotate it 90 degree on the x axis.<br>
Now duplicate your wheel with the duplicate selection tool and move it to the other wheelcase. Then select your first wheel, it should be in the groups tab as cylinder1.<br>
Duplicate it again, and select mirror left right. The materials for the side of the wheel is the trk2_side texture and for the tread of the wheel it is trk2_tread. You should be able to group it by yourself now.</p>

<p>The very lasy thing to do is to make a 'bone' for the model.<br>
Go to the tab models and select joint. Make it at the most bottom point of the wheel. We only need one.<br>
We need to assign all of our vertexes to our bone/joint so select all the vertexes and go to the joint tab. Then select assign because it should be automatically on the joint you created.<br>
Now all of your vertexes/groups/faces are assigned to the bone/joint.<br>
To compile our model we should place all the textures in the same map. I always keep it together so that is not a problem.<br>
Go to file/export/half-life smd and save it as hlcar_reference.smd.<br>
Then it will ask you to save it as a sequence or a reference, pick reference.<br>
The final thing to do is to save it as a sequence. repeat the last steps and save it as idle.smd and a sequence.<br>
The model should be ready to be compiled. Save your work.<br>
Now go to tools/half-life/generate qc file.<br>
The qc file will be used to grab the animations and textures for your model.<br>
To set it up I will place the 2 qc files I used in the download. It should make it clear how to set it up.<br>
To edit the qc file go to:tools/half-life edit qc file.</p>
<blockquote>
<b>original qc file</b>:<br>
// Output .MDL<br>
$modelname "C:\Mijn documenten\Mijn afbeeldingen\hl car\hlcar2.mdl"<br>
<br>
// Directory of .SMD<br>
$cd "\Mijn documenten\Mijn afbeeldingen\hl car\"<br>
<br>
// Directory of .BMP<br>
$cdtexture "\Mijn documenten\Mijn afbeeldingen\hl car\"<br>
$cliptotextures<br>
<br>
// Write textures into a ???T.mdl<br>
//$externaltextures<br>
<br>
$scale 1.0<br>
<br>
// bodygroups: use relative path from $cd<br>
$bodygroup body<br>
{<br>
studio "./reference"<br>
}<br>
<br>
// sequences: all sequences are in $cd<br>
$sequence seq-name "sequence" loop fps 30 ACT_IDLE 1<br>
<br>
</blockquote>


<p><b>My qc file to compile the model</b></p>:


<blockquote>
// Output .MDL<br>
$modelname "C:\Mijn documenten\Mijn afbeeldingen\hl car\hlcar.mdl"<br>
<br>
// Directory of .SMD<br>
$cd "\Mijn documenten\Mijn afbeeldingen\hl car\"<br>
<br>
// Directory of .BMP<br>
$cdtexture "\Mijn documenten\Mijn afbeeldingen\hl car\"<br>
$cliptotextures<br>
<br>
// Write textures into a ???T.mdl<br>
//$externaltextures<br>
<br>
$scale 1.0<br>
<br>
// bodygroups: use relative path from $cd<br>
$bodygroup body<br>
{<br>
studio "hlcar_reference"<br>
}<br>
<br>
// sequences: all sequences are in $cd<br>
$sequence seq-name "idle" loop fps 30 ACT_IDLE 1<br>
<br>
</blockquote>

<p>This should be self explanatory. When your done editing your qc file you need to save it.</p>

<p>When everything is set up right and ALL your files are in the same folder you should compile your model.<br>
Do this by going to tools/half-life/compile qc file. When you have done everything right it should generate a .mdl file in the selected map. When your texture size/format is not good milkshape WILL crash.</p>

<p>This should cover most of the basic things of compiling a Half-Life model and texturing it.<br>

If you have questions feel free to ask them in the forums.<br>

<p><i>The textures are copyrighted by Valve. 1998-2004 feel free to look at the model and mess with it I included in the <a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/content/half-life/modelling/modeling.zip">Modeling Zip</a>. It should give you some direction how to make it all.</i></p>
</ul><h1 id="1001" name="1001" class="book-h2">Softimage: XSI</h1><ul><p>Softimage: XSI is 'the' tool for modelling in Half-Life2<br />
These level design articles are specifically written to give you a better understanding of 'how' it all works.</p>
</ul><h1 id="975" name="975" class="book-h3">Symmetrical Editing With Softimage XSI</h1><ul><p>Symmetrical modeling can save a lot of time when working on most objects, be it humans or cars. After much digging, I would like to share how this is done.</p>
<p>Modeling certain parts, such as arms, is fairly easy. You simply make your arm, then you edit->duplicate/instantiate->Duplicate Symmetry. This will mirror the arm onto the other side of the specified plane, the default being Y-Z. This is great for pieces that will not be connected with each other, but for pieces like the chest/torso of a human, it would be helpful to work on both pieces at once: making changes to one side and having them reflected in real time on the other.</p>
<p>This is the real key in working with symmetrical models. Start with your primitive, the shape from which the rest of the torso will take shape. Make sure the primitive is to the left or right of the Y-Z plane. Then alt-rightClick the object and go to "symmetrize polygons." This will mirror the selected polygon across the Y-Z plane. You now have the object mirrored as a single object, but we aren't quite done yet.</p>
<p>In order to make the changes made to one part of the object reflect on the other, you need to create something called a "symmetry map." With your new double-object selected, look to the left hand of the screen under "get". Click property, then "symmetry map." This will pop up a dialog box with a bunch of options (that you're free to explore on your own). Now close the dialog box and look to the right of the screen, under the "transform" header. There is a button that says "sym"; make sure this is depressed. Now any selection or transformation done to one side of our symmetrized object will be reflected on its corresponding part on the other side of the Y-Z plane.</p>
<p>Work away on your mesh till you are pretty much done with symmetrical stuff. Now that we have a symmetrical mesh of the torso (or whatever other symmetrical object you happen to modeling), we may wish to add some non-symmetrical elements. In order to return the mesh to a non-symmetrical editing environment, you simply click the "sym" button on the right hand side of the screen again. This causes XSI to ignore symmetry maps.</p>
<p>The final step is to weld to two halves together, which is a simple matter of selecting all of the points on one side that will connect to the other side (this also selects all the points on the other side that will connect to this side), press M, then hold alt and drag the points onto each other. This will weld them together, forming a nice, single, solid mesh. Make sure that the "sym" button is not depressed for this step (you should have turned off symmetry in the last step, anyway), as XSI gets kinda weird when snapping points that move symmetrically. The point moves X units over to snap to the other point, only to have that point move X units in the other direction. It makes a nice vibrating effect, but it's not very useful.</p>
<p>In conclusion, XSI offers modelers the ability to create half an object while XSI automatically creates the other half. Given the amount of objects in our world that are symmetrical, this is a tremendous advantage, not to mention necessary for some objects, like faces. Though the process is not intuitive, once you know how to get it started, it should be a fairly easy technique and a frequent addition to your modeling skill set. </p></ul><h1 id="1002" name="1002" class="book-h3">Creating a 'prop_physics entity'</h1><ul><!--Uploaded on Behalf of yesukai by Andy - Mar 05-->
<h3>Creating a 'prop_physics entity'</h3>
<p style="text-align: justify;">A big part about mapping for Half-Life 2 (and Source games in general) is the use of props to spice up a level while allowing the engine to remove the detail to preserve performance. I will guide you through the creation of a prop_physics entity, which may also be used as a prop_static entity. Anything you see in grey boxes is an explanation on why something is the way it is; you can safely ignore them if you don't care why. We are going to pick a nice simple object to start with: a can of Spam.</p>
<h4>Modeling</h4>
<p style="text-align: justify;">Start up XSI. First we are going to change the backface settings of XSI to make it more Source friendly. Go to <span style="color: rgb(0, 0, 128);">View</span> -&gt; <span style="color: rgb(0, 0, 128);">Display Options (All Cameras)</span> . Then click the  <span style="color: rgb(0, 0, 128);">Performance</span> tab, and select <span style="color: rgb(0, 0, 128);">backface culling</span>.</p>
            <table bgcolor="#c0c0c0" border="0" cellpadding="5" cellspacing="0" width="100%">
               <tbody>
                  <tr>
                     <td>
                        <p>Why? Because the Source engine, like most 3D games, does not display backfaces. With backface culling turned off in XSI (the default), you can't easily see which side of a polygon is the backface and which isn't. You could accidentally make your entire model inside out. It's safer just to have XSI display models the same way the Source engine will.</p>
                     </td>
                  </tr>
               </tbody>
            </table>
<br />
<p style="text-align: justify;"><img src="content/modeling/xsi_2/subdivision.gif" style="padding: 5px; float: right;" width="300" height="300" alt="Subdivision" title="Subdivision" /> With that set, we are ready to start building our model. <br />
Go to <span style="color: rgb(0, 0, 128);"> Get </span> -&gt; <span style="color: rgb(0, 0, 128);"> Primitive </span> -&gt; <span style="color: rgb(0, 0, 128);"> Polygon Mesh </span> -&gt; <span style="color: rgb(0, 0, 128);"> Cube </span>.</p>
<p>This will create a cube on the grid. Now, a can of Spam is not quite a square, it's more of a rounded rectangle. To make the cube rounded, we need to add some more edges to the sides. Press <span style="color: rgb(0, 0, 128);">I</span> to use the <span style="color: rgb(0, 0, 128);"> Edge Select Tool </span> , then click the top and bottom edges of one side while holding <span style="color: rgb(0, 0, 128);"> CTRL</span>. They will both show red once they have been selected. Now, hit <span style="color: rgb(0, 0, 128);"> Shift-D </span> to bring up the <span style="color: rgb(0, 0, 128);"> Subdivide Edge Op </span> dialog. By default, the subdivision amount is set to <span style="color: rgb(0, 0, 128);"> 2</span>, this means what was once one piece (a square) is now two pieces (two rectangles). This really will not make the edges of the can look that round, so let's increase it. A value of <span style="color: rgb(0, 0, 128);"> 5 </span> works well here, as it gives us one polygon in the middle to use as the side of the can, then two edges to use for each corner. After splitting the edges, select the top and bottom edges of the opposite side of the can, and repeat the subdivision process. </p>
<p>&nbsp;</p>
<p style="text-align: justify;"><img src="content/modeling/xsi_2/roundededges.gif" style="padding: 5px; float: left;" width="300" height="321" alt="Rounded Edges" title="Rounded Edges" /> With the sides divided up, we are able to move the points out to make for a better looking can. <br />
Press <span style="color: rgb(0, 0, 128);"> T </span> for point selection mode, then drag the selection box over all of the model's points. As the can is symmetrical, it would be in our best interest to move both side's points out the same amount and at the same time. To do this, we use the scale tool. Press <span style="color: rgb(0, 0, 128);"> X </span> to use the scale tool. From the any viewport, click and hold the axis bar that points away from the center in the direction of the sides of the can. Drag the mouse to the side, and the can gets wider on that axis, all points moving away from each other on that axis; you now have a rectangular can. To make the can rounded, select only the four inner points on the sides, and scale them on that axis again, just a bit farther outward. Select the two inner-most points on each side and push those out even farther. You will probably have to use the &quot;Translate Tool&quot; (<span style="color: rgb(0, 0, 128);"> V </span>) to move the points around to make for a better shape, as shown in the image.</p>
<p>&nbsp;</p>
<p style="text-align: justify;"><img src="content/modeling/xsi_2/rotoscopy.gif" style="padding: 5px; float: right;" width="300" height="290" alt="rotoscopy" title="rotoscopy" />Now that we have the basic shape of the can, we need to make sure it's proportional to a real can of Spam. This is where rotoscopy comes in handy. Rotoscopy is pretty much the process of putting a picture behind your object to help you model it. A good picture to use for this was found off of Google Image Search, and can be found <a href="this_is_not_spam.png"> here </a>. In the front view, go to the part that says <span style="color: rgb(0, 0, 128);"> wireframe </span>, then go down the menu to <span style="color: rgb(0, 0, 128);"> rotoscope </span>. In the dialog box that pops open, Click <span style="color: rgb(0, 0, 128);"> New </span>and navigate to your reference shot of a can of Spam. Scale the model until it is approximately the same size as the can of Spam.<br />
This next step is extremely important:  go to <span style="color: rgb(0, 0, 128);">transform</span> -&gt; <span style="color: rgb(0, 0, 128);">Set Neutral Pose</span> then go to <span style="color: rgb(0, 0, 128);">transform</span> -&gt; <span style="color: rgb(0, 0, 128);">Freeze All Transforms</span>. </p>
<p>&nbsp;</p>
            <table bgcolor="#c0c0c0" border="0" cellpadding="5" cellspacing="0" width="100%">
               <tbody>
                  <tr>
                     <td>
                        <p>Why? XSI stores the points as being where they were created. All transformations used on them are just numbers that are applied to these points. When you export your SMD later, it will export where XSI says the points are, but not the translations. This means that your exported model would be the square you started with. By freezing the transformations, you are telling XSI that the points current position (with transformations applied) should be its starting position. Thus, it will export properly.</p>
                     </td>
                  </tr>
               </tbody>
            </table>
<br />
<p>The basic model should now be done.</p>
<p>&nbsp;</p>
<h4>Texturing</h4>
<p style="text-align: justify;"> <img src="content/modeling/xsi_2/texturing.gif" style="padding: 5px; float: right;" width="300" height="450" alt="texturing" title="texturing" /> Texturing is the process of assigning texture coordinates to a model. The goal is to get all the polygons arranged on top of a texture while minimizing the amount of distortion. To do this, first we go to <span style="color: rgb(0, 0, 128);"> Get </span> -&gt; <span style="color: rgb(0, 0, 128);"> Property </span> -&gt; <span style="color: rgb(0, 0, 128);"> Texture Projection </span> -&gt; <span style="color: rgb(0, 0, 128);"> Cubic </span> . This will lay the polygons flat onto the texture projection. What decides which polygons go together is the direction they face. In this case, the front, back, left side, right side, bottom, and top will all be separate pieces or &quot;islands&quot; on the projection. To see what the texture projection looks like or to edit it, you need to click the view (such as <span style="color: rgb(0, 0, 128);">top</span>) on one of you viewports, and select <span style="color: rgb(0, 0, 128);"> Texture Editor </span> from the menu. This changes that viewport to the texture editor. You should see the Spam picture we used earlier covered with yellow lines and red shading. First thing to do is to change that picture of Spam to a more suitable background for texturing. <a href="http://www.valve-erc.com/srcsdk/models/images/checkerboard.bmp">This</a> is the texture provided by valve, it is a checkerboard pattern, which is helpful in determining the amount of distortion. Download that image, then click <span style="color: rgb(0, 0, 128);"> Clips </span> -&gt; <span style="color: rgb(0, 0, 128);"> Import Clips </span> in the texture editor. Select the checkerboard image you just downloaded and hit OK. This changes the background image in the texture editor to the checkerboard. All of the flattened pieces of our image are stacked on top of each other: we must remedy this. Press <span style="color: rgb(0, 0, 128);"> I </span> to turn on <span style="color: rgb(0, 0, 128);"> island select </span> . In your camera (3D) view, press <span style="color: rgb(0, 0, 128);"> U </span> to enter <span style="color: rgb(0, 0, 128);"> Polygon Select Mode </span> . Holding <span style="color: rgb(0, 0, 128);"> CTRL </span> , select the three polygons that make up the front of our can. They will be selected in the texture editor as well. Press <span style="color: rgb(0, 0, 128);"> V </span> with the mouse in the texture editor to enter translate mode, and then click-drag to move the island for the front of the Spam to the side. Do the same with the back, sides, top, and bottom of the can. It may be necessary to pan/zoom the view. This is done by pressing <span style="color: rgb(0, 0, 128);"> Z </span> in the texture editor.</p>
<p>&nbsp;</p>
<p style="text-align: justify;"><img src="content/modeling/xsi_2/clip.gif" style="padding: 5px; float: left;" width="300" height="304" alt="clip" title="clip" /> Once you have all the islands pulled out, you need to resize each to get rid of distortion. First, change your 3D/Camera view to <span style="color: rgb(0, 0, 128);"> textured </span> so you can see your changes. Using the Scale tool, <span style="color: rgb(0, 0, 128);"> X </span> in the texture editor, resize each piece along whatever axis is necessary to get the checkerboard's boxes to be square instead of rectangular. After you do this for each island, move them into a close as a square as you can, then select them all and scale them so that they all fit inside your square checkerboard clip.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
            <table bgcolor="#c0c0c0" border="0" cellpadding="5" cellspacing="0" width="100%">
               <tbody>
                  <tr>
                     <td>
                      <p>Why? Texture coordinates are stored as a UV value, from 0,0 to 1,1 on the U and V axis. The clip represents this area, with the top left being 0,0 and the bottom right being 1,1.</p>
                     </td>
                  </tr>
               </tbody>
            </table>
<br />
<p>You have now assigned every surface on your model a &quot;piece&quot; of the texture. Click the maximize icon on the top right of the texture editor. Use the pan/zoom tool (Z) to position the clip in the center to make it as big as possible while still being able to see the entire clip. Press <span style="color: rgb(0, 0, 128);">Print Screen</span> on your keyboard, then load up your favorite editing program (from here on in: Photoshop) and create a new image/paste the screenshot of your desktop into the program. Using the <span style="color: rgb(0, 0, 128);">Crop</span> tool, make yourself an image of only the clip area with the islands you arranged in it. Check to make sure the image is square with <span style="color: rgb(0, 0, 128);">Image</span> -&gt; <span style="color: rgb(0, 0, 128);">Image Size</span> . Now we have the texture to work on. </p>
<p style="text-align: justify;"><img src="content/modeling/xsi_2/skin.gif" style="padding: 5px; float: right;" width="256" height="256" alt="skin" title="skin" /> Creating the texture is pretty much just a process of coloring in the islands with whatever you want that particular set of polygons to look like. I used <a href="http://www.deskpicture.com/DPs/Miscellaneous/spam.jpg">this</a> image of Spam as a base, by copy/pasting it into my texture and resizing it to fit inside the lines that define the &quot;front&quot; polygon. I then used the Eyedropper tool to select the blue color from the image, and painted in the rest of the sides with blue. A cool thing here is that your preschool teacher lied to you. It's perfectly OK to color outside the lines; anything outside the lines isn't assigned to a polygon and hence will not be viewed. I added some text that is too small to read on the &quot;back&quot; island, and colored the top and bottom with a gold color. Of course, how you design you skin and how much detail you put into is entirely up to you. Once you have the skin done, resize it. For something as trivial as a can of Spam, I resized the texture to 256x256, though for more detailed models you may need more pixels. Remember though, texture size affects the render speed in game, so don't use the largest texture size available just because you can. Save the texture and go back to XSI.</p>
<p style="text-align: justify;">All textures in Half-Life 2/Source need to be in VTF format, so we will run the texture through <a href="http://www.valve-erc.com/srcsdk/Materials/materials_vtex_cli.html">VTEX</a> and place the resulting file in <span style="color: rgb(0, 0, 128);">half-life 2\<span></span> hl2\ <span></span> materials\<span></span> models\ <span></span> spam </span>. We also need to create a VMT file so that the engine knows what to do with this texture. Using notepad, create a file called  <span style="color: rgb(0, 0, 128);">spam.VMT</span> that contains this:</p>
<p>&nbsp;</p>
<p style="font-weight: bold; font-family: Courier New;">&quot;VertexLitGeneric&quot;<br />
{<br />
     &quot;$baseTexture&quot; &quot;models/spam/spam&quot;<br />
     &quot;$model&quot; 1<br />
}
</p>
<p>&nbsp;</p>
<p>This lets the engine know where the texture is relative to the materials directory and that it will be used for a model.</p>
<p style="text-align: justify;">After that little field trip, we are back in XSI. Remember the <span style="color: rgb(0, 0, 128);">Clip</span> button in the texture browser? Click it again, and select <span style="color: rgb(0, 0, 128);">Import Clip</span> again. Browse to your texture, and hit OK. You should now see your islands lined up with your skins in the texture editor, and a textured model in the 3D/Camera view. But wait, before you go jumping for joy, you need to (semi)permanently affix the texture to your model. Press <span style="color: rgb(0, 0, 128);">3</span> to change XSI to <span style="color: rgb(0, 0, 128);">render</span> mode. Go to <span style="color: rgb(0, 0, 128);">Get</span> -&gt; <span style="color: rgb(0, 0, 128);">material</span> -&gt; <span style="color: rgb(0, 0, 128);">phong</span>. In the dialog box that pops up, click the little wrench icon across from <span style="color: rgb(0, 0, 128);">color</span>, then go down the menu to <span style="color: rgb(0, 0, 128);">clips</span> and select you texture. Your object is now textured.</p>
<p>&nbsp;</p>
<h4>Bones and Exporting</h4>
<p style="text-align: justify;"><img src="content/modeling/xsi_2/bone.gif" style="padding: 5px; float: right;" width="256" height="197" alt="bone" title="bone" /> The prop needs at least one bone, as far as I'm aware, so, we're going to give it one. Press <span style="color: rgb(0, 0, 128);">2</span> to enter animation mode in XSI, then go to <span style="color: rgb(0, 0, 128);">create</span> -&gt; <span style="color: rgb(0, 0, 128);">skeleton</span> -&gt; <span style="color: rgb(0, 0, 128);">Draw 2D Chain</span>. In one of your 2D views, click twice inside the can of Spam do draw a bone. Right click to stop drawing the bone (you only need one), then select your can. Go to <span style="color: rgb(0, 0, 128);">Deform</span> -&gt; <span style="color: rgb(0, 0, 128);">Envelope</span> -&gt; <span style="color: rgb(0, 0, 128);">Set Envelope</span>. It will have you pick a bone, select the bone that you just created. Voila. The can of Spam now has a bone. <b>It has come to my attention that you may simply skip this step, as studiomdl will add its own bone by default if the model has none.</b>Time to move on to exporting.</p>
<p style="text-align: justify;">Thanks to the Valve extension for XSI, we have a fairly simple export method. With your can of Spam selected, go to <span style="color: rgb(0, 0, 128);">ValveSource</span> -&gt; <span style="color: rgb(0, 0, 128);">Export SMD</span>. In the dialog box, navigate to the hl2\modelsrc directory under the sdk_content folder in your steam directory. I used the name prop_spam for the model. Make sure the dialog says <span style="color: rgb(0, 0, 128);">Model (.smd)</span> for the file type, uncheck <span style="color: rgb(0, 0, 128);">remove all unused bones</span> (because it says so, I have no idea why.), then hit OK. Having exported the Reference SMD, you may believe that we need to export a Physics SMD and at least one Animation SMD. Good job for reading the SDK, but you're wrong. A physics SMD is a volume that defines the shape of the model while being convex. Well, our can of Spam is already convex, so we can just use the reference SMD as the physics SMD. Same goes for the animation, as it's a prop_physics and has no animations, we can use the reference SMD as the animation SMD as well. Isn't that great? Anyhow, now to move on to the wacky world of QC files.</p>
<p>&nbsp;</p>
<h4>Compiling</h4>
<p style="text-align: justify;">The good news is, we are done with XSI. The bad news is, we are starting on QC files. QC files have the reputation of being a pain, and they deserve it. I personally messed with this QC file for about 3 hours before I understood it. You see, it's easy to just copy and paste stuff out of a QC, but if you don't understand what it's doing, you are liable to make mistakes, so sit down and listen up.</p>
<p>These are the parts of our QC file, each line explained:</p>
<p style="font-weight: bold; font-family: Courier New;">$modelname &quot;prop_spam.mdl&quot;</p>
<br />
<p>This tells the compiler what to name the final model.</p>
<p>&nbsp;</p>
<p style="font-weight: bold; font-family: Courier New;">$scale 1.0</p>
<br />
<p>This tells the compiler how big to make the model. If you accidentally made the model 10x bigger/smaller than it should be, this is a way to fix it. For now, leave it at 1.</p>
<p>&nbsp;</p>
<p style="font-weight: bold; font-family: Courier New;">$body &quot;Body&quot; prop_spam.smd</p>
<br />
<p>This tells the compiler what the reference model is. In this case, prop_spam.smd.</p>
<p>&nbsp;</p>
<p style="font-weight: bold; font-family: Courier New;">$sequence idle &quot;prop_spam&quot; fps 15 ACT_IDLE 1</p>
<br />
<p>This is the animation. Everything, even a prop_physics, needs at least one animation (even if it's static). The name of animation is <span style="color: rgb(0, 0, 128);">idle</span>, the name of the SMD that has that animation is <span style="color: rgb(0, 0, 128);">prop_spam</span>. The rest of that has to do with function calls/code, so best leave it alone.</p>
<p>&nbsp;</p>
<p style="font-weight: bold; font-family: Courier New;">$surfaceprop &quot;metal&quot;</p>
<br />
<p>This tells the metal can of Spam to act like metal. Pretty simple.</p>
<p>&nbsp;</p>
<p style="font-weight: bold; font-family: Courier New;">$keyvalues { &quot;prop_data&quot; { &quot;base&quot; &quot;glass.small&quot; } }</p>
<br />
<p>This sets the prop_data for the model. I believe that most of this determines how the object acts in the physics system. This value was the default of the QC file I messed with to create this one, and as it appears to work just fine, &quot;if it ain't broke, don't fix it&quot;. If you really want to, prop_data.txt has a lot more types to use.</p>
<p>&nbsp;</p>
<p style="font-weight: bold; font-family: Courier New;">$cdmaterials &quot;models\<span></span>spam&quot;</p>
<br />
<p>This is the path, relative to the materials directory, that we have our material in. In this case, it's going to be in the <span style="color: rgb(0, 0, 128);">models\<span></span> spam </span> subdirectory of the materials directory.</p>
<p>&nbsp;</p>
<p style="font-weight: bold; font-family: Courier New;">$collisionmodel &quot;prop_spam.smd&quot; { $mass 2.0 }</p>
<br />
<p>This line tells the compiler what to use for the physics volume, which is our model, because it's already convex. It also tells the physics system the prop's mass.</p>
<p>&nbsp;</p>
<p>That's it for the QC file. All these lines should be in a file called <span style="color: rgb(0, 0, 128);">prop_spam.qc</span> in the same directory as your SMD files. Make sure that the SDK is currently set to be modding Half-Life 2 which is done through the Steam menu. Double-click the QC file, and if you have not already, tell it to open with studiomdl.exe in the <span style="color: rgb(0, 0, 128);">sourcedk\<span></span> bin </span> directory. You should see a command prompt appear for a brief time, then dissapear. If all went well, you now have a couple new files in <span style="color: rgb(0, 0, 128);">half-life 2\<span></span> hl2\ <span></span> models </span>, including a MDL file. We now have a compiled model. The model will now show up in Hammer when you go to select a world model on a prop_physics. You can also load the model in HLMV to see it without putting it in-game.</p>
<p>&nbsp;</p>
<h4>Common Problems</h4>
<p style="font-weight: bold"> - Modeling</p>
<ul><li>I keep selecting points behind the point I want to select</li></ul>
<p>Try pressing <span style="color: rgb(0, 0, 128);">U</span> to turn on Ray-Cast polygon select, then click the <span style="color: rgb(0, 0, 128);">Point</span> button on the far right of the screen. This should make it so only one point gets selected at a time. Or you could just select your points in the 3D/Camera view from an angle so you know there is nothing behind it.</p>
 <p style="font-weight: bold"> - Texturing</p>
<ul><li>When I try to move an island over, it just moves one point/part of the island instead of all three flattened polygons that make up the island. </li></ul>
<p>Did you press <span style="color: rgb(0, 0, 128);">I</span> to make sure island select was on?</p>
<p style="font-weight: bold"> - Compiling</p>
<ul><li>The model exists, but it has 0 polys and I can't see it</li></ul>
<p> You did not select the can of Spam before exporting it.</p>
<ul><li>The model is textured with a pink and black checkerboard</li></ul>
<p>Either your texture is in the wrong directory, your QC file points to the wrong directory, or you didn't change your texture into a VTF/VMT. </p>
<ul><li>The model is deformed, almost square</li></ul>
<p>You didn't freeze your model in XSI like I said to after the words &quot;very important step&quot;.</p>
<p>&nbsp;</p>
<h4>Spam's Away</h4>
<p style="text-align: justify;">We are done now, and the model is safely in-game. It's a fairly simple process once you know how to do it. Just think, you gained the knowledge in one article that it took me a week to figure out. As usual, if you are confused about the article or have any questions for me, send me an email at jeffca51 <span style="color: rgb(128, 128, 128);"> at </span> yahoo <span style="color: rgb(128, 128, 128);"> dot </span> com, or post a comment here.<br />
If you have any questions about modeling not related to this article, post them in the <a href="http://forums.gamedesign.net/viewforum.php?f=47">Softimage</a> forum.
</p>
<!--EOF@397 or there abouts--></ul><h1 id="111" name="111" class="book-h1">Game/Map Design</h1><ul><h3>Generic Level Design Articles</h3>
<p>Articles and tutorials that apply to all game engines. These cover generic information about level design, game design and related. There's a ream of useful info here.</p>
<!--break-->

</ul><h1 id="639" name="639" class="book-h2">Common Mapping Terms</h1><ul><!--submitted by Andy Sep 04-->
<p><b>Common Compiling terms:</b><br>
This information was sourced from Mithodical Construction. <br>
It provides a good brief background on common mapping terms. While the heading say's compiling terms, the terms themselves are generic to most mapping applications and editors.<br> There are more comprehensive lists out there, but the reason I like this one, is that it deals with complex terms in a simple fashion.</p>
<!--break-->
<center><hr noshade color="gray" width="75%"></center>
<p><b>Compiling Terms You Should Know</b>:<br>
Compiling a map is a technical process. Like any technical process, there are particular terms associated with it that you should have some understanding of before you begin. </p>
<p><b>Brush</b>:<br>
Any three-dimensional convex solid, containing at least four faces. Brushes are used to construct the geometry of the map, as well as define the "air" space that the player can move in. Brushes in Quake, Doom and Half-Life must be convex. </p>
<p><b>Concave</b>:<br>
Describes a three-dimensional figure (such as a collection of brushes) in which some of its faces point toward each other. A figure is concave if it is possible to draw a line segment from one face to another while going outside of the figure. In many engines, concave brushes are invalid. </p>
<p><b>Convex </b>:<br> 
Describes a three-dimensional figure (such as a brush) in which all of its faces point away from each other. A figure is convex if it is not possible to draw a line segment from one face to another while going outside of the figure. 
In most engines, all brushes must be convex. </p>
<p><b>Coplanar </b>:<br> 
Describes two or more faces) that lie in the same plane in three-dimensional space. Coplanar faces appear to be one unbroken surface to the human eye, but are actually separate surfaces. These coplanar surfaces have normals (vectors that indicate the facing of the surfaces) pointing in the same direction. <br>
In the Half-Life engine, two faces may be coplanar only if they lie on separate brushes. Coplanar are faces on the same brush are invalid in the HL engine because of the requirement that every brush must be convex. </p>
<p><b>Edge </b>:<br> 
The line segment connecting two vertices, this is also the bounding line where two faces of a brush meet. </p>
<p><b>Entity </b>:<br> 
An item in your map that has a specific function, other than to define the world that the player moves in. Entities define the items in the map that the player can interact with, and the items that have special properties, such as transparency. Entities can also be used for lighting purposes. <br>
Entities fall into two main categories: point-based entities and brush-based entities. Point-based entities define objects in your map that either have no visible representation in your map (like info_player_start, for example) or that take their appearance from a finite set of possibilities (such as monster_generic, whose appearance is limited to the number of models stored on your computer). brush-based entities define objects in your map that have potentially infinite shapes and sizes, but similar behavior (such as func_door and func_train). Any entity that defines an area of activation is also brush-based (such as trigger_multiple). </p>
<p><b>Face </b>:<br> 
A side of a brush. In the Half-Life engine, each face must represent a flat plane in three-dimensional space. Each brush face is painted with an associated texture. </p>
<p><b>Hull </b>:<br> 
A three-dimensional figure formed by a set of points in three-dimensional space. The shape of a hull is determined by the method of determining which figure it forms. In the Half-Life engine, the vertices of the brushes determine the points in the hull. The compile tools then calculate four different hulls; one of them is the visual hull, which represents what the player can see within the map, and the other three are collision hulls, which represent the areas of the map that the player can move through. </p>
<p><b>Leaf (plural leaves)</b>:<br> 
A section of "air" space inside of your map. The compile tools break up the brushes in your map into polygons, and also subdivide the internal player space into sections called leaves. Leaves are used by the engine to determine which polygons to draw based on where the player is located in the map (not on which way the player is facing!) </p>
<p><b>Leak </b>:<br>
A section of your map where the inside of the map (the player space) is visible to the space outside of the map (the "void"). Think of your map as a space station. If the "air" space inside the map is exposed to the space outside of the map, the air will escape. That is a leak. This is a serious problem, since it stops visibility calculations (the compile tools cannot comprehend an infinitely large section of "air" space), and prevents realistic lighting (which relies on the visibility calculations). </p>
<p><b>Patch</b>:<br> 
(1) A software update that succeeds in fixing parts of the software that were broken, and in breaking parts of the software that were already fixed.  <br>
(2) A plane area in your map used for lighting purposes. The radiosity (lighting) tool splits your map into patches and then calculates the color and intensity of the light falling on each patch. </p>
<p><b>Plane </b>:<br> 
A flat surface in three-dimensional space that extends forever into infinity. This term is also an adjective that describes a figure that is flat in three-dimensional space (otherwise known as a polygon). 
In the Half-Life engine, planes are used for many purposes, including rendering and lighting. All brushes in your map must have faces that are planes. Faces are planes if all of their vertices lie in the same plane. The compile tools will choke on any brush that does not have planar faces. </p>
<p><b>Polygon </b>:<br> 
A two-dimensional plane figure existing in three-dimensional space. In the Half-Life engine (and most others), the term "polygon" more specifically means "triangle", since the triangle is the simplest polygon to render in a three-dimensional game engine (it always forms a flat surface in three-dimensional space). The compile tools subdivide the engine-visible portions of your map brushes into triangles for rendering purposes. The engine itself uses polygons to render other items in your map, such as monsters, players, items, and weapons. <br>
Polygons fall into two classes in the Half-Life engine: world polygons (abbreviated "wpolys"), which define the map geometry; and entity polygons (abbreviated "epolys"), which form the various and sundry things populating your map. </p>
<p><b>Portal </b>:<br> 
The boundary plane between two leaves of "air" space. Portals are used by the compile tools to determine which leaves are visible from one another. </p>
<p><b>Texture </b>:<br> 
A two-dimensional bitmap applied to a face of a brush. Textures are used to give brush faces the appearance of a real surface, such as a concrete slab or a metal plate. The skilled use of textures can give a surface a three-dimensional appearance without the need for polygon-intensive map geometry. </p>
<p><b>Vertex (plural vertices)</b>:<br> 
The point where two edges of a face meet. By moving the vertices of a brush, you can change its shape, although you must make sure that the vertices form faces that are flat planes. </p>
<center><hr noshade color="gray" width=75%></center><br>
<p align=center>Thanks to Dave<i>"Mithodiel"</i>Askew for the information.</p>
<hr noshade color="black">
</ul><h1 id="278" name="278" class="book-h2">Cool Ass Terrain Tutorial</h1><ul><h2>The Cool-Ass Terrain Tutorial</h2>


<B>By <a href="mailto:Bobby@ionstorm.com">Bobby Pavlock</a><br><BR>
Level Designer - <a href="http://www.ionstorm.com">Ion Storm</a></B>
<BR><BR>
<h3>WHATS THE PROBLEM?</h3>

The idea of making natural-looking terrain was brought to the mainstream with Quake 2.  Some of the outdoor areas in Quake 2 were awe-inspiring compared to what we were used to.  Yet, even the revolutionary outdoor areas found in Quake 2 have quickly become sub-par when compared to some of the terrain found in many of the newer games.  So how is it that level designers are able to make such convincing terrain without sacrificing gameplay?  Well that's what I'm going to attempt to show you in this tutorial.
<br><br>
Before I started working at Ion Storm, I was like many of you reading this - an aspiring amateur level designer, looking to hopefully one day make my way into the industry.  As an amateur, one of my biggest struggles was making cool-looking outdoor terrain, while keeping the r_speeds low enough to not affect gameplay.  Regardless of how many approaches I tried to use, it just didn't seem to want to work.  Then, when I arrived here at Ion Storm, I quickly discovered an extremely simple but effective method of constructing natural terrain - the "triangle method".  I don't know if that's what it's really called, or if it even has a proper name, but that's what I call it.
<br><br>
Basically, all you do is make a grid of triangular-shaped brushes, and then raise/lower vertices.  Sounds easy, huh?  With the triangle method, a level designer of any skill level, can easily make convincing natural terrain, and keep the r_speeds down to a minimum.  Interested?  Read on…

<h3>WHAT'S THIS "TRIANGLE METHOD"?</h3>

The triangle method for making natural terrain is so simple, that you'll ask yourself why in the hell you never thought of it.  For this tutorial, I will be constructing an example map.  The example map will simply be a small section of a canyon area.
<br><br>
The first thing I am going to do is decide how I want my canyon to flow.  When I have come up with the general idea of what I want the area to look like, I begin by drawing an outline of the canyon area using brushes with a sky texture.  Don't overcomplicate this part of it.  Some people, in an effort to be random, will draw the outline of the area with brushes going in all sorts of different angles.  While being random is they key to making convincing natural terrain, we can hold off on the random part til later.  Here's what the outline of my canyon area looks like…
<br><br>
<CENTER><img src="http://www.gamedesign.net/miniwood/tutorials/images/terrain_fig1.jpg"  border=0 alt="terrain_fig1.jpg"></CENTER>
<br><br>
Now that I have the outline of my area, the next step is to fill this area with a grid of triangle brushes, which will make up the ground for my canyon area.  Here is where the random part comes in.  Don't be afraid to make your triangles be all different shapes and sizes.  You don't find too many outdoor areas that are all neat and orderly, so don't try to make your outdoor area neat and orderly.  The only thing to remember when filling your area with this grid of triangle brushes is to make sure that all your triangle brushes meet at the vertices.  Don't have the vertex of one triangle brush meeting the side of another triangle brush.  This will cause problems in the next step.  Here is what my map looks like after filling the canyon area with a grid of triangle brushes…
<br><br>
<CENTER><img src="http://www.gamedesign.net/miniwood/tutorials/images/terrain_fig2.jpg"  border=0 alt="terrain_fig1.jpg"></CENTER>
<br><br>
Ok, once you have your area filled with triangles, the next step is to go through and raise/lower vertices to give the ground an uneven, natural look.  I usually prefer to start in a corner area.  Simply select one of the triangle brushes, go into vertex manipulation mode, and raise or lower the vertices to your liking.  In this example I have started off by raising 2 of the vertices of the triangle brush I selected by 32 units, and leaving the third in its original position.  Here's what it looks like…
<br><br>
<CENTER><img src="http://www.gamedesign.net/miniwood/tutorials/images/terrain_fig3.jpg"  border=0 alt="terrain_fig3.jpg"></CENTER>
<br><br>
Once I have that brush adjusted how I want it, then I select the neighboring brush, and raise/lower any adjoining vertices between the 1st and 2nd brushes until the vertices of the 2nd brush match the position of the vertices of the 1st brush.  Any vertices that are not shared between the 2 brushes you can manipulate however you like.  Here is what it looks like after manipulating the vertices of the 2nd brush to match those of the 1st brush…
<br><br>
<CENTER><img src="http://www.gamedesign.net/miniwood/tutorials/images/terrain_fig4.jpg"  border=0 alt="terrain_fig4.jpg"></CENTER>
<br><br>
As you can see, by making sure all the triangles in the grid meet at the vertices, aligning the heights of 2 neighboring brushes is very easy.  However, if you have a vertex of one triangle brush meeting the side of a neighboring triangle brush, then it becomes more difficult to get the heights of the 2 brushes, and any other brushes that meet at that point, to match.  So to be safe and make it easier on yourself, make sure all your triangles meet at the vertices.
<br><br>
Believe it or not, that's all there it to it.  All you do now is simply go through the grid, raising/lowering the vertices of the rest of the triangle brushes.  Obviously, the more you raise/lower the vertices the more uneven the ground is going to look.  For example, if you want the ground to have a subtle, natural roll to it, then raise/lower the vertices less.  In this example, I am adjusting the vertices by 32 units.  Also, the more triangles you use in an area, the smoother, and more natural, the ground will look.  Just be careful not to go crazy with it, or else you might begin to sacrifice those precious r_speeds.
<br><br>
After you have the ground looking the way you want, then add some rocks or walls or whatever you want, and you're done!  Now wasn't that easy?  Here are a couple pics of the canyon area I made, after all was said and done…
<br><br>
<CENTER><img src="http://www.gamedesign.net/miniwood/tutorials/images/terrain_pic1.jpg"  border=0 alt="terrain_pic1.jpg"></CENTER>
<br><br>
<CENTER><img src="http://www.gamedesign.net/miniwood/tutorials/images/terrain_pic2.jpg"  border=0 alt="terrain_pic2.jpg"></CENTER>
<br><br>
Notice how the ground has that natural, uneven look to it?  And check out those r_speeds, with rocks and everything!  Obviously there's a lot of room r_speed-wise for adding even more detail to this canyon area, but for the purposes of this little tutorial, I think this is good enough.
<br><br>
I hope you enjoyed this little tutorial on making natural terrain.  And I hope you find the "triangle method" as easy and useful as I have.  If you want to take a look at the <a href="http://www.gamedesign.net/miniwood/tutorials/files/terraintut.zip">example map</a> I used for this tutorial you can download it <a href="http://www.gamedesign.net/miniwood/tutorials/files/terraintut.zip">here</a>.  Best of luck in making some cool-ass outdoor areas in your levels!
</ul><h1 id="275" name="275" class="book-h2">Elements Of CTF Style</h1><ul><H2>Elements of CTF Style</H2>
<B>By CDC-Bone</B>
<BR><BR>

<I>Note: The following was written with Quake 2 very much in mind but applies to CTF levels in general</I>
<BR><BR>
It's amazing what kind of response one can get from the Quake community when one puts out the call for maps.  When I decided to start a Quake 2 CTF Expansion Pack, I had a couple of dedicated mappers and a need for a good selection of maps from outside sources.
<br><br>
What I've found is a pretty general tendancy for map makers to design their levels for deathmatch.  They then throw in a small flag room and call it a CTF level.  Let me state this explicitly and as plainly as possible.  Deathmatch levels and CTF levels have very different design philosophies.  Just like single player levels can be played as deathmatch, they will never be as good as a dedicated deathmatch level that was designed from the ground up for that purpose.
<br><br>
So, what design philosophies must one have in order to make a playable CTF level?  This article will hopefully give you some pointers as to what enhances a CTF level and what pitfalls to avoid. These are my opinions, which you may or may not agree with.  I don't mind at all.  Go ahead and break all the rules and create a kickass CTF level to prove me wrong :).  I guarantee I'd love to play it.
<br><br>
By the way, I use the CTF level &quot;Ruins of Neominonk&quot; consistently throughout this article to prove my points.  If you hated Neominonk, then you will disagree with every suggestion I make below.  I consider Neominonk to be about as close to perfection as a CTF level as one can get.

<h3>Flag rooms:</h3>

Flag rooms need to be created with very conservative poly counts. Remember, this is the room in which most of the massive firefights will take place on your level.  If you keep the structure simple and straightforward, the low poly counts will contribute to less lagg. Try to show your architectural genius in other parts of the level that won't have as much travel or gunfights.  There's nothing worse than trying to escape from a base with the flag and having to contend with the rendering lag.
<br><br>
A corollary to this is keeping the flag room to a relatively small size.  You can always have the area right outside the base be massive and full of open space.  This is to allow the flag carrier a few moments after grabbing the flag where he doesn't have to worry about lagging out because of being in a huge open area with lots of firing going on.
<br><br>
Remember, when you ask players why they dislike a level, the most common answer (after you get past the subjective artistic comments) is the presence of lag in the base.

<h3>The Base:</h3>

I'm seperating the team base from the flag room because often times the base can extend well past the immediate environment of the flag room.  The best example of this concept is in the level &quot;Ruins of Neominonk&quot;.  You have the flag room, and then you have an area just outside the flag room with a set of stairs and a walkway leading out into the next room.

<br><br>
I have a simple rule of thumb that I like to follow when designing bases.  The number of routes into and out of the base must be strictly controlled.  Given the fact that most matches (and on most public servers) average 5 or 6 players on a team, the number of defenders in the base are actually quite limited.  If you give the flag carrier too many routes out of the base, the game will degenerate into a bunch of chases rather than the more static aspect of setting defensive posts.  Levels which induce the &quot;chase&quot; circumstances tend to be levels where teamwork is at its weakest as there is little to no inducement to stay in base and defend it.
<br><br>
I (somewhat pompously) call this rule of thumb &quot;Bone's law of 2/3rds&quot;.  It's listed below:
<br><br>
Either-
<blockquote>Have 2 entrances and 1 dedicated exit.<br>or...<br>Have 1 dedicated entrance and 2 exits.<br>or...<br>Have 2 entrances that double as exits and no dedicated route in or out.</blockquote>

<br><br>
By dedicated I mean that you can ONLY use it for that specific route (in or out).  Neominonk follows this law to perfection (all good levels do).  Neominonk has 2 entrances into the base and 1 dedicated exit through a lower tunnel that leads to a lava pit.

<h3>Design for the grapple but do not depend on it:</h3>

Sadly this is the most common mistake made by novice CTF level makers.  They create a level with areas that can only be accessed and exited from using the grapple.  Some have even positioned the flag so that the player must grapple to it to grab it.<br><br>
The level should be playable in every respect without the use of the grapple.  I can't make it any clearer than that.  Weapons, ammo, flags, and other items should be accessible to the non grapple user. 
<br><br>
Does that mean that EVERYTHING on the level should be accessible to the non grapple user?  Not at all!  I'm saying that not using the grapple shouldn't make the level unplayable.
<br><br>
Why is this rule important?  It's no surprise to anyone who has played Quake 2 CTF for any length of time at all that switching to the grapple takes about 1.5 seconda, and the rate at which the grapple fires is somewhat...slow.  Forcing people to constantly switch from their weapons to the grapple in order to navigate the level will frustrate people to no end.
<br><br>
As a flag carrier fighting for his life to capture, I would not want to play on a level that would force me to stop firing my weapon and switch to grapple in order to complete the capture.  I would much rather hunt down the author of that level and take away his toys until he learned not to abuse them :).

<h3>Avoid the BFG and spare the Hyperblaster:</h3>

This rule caused somewhat of a disagreement between Zoid and I during one of his chats on #q2ctf on irc.gamesnet.net.  I stand by it, however.  The BFG is too powerful of a defense buster to be used in CTF.  I see it every day on Quake 2 CTF servers on &quot;McKinley Revival&quot;.
<br><br>
The fact is that although McKinley Revival provides places to hide from a BFG blast, the very act of hiding means that the defense can't do its job of DEFENDING THE FLAG.  The offense can fire off several BFG blasts in a row to keep the defense's heads down while the flag carrier safely and easily runs away without any contention. This means that defending in McKinley Revival against even a moderately competant offense is a futile gesture.
<br><br>
My objections to the hyperblaster isn't for gameplay reasons. Frankly, the hyperblaster lags any HPB on a less than perfect connection.  A hyperblaster weilded by a player with the Haste Tech will even lag a 28.8K modem on a chrystal clear connect with no packet loss.  There's just too much information sent down the line when a Haste-ed hyperblaster fires for an HPB modem to keep up with.
<br><br>
This has made q2ctf5 virtually unplayable by most HPB players. Even Zoid recognized this.  There might be a change to the code base in the future which will turn hyperblaster bolts into a special entity that is kept track of on the client side (so no bandwidth is wasted updating the position of the hyperblaster bolts).  Once this is fixed, I would have no objections to having a hyperblaster on my level.

<h3>Keep people hungry for armor:</h3>

How many times has this happened to you?  Some guy with a power shield and the Protection rune waltzes into your base, takes the flag, and moseys back to his base.  You chain-gun him until you run out of bullets.  You put a double barrel to the back of his head and pump rounds into him all the way back until he captures your flag.
<br><br>
The fact is that the power shield is too powerful.  You can combine power armor and body armor to get 400+ points of armor.  Not only that, but anyone wearing power armor will NOT be damaged in any way until the power runs out.  Given the relative size of most levels, frankly you just may not have the time to wear down the defenses of the flag carrier in time before he caps, no matter how many rounds you pump into him.
<br><br>
This leads to a &quot;to heck with this, I can be frustrated doing other things like trying to get a date tonight&quot; attitude.  Even though Zoid reduced the effectiveness of the power armor in the most recent CTF release, you can still run into situations where a flag carrier can be impervious to damage.
<br><br>
The answer?  Keep 'em armor hungry!  Full body armor should be a specialty item like the megahealth and the quad.  Combat armor should be used sparingly (like 1 in each base).  Jacket armor and armor shards (use few of these as well since they can accumulate to large amounts of armor fairly quickly) should be the main staple diet of defensive wardrobes. 
 

<h3>Keep people hungry for ammo:</h3>

I have played CTF levels where it's impossible to run out of railgun/rocket ammo.  You literally can collect so much of it that you max out in a very short time.  While some people don't see this as a problem, I submit that ammo control is an integral part of teamplay.  
It's also a great control on how effective the Big Weapons can be on a level.  If you have to ration out the use of the big damage weapons, you will be forced to rely on outthinking the flag carrier rather than overpowering him with sheer volume of fire.  This presents problems for the poor guy with Haste, but he can make up for his chronic lack of ammo by using less powerful weapons at twice the fire rate.
<br><br>

I always suggest laying in a good store of bullets and shotgun shells throughout the flag room and base.  Keep the rockets/slugs away from the bases (or a VERY limited supply within the base) to force the defenders to come out and rearm if they want to keep using the Big Weapons.
<br><br>
Obviously if you ignore the above rule and go armor crazy, you'll need a supply of ammo commesurate with the volume of fire needed to take down a guy with 400+ points of armor.  You can't apply one of these rules and not the other.
<br><br>
Remember, tension and intensity arises from fear.  With these two rules you should keep the players in constant fear of dying with the flag or running out of ammo trying to defend it.  Just don't go TOO crazy with the starvation and leave people running around the level using nothing but a blaster.  Remember, the small guns should have plenty of ammo lying around (shells/bullets).  The Big Weapons should be limited and not easily accessible by defenders.

<h3>Gameflow:</h3>

This is what sets CTF maps far apart from DM-only maps and single player maps.  While DM-only maps tend to have a flow pattern that is a circlular in nature, CTF maps are almost totally linear.  This isn't to say that CTF maps are designed in one straight line (though many are).
<br><br>
There are 5 parts to any well designed CTF level.  There are the 2 bases (in this case we include the flag rooms), we have the outer entrance to the bases (1 for each base), and we have the battlefield which is usually located equidistant to each base.
<br><br>
The flow should always go directly from each area into its adjacent area.  If you have a route that goes off into never-never land, just lop it off.
<br><br>

This does not mean that you can't have multiple routes through each area, but all routes should lead to the next area in the progression.


<h3>Conclusion:</h3>

I want to take a moment here to point out a pretty damned good CTF level that breaks nearly every applicable rule I stated above. That's American McGee's Capturephobopolous (I probably mangled that). It's proof that a good level designer can break the rules and still come out with a good CTF level.
<BR><BR><BR>
<B>CDC-Bone</a><BR>Project Leader for the Quake 2 Expansion Pack (unofficial)<BR>Clan Drooling Chickens.</B></ul><h1 id="829" name="829" class="book-h2">Framerates (or what is FPS?)</h1><ul><p>I found this editorial while looking through my resource folder. The link to the original editorial pointed to a 404 page that was Penstar Systems.<br><br>
Even though the original editorial is long gone, this might still help explain the workings of FPS to those wondering WTF?.<br> The editorial was written in 1999 by unknown? and is a bit dated, but the concepts remain the same.</p>
<!--break-->
<p>A Technical Overview 60 frames per second vs. 30 frames per second has been one of the most contested ideas around the web and in print for the last year(<b>1998</b>). Today we will look to see who is right, who is wrong, and who is just plain confused.</p>
<p>Chipmaker (and now boardmaker) 3dfx has been evangelising gaming at 60 fps since the Voodoo 2 was released. Many have looked down upon 3dfx for this due to the common misconception that humans cannot distinguish framerates over 30 fps, so what is the point of having visuals running at 60 fps? Misconception you say? Yes. In this article we will look behind the technology of games, computers, movies, and television and the physiology and neuro-ethology of the human visual system. Movies I have seen film students write in to columns about how anything over 24 fps is wasted. Why 24 fps? Movies in theatres run at 24 fps. They seem pretty smooth to me, so why would we need more? Well, let's take a look at movies from the eyes' perspective. First off, you are sitting in a dark movie theatre and the projector is flashing a really bright light on a highly reflective screen. What does this do? Have you ever had a doctor flash a bright light in your eye to look at your retina? Most of us have. What happens? A thing called "afterimage". When the doctor turns off the bright light, you see an afterimage of the light (and it is not real comfortable). Movie theatres do the same thing. The light reflected off the screen is much brighter than the theatre surroundings. You get an afterimage of the screen after the frame is passed on, so the next frame change is not as noticeable.</p>
<p>Screen refresh is also a very important factor in this equation. Unlike a television or a computer monitor, the movie theatre screen is refreshed all at once (the entire frame is instantly projected and not drawn line for line horizontally as in a TV or monitor). So every frame is projected in its entirety all at once. This then leads back to afterimage due to the large neurotransmitter release in the retina.</p>
<p>Perhaps the most important factor in the theatre is the artefact known as "motion blur". Motion blur is the main reason why movies can be shown at 24 fps, therefore saving Hollywood money by not having to make the film any longer than possible (30 fps for a full feature film would be approximately 20% longer than a film shown at 24 fps, that turns out to be a lot of money). What motion blur does is give the impression of more intervening frames between the two actual frames. If you stop a movie during a high action scene with lots of movement, the scene that you will see will have a lot of blur, and any person or thing will be almost unrecognisable with highly blurry detail. When it is played at full 24 fps, things again look good and sharp. The human eye is used to motion blur (later on that phenomena) so the movie looks fine and sharp. TV, Video Tape, and DVD TV's run at a refresh rate of 60 Hz. This is not bad for viewing due to the distance we usually sit from the TV, and the size of the phosphors on your average set and the distance between phosphors (between .39 for a high end one, to .5 and higher for cheaper models). This is actually quite big and fuzzy for most of us, but as long as we are not doing any kind of productivity software (such as word processing) and just watching movies at least 6 feet from the TV, that is just fine.</p>
<p>Now TV transmissions, video tape, and DVD play at 30 fps. The increase from movies is due mostly to the environment that the TV is watched in. It is usually quite a bit brighter than in a movie theatre, and most importantly a TV does not do a full screen refresh, rather each frame is drawn line by line horizontally by an electron gun hitting the phosphors in the screen. So basically each frame is drawn twice by the TV (60 refreshes per second, 30 frames per second). Now because the frame rate is * the refresh, transitions between frames go a lot smoother than if you had say a 72 Hz refresh and a movie playing at 30 fps. Don't ask me why, it is due to wave behaviour, which is higher level physics, and I can't go into that without making this a 30 page paper. Needless to say, the physics behind this make video and DVD look very smooth.</p>
<p>Motion blur again is a very important part to making videos look seamless. With motion blur, those two refreshes per frame give the impression of two frames to our eyes. This makes a really well encoded DVD look absolutely incredible. Another factor to consider is that neither movies or videos dip in frame rate when it comes to complex scenes. With no frame rate drops, the action is again seamless.</p>
<p>Games on the Computer This is the second toughest part of this article. TV and Movies are easy to understand, and the technology behind it is also easy to understand. Computers and the way games are projected to us is a lot more complex (the most complex is the actual physiology /neuro-ethology of the visual system).<br>
First off, the hardware used for visualisation (namely the monitor) is a very fine piece of equipment. It has a very small dot pitch (distance between phosphors) and the phosphors themselves are very fine, so we can get exquisite detail. We set the refresh rates at over 72 Hz for comfort (flicker free). This makes a very nice canvas to display information on, unfortunately because it is so fine it can greatly magnify flaws in the output of a video card. We will get into refresh in the section on the human eye.<br>
Let us start with how a scene or frame is set up by the computer. Each frame is put together in the frame buffer of the video card and is then sent out through the RAMDAC to the monitor. That part is very easy, nothing complex there (except the actual setup of the frame). Now each frame is perfectly rendered and sent to the monitor. It looks good on the screen, but there is something missing when that action gets fast. So far, programmers have been unable to make motion blur in these scenes. When a game runs at 30 fps, you are getting 30 perfectly rendered scenes. This does not fool the eye one bit. There is no motion blur, so the transition from frame to frame is not as smooth as in movies. 3dfx put out a demo that runs half the screen at 30 fps, and the other half at 60 fps. There is a definite difference between the two scenes, with the 60 fps looking much better and smoother than the 30 fps.<br>
The lack of motion blur with current rendering techniques is a huge setback for smooth playback. Even if you could put motion blur into games, it really is not a good idea whatsoever. We live in an analog world, and in doing so, we receive information continuously. We do not perceive the world through frames. In games, motion blur would cause the game to behave erratically. An example would be playing a game like Quake II, if there was motion blur used, there would be problems calculating the exact position of an object, so it would be really tough to hit something with your weapon. With motion blur in a game, the object in question would not really exist in any of the places where the "blur" is positioned. So we have perfectly drawn frames, so objects are always able to be calculated in set places in space. So how do you simulate motion blur in a video game? Easy, have games go at over 60 fps! Why? Read the section on the human eye.<br>
Variations in frame rate also contribute to games looking jerky. In any game, there is an average frame rate. Rates can be as high as the refresh rate of your monitor (70+), or it can go down in the 20's to 30's. This can really affect the visual quality of the game, and in fast moving ones can actually be detrimental to your gameplaying performance. One of the great ideas that came from the now defunct Talisman project at Microsoft was the ability to lock frame rates (so the rate goes neither above or below a certain framerate). In the next series of graphics cards, we may see this go into effect.</p>
<p>The Human Eye (and Visual Cortex) Here is where things get a little interesting, and where we will see that humans can perceive up to 60+ fps.<br>
Light is focused onto the retina of the eye by the lens. Light comes in a steady stream and not pulses (ok, so this is a little wrong, but we are not talking about the dual nature of light, where it acts as both a particle -photon- and a wave). Again, we live in an analog world, where information is continuously streamed to us. The retina interprets light in several ways with two types of cells. Rods and Cones make up the receiving cells for light. Intensity, color, and position (relative to where the cell is on the retina) is the information transmitted by the retina to the optic nerve, which then sends that info to the Visual Cortex for it to be translated to our conscious self (whoa, went from science to philosophy in one step!).<br>
Rods are the simpler of the two cell types, as it really only interprets position and intensity. Rods are essentially colour blind, and are referred to as transmitting in black and white. The black and white is not really true, but rather it is just intensity of the light hitting the cell. Rods are also very fast due to the basic nature of intensity. The amount of neurotransmitter released is basically the amount of light that is stimulating the rod. The more light, the more neurotransmitter. Rods are also much more sensitive than cones. How is this proven? We know by microscopic examination of the retina shows that there is a much greater concentration of rods on the outer edges. A simple experiment that you can do yourself is to go out on a starry night and look at the stars out of your peripheral vision. Pick out a faint star from your periphery and then look at it directly. It should disappear, and when you again turn and look at it from the periphery, it will pop back into view.<br>
Cones are the second cell type, and these are much more complex. There are three basic parts to them that absorb different wavelengths of light and release differing amounts of different neurotransmitters depending on the wavelength and intensity of that light. Basically there are three receptors in a cone that absorb red, green, and blue wavelengths of light. Each of these receptors release a different neurotransmitter for the colour, with differing amounts of the neurotransmitter depending on the intensity of the wavelength. Purple is a combination of blue and red, so the red and blue receptors would release differing amounts of neurotransmitter, while the green wouldn't release any. This information then passes onto your visual cortex and we "see" purple. Cones are much more inefficient than rods due to their more complex nature. They also are a little slower to react to changes in light and are also not as sensitive as rods (see above experiment). Cones are what largely make up the centre of the retina and fovea (focal point of the retina).<br>
The optic nerve is the highway from which information is passed from the eye to the visual cortex in the brain. This nerve is just a pathway, and does no processing on its own. Its bandwidth is actually really huge, so a lot of information can be passed on. Nerve impulses also travel at over 200 mph to the brain, so it is nearly instantaneous for information to be received from the eye (since the optic nerve is only about 2 cm to 3 cm long).<br>
The visual cortex is where all the information is put together. Humans only have so much room in the brain, so there are some tricks it uses to give us the most information possible in the smallest, most efficient structure. One of these tricks is the property of motion blur. We cannot get away from the phenomena because it is so important to the way we perceive the world. In the visual cortex we can theorise the existence of what I call the motion blur filter. Because the eye can only receive so much information, and the visual cortex can only process so much of that, there needs to be a way to properly visualise the world. This is where it gets tough.<br>
Take for example a fast moving object. The faster it goes, the more it blurs (be it a snowflake or a train). Why does this happen? Let's take the example of a snowflake. At any time it has a fixed position in the universe, no matter what speed it goes at (unless it starts to get relativistic, then we go into some strange physics, but something that is not applicable to what we are talking about). Lets say at 5 mph, we see the snowflake in perfect detail as it falls to the ground. Now we hop into a car and go 55 mph. Can we see the detail of the snowflake? No, it is just a streak to us. Has the snowflake changed itself? Of course not. If we had a really fast camera with a fast shutter speed, it would see the snowflake in perfect detail. Now due to the speed in which our eyes/visual cortex can process information, we cannot see the snowflake in detail. A bird such as an eagle would be able to see more detail and not so much of a streak because it only has rods (it is colour blind) and the distance from the eyes to its highly specialised visual cortex is 1/16th the distance of ours. This leads to more information being pumped into the visual cortex. So what would look like a streak to us would look like a fast moving snowflake to the eagle.<br>
If we didn't have the ability to produce motion blur, we would see the snowflake pop in and out of existence at high speeds. We would first see it one place, then it would disappear and pop into existence several feet beyond depending on the direction it is going. Is this a good thing? No, we would have a hard time figuring out the direction of the snowflake and have many problems with perceiving movement in three dimensional space. With motion blur we get the impression of continuity where our hardware cannot distinguish fine detail while the object is moving at high speeds.<br>
Contrary to the belief that we cannot distinguish anything over 30 fps, we can actually see and recognise speeds up to 70+ fps. How can you test this? You can quickly do this with your monitor at home. Set the refresh rate to 60 Hz and stare at it for a while. You can actually see the refreshes and it is very tiring to your eyes. Now if we couldn't see more than 30 fps, why is it that flicker free is considered to be 72 Hz (refreshes per second). You can really tell if the refresh is below 72 by turning your head and looking at the screen through your peripheral vision. You can definitely see the screen refreshes then (due to rods being much more efficient and fast).</p>
<p><b>Conclusion</b>:<br> We as humans have a very advanced visual system. While some animals out there have sharper vision, there is usually something given up with it (for eagles there is colour, for owls it is the inability to move the eye in its socket). We can see in millions of colours (women can see up to 30% more colours than men, so if a woman doesn't think your outfit matches, she is probably right, go change), we have highly movable eyes, and we can perceive up to and over 60 fps. We have the ability to focus as close as an inch, and as far as infinity, and the time it takes to change focus is faster than the fastest, most expensive auto-focusing camera out there. We have a field of view that encompasses almost 170 degrees of sight, and about 30 degrees of fine focus. We receive information constantly and are able to decode it very quickly.<br>
So what is the answer to how many frames per second should we be looking for? Anything over 60 fps is adequate, 72 fps is maximal (anything over that would be overkill). Framerates cannot drop though from that 72 fps, or we will start to see a degradation in the smoothness of the game. Don't get me wrong, it is not bad to play a game at 30 fps, it is fine, but to get the illusion of reality, you really need a frame rate of 72 fps. What this does is saturate the pipeline from your eyes to your visual cortex, just as reality does. As visual quality increases, it really becomes more important to keep frame rates high so we can get the most immersive feel possible. While we still may be several years away from photographic quality in 3D accelerators, it is important to keep the speed up there.<br>
Looks like 3dfx isn't so full of it.</p>
</ul><h1 id="276" name="276" class="book-h2">Game Puzzles And Game Skills</h1><ul><H2>Game Puzzles And Game Skills</H2>

<I>(excerpt from Design doc for <A HREF="http://www.computerandvideogames.com/r/?page=http://www.computerandvideogames.com/data/gamehomepages/game_homepage_id.php(que)id=2395">Prax War</A>, originally appeared in a .plan update on June 6, 1998. Reprinted with permission)</I>

<P>I wrote the following text for a preliminary design document for Prax War about a year ago for EA legend Richard Hilleman.I found it recently and realized it presents several axioms and principles of game design that others might take an interest in.</P>
<P>
Note: Some of the text below refers to 'game skills' that have been 'categorized above'. This is referring to the entire skill set for the game Prax War which, for obvious reason, I haven't included here. So, you won't be finding any 'game skills' above the text that mentions them.</P>

<H3>A Word About Game Skills:</H3>

<P>The execution of any game skill during the learning phase of that skill should properly reward the player for success. The reward could simply be a sense of accomplishment, it could also be the availability of a game item or powerup, or it could even be a game cinematic sequence.</P>

<P>The value of the reward will often be dictated by the importance of the skill and challenge, the difficulty of its execution and penalty for failure (risk of execution). Often, the difficulty of the challenge and the penalty for failure will be inversely proportional. Only in advanced levels or critical moments of game play do both risk and difficulty escalate proportionally. The idea here is that if the move is difficult, the game designer shouldn't automatically kill the player for failing the move. If the move is simple, like walking across a wide catwalk, the risk can be great (falling to your death). At first, the challenge of the game is in developing the skills the game requires. Another challenge that is introduced during the game is the combination of game skills to create a puzzle.</P>

<H3>Game Puzzles and Game Skills:</H3>

<P>Besides the skills the player must develop to succeed, Prax War will challenge the player with puzzles that assume game skills already exist. In this game, a "puzzle" is defined as a specific challenge set up by the game designer which requires two or more skills and knowledge of the correct solution to complete. For example, jumping up to a higher ledge is not a puzzle - it's a skill. But, a too high ledge that can be reached if the player makes his jump from a crate that he grabbed and moved there himself is a puzzle. The skills of jumping and grabbing and carrying and dropping are assumed. It is the combination of those skills that provides the puzzle.</P>

<P>Above, I've categorized the game skills in levels. These are not meant to be actual game levels (maps or zones) but varying degrees of difficulty. More advanced degrees of difficulty can be easily created by combining skills challenges to create a puzzle. For example, a simple puzzle might require the player to crouch while activating a switch that allows access to the next section of a map. Learning to crouch is very easy as is learning to look in all directions (to find the switch). Activating a switch with the Use Key is also a relatively simple task. The combination of those skills provides a simple puzzle, but a task that is admittedly more difficult than simply moving.</P>

<P>An example of a difficult puzzle might be one that requires many difficult skills. A special object might have to be thrown through a hanger window next to a vehicle. Then, the player must perform a running leap across a chasm to enter the hanger while shooting a switch trigger in mid air to ensure the hanger door will open when the player needs to land on solid ground. Then, the player must again lift the object and throw it into a complex vehicle like a helicopter which he must then operate and fly through enemy fire before reaching a pool of water that the object must be dumped into. The player might then be required to jump into the water and swim while carrying the object into the next area and so on. The object might be the head of an enemy general who's eyes are needed to pass a retinal scan locked door in an enemy compound. The goal of the puzzle might be stated for the player ("use the general's eyes to pass the retinal scan door"), but the difficulty in the puzzle is figuring out how to move the head from the area where you retrieve it to the area with the lock.</P>

<P>So, by compounding skills of varying difficulty Prax War can create endless possibilities for clever puzzling and unique challenges. The goal of the single player Prax War campaign is to provide an increasingly challenging and puzzling environment that offers plenty of reward and many areas and tests to increase skill.</P>

<BR><BR><B>
-DuvalMagic
</B>

</ul><h1 id="1191" name="1191" class="book-h2">Immersive Level Design</h1><ul><p>Immersive Design-<br />
By: Kedhrin Gonzalez<br />
11/05/05</p>
<p>Introduction:<br />
	Immersive Design is the form of design level designers use to bring their levels to life.  Technology has been limiting us in the past from doing too much with immersive design until recently.  Now, levels need to be judged not just on design and art but immersion as well.  Immersion is a necessary element in levels, it makes the player feel like they are there in the game, living and breathing with the world around them.</p>
<p>Let’s look at some games that have done amazing jobs with Immersive Design in the past.</p>
<p>1.	Shenmue/Shenmue 2 – The Shenmue series is without a doubt the most immersive games ever made.  The player is thrown into a game world that is living and breathing, tricking the player into thinking it is working with or without them.<br />
2.	Call of Duty/Call of Duty 2 – The CoD series of games did an amazing job with Immersion.  The heat of combat left the player feeling as if they where actually struggling to survive.  CoD brought a realistic balance of high action with cool down periods, making the player not to be overwhelmed with the action to the point where they get numbed by it.<br />
3.	Doom 3/Quake 4 -  These games, using advanced technology visually brought the games to life.  The computers working around you, machinery going about their daily business without you.  The scenery so detailed that the player just put them into their head as realistic.  Like walking into a huge mechanical room, there would be so much detail the player wouldn’t be able to catch every single bit of detail consciously but their brain is still processing what is going on around them.<br />
4.	Half-Life/Half-Life 2 – The Half-Life series brought in a world to the player that made them feel as if they where a pawn in the game.  From small background things like the g-man being in areas where he shouldn’t be, to big blaring propaganda TV screens to struggling rebels fighting against the system around the player.  The level designers in the half-life series put forth the sense of a world torn apart.<br />
5.	Silent Hill Series – The Silent Hill games are known to be scary not for the jump moments like the Resident Evil games, but for the ambient effects in the game.  Silent Hill brought forth a horrific world with immersion techniques such as the scenery changing into a place the player would not want to go into, darkness with a flashlight and the cold, deathly silence of an empty deserted town.</p>
<p>This article is not to tell you how to do immersive design.  It is not made in the form of “I am correct”, this is simply my outlook on immersive design.  There is no right or wrong way into bringing your levels to life.  I hope this article is not looked upon from you, the reader as an instruction so much as it is my input.  You may take what you want from it, and you may disagree with what you wish.  Whatever you look at upon this article, you will learn from it in some way.</p>
<p>Magic! – The Masters of Illusion</p>
<p>Immersive design is a lot like magic to a certain extent.  When doing magic, you the magician know to create illusions with your surroundings and the tools you have available.  Immersive design is a lot like this.   We are creating an illusion of a world coming alive, a world breathing and thriving with or without life. </p>
<p>To understand this, we need to look into how the human brain works.  </p>
<p>When we go about our daily lives, we take in to our perspective of reality what we focus on.  What you focus on in your mind the brain processes and you can remember easier, you have your full attention to what you are looking at.  However, there are other things going on in the world beyond what you are focusing on that your brain is still processing yet you don’t actually consciously remember.<br />
Let’s take the situation of you being at a basketball game.  You are in the stands, with thousands of other screaming fans watching two teams play a game.  You are focusing on the players, primarily, you are focusing on where the ball is.<br />
Now, let’s take away all the fans except you and replace them with manikins.  Let us keep the sound of the roaring fans all around you.  You are there, but you lose touch, the feeling of being in a stadium full of roaring fans is not there so much.  Even though you are focusing all your might onto the game and the players playing the game, your brain is still processing what is going on around you.  Let’s take away the sound of the fans, now what do you have, you don’t really have a basketball game at all.  The audience is stiff as a board, and quiet as the forest, you are more watching a practice game done internally by the teams then a real game.</p>
<p>This is common sense, but it is often over looked by level designers both professionals and amateurs.  You have to serve the player a breathing world, down to the tiniest detail.  There is no such thing as unnecessary detail unless it is breaking your performance.  </p>
<p>Let’s create a room, a science laboratory for example.  We create our hollow cube for the room, place in some cabinets, some tables, some equipment, lighting.  Most level designers would say they are done and move to the next room.  The room is not complete until you walk in the room and are convinced it is real.  Graphically it does not matter, you can walk into a room that is 100 polygons in total and still make it feel realistic.  </p>
<p>Immersion is done a lot through sound, moving objects and things that will fit with the style of theme you are trying to do.</p>
<p>If you are working on a construction yard that is supposed to be a non-hostile area, you would fill it with construction workers, operating machinery, talking to each other and going about their every day chores of working in a construction yard.  The sounds of the machinery going off, breaking the dirt as they dig in, lifting metal, hammering, drilling, sawing and more goes on in this construction yard.  But the construction yard is not the only thing going on in the world.  What is going on beyond the construction yard?  The streets outside of it would have cars driving on it, the occasional person walking about.  The buildings would have lights on, windows open, watching tv and more.  The sky might have the occasional bird flying, clouds slowly drifting across the sky or planes flying around.   The world is filled with life every direction you look, it is your job to create the illusion that all of this is going on.</p>
<p>Let’s take for example however a horrific level, a quiet, desolate map that has no life in it that you want the player to be aware of until it is too late.  Your best reference for this is an abandoned building, before you ever try to attempt a horror style map, I recommend exploring an abandoned building by yourself both during the day and at night.  To some people, it is a very horrifying experience.   </p>
<p>Why is this?  The sound is so deathly quiet, that every time you hear a sound it scares you.  Visually, the buildings are filled with decay which the human brain in this time and day is not used to seeing so much (depending on where you live).  Rust and industrial designs do the most damage on the viewer’s mind, when we see something rusting up the brain knows it is not taken care of anymore and that no one cares for it.   Let’s say you are putting the player into a world filled with zombies, the player has gone into a mansion to look for someone.  How can you make this place scary?</p>
<p>If the mansion is new, and is not decaying, your elements of approach are the quietness and the stiff lifelessness the world will have.  You could click off the lights, but some say that is a bad game play element (I completely disagree however).  But let’s not do that, let’s say the lights where left on, some bizarre accident happened and everyone in the mansion is now a zombie, how are you going to pull it off?</p>
<p>Rule 1: No Music<br />
Music will destroy the feeling of a lifeless world.</p>
<p>Rule 2: Ambient Noise is your friend<br />
If the electricity is on, make sure the ambient noise is crazy, like how you would feel if you entered a deathly quiet house.  You’d hear the lights buzzing, the A/C turning on and more.  The sounds of the footsteps on the surfaces, wood creaking, doors closing and more that will make the player feel alone from friendly company.</p>
<p>Rule 3:<br />
Do you want a thriller? Or a psychological thriller?  For a thriller, you could have the player walking by a door and a zombie bust out.  Sure this will make the player jump, but the player is only scared because they don’t know when the next part they are going to jump to happens.  A psychological thriller, you will infect the players mind with so many disturbing images they will want to quit playing the game because their brain is so terrified they do not want to see what they are seeing.  If you are feeling really daring, you will go very far beyond every moral standard we have set for us.  That is your choice though, I recommend it but you did not hear it from me.  Have the player walking in a normal area, then they turn the corner and are slammed in the face with something so bizarre and unknown they will get scared.  The human brain fears the unknown, above all else.</p>
<p>So how do you go about creating these real life scenarios in a game?  Game tech only allows us to do so much, because of hardware limitations.  You need to look at things from this point of view, the player may walk outside only for a few minutes in a battle zone to escape to a helicopter, they may only be shooting the people in front of them.  Bad immersion design is to simply have explosions going off.  Where are these explosions coming from, where are the bullets coming from, if the player stopped for a second to look around, they’d see nothing.  Think of it to the sense of this, if the player stopped at any one moment in your level to look around and pay attention to what is going on, what will they see?  Will the world be alive, or will it be as static as a Lego built city.  Do not ever think that the player will never stop to pay attention.  Because chances are they won’t.  That is why there is immersive design. The things you create in your world, the player does not consciously recognize but the brain still processes. This brings the game one step closer to reality for the player.</p>
<p>Sound-</p>
<p>Sound is the most critical element in making an immersive environment.  When you walk into an office building, what kind of sounds do you hear?  This is where you take yourself, put yourself in a real life area and gather your references.  Computers make noises, vending machines make noises, etc.   There are still a lot of limitations on sound these days, but you can still put in enough to make the world a better place for your user.  Choose sounds that you think balance on the point of the player hearing/not hearing.  Because of our limitations in hardware, you have to be very picky with this.  You also have to be smart with it.  The sounds a computer make are not loud (usually) so the player should only hear them if they stop and are sitting right next to them and is very faint.   The player roaring past the computer blazing a gun, chances are they won’t hear it.  When the gunfire has stopped, and there is none left standing but you however, the player will be thrown back into the ambience of the world.  </p>
<p>Chose your sounds wisely, I would not choose sounds that there is probably no chance the player’s brain could ever even hear.   </p>
<p>Background Noise-</p>
<p>Polygon limitations have increased dramatically, especially with new shader technologies and more we are given the ability to make the world come to life with people walking where you can’t really get to them, etc.   This is also an area where you need be careful with what you chose.  If the player will never get to them, there is no point in making them high detail.  If they are far beyond reach and the player cannot get close to them (including a zoom) you can use a very low polygon character with minimal effects on them.  </p>
<p>The biggest thing you want to do with Background Noise is make the world feel like it is living and doing it’s own thing without the player, in other words, you are making a world – not a world for the player.   Consider every person you place in your map a real life person, what are they doing? How are they feeling?  What is their goal for today?</p>
<p>Do these things and the player will feel like they are in a living, breathing world.</p>
<p>Music-</p>
<p>Music is a very tricky immersion technique; I have seen it done poorly a lot of times.  When putting in music, you really have to think of the style of game play you are going for.  Music will influence how the player feels during a game, it will make them sneak, make them scared, make them fight faster, etc. You need to be very picky with the music you chose, if any music at all for your level.  Listen to the music you are putting into your level over and over, see if it really fits the mood of the map or not.  Some games have done horrible with music, playing the same song over and over throughout the entire game.  Avoid doing this as much as possible.   Some players identify their surroundings by music, so keep that in mind as well.</p>
<p>Also remember, that a lot of players turn off music, so make sure you make your level enjoyable with, or without music.</p>
<p>Lighting-<br />
Lighting is extremely critical, poor lighting is one of the primary reasons why so many maps are looked down upon.  Your lighting must fit the mood of the map or your map will fail.  Your lighting must also be clean at all times, there cannot be any errors.  If you have to spend 8 hours on a single room perfecting the lighting, that is what you’ll have to do to get yourself practicing good techniques to insure a total immersive environment.</p>
<p>Lighting sets moods of maps, you hear the saying “let’s set the mood” and dimming the light.  It is the same thing, darker lit areas usually go for scarier areas.  Bright lit areas are usually friendly.  However, lighting is different across all medians of themes for levels.  So just make sure you stick to the mood of your map.</p>
<p>Geometry Detail-</p>
<p>This is a very hard thing for some level designers, too much or too little detail.  If you have too much detail, the player will get numb to the surroundings and won’t be able to identify points of interest, which are critical to making maps.  Too little of detail makes maps look out dated and not really a good map at all.  You need to balance detail in your maps.  Detailed areas are great for interiors, destroyed areas, etc.  It all depends on the mood of your level.  Simple flat square rooms are usually never acceptable, as there is no detail at all besides the primary world brush.</p>
<p>What to do for a scene-</p>
<p>Let’s take a complete scratch example of a room with no design in it.  The level is dark corridors in an industrial yard, where a lot of action needs to be going on.  For this Immersion approach, say you built a big complex inside a building, full of pipes, fans, vents and other machinery.  This place needs to be either very noisy or very quiet.  If it is quiet, it needs to have the power shut off in most places to let the player know that everyone went home for the evening.  </p>
<p>Not every one of us has been in an industrial yard, so you need to tie the player into things they are familiar with industrial scenarios (unfortunately, what Hollywood has delivered to the player could be a good reference).  Take Nightmare on Elm Street or Terminator 2 for this example.  Glowing lights, machinery moving, hissing of steam, banging of chains, pipes, etc. all of these effects going on give a more alive environment.</p>
<p>The basic thing I see most level designers doing is creating a big room, putting in some lighting, animating a few fans and that is it.  Make the world feel more alive, make it look as it people are working there.  Leave a coffee mug on a machine flat top, leave a jacket on a stool, some papers on the ground, etc.</p>
<p>Keep in mind what you can do, to bring the player one step closer to believing they are there, remember it is always what the brain processes not what the player consciously recognizes is what brings immersion to the player.</p>
<p>My Techniques-</p>
<p>So, now that I’ve gone over a few topics in the area, I will describe to you my techniques.</p>
<p>Let me provide a simple example.  I am making a level, where you are with a gang of thugs and you are about to sneak into a complex to steal something.  The mood is modern Urban, nighttime and you need to sneak to get around.  The complex is heavily guarded with security guards carrying flashlights.  </p>
<p>This is key to designing your level, design every possible angle of fiction for you level before attempting this.  The complex is of nothing interesting, the security guards are just there for the extra dab of security so they are never really on high alert.  The complex is run by a rich guy who stores valuable goods in the complex.  The guy doesn’t have any enemies, and is friends with a lot of people so no one messes with him.  </p>
<p>The security guards are slackers, guys that never went anywhere in life so they had to get a job doing security, they like the job they have now because they play around and occasionally do their job ‘right’ because of their manager.  The complex has never had an instance of break-ins in the past.  </p>
<p>You and the thugs that are with you don’t know what is in the building, other than you know you want some.</p>
<p>How would I go about building this into an immersive environment-</p>
<p>From the beginning, I would not put the player at the entrance of the complex; instead I would make the player come up to the complex surroundings from the street.  Now, there will be no real danger of walking on the streets, the thugs with you will be walking normal.  In the streets, the buildings will have lights. A few people will be inside places, on porches talking and a few cars driving around.  I’ll do this with scripted events, I will script the cars to drive around at certain points where the player enters, I will sequence the talking of people as the player approaches.  As the player passes by an open window he will hear a TV playing in the building, but can’t actually see inside it.  </p>
<p>When the player approaches the complex, the thugs with the players will change their mood, they’ll begin to sneak and whisper.   The guards in the complex are standing around talking,  every now and then one will walk away joking, laughing really loud.  This will let the player know the guards are not serious about their job, making it easier for them to either sneak past them or take them out.  For a sneaky type area, I would make plenty of areas for the player and his gang to hide behind.  I would let the security guards path into areas where the player can get to them without causing too much noise.  During the whole time in the complex, the player will hear things going on outside of the area, cars driving, the sound of a busy city in the distance.  The guard stations will have a radios playing.  The player will be given the chance to sneak past guards who are idle chatting about the game they watched today, or something perverted they did the night before.  Anything you can do, to put across that the guards are slackers and don’t really care for their job.  </p>
<p>If a guard was to hear a noise, he’d go take a look, but he would not say the cheesy lines I hear in most games “Well, I guess it was nothing!”.  Seriously.  Give the player some more realistic dialogue, if you where a slacker guard and you heard something what would you do?  You would probably go check it out, nothing would be there and you would say something like “stupid cats” or something similar.  The guard would most likely start smoking a cig, rest his back against something and just sit there.  The slacker guard would not take all the energy to come check out what just happened, and then walk all the way back to his last position. </p>
<p>The player and his group of thugs make their way to the back door of the complex, try to get in but the door is locked.  You give the player the ability to break in or try to find a key.  Let’s make this interesting, let’s say the player decides to break in.  How will these slacker guards really react then when the alarms all of the sudden go off.  They will panic, be confused and all rush to get together, they will yell to one another instead of doing things ‘by the book’.  </p>
<p>Now, from most of the games I’ve edited, a lot of these things are completely possible through scripted events.  I have noted it to myself, and I recommend it to others to never rely on programmatic responses to the game world for your immersion feel.  The best I have ever seen this done was in Half-Life 2.  But the characters still felt as if they where lifeless. </p>
<p>Scripting your levels will be a lot of work, but scripting is what brings your level to life.  Depending on the engine you are using, you can setup random scripting events, in other words, setup your scripting system some how to be able to be random every time for replay ability.  I call these random chain events, you have a start, but it branches out like at tree, at every intersection there is a right and left, you randomize it so it is different every time.</p>
<p>The key thing you need to always keep in mind when making your immersive level, is to make the world work without the player.  This will take a lot of scripting, but with the right approach to the scripting setup you can save yourself a lot of time.</p>
<p>Immersion or not?-</p>
<p>Not every game you will edit will allow you to create these environments.  From horrifying decrypt abandoned buildings to medieval castles, the choice is up to you how you want your world to come alive.  You have to keep in mind at all times the things that go on beyond the players conscious thought is still processed in the brain.  The references you get are key to creating an immersive environment.  For fantasy and sci-fi fiction areas, your imagination in this area is critical.  </p>
<p>Design everything, design your level from the base fiction and up, go back 3 generations up the beginning of your level if you have to.  If you don’t believe in your level when you make it, no one will believe in your level when they play it.  Immersive design in the next generation of games will be the things the players will want.  They will want to feel the heat of battle, they will want to play in a thriving, living world.  If you are a professional, sometimes getting everything you need to create the most spectacular map will be difficult.  That is why I say do things on your own, if you can’t do sound – don’t set yourself to depend on others, learn it yourself.  If you can model, learn it.  Set yourself to be your own one man army for creating these levels.  When you have complete control over the creation process of your level, and you have the determination and innovation, you will have success.</p>
<p>But, you can also not do immersion at all, most of the levels I have seen done by amateurs have no immersion feel at all.  I’ll admit, I used to be in that batch as well.  Hopefully, those who do not think of these things will have a better insight of creating an immersive environment.</p>
<p>-Kedhrin "Peeves" Gonzalez</p>
</ul><h1 id="112" name="112" class="book-h2">Introduction to Lighting</h1><ul><p>It’s been said by many that lighting can make or break your level. It’s easy to see the difference between poorly- and well-lit rooms, as shown below.</p>

<p align="center"><a href="/content/tjb-intro-lighting/image1.jpg"><img src="/content/tjb-intro-lighting/image1-t.jpg" border="0" width="192" height="144"></a> &nbsp; &nbsp; <a href="/content/tjb-intro-lighting/image2.jpg"><img src="/content/tjb-intro-lighting/image2-t.jpg" border="0" width="192" height="144"></a></p>

<p>Having proper lighting works to serve two general purposes: it allows your players to recognize different areas of your map easier and also works to augment your theme/design. In some cases, lighting may also serve as a gameplay element. One good example of using lighting as a gameplay element can be seen in the mod Gloom by <a href=”http://www.planetquake.com/teamreaction/”>Team Reaction</a>.  While the human bases in the maps tend to be well lit, the spider bases are dimly lit to give each team the upper hand on their turf.</p>

<p>Although in classic lighting theory, lighting tends to be grouped into three main categories, key lighting, fill lighting, and back lighting – in game design we’re principally concerned with key and fill lighting. Key lighting makes your maps more dramatic and visually intriguing; fill lighting softens up the key lighting and makes your lighting appear richer and feel “fuller.” </p>

<shot of key lighting> <shot of fill lighting> <shot of both combined>

<p>Depending on the game engine you’re working with, you’ll probably have the choice between point lights (also referred to as omni lights), spotlights, and texture lights. For key lighting you’ll want to use mainly point lights and spotlights since they tend offer a greater degree of control. Fill lighting can be done with any type of light and tends to be dimmer than key lighting.</p>

<p>When you’re using colored lighting, try to keep your bright colors to your key lighting – otherwise you risk over saturating a room with color. Make sure you soften up the color by using off-whites for your fill lighting. This will make the color feel more natural when viewed with the rest of the room.</p>

<p>By using different types of off-whites for your fill lighting, you can adversely affect the mood of your map. Using a greenish off-white, for example, produces an effect similar to the kind seen in the Matrix movies, while a bluish off-white can make your room appear cooler. Take some time to experiment with this .</p>

<green room> <blue room>

<p>It’s important for all of your lights to have realistic sources, especially your key lights. Nothing breaks the surrealism of a good level design faster than seeing a nice brightly colored light in the middle of a room with no apparent source. In the real world, when we see light we know it has to come from some place – and your players will have the same expectation when they play through your level.</p>
 
<p>Unfortunately, good lighting generally isn’t something you can get right on the first try – sometimes lighting can take the most amount of time during the development phase of your map. Even after you get fairly decent at laying out initial lighting, usually you’ll spend plenty of time tweaking things to get them to look just right. Depending on what engine you’re mapping for and how fast it takes to compile the lightmaps (unless lighting is done in real time), tweaking can be a time-consuming process.</p></ul><h1 id="1124" name="1124" class="book-h2">Level Design Process</h1><ul><h3>LEVEL DESIGN PROCESS</h3>
by Yan "Method" Ostretsov
<p>

<div style = "background-color:darkgray;font-weight:bold">INTRO</div>
<p>
I decided to write an article/tutorial about a level design process. In this article,
I’ll cover things like planning, sketching, blocking out, naming, building and adding
details to the level. As an example, I’ll be using sketches and screenshots from my
Doom 3 CTF map, entitled Central Hub (methctf1).
<p>

<div style = "background-color:darkgray;font-weight:bold">PLANNING</div>
<p>
When I decided to start a new map, I was looking for an idea. The armor room in Station M (my previous map) was a perfect place for a flag room. I figured gritty underground station connected with hubs and lifts will make a good CTF map. 
<p>
If it’s possible, I try to get the reference of things I build. Movies, books and online images
are great material for reference.
<p>
There was a problem with the texture choice, because I couldn’t find many dark textures.
Most of them were metallic and had a shiny surface, thus making the map look like a regular Doom 3 map.
The solution was to use dirty decals on top of brushes, to dim the shininess and blend in shiny textures
with the surrounding environment.
<p>
To support the textures, I picked the light color that reflects them. So for a dark brown wall texture with
gray ceiling and red corners in some places, I picked a brown/blue color for the lighting. Color theory comes in handy when it’s
time to pick the colors for the map. The main light in Central Hub is brown (warm color), which is inviting
to the player. Few areas have blue and gray lighting (cold colors), which are darker and give the player a
chance to sneak around those areas or for a FC (Flag Carrier) to hide, while his flag is being returned.
A few small orange lights highlight dark areas and work as an accent to the main lighting.
<p>
It's always a plus if a map has some kind of a gimmick. Something that players will remember it for. When I was
sketching gameplay ideas for Central Hub, I came up with a circular room that has pipes surrounding it's middle and
connecting two hallways which lead to the flag room. I thought it would be a good place for a FC to rocketjump
on pipes and hide there, while his flag is being returned. From the top view in the level editor it looked like
some kind of a hub. I named the level after that area. Later I added vents, which served as pipe supports
and had steam comming out of them. I placed blue light in the hub to create a dark and chilly atmosphere. Since I was
building a CTF map and bases were identical, I called the hub areas - Blue and Red Hubs.
<p>
<center>
<img src = "http://www.gamedesign.net/content/method/gimmick.jpg">
<p>
<i>Blue Hub (beta version)</i>
</center>
<p>

<div style = "background-color:darkgray;font-weight:bold">SKETCHING</div>
<p>
I tend to sketch gameplay ideas or parts of the level before building them in the editor.
It’s always a good idea to make a few rough sketches, because it takes less time than actually
building it and it’s very easy to fix or make changes on a paper. Planning and sketching can help
you to see and predict the problems that may arise later in the design process, which will take
a long time to fix or even result into starting a whole level from scratch. Another thing to remember
is that a level always changes throughout the design process and that not all things that look good
on the paper will look good in 3D. Only a few things that I sketch make it to the final version.
Some rooms change 2–4 times before I decide to keep them.
<p>
For Central Hub, I sketched a few gameplay ideas, different parts of the level and main areas such as
flag rooms and team hubs.
<p>
<center>
<img src = "http://www.gamedesign.net/content/method/sketch1.jpg">
<p>
<i>Sketches of gameplay ideas and details</i>
<p>
<img src = "http://www.gamedesign.net/content/method/sketch2.jpg">
<p>
<i>Sketches of details and texture choices</i>
<p>
<img src = "http://www.gamedesign.net/content/method/sketch3.jpg">
<p>
<i>Early sketches of blue base</i>
<p>
<img src = "http://www.gamedesign.net/content/method/sketch4.jpg">
<p>
<i>Early sketches of CG (Chaingun) room</i>
</center>
<p>

<div style = "background-color:darkgray;font-weight:bold">BLOCKING OUT</div>
<p>
Once I’m finished with planning and sketching, I begin blocking out the level in the editor.
Blocking out means to roughly block out map areas, add temporary lights and early item placement.
It’s really important to see if what you planned on a paper looks good in 3D and to check the scale
before adding textures and details.
<p>
Here is an example of blocked out level:
<p>
<center>
<img src = "http://www.gamedesign.net/content/method/blockout1.jpg">
<p>
<i>Central area of Central Hub</i>
<p>
<img src = "http://www.gamedesign.net/content/method/blockout2.jpg">
<p>
<i>The CG (Chaingun) room</i>
<p>
<i>Note: I used 'textures/base_wall/reactorwalla3a2' texture to block out Central Hub.</i>
</center>
<p>

<div style = "background-color:darkgray;font-weight:bold">NAMING</div>
<p>
It’s not necessary to name a level right away. In fact, I usually name levels in the middle of their development.
Good names are always catchy and easy to remember. To find a name for a map, I usually think of a phrase to describe
a level, level’s gimmick or some main area.
<p>
I had a hard time coming up with the name for Central Hub. The level has several lifts, which enable the player
to do a bunch of trickjumps, so I was looking at names with movement. The player jumps, bounces and moves through
the level, just like a quake. I looked for a phrase similar to quake and came up with the Seismic Movement. I liked it at first,
but later realized that it would be hard to remember. I continued with the design of Central Hub, until I begun to build an
octagon-shaped area with pipes circling it. It connected two hallways just like a hub connects wires on a network.
I was thinking that the central area of the map is the main hub, thus coming up with Central Hub as a name for my map.
<p>

<div style = "background-color:darkgray;font-weight:bold">BUILDING</div>
<p>
There are two methods for building the level. The first is to work on one room at a time, add permanent lights,
textures and details. The second is to work on a whole level in layers. So if I was using the second method,
I would add basic textures to the whole level, then add permanent lights, then details and so on.
<p>
Most LDs get tired of working on one room at a time and if they are building the map as a hobby and not for
a game studio, they might not finish the level. When I get tired of working on the same room for a long time,
I move to another room and work on something different.
<p>
For Central Hub, I used combination of those methods. I worked on a level in layers at first and then
individually on each room.
<p>
<center>
<img src = "http://www.gamedesign.net/content/method/layer1.jpg">
<p>
<i>Blocked out level with temporary lights</i>
<p>
<img src = "http://www.gamedesign.net/content/method/layer2.jpg">
<p>
<i>Added basic textures and item placement</i>
<p>
<img src = "http://www.gamedesign.net/content/method/layer3.jpg">
<p>
<i>Added permanent light and details (Alpha version)</i>
</center>
<p>

<div style = "background-color:darkgray;font-weight:bold">DETAILS</div>
<p>
Details are what separate good levels from great levels. Sometimes it’s hard to come up with what kind
of detail to add to the map, but the answers are in the reference or even in the map itself.
Level areas should have something that stands out, something like an accent,
a detail that catches player’s attention.
<p>
I try to add details that are realistic, but sometimes visuals are more important than
reality.
<p>
<center>
<img src = "http://www.gamedesign.net/content/method/detail1.jpg">
<p>
<i>A DS server that lights the surroundings</i>
<p>
<img src = "http://www.gamedesign.net/content/method/detail2.jpg">
<p>
<i>A computer with wired servers</i>
</center>
<p>

<div style = "background-color:darkgray;font-weight:bold">TESTING</div>
<p>
Always test your maps before releasing them to the public. Make sure that players won't get stuck, there's no
z-fighting (two or more brushes sharing the same coordinates) and no vis problems. Release beta versions of your maps
for testing and feedback, before releasing the final version.
<p>
Since Central Hub is a map for CTF, feedback was really important to me. I got some feedback on alpha version, to make
sure that I'm on the right track, before continuing with the map.
<p>

<div style = "background-color:darkgray;font-weight:bold">OUTRO</div>
<p>
I hope you learned a thing or two and enjoyed this tutorial. If you have any comments or questions,
feel free to contact me at yanostretsov[at]yahoo[dot]com.</ul><h1 id="1206" name="1206" class="book-h2">Level Planning</h1><ul><h3>LEVEL PLANNING</h3>
<p>
by Yan "Method" Ostretsov 
<p>
<div style = "background-color:darkgray;font-weight:bold">INTRO</div>
<p>
Dan Koppel, Lead Designer of Gray Matter, once said that planning is one of the most important things in designing a level. Planning helps with performance, gameplay, etc. It also helps to find and prevent mistakes that can occur in the future. Since planning is such an important part, I decided to write a tutorial fully dedicated to that stage. 
<p>

<div style = "background-color:darkgray;font-weight:bold">IDEA</div>
<p>
One of the first things is to come up with an idea. What the level will be like? What kind of interesting gameplay idea can you implement? You can have a visual image of a room or some kind of atmopshere you're trying to recreate. Since most of my tutorials are based on MP (Multiplayer) levels, this time I'll go with SP (Single player). When working on SP maps, LD (Level Designer) has more freedom. He can have narrow hallways, small ledges and a lot more detail than in MP maps. It's really important to have one or two interesting areas. Something that players will remember the level for. I'll be using Chicago 1930's as an example in this tutorial. 
<p>
Just thinking about Chicago, I can come up with several interesting areas: 
<p>
- Street surrounded by skyscrapers<br>
- Dock with a big bridge in the background<br>
- Dark Train station<br>
- Factory with industrial chimneys<br>
- Gritty back alley<br>
<p>
Those are some rough ideas. Since I'm planning a realistic environment, it's wise to look up some reference pictures. 
<p>

<div style = "background-color:darkgray;font-weight:bold">REFERENCE</div>
<p>
Next step is to research the era. What's Chicago 1930's like? Most of the buildings are blocky and have dark textures. Good texture choice for the level would be brown, gray, blue colored textures. Something that will reflect that dark and moody great depression era. 
<p>
You can find good reference online, using Google or Corbis site. For Chicago reference I used Library of Congress site, which has thousands of old Chicago pictures. Also watching some movies always helps. 
<p>
Now that I have some reference, I can study the pictures and extract useful information. For example these are the details I found on the reference photos that can drastically increase the visuals of the level: 
<p>
- Electric Cables<br>
- Antennas and rooftop detail<br>
- Hotel and Bar signs<br>
- Billboards and window ads<br>
- Pipes supported by the buildings<br>
- Building trims/ledges<br>
- AC placed outside the window<br>
- Building and sewer grates<br>
- Hydrant on the sidewalk
<p>
At this stage, you should roughly know what kind of level you're building. Next step is sketching the level. 
<p>

<div style = "background-color:darkgray;font-weight:bold">SKETCHING</div>
<p>
I prefer to use grid paper when sketching top down view layouts. For detail or quick perspective drawings I use printer paper. 
<p>
<center>
<img src = "http://www.gamedesign.net/content/method/plan_sketch1.jpg">
<p>
<i>Layout sketches</i>
<p>
<img src = "http://www.gamedesign.net/content/method/plan_sketch2.jpg">
<p>
<i>Detail sketches</i>
</center>
<p>

<div style = "background-color:darkgray;font-weight:bold">OUTRO</div>
<p>
I hope you enjoyed this tutorial. If you have any comments or questions you can contact me at yanostretsov[at]yahoo[dot]com.
<div class="book"><div class="nav"> <div class="links"><div class="prev"><a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/1124" title="View the previous page.">previous</a></div><div class="next"><a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/606" title="View the next page.">next</a></div><div class="up"><a href="http://assets.aq2world.com/archive/websites/www.gamedesign.net/node/111" title="View this page's parent section.">up</a></div></div> <div class="titles"><div class="prev">Level Design Process</div><div class="next">Single Player Mapping Design Tips</div></div></div></div></ul><h1 id="606" name="606" class="book-h2">Single Player Mapping Design Tips</h1><ul><!-- by Andy (andy_howard@bigpond.com) 2004 for Kol: kol[at]iol[dot]ie-->
<h3>Design</h3> 

The author of this article, <b>Gary 'Kol' Brigadir</b>, worked with the Issues team and continues to produce maps for Half-Life that are inspiring.<br><br>
 There are already a few tutorials here at RUST that look at good design and this is not meant to replace that information, but to enhance it.<br><br>
These Tips & Tricks come from reading all there is to read and testing and re-testing theories.  (<i>As well as having actually released something into the public domain :-)</i><br><br>
<hr noshade color="black">
<!--break-->


<h3>Generic Single Player Mapping tips.</h3>
This is a list of guidelines for making single player levels. Hopefully you'll find this useful. Some of the guidelines are based on theory, so if you have any experience you want to share, or have different views on anything mentioned here, or have anything to add, please post a comment!<br> Remember, these are guidelines & tips, not rules on how to make maps.<br><br>
There is <b>one rule</b> to single player maps: <b>FUN</b>! Everything else is up to you.<br><br>
Physical Level design can be broken down to 2 basic parts:<br>
<dir>
<b>Environment</b> -  (which is largely brushwork, textures, ambiance, architecture, props...)<br>
<b>Gameplay</b> -  (entity work, story telling, progression, pace, interaction...)<br>
</dir>
<h3>1. Environment:</h3>
<ul>
	<li>Good interesting Architecture is derived from functional environments: real life or fictional. Try to mimic real-life environments as opposed to just creating places to shoot things in. </li><br><br>
	<li>Architecture and props often fit environment style and sometimes characters, monsters & weapons. Some Items are designed for use in different environments: So no sniper weapons in Vents Please! </li><br><br>
	<li>Architecture also adapts to physical, natural, human, and gravitational constraints - supports, brackets, beams - what you might call detail. Make it look like its there for a reason. </li><br><br>
		<li>Brushwork and Architecture also serves a purpose - it subtly hinders or aids the player by giving enemies better cover or giving the player certain advantages. </li><br><br>
	<li>Good brushwork and architecture always conforms to Game Engine limitations. </li><br><br>
	<li>Artistic, & Surreal factors play a role in constructing less "real-life" environments. You can draw inspiration from anything, Movies, Other Games, Books, and even Dreams. </li><br><br>
	<li>Mechanical locomotion helps an environment "feel" more interesting. Try to spend as much time on creating gameplay elements as you do on environments. This includes everything the player can interact with. </li><br><br>
	<li>Uniformity is limited to certain types of architecture, so try to keep away from "corridor maps" Variety is always good. 
   </li><br><br>
	<li>Try to create the impression that every room or prop or item serves (or served or will serve or would serve) a function. 
</li><br><br>
	<li>Loops are very effective: Let the player see areas where they were, or will be, or have to be. This also includes backtracking – a little backtracking can save you mapping new areas, but too much and it gets boring and annoying. 
</li><br><br>
	<li>Convey feelings of awe, fear etc through spatial awareness - high places, wide, large, small, dark. Lighting plays an enormous part in spatial awareness, so take time to tweak your environments until you are happy with the feelings conveyed. 
</li><br><br>
	<li>The less obvious errors in texture alignment, brushwork, and style the better. Don’t put dirty, rusty barrels in a clean lab, and don’t have clean walls and floors in places where there could be obvious ware & tare. 
 </li><br><br>
	<li>Attempt to tell a story through the environment – how did it become destroyed for example, why is it so clean and lifeless? What happened, and what will happen? If you can master this, then making your gameplay elements becomes a lot easier.</li><br><br>
	<li>Take time to perfect the ambiance of an area, use every single enhancement you have available: Ambient sounds, sound / echo modifiers etc...</li><br><br>
	<li>Try to put emphasis on <b>Purpose</b>, <b>Function</b> and <b>Gameplay</b> enhancement. </li><br><br>
	</ul> 
<h3>2. Gameplay</h3>
<ul>
	<li>A little "skill based" (jumping etc) gameplay is good, too much and it gets frustrating. </li><br><br>
	<li>Rewards and risks should be balanced and obvious. </li><br><br>
	<li>Try to create the impression that you can be attacked from all sides at any time. Tension is a must in any map, but this has to be balanced too, since players soon grow immune to it if it is overused.</li><br><br>
	<li>Try to strike a balance between huge fire fights, periods of relative "calm" and puzzle solving. </li><br><br>
	<li>During fire fights make things interesting with multi-sided battles, but keep it efficient. Know all the enemy types and what makes them tick. An example from Half-Life: <br><dir>
<i>4 grunts and 3 aliens can be more effective than having 12 or more monsters eating away at your r_speeds. The key is in knowing what works and what doesn’t.</i></dir></li><br><br>
	<li>Relative calm means exploring areas, occasionally encountering enemies or other characters. It can also help build up tension and offer a change in pace. Room for exploration and finding alternative routes to goals reduces linearity in maps. </li><br><br>
	<li>Avoid things like difficult jumps, cryptic puzzles, design faults, and hugely imbalanced gameplay where the player resorts to cheats by play testing your maps thoroughly. </li><br><br>
	<li>Make it FUN: Whatever is fun to you, is probably fun for a few other people, ask others what they think.  Comic relief never hurt any map. Be it eye candy, freak accidents, gratuitous violence and or character one-liners. What makes a map fun is up to you in the end, but a good level is a fun level, after all, this is why we play games... </li><br><br>
	<li>What players expect to see is far more frightening than anything you can show them. Use this to your advantage – delay revealing “scary” monsters or similar things to exploit the player’s imagination. Offer clues before revealing something big and instrumental.</li><br><br>
	<li>Again, gameplay is about Fun. If it’s not enjoyable, it’s not worth playing. </li>
</ul> 
<h3>General tips / guidelines:</h3>
<ul>
	<li>If you want to progress in your mapping ability, getting the right kind of feedback is key. In progress there is just one factor involved, and its experience. You get experience from mapping. In feedback, you need a balance of encouraging feedback, and constructive criticism. </li><br><br>
	<li>Remember: When criticising its imperative that you keep this balance, <i>be nice to the mapper, verbally beat the map</i>. </li><br><br>
	<li>If you feel like mapping, map - it makes no difference what you're working on, just map what you want. Practice is experience.</li><br><br>
	<li>Releasing a Map to the Public? Great, but first make sure you have everything done. All maps released to the public must be fully and properly tested and assembled. There’s nothing worse than getting a map and finding out that the author didn’t even bother including all the files needed to run the thing... </li><br><br>
	<li>Needless to say, any map what has obvious errors and bugs in the design should not be released. </li>
</ul>

<h4>Testing:</h4>
<ul>
	<li>Fix on the go: Run around your map and jot down any oddities, errors and bugs you find on paper somewhere and fix them immediately. You may overlook a bug early in the design process, forget it, and never hear about it until someone tells you that they can't complete your map because of it. 
It’s a good idea to let someone you don't know test your maps. Get a second opinion on your design and take the criticism seriously and constructively. </li><br><br>
	<li>Evaluate the criticism according to your judgement, and then act on it. Don’t change something just because someone said it was crap. Think first. </li><br><br>
	<li>When testing maps always test to breaking point - try to interrupt important sequences that must happen, jump where you’re not supposed to, try to ruin the map when testing it. If you and or your beta tester(s) fail to make the game crash or create serious errors in the map or gameplay then the map is ready for release. </li>
</ul>
 <h4>Assembly:</h4><ul>
	<li>[Half-Life Specific] Make any SP release its own mod folder with correct directory structures and all necessary files.</li><br><br>
	<li>There's nothing more annoying than getting a map, loading it up, and having the game crash because the author forgot to include a sound, model or something else. </li><br><br>
	<li>Always include a ReadMe with information you think is relevant to the release. </li><br><br>
	<li>Avoid self-installing scripts or programs. A lot of people, like me, hate them. You should be able to unzip / unrar / untar.gz and fire up the custom game or map without worrying that the installer will overwrite any of your existing files. </li><br><br>
	<li>When distributing your maps through the internet make sure everything is the way it should be, remove unused files and directories, double check that you have included all the content, and when your map is uploaded somewhere, check that the zip file is not corrupted and everything is intact. Yes, that’s right, ZIP or RAR or TAR.GZ, do something. Lots of people are still on 56k. </li>
</ul>
<h4>Conclusion:</h4>
<p>There are lots of Articles and tutorials covering gameplay and general level design. You don’t have to go far to find them. Just search around, read material you find useful, and know that wisdom is something that cannot be passed on through IRC, forums or word of mouth. If you want to discover something, do it your self to get the maximum benefit.</p>
<p>Make levels for fun, not because you want appreciation from the community or fame on the Internet. That gets you nowhere.</p>
<p>Once you gather enough insight into the secrets of level design, mapping gets harder and harder, as standards of work increase. If you can fend off the difficulty and keep the fun factor in mapping then you’ve got what it takes to do this kind of thing professionally.</p>



</ul><h1 id="277" name="277" class="book-h2">The Art Of Deatmatch Level Creation</h1><ul><H2>The Art of Deathmatch Level Creation</H2>

<B>By weasl</B>
    
<H3>What does it take to make a great DM level?</H3>

Energy, conflict, creativity, flow, and design are all words that come to mind when I think of a great DM level. But how do you combine these words, and your ideas into a final product that totally kicks ass? Hopefully by the time you’ve finished reading this you will not only be able to recognize and apply these in your level, but make them second nature. 

<H3>The Plan</H3>

First off you need a plan. I don’t mean a diagram of it on graph paper (but this could be good), but a mental image of what the level is going to look like, and what texture selections you are going to use. An example of this would be deciding to build a base like level using the tech textures. Although this may seem a very basic part of the over all structure of your level, it is one of the most important ones. Stick to a certain group of textures and try not to mix and match. Make the textures fit the mood you want to convey in your level, not just some slapped on wallpaper. 

<H3>Structure, and Flow</H3>
<p>
Your next step should be to set up the structure of the level, and starting to think about the flow of your level. 
</P>
<P>
The flow of your level is the paths that a player is most likely to take, as influenced by architecture, design, teleporters, and weapon placement.
</P>
<P>
Now comes into play the conflict portion. Design your level so that these paths intersect at key points. Look for these intersections and plan your level accordingly. Without these players will wander aimlessly around trying to find each other! Make sure that players can get around a level quickly, don’t make them hike from place to place, use teleporters, or centralize certain areas. It’s best to think of your level as a series of boxes (not literally!) interconnect them with hallways, and vary their sizes. Each of these so-called boxes is a battleground (a place were 2 or more players can have a pitched battle). Player’s will use the "hallways" to travel from area to area. All though the concept may sound confusing, if you take the time, and look at some other really good levels, you will understand the theory. Don’t worry its even harder to apply, then to understand. Try to keep this in mind as you set up your level.</P>

<h3>Architecture</h3>

Once you’ve gotten the very basic layout done, its time to start on you architecture. A lot goes on in this stage, and most of it you need to learn for your self. My only suggestions are to become familiar with your level editor, and look at lots of other levels for inspiration. Don't make your level boring to look at. Quake has a great 3D engine, use it to its fullest. Also try not to make your level repetitive. This can be the downfall of it. Imbed a little bit of chaos into your work, it will keep players from getting bored, and keep them on their toes.

<H3>Weapons and Armor Placement</H3>

Remember what a said about conflict? Good. Now apply it. Place weapons accordingly. I break them down into two categories. Low-power, (super shotgun, nailgun, and super nailgun) and high-power (rocket launcher, lightning gun, and grenade launcher). The low powers are ok, to have near spawn points, but try to keep the high power ones, a little bit further away. Also try to space out the high power weapons. Make sure not to bunch them up and neglect one half of the level. Remember that hight power weapons will be the ones that players will be after, thus expect conflict in these areas. Another good way to control the use of weapons is by ammo placement. If you keep the RL at one end, and the nearest box of rockets at the other… You now have that RL player on your paths back to the ammo. Which of course brings him back to the conflict. Armor should be placed with Green Armor in easy to reach places, red armor tucked away, and yellow can go either way. Try to keep players on their toes, don’t stick an RL next to a RA, but give the RA to that guy with the SNG. This will intensify your conflicts, and prevent camping. Place an amount of items in proportion to the estimated number of players that will be playing. Power ups should be in out of the way places. Never place them at the center of a conflict! Powerups are there own catalyst, and will build a conflict of their own. Realize this! Instead of sticking it out were everyone could get at it, tuck that quad away in a corner somewhere. The battles for it will be some of the most vicious ones, and its especially fun when there is little space to maneuver. One fun trick is to place powerups in places where the player has some chance of dieing; a tricky jump over lava to get the Pentagram, or a slime bath to get after that quad. This makes powerup placement seem more well thought out, and enhances the fun factor of the level. 

<H3>Spawn Points, and Traps</H3>

Now I’m going to discuss spawn points. Keep them spaced out and low-level weapons around them (no one likes hunting with a SG, but give em an SSG, and they’ll be out looking for fresh meat). Also keep spawn points out of key battle areas; no one likes being spawn killed. When you set your spawn points remember that Quake will spawn you in the order that the points are placed. I suggest that you go out of your way to place spawn points in such a way that sequential points are as far away from each other as possible. Place the first spawn point, then place the second spawn point as far away as from point one as possible, and so on. Traps are something that you should think hard about. In a single player level they are alot more appropriate then in your typical DM level. Most players feel cheated when they are killed by a trap, and in a DM level it can be even worse. My suggestion is this: If your going to make traps make them player activated (like the squishier in DM2.) 

<h3>The Beta Test</H3>

Ah the all mighty beta tests. This is probably one of the most over looked aspect of DM level creation. Yet, it is probably one of the most important things to do to insure that your level is a true piece of art. Get some friends together, and let them point out areas that will be abused, and places where they feel vulnerable from lack of weapons/armor/ammo. If you get the chance to test it out in QW, follow around the person that’s winning; find out what they’re doing, and what type of advantage it gives them. One or two simple weapon and ammo placements can totally alter the way a level is played, from making a level way to unbalanced to the perfect frag fest.
<BR><BR>
Throughout this all just remember that this is supposed to be FUN!

<H3>Release It!</H3>

Unless you want your perfectly crafted level to rot on your hard drive till the end of time, you need to release it! Put it up on cdrom.com, and tell the major level review pages about it.
<BR><BR>
Hope this was helpful to you!
<BR><BR>
<B>weasl</B></ul><h1 id="1209" name="1209" class="book-h2">The Making of Mash-Up Streets</h1><ul><h3>THE MAKING OF MASH-UP STREETS</h3>
<p>
by Yan "Method" Ostretsov
<p>

<div style = "background-color:darkgray;font-weight:bold">INTRO</div>
<p>
I always listen to music while designing maps. Gritty beats by Cypress Hill and  industrial sounds by Nine Inch Nails
is my choice of music. One day I was listening to  Mash-Up Radio, a show hosted by DJ Muggs of Cypress Hill, and I got an idea.
If  there are promotional levels for graphics card like NVIDIA, why can't there be one for a  radio? After thinking it over,
I contacted Muggs and told him my idea to make a promo level for his radio. He liked the idea and I begun working on a level
which later be  known as Mash-Up Streets (methtourney1).
<p>

<div style = "background-color:darkgray;font-weight:bold">PLANNING</div>
<p>
I knew that to make a promotional level for a radio would be quite a task, because  players hate any kind of ads in games.
The best way to go about it, was to use a non  Quake 4 theme for a level. Something like a futuristic city with billboards,
that would  blend in together and won't bother the players.
<p>
I had to show the idea to Mash-Up Radio's producer and since I didn't have a scanner near by, I made a few quick sketches
in PhotoShop:
<p>
<center>
<img src = "http://www.gamedesign.net/content/method/mashup_idea1.jpg">
<p>
<i>Very early sketch of central area</i>
<p>
<img src = "http://www.gamedesign.net/content/method/mashup_idea2.jpg">
<p>
<i>Very early sketch of RG area</i>
</center>
<p>
Now that I had an idea for the level, it was time to look up the reference. I'm fascinated by  Chicago 1930's architecture,
so I decided to look through my Chicago photo collection. 
<p>
<div style = "color:#333333;font-weight:bold">TIP: Make a reference folder on your computer and save any interesting pictures you come across online.
Soon you'll have a little library, which you can use to look up ideas for  future levels.</div>
<p>
I also looked through several architectural magazines for ideas. In fact, the first room  (RA area) I built,
was inspired by one of photos I saw in those magazines. It wasn't the  45 degree building, but the placement
of the hallway leading to SG (Shotgun) compared to  the billboard building. Something simple and sort of
irrelevant can spark the ideas.
<p>
I came up with the name early in the design process. Since I was building a Chicago city  with futuristic elements,
I decided to call it Mash-Up Streets, because it mashes two styles together.
<p>

<div style = "background-color:darkgray;font-weight:bold">SKETCHING</div>
<p>
My original idea for the level was that I'll have a big radio tower, supported by one story building in the middle of the map.
That building will have an accel pad, which  will push the player to the roofs of surrounding buildings. So basically the fights
will  be on the rooftops. Building ledges will be used to travel from one roof to another. After testing that out it felt too
jammed to move. So I decided to free up the place and  use a different layout, more suited for Quake movement.
<p>
<div style = "color:#333333;font-weight:bold">TIP: Grid paper is great for sketching top down view layouts of levels.</div>
<p>
Some early sketches:
<p>
<center>
<img src = "http://www.gamedesign.net/content/method/mashup_sketch1.jpg">
<p>
<i>One of the early sketches</i>
<p>
<img src = "http://www.gamedesign.net/content/method/mashup_sketch2.jpg">
<p>
<i>Item placement planning</i>
<p>
<img src = "http://www.gamedesign.net/content/method/mashup_sketch3.jpg">
<p>
<i>Cable and background detail sketches</i>
</center>
<p>

<div style = "background-color:darkgray;font-weight:bold">BLOCKING OUT</div>
<p>
Since Quake 4 was shipping with modified D3Radiant and it would be really simple to port map geometry from D3Radiant
to Q4Radiant, I decided to use Doom Edit to block out my map ideas, while waiting for Quake 4 to be released.
<p>
<center>
<img src = "http://www.gamedesign.net/content/method/mashup_blockout1.jpg">
<p>
<i>RA (Red Armor) room blocked out in D3Radiant</i>
</center>
<p>

<p>
<div style = "color:#333333;font-weight:bold">TIP: When blocking out a level, try to stick to one texture. That way you won't be
distracted by the visuals and concentrate on gameplay more precise.</div>
<p>
Once I got Quake 4, I decided to use a similar texture to block out the level, but the ambient light in Q4 won't
separate the shapes. So I ended up making a gray texture with  black outline, so it will show off the edges.
<p>
<center>
<img src = "http://www.gamedesign.net/content/method/mashup_blockout2.jpg">
<p>
<i>RA room blocked out in Q4Radiant using a custom texture</i>
<p>
<img src = "http://www.gamedesign.net/content/method/mashup_blockout3.jpg">
<p>
<i>Central area back when VIA/D3W logos were HILL (Cypress Hill)</i>
</center>
<p>

<div style = "background-color:darkgray;font-weight:bold">APPLYING TEXTURES</div>
<p>
I spent some time looking through various Quake 4 textures. They were good, but very few could go with the theme
I chose to design. I went through several stages before I got to the texture choice I was happy with.
<p>
<center>
<img src = "http://www.gamedesign.net/content/method/mashup_texture1.jpg">
<p>
<i>Early attempt to texture the level</i>
<p>
<img src = "http://www.gamedesign.net/content/method/mashup_texture2.jpg">
<p>
<i>Second attempt with windows</i>
<p>
<img src = "http://www.gamedesign.net/content/method/mashup_texture3.jpg">
<p>
<i>Texture choice for beta version</i>
<p>
<img src = "http://www.gamedesign.net/content/method/mashup_texture4.jpg">
<p>
<i>Texture choice for final version</i>
</center>
<p>

<div style = "background-color:darkgray;font-weight:bold">BUILDING</div>
<p>
A lot of work went into building Mash-Up Streets. I went through the same design stages as I go
every time, which are:
<p>
- Blocking level out with temporary lights<br>
- Applying basic texture set<br>
- Tweaking lights and adding more textures<br>
- Adding detail and tweaking geometry<br>
- Beta and pre-final testing of the level<br>
- Polishing the level<br>
<p>
I want to go over several things that have been changed after receiving some feedback.
<p>
<div style = "color:#333333;font-weight:bold">TIP: Always test your maps before releasing them. Sometimes when LD (Level Designer) is so concentrated on the whole level,
it's really hard to notice little mistakes.</div>
<p>
Originally the central tower had only lower entrance. After showing early beta to a few Treyarch designers, one of them suggested to open the tower up.
That really added to the level, because it created an upper ground, which can be used to overlook the surrounding area. Adding a powerup on the upper level
created a valuable, yet dangerous spot.
<p>
One of the early changes was LG (Lightning gun) hallway, which added a way for the defeated player
to gain control of the level by picking up some armor shards and sneaking to RG room.
<p>
Another thing that has been changed was the RA room. In the beginning it was quiet small and it became a trap room. While watching several good players,
I noticed that they timed RA well and right before picking it up, spammed the hallways to stop their opponent from acquiring it. Enlarging that area and
creating an additional window in RG (Railgun) room fixed the problem by having more space to move in.
<p>
Since the beginning, I was planning the ledges/trims of the buildings. I thought it would be a great idea to jump from one ledge to another.
After testing the level, I was told that those ledges create sniper spots, which really slow down the gameplay. Adding a clip brush and blocking some ledges,
made it into a real fast-paced level.
<p>
There were two suggestions, that really affected the visuals of the level. One of the
suggestions was to add cables, which will add to the visuals and break up the sky.
Another was to create some buildings that could be seen in the distance to make the environment appear bigger.
<p>
<div style = "color:#333333;font-weight:bold">TIP: Make an illusion that there's more to the environment you created by adding background details. Something like buildings in the
distance that could be seen through the windows.</div>
<p>
Item placement is really important in tourney levels. In fact, it can make or break a level. I've learned that item placement/gameplay is more important than visuals
in competitive maps. If I was a stranger and saw that Mash-Up Streets has RG and RA (two of the most important items) in the same room, I would say that it's some bad
item placement. Yet that item placement makes perfect sense and is very balanced. One of the most important things I learned from designing Mash-Up Streets is competitive
item placement. It takes so much time and logic to make it play well in all situations. Just knowing what makes good item placement is not enough. Testing is really
invaluable.
<p>
Most if not all players commented that the promo stuff wasn't right in their face and it felt like it was a part of the map. I accomplished that by placing a billboard
next to the RG room and on the central skyscraper. Even though the billboard is very exposed in RG area, it doesn't stand out much. Usually players will be too concentrated
on the game and won't notice it more than once or twice. The second billboard was placed high on one of the central skyscrapers, so the player will notice it only when
looking way up.
<p>
<center>
<img src = "http://www.gamedesign.net/content/method/mashup_billboard.jpg">
<p>
<i>Muggs Mash-Up Radio promo</i>
</center>
<p>

<div style = "background-color:darkgray;font-weight:bold">LOGIC</div>
<p>
Several people said that they would like to see more of how and why I plan this or that. So I decided to introduce a new section for this article,
which I called Logic. In this section, I'll go over my logic of design using RA area as an example.
<p>
Here's visual logic explanation for RA area:
<p>
<center>
<img src = "http://www.gamedesign.net/content/method/mashup_logic1.jpg">
<p>
<i>Reference for the visual logic section</i>
</center>
<p>
1. The 45 degree building was one of the first things that I blocked out. It went through a lot of changes. Since early block out stages, I added windows
to create an illusion of an urban building. To make it even more realistic, I placed a metallic texture behind some windows, which created an illusion
of blinders. To polish it up, I placed a patch with flare texture set to low opacity to create that light glow from the window, without sacrificing
FPS (Frames Per Second) by actually placing a light entity. 
<p>
The 45 degree cut is pushed in and since it looks like a core of the building, I decided to use dark textures to highlight that.
The lower windows of the core have a different design than the top ones, to break the repetition. They're more spaced out, which gives them weight
to visually pull down the lower part to the ground level. The upper windows on the other hand are longer, which makes the building seem taller. 
<p>
2. Originally, the ground level was flat, but by pushing it down it created more space and interesting geometry to that area, along with breaking the floor
up for better light calculations. Most if not all Q4 steps have a width of 16 units but since I had a clip brush covering the steps, they created a strafe jump,
which would make the player fly up and bump his head on one of the wall supports. To fix that I changed step width to 32 units and spaced them a little, to
tilt the slope created by the clip brush, so it pushed the player forward instead of upwards.
<p>
To break up the ground level for light calculation, I added a tile beneath the RA. Then I placed some dirty decals to make the area less clean.
<p>
3. Wall supports serve two purposes. The main purpose is that it's used as a shortcut for players to jump from RA jumppad to the RG room. The second purpose
is that it adds to the visuals by connecting the buildings. It also adds a little bit of blue color to the light brown/gray ambient light.
Since light brown is a warm color, having a cooler color like blue adds to the atmosphere.
<p>
4. To add more detail to the RA area, I decided to place some chimneys and antennas on the rooftops. I looked at the sky texture to figure out where the sun at.
Then I placed a light entity next to the chimneys and pulled out the center of origin. I played with its position to make sure that the sun shines from the correct angle.
If the sun was behind the details, then I would try to highlight the chimneys without making it too unrealistic.
<p>
5. When picking out the sky texture, I wanted to have something moody. Since most of the building textures I used were dark, I thought that reflected light brown light would
really add to the colors and create a moody atmosphere. Then I added a few cables to break up
the sky and add to the visuals.
<p>
Here's gameplay logic explanation for RA area:
<p>
<center>
<img src = "http://www.gamedesign.net/content/method/mashup_logic2.jpg">
<p>
<i>Reference for the gameplay logic section</i>
</center>
<p>
1. Ground level is the main route in RA room. It's fairly wide to evade the rockets and other projectiles, yet at the same time it's very dangerous, because a player can be
spammed with rockets from above. He can strafe jump through that section without any problems and even make a crouch slide against the steps. Major
weakness of this path is
that the player won't know if it's a trap or not, until he's at the RA.
<p>
2. RG path on the other hand is narrow, but since it's on the higher level it gives the player more advantage. It's possible to jump or run on wall supports, then get
RG and go through either of entry points. RG route also has the most choices. Player can decide to use the upper ground or jump down. It's also possible to look out
of RG window, which faces the RA to see if an opponent camping the item.
<p>
3. Since RA is one of the most important items, there will be a lot of fights in that area. To balance out the
RA corner, I placed two ramps. One which leads to the RG
and the other which leads to the health shards. The second ramp can also be used to slope jump on the
wall support. Players with really good movement skills can actually over jump the
wall support. 
<p>
<div style = "color:#333333;font-weight:bold">TIP: Adding trickjumps to the maps opens new movement possibilities and adds to the fun factor. It also
  separates new players from experienced and gives
them something to learn.</div>
<p>
Hopefully this was enough to show how and why I plan things the way I do.
<p>

<div style = "background-color:darkgray;font-weight:bold">OUTRO</div>
<p>
I hope you enjoyed this article. If you have any comments or questions you can contact me at yanostretsov[at]yahoo[dot]com.
</ul></body></html>